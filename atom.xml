<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>Maxie&#39;s Notes</title>
  <subtitle>No one can escape</subtitle>
  <link href="/atom.xml" rel="self"/>
  
  <link href="http://maxiecloud.com/"/>
  <updated>2017-06-10T07:24:52.000Z</updated>
  <id>http://maxiecloud.com/</id>
  
  <author>
    <name>阿蓝</name>
    
  </author>
  
  <generator uri="http://hexo.io/">Hexo</generator>
  
  <entry>
    <title>Linux各概念图解</title>
    <link href="http://maxiecloud.com/2020/04/09/mind-mapping/"/>
    <id>http://maxiecloud.com/2020/04/09/mind-mapping/</id>
    <published>2020-04-09T09:47:17.000Z</published>
    <updated>2017-06-10T07:24:52.000Z</updated>
    
    <content type="html"><![CDATA[<div class="group-picture"><div class="group-picture-container"><div class="group-picture-row"><div class="group-picture-column" style="width: 100%;"><img src="https://ws1.sinaimg.cn/large/006tNbRwly1fgg3yihi9pj31hc0t3469.jpg" alt=""></div></div><div class="group-picture-row"><div class="group-picture-column" style="width: 50%;"><img src="https://ws4.sinaimg.cn/large/006tNbRwly1fgg3yeipuoj31kw0w07wh.jpg" alt=""></div><div class="group-picture-column" style="width: 50%;"><img src="https://ws3.sinaimg.cn/large/006tNbRwly1fgg3zalmzzj31kw0w0b2a.jpg" alt=""></div></div><div class="group-picture-row"></div></div></div>
]]></content>
    
    <summary type="html">
    
      &lt;div class=&quot;group-picture&quot;&gt;&lt;div class=&quot;group-picture-container&quot;&gt;&lt;div class=&quot;group-picture-row&quot;&gt;&lt;div class=&quot;group-picture-column&quot; style=&quot;widt
    
    </summary>
    
      <category term="图片" scheme="http://maxiecloud.com/categories/%E5%9B%BE%E7%89%87/"/>
    
    
      <category term="linux" scheme="http://maxiecloud.com/tags/linux/"/>
    
      <category term="picture" scheme="http://maxiecloud.com/tags/picture/"/>
    
  </entry>
  
  <entry>
    <title>nginx从入门到进阶【二】</title>
    <link href="http://maxiecloud.com/2017/06/17/nginx-advanced/"/>
    <id>http://maxiecloud.com/2017/06/17/nginx-advanced/</id>
    <published>2017-06-17T00:53:34.000Z</published>
    <updated>2017-06-17T08:14:33.000Z</updated>
    
    <content type="html"><![CDATA[<span itemprop="image" itemscope="" itemtype="http://schema.org/ImageObject"><img itemprop="url image" src="/images/LEMP.png" class="full-image" alt="nginx_LEMP"><meta itemprop="width" content="auto"><meta itemprop="height" content="auto"></span>
<blockquote class="blockquote-center">在学习了之前的一些关于Nginx相关的基础配置以及功能，下面我们就开始学习如何搭建LEMP以及Load-Balacning<br></blockquote>

<font size="4" color="#32CD99">LEMP</font>

<p><code>L</code>：Linux<br><code>E</code>：Engine X –&gt; Nginx<br><code>M</code>：MariaDB<br><code>P</code>：PHP-FPM</p>
<p>在做<code>LEMP</code>之前，我们先要学习一下<code>proxy</code>模块的使用，方便我们对<code>fastcgi</code>的理解</p>
<hr>
<a id="more"></a>
<font size="4" color="#FF7F00"> 注意：在做这次的实验之前，确保你的机器能够同时运行5台以上的虚拟机，否则后面的实验可能会做不了</font>


<h3 id="实验拓扑图"><a href="#实验拓扑图" class="headerlink" title="实验拓扑图"></a>实验拓扑图</h3><p><img src="https://ws1.sinaimg.cn/large/006tNc79ly1fgnykattu5j30gx0rqgmd.jpg" alt=""></p>
<h4 id="虚拟机配置"><a href="#虚拟机配置" class="headerlink" title="虚拟机配置"></a>虚拟机配置</h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line">虚拟机操作系统（OS）：CentOS Linux release 7.2.1511 (Core)</div><div class="line">内核版本（Kernel）：3.10.0-327.el7.x86_64</div><div class="line">虚拟机环境：VMware Fusion 专业版 8.5.3 (4696910)</div></pre></td></tr></table></figure>
<h4 id="物理机配置"><a href="#物理机配置" class="headerlink" title="物理机配置"></a>物理机配置</h4><p><img src="https://ws4.sinaimg.cn/large/006tNc79ly1fg5rfg0cjsj30ga0a8dj6.jpg" alt=""></p>
<hr>
<div class="note primary"><h3 id="Nginx-Proxy代理详解"><a href="#Nginx-Proxy代理详解" class="headerlink" title="Nginx Proxy代理详解"></a>Nginx Proxy代理详解</h3></div>
<h4 id="Proxy模块各参数详解"><a href="#Proxy模块各参数详解" class="headerlink" title="Proxy模块各参数详解 "></a><font szie="4" color="#236B8E">Proxy模块各参数详解 </font></h4><p>1、proxy_pass URL;</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">该指令用来设置被代理服务器的地址，可以是主机名、IP地址加端口号等形式</div></pre></td></tr></table></figure>
<p><br></p>
<p>2、proxy_set_header filed value;</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div></pre></td><td class="code"><pre><div class="line">该指令可以更改Nginx服务器接收到的客户端请求的请求头信息，然后将新的请求头发送给被代理的服务器。</div><div class="line"></div><div class="line">field   要更改的信息所在的头域</div><div class="line">value   要更改的值，支持使用文本、变量或者变量的组合</div></pre></td></tr></table></figure>
<p>3、proxy_hide_header field;</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line">该指令用于设置Nginx服务器在发送HTTP响应时，隐藏的一些头域信息</div><div class="line"></div><div class="line">filed   需要隐藏的头域</div></pre></td></tr></table></figure>
<p><img src="https://ws4.sinaimg.cn/large/006tNc79ly1fgo0j8mbuwg30qk0fcu15.gif" alt=""></p>
<p>4、proxy_pass_header filed;</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div></pre></td><td class="code"><pre><div class="line">默认情况下，Nginx服务器在发送响应报文时，报文头中不包含Date、Server等来自被代理服务器的头域信息。</div><div class="line">该指令可以设置这些头域信息以被发送</div><div class="line"></div><div class="line">field   需要发送的头域</div></pre></td></tr></table></figure>
<p><img src="https://ws4.sinaimg.cn/large/006tNc79ly1fgo0ms0vcfg30qk0fcu17.gif" alt=""></p>
<p>5、proxy_cache_path  path [levels=levels] keys_zone=name:size [max_size=size];</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div></pre></td><td class="code"><pre><div class="line">该指令用于设置Nginx服务器存储数据缓存的路径以及缓存索引相关的内容（只能定义在http中或者server之外）</div><div class="line"></div><div class="line">path        设置缓存数据存放的根路径，该路径应该是预先存在与磁盘上的</div><div class="line">levels      设置在相对于path指定目录的第几级hash目录中缓存数据。levels=1，表示一级hash目录；levels=1:2，表示两级，以此类推</div><div class="line">name:size   用来设置存放缓存索引的内存区域的名称和大小</div><div class="line">max_size    设置硬盘中缓存数据的大小限制</div></pre></td></tr></table></figure>
<p>6、proxy_cache zone | off;</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div></pre></td><td class="code"><pre><div class="line">该指令用于配置一块公用的内存区域的名称，该区域可以存放缓存的索引区域</div><div class="line"></div><div class="line">zone    设置的用于存放缓存索引的内存区域的名称</div><div class="line">off     关闭proxy_cache功能</div></pre></td></tr></table></figure>
<p>7、proxy_cache_key string;</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div></pre></td><td class="code"><pre><div class="line">该指令用于设置Nginx服务器在内存中为缓存数据建立索引时使用的关键字</div><div class="line"></div><div class="line">string  为设置的关键字，支持变量</div><div class="line">可以设置多个变量为关键字：</div><div class="line">proxy_cache_key $scheme$proxy_host$uri$is_args$args;</div></pre></td></tr></table></figure>
<p>8、proxy_cache_valid [code …] time;</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div></pre></td><td class="code"><pre><div class="line">该指令可以针对不同的HTTP响应状态设置不同的缓存时间</div><div class="line"></div><div class="line">code    设置HTTP响应的状态代码   any表示缓存所有该指令中未设置的其他响应数据</div><div class="line">time    设置缓存时间</div></pre></td></tr></table></figure>
<p>9、proxy_cache_use_stale error | timeout | invalid_header | updating | http_500 | http_502 | http_503 | http_504 | http_403 | http_404 | off …;</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line">如果Nginx在访问被代理服务器过程中出现被代理的服务器无法访问或者访问错误等现象时，Nginx服务器可以使用历史缓存响应客户端的请求，这些数据不一定和被代理服务器上最新的数据一致，但对于更新频率不高的后端服务器来说，该功能在一定程度上，能够为客户端提供不间断访问。</div><div class="line"></div><div class="line">该指令用来设置一些状态，当后端被代理的服务器处于这些状态时，Nginx服务器启用该功能</div></pre></td></tr></table></figure>
<p>10、proxy_cache_methods GET | HEAD | POST …;</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">该指令用来设置仅缓存指定的methods的数据</div></pre></td></tr></table></figure>
<p>11、proxy_connect_timeout time;</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line">该指令配置Nginx服务器与后端被代理服务器尝试建立连接的超时时间</div><div class="line"></div><div class="line">time    设置的超时时间 默认为60s</div></pre></td></tr></table></figure>
<p>12、proxy_send_timeout time;</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line">该指令配置Nginx服务器向后端被代理服务器发出 write请求后，等待响应的超时时间</div><div class="line"></div><div class="line">time    设置的超时时间 默认为60s</div></pre></td></tr></table></figure>
<h4 id="实例"><a href="#实例" class="headerlink" title="实例"></a>实例</h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div><div class="line">37</div><div class="line">38</div><div class="line">39</div><div class="line">40</div></pre></td><td class="code"><pre><div class="line">$ vim /etc/nginx/conf.d/maxie.conf</div><div class="line">proxy_cache_path		/web/cache/   levels=2:1:1    keys_zone=my_cache:10mmax_size=1g;</div><div class="line"></div><div class="line">server &#123;</div><div class="line">	listen             80;</div><div class="line">	server_name        www1.maxie.com;</div><div class="line">	root               /web/www1;</div><div class="line">	index              index.html index.htm;</div><div class="line">	add_header         X-Via	$server_addr;</div><div class="line">	add_header         X-Accel	$server_name;</div><div class="line"></div><div class="line">	location / &#123;</div><div class="line">		access_log        /web/www1/access.log my_log flush=4m buffer=1m;</div><div class="line">	&#125;</div><div class="line"></div><div class="line"></div><div class="line">	location ~* \.(jpg|png|gif|jpeg)$ &#123;</div><div class="line">		proxy_pass            http://172.16.1.20:80;</div><div class="line">		proxy_redirect        default;</div><div class="line">		proxy_set_header      X-Real-IP    $remote_addr;</div><div class="line">		proxy_cache           my_cache;</div><div class="line">		proxy_cache_key       $request_uri;</div><div class="line">		proxy_cache_valid     200 301 302 10m;</div><div class="line">		proxy_cache_valid     any 1m;</div><div class="line"></div><div class="line">		proxy_cache_methods   GET HEAD;</div><div class="line">		proxy_connect_timeout 10s;</div><div class="line"></div><div class="line">		#proxy_hide_header    ETag;</div><div class="line">		#proxy_hide_header    Content-Type;</div><div class="line"></div><div class="line">		#proxy_pass_header    Server;</div><div class="line">		#proxy_pass_header    Date;</div><div class="line">	&#125;</div><div class="line"></div><div class="line">	error_page             404	    http://www1.maxie.com/404.html;</div><div class="line"></div><div class="line">	location = /404.html &#123;</div><div class="line">	&#125;</div><div class="line">&#125;</div></pre></td></tr></table></figure>
<p><img src="https://ws4.sinaimg.cn/large/006tNc79ly1fgo1in6knog30qk0fcnpm.gif" alt=""></p>
<hr>
<div class="note success"><h3 id="Nginx-fastcgi详解"><a href="#Nginx-fastcgi详解" class="headerlink" title="Nginx fastcgi详解"></a>Nginx fastcgi详解</h3></div>
<h4 id="fastcgi各参数详解"><a href="#fastcgi各参数详解" class="headerlink" title=" fastcgi各参数详解"></a><font color="#D19275"> fastcgi各参数详解</font></h4><p>1、fastcgi_pass address;</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">该指令配置被代理的php-fpm的地址，一般地址后要跟监听的端口，默认为9000</div></pre></td></tr></table></figure>
<p>2、fastcgi_index name;</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">该指令配置fastcgi默认的主页资源</div></pre></td></tr></table></figure>
<p>3、fastcgi_param parameter value [if_not_empty];</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div></pre></td><td class="code"><pre><div class="line">该指令配置fastcgi指定的参数和参数的值</div><div class="line"></div><div class="line">一般这里要配置 SCRIPT_FILENAME 的值为php-fpm主机上php的资源路径</div><div class="line"></div><div class="line">value：php或者php-fpm主机上的 php资源路径的地址</div><div class="line">parameter：一般为 SCRIPT_FILENAME 这个变量</div><div class="line"></div><div class="line">fastcgi_param   SCRIPT_FILENAME /web/www1/fcgi$fastcgi_script_name;</div></pre></td></tr></table></figure>
<p>4、fastcgi_cache_path path [levels=levels] keys_zone=name:size [max_size=size];</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div></pre></td><td class="code"><pre><div class="line">该指令用于设置Nginx服务器存储数据缓存的路径以及缓存索引相关的内容（只能定义在http中或者server之外）</div><div class="line"></div><div class="line">levels=levels           缓存目录的层级数量，以及每一级的目录数量；levels=ONE:TWO:THREE</div><div class="line">keys_zone=name:size     k/v映射的内存空间的名称及大小</div><div class="line">inactive=time           非活动时长</div><div class="line">max_size=size           磁盘上用于缓存数据的缓存空间上限</div></pre></td></tr></table></figure>
<p>5、fastcgi_cache zone | off;</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">该指令调用指定的缓存空间来缓存数据</div></pre></td></tr></table></figure>
<p>6、fastcgi_cache_key string;</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">定义用作缓存项的key的字符串；</div></pre></td></tr></table></figure>
<p>7、fastcgi_cache_min_uses number;</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">缓存空间中的缓存项在inactive定义的非活动时间内至少要被访问到此处所指定的次数方可被认作活动项；</div></pre></td></tr></table></figure>
<p>8、fastcgi_cache_valid [code …] time;</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">不同的响应码各自的缓存时长；</div></pre></td></tr></table></figure>
<p>9、fastcgi_keep_conn on | off;</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div></pre></td><td class="code"><pre><div class="line">是否开启fastcgi的保持连接</div><div class="line"></div><div class="line">因为Nginx作为代理，是以客户端的身份与后端的php服务器进行传输，所以每有1个新的请求，就需要一个新的随机端口与php进行交互</div><div class="line">这样在并发请求数非常大的情况下，会造成端口可能不够用。</div><div class="line">这时，就需要开启这个功能，提供一个类似于管道的连接，使用一个端口传输多个请求，提高性能</div></pre></td></tr></table></figure>
<h4 id="配置文件预览"><a href="#配置文件预览" class="headerlink" title="配置文件预览"></a><font color="#D19275">配置文件预览</font></h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div><div class="line">37</div><div class="line">38</div><div class="line">39</div><div class="line">40</div><div class="line">41</div><div class="line">42</div><div class="line">43</div><div class="line">44</div><div class="line">45</div><div class="line">46</div><div class="line">47</div><div class="line">48</div><div class="line">49</div><div class="line">50</div><div class="line">51</div><div class="line">52</div><div class="line">53</div><div class="line">54</div><div class="line">55</div><div class="line">56</div><div class="line">57</div><div class="line">58</div><div class="line">59</div><div class="line">60</div><div class="line">61</div><div class="line">62</div><div class="line">63</div><div class="line">64</div><div class="line">65</div><div class="line">66</div><div class="line">67</div><div class="line">68</div><div class="line">69</div><div class="line">70</div><div class="line">71</div><div class="line">72</div><div class="line">73</div></pre></td><td class="code"><pre><div class="line">$ vim /etc/nginx/conf.d/maxie.conf</div><div class="line">proxy_cache_path		/web/cache/   levels=2:1:1    keys_zone=my_cache:10mmax_size=1g;</div><div class="line"></div><div class="line">server &#123;</div><div class="line">    listen             80;</div><div class="line">    server_name        www1.maxie.com;</div><div class="line">    root               /web/www1;</div><div class="line">    index              index.html index.htm;</div><div class="line">    add_header         X-Via	$server_addr;</div><div class="line">    add_header         X-Accel	$server_name;</div><div class="line">    </div><div class="line">    location / &#123;</div><div class="line">    access_log        /web/www1/access.log my_log flush=4m buffer=1m;</div><div class="line">    &#125;</div><div class="line">        </div><div class="line">    location ~* \.php$ &#123;</div><div class="line">    	root               /web/www1/fcgi;</div><div class="line">    	fastcgi_pass       172.16.1.120:9000;</div><div class="line">    	fastcgi_index      index.php;</div><div class="line">    	fastcgi_param      SCRIPT_FILENAME /web/www1/fcgi$fastcgi_script_name;</div><div class="line">    	include            fastcgi_params;</div><div class="line">    </div><div class="line">    	fastcgi_cache      fcgi_cache;</div><div class="line">    	fastcgi_cache_key  $request_uri;</div><div class="line">    	fastcgi_cache_methods  GET HEAD;</div><div class="line">    	fastcgi_cache_min_uses 2;</div><div class="line">    	fastcgi_cache_valid    200 301 302 5m;</div><div class="line">    	fastcgi_cache_valid    any 1m;</div><div class="line">    	fastcgi_keep_conn      on;</div><div class="line">    &#125;</div><div class="line">    </div><div class="line">    location ~* ^/pm_(ping|status)$ &#123;</div><div class="line">    	include            fastcgi_params;</div><div class="line">    	fastcgi_pass       172.16.1.120:9000;</div><div class="line">    	fastcgi_param      SCRIPT_FILENAME $fastcgi_script_name;</div><div class="line">    &#125;</div><div class="line">    </div><div class="line">    location ~* ^/pma$ &#123;</div><div class="line">    	root               /web/www1/;</div><div class="line">    	include            fastcgi_params;</div><div class="line">    	fastcgi_pass       172.16.1.120:9000;</div><div class="line">    	fastcgi_param      SCRIPT_FILENAME /web/www/fcgi$fastcgi_script_name;</div><div class="line">    </div><div class="line">    	#^表示从匹配的开始就替换为后面的URL</div><div class="line">    	if ($request_filename ~ /pma ) &#123;</div><div class="line">    		rewrite	^	http://www1.maxie.com/pma/index.php permanent;</div><div class="line">    	&#125;</div><div class="line">    &#125;   </div><div class="line">    </div><div class="line">    location ~* \.(jpg|png|gif|jpeg)$ &#123;</div><div class="line">    	proxy_pass            http://172.16.1.20:80;</div><div class="line">    	proxy_redirect        default;</div><div class="line">    	proxy_set_header      X-Real-IP    $remote_addr;</div><div class="line">    	proxy_cache           my_cache;</div><div class="line">    	proxy_cache_key       $request_uri;</div><div class="line">    	proxy_cache_valid     200 301 302 10m;</div><div class="line">    	proxy_cache_valid     any 1m;</div><div class="line">    </div><div class="line">    	proxy_cache_methods   GET HEAD;</div><div class="line">    	proxy_connect_timeout 10s;</div><div class="line">    </div><div class="line">    	#proxy_hide_header    ETag;</div><div class="line">    	#proxy_hide_header    Content-Type;</div><div class="line">    </div><div class="line">    	#proxy_pass_header    Server;</div><div class="line">    	#proxy_pass_header    Date;</div><div class="line">    &#125;</div><div class="line">    </div><div class="line">    error_page             404	    http://www1.maxie.com/404.html;</div><div class="line">    </div><div class="line">    location = /404.html &#123;</div><div class="line">	&#125;</div><div class="line">&#125;</div></pre></td></tr></table></figure>
<h4 id="效果演示"><a href="#效果演示" class="headerlink" title="效果演示"></a><font color="#D19275">效果演示</font></h4><p><strong>1.访问php页面自动代理至php-fpm处理：</strong></p>
<p><img src="https://ws4.sinaimg.cn/large/006tNc79ly1fgo5v6vbxog30qk0fc7wr.gif" alt=""></p>
<p><strong>2.访问php自带的测试页：</strong></p>
<p><img src="https://ws2.sinaimg.cn/large/006tNc79ly1fgo5x7ggqwg30qk0fc4r1.gif" alt=""></p>
<p><strong>3.测试fastcgi缓存功能</strong></p>
<ul>
<li>未开启缓存功能 压测index.php：(5000访问，200并发，总耗时374.381ms）</li>
</ul>
<p><img src="https://ws4.sinaimg.cn/large/006tNc79ly1fgo648k19zg30qk0fckju.gif" alt=""></p>
<ul>
<li>开启缓存功能 压测index.php：（5000访问，200并发，总耗时45.795ms）</li>
</ul>
<p><img src="https://ws4.sinaimg.cn/large/006tNc79ly1fgo65wjx7og30qk0fc7wr.gif" alt=""></p>
<p>由此测试可见缓存的重要性</p>
<hr>
<div class="note info"><h3 id="Nginx-upstream详解"><a href="#Nginx-upstream详解" class="headerlink" title="Nginx upstream详解"></a>Nginx upstream详解</h3></div>
<h4 id="什么是负载均衡"><a href="#什么是负载均衡" class="headerlink" title="什么是负载均衡"></a>什么是负载均衡</h4><p>网络负载均衡技术的大致原理是利用一定的<code>分配策略</code>将网络负载平衡地分摊到网络集群的<code>各个工作单元</code>上，使得单个重负负载任务能够分担到多个单元上<code>并行处理</code>，或者使得大量并发访问或者数据流量分担到多个单元上<code>分别处理</code>，从而减少用户的等待响应时间。</p>
<p>在实际应用中，负载均衡会根据网络的不同层次（一般按照OSI的七层参考模型）进行划分。现代的负载均衡技术主要实现和作用域网络的第四层（传输层）或第七层（应用层），完全独立于网络基础硬件设备，成为单独的技术设备。</p>
<p><code>Nginx</code>服务器实现的负载均衡一般认为是<code>七层负载均衡</code>。</p>
<p><img src="https://ws4.sinaimg.cn/large/006tNc79ly1fgo6iv2gi1j30sm1a81kx.jpg" alt="OSI模型"></p>
<p><br></p>
<h4 id="Nginx服务器负载均衡配置"><a href="#Nginx服务器负载均衡配置" class="headerlink" title="Nginx服务器负载均衡配置"></a>Nginx服务器负载均衡配置</h4><p>理解了“负载均衡”的概念，就可以利用Nginx服务器实现负载均衡的配置了。Nginx服务器实现了静态的基于<code>优先级</code>的<code>加权轮询(weighted round robin)</code>算法，主要使用的配置是<code>proxy_pass</code>指令和<code>upstream</code>指令，这些内容实际上很容易理解，关键点在于Nginx服务器的配置灵活多样，<font coloro="#FF0000">如何在配置均衡负载的同时合理的融合其他功能，形成一套可以满足实际需求的配置方案。</font></p>
<p><br></p>
<h4 id="upstream模块详解"><a href="#upstream模块详解" class="headerlink" title="upstream模块详解"></a>upstream模块详解</h4><p>1、upstream name { … }</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line">定义后端服务器组，会引入一个新的上下文</div><div class="line">需要定义在http中，server之外</div></pre></td></tr></table></figure>
<p><br><br>2、server address [parameters];</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">在upstream上下文中server成员</div></pre></td></tr></table></figure>
<p>address的表示格式</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line">unix:/PATH/TO/SOME_SOCK_FILE</div><div class="line">IP[:PORT]</div><div class="line">HOSTNAME[:PORT]</div></pre></td></tr></table></figure>
<p>parameters的可用参数：</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div></pre></td><td class="code"><pre><div class="line">weight=number           权重，默认为1</div><div class="line">max_fails=number        失败尝试最大次数；超出此处指定的次数时，server将被标记为不可用</div><div class="line">fail_timeout=time       设置将服务器标记为不可用状态的超时时长</div><div class="line">max_conns               当前的服务器的最大并发连接数</div><div class="line">backup                  将服务器标记为“备用”，即所有服务器均不可用时此服务器才启用(可以用来做sorry server)</div><div class="line">down                    标记为“不可用”</div></pre></td></tr></table></figure>
<p><br><br>3、least_conn;</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">最少连接调度算法，当server拥有不同的权重时其为wlc</div></pre></td></tr></table></figure>
<p><br><br>4、ip_hash;</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">源地址hash调度方法；</div></pre></td></tr></table></figure>
<p><br><br>5、hash key [consistent];</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line">基于指定的key的hash表来实现对请求的调度，此处的key可以直接文本、变量或二者的组合</div><div class="line"></div><div class="line">作用：将请求分类，同一类请求将发往同一个upstream server</div></pre></td></tr></table></figure>
<p><br><br>6、keepalive connections;</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">为每个worker进程保留的空闲的长连接数量</div></pre></td></tr></table></figure>
<h4 id="upstream配置实例"><a href="#upstream配置实例" class="headerlink" title="upstream配置实例"></a>upstream配置实例</h4><h5 id="配置文件预览-1"><a href="#配置文件预览-1" class="headerlink" title="配置文件预览"></a><font size="3" color="#D19275">配置文件预览</font></h5><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div></pre></td><td class="code"><pre><div class="line">$ vim /etc/nginx/conf.d/balancing.conf</div><div class="line">#Load Balancing</div><div class="line">upstream websrvs &#123;</div><div class="line">        #ip_hash;</div><div class="line">        server 172.16.1.20      weight=1 max_fails=2 fail_timeout=10;</div><div class="line">        server 172.16.1.130     weight=1 max_fails=2 fail_timeout=10;</div><div class="line">        server localhost:10080  weight=1 backup;</div><div class="line">&#125;</div><div class="line"></div><div class="line">server &#123;</div><div class="line">        listen                          10080;</div><div class="line">        server_name                     localhost;</div><div class="line">        root                            /web/backup;</div><div class="line">&#125;</div><div class="line"></div><div class="line">server &#123;</div><div class="line">        listen                          8080;</div><div class="line">        server_name                     www.balancing.com;</div><div class="line"></div><div class="line">        location / &#123;</div><div class="line">                proxy_pass              http://websrvs;</div><div class="line">                proxy_set_header        X-Real-IP $remote_addr;</div><div class="line">        &#125;</div><div class="line">&#125;</div></pre></td></tr></table></figure>
<h5 id="效果演示-1"><a href="#效果演示-1" class="headerlink" title="效果演示"></a><font size="3" color="#D19275">效果演示</font></h5><p><img src="https://ws2.sinaimg.cn/large/006tNc79ly1fgo77e1z5ug30qk0fcb2j.gif" alt=""></p>
<hr>
<div class="note warning"><h3 id="Re-配置LEMP"><a href="#Re-配置LEMP" class="headerlink" title="Re:配置LEMP"></a>Re:配置LEMP</h3></div>
<h4 id="Engine-X-Nginx-配置"><a href="#Engine-X-Nginx-配置" class="headerlink" title="Engine X (Nginx) 配置"></a>Engine X (Nginx) 配置</h4><h5 id="1、安装Nginx"><a href="#1、安装Nginx" class="headerlink" title="1、安装Nginx "></a><font size="3" color="#32CD99">1、安装Nginx </font></h5><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line">$ yum info nginx</div><div class="line">$ yum install nginx</div></pre></td></tr></table></figure>
<p>如果yum仓库中没有 <code>nginx</code>，需要到官方站点下载，并使用如下命令安装；或者<a href="http://maxiecloud.com/2017/06/14/nginx-1/">编译安装</a>，在之前的一章已经讲过了。</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line">$ wget http://nginx.org/packages/centos/7/x86_64/RPMS/nginx-1.10.2-1.el7.ngx.x86_64.rpm</div><div class="line">$ yum install ./nginx-1.10.2-1.el7.ngx.x86_64.rpm</div></pre></td></tr></table></figure>
<p><br></p>
<h5 id="2、修改主配置文件，添加自定义日志格式"><a href="#2、修改主配置文件，添加自定义日志格式" class="headerlink" title="2、修改主配置文件，添加自定义日志格式 "></a><font size="3" color="#32CD99">2、修改主配置文件，添加自定义日志格式 </font></h5><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div></pre></td><td class="code"><pre><div class="line">$ cd /etc/nginx </div><div class="line">$ vim nginx.conf</div><div class="line">http &#123;</div><div class="line">	log_format	my_log	&apos;$remote_addr - - $remote_user [$time_local] &quot;$request&quot;&apos;</div><div class="line">						&apos;$status $body_bytes_sent &quot;$http_referer&quot;&apos;</div><div class="line">						&apos;$http_user_agent&apos;;</div><div class="line">&#125;</div></pre></td></tr></table></figure>
<p><br></p>
<h5 id="3、添加虚拟主机配置文件"><a href="#3、添加虚拟主机配置文件" class="headerlink" title="3、添加虚拟主机配置文件 "></a><font size="3" color="#32CD99">3、添加虚拟主机配置文件 </font></h5><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div><div class="line">37</div><div class="line">38</div><div class="line">39</div><div class="line">40</div><div class="line">41</div><div class="line">42</div><div class="line">43</div><div class="line">44</div><div class="line">45</div><div class="line">46</div><div class="line">47</div><div class="line">48</div><div class="line">49</div><div class="line">50</div></pre></td><td class="code"><pre><div class="line">$ vim conf.d/maxie.conf</div><div class="line">fastcgi_cache 					/web/cache/fcgi levels=2:1:1 keys_zone=fcgi_cache:20m inactive=1m max_size=1g;</div><div class="line"></div><div class="line">server &#123;</div><div class="line">	listen 					80;</div><div class="line">	server_name				www1.maxie.com;</div><div class="line">	root					/web/www1/;</div><div class="line">	index 					index.php index.html index.htm;</div><div class="line">	add_header				X-Via   $server_addr;</div><div class="line">	add_header				X-Accel $server_name;</div><div class="line"></div><div class="line">	location / &#123;</div><div class="line">		try_files			$uri $uri/ /index.html;</div><div class="line">		access_log			/web/www1/access.log my_log flush=4m buffer=1m;</div><div class="line">	&#125;</div><div class="line"></div><div class="line">	location ~* \.php$ &#123;</div><div class="line">		root				/web/www1/fcgi;</div><div class="line">		fastcgi_pass			172.16.1.120:9000;</div><div class="line">		fastcgi_index			index.php;</div><div class="line">		fastcgi_param 			SCRIPT_FILENAME /web/www1/fcgi$fastcgi_script_name;</div><div class="line"></div><div class="line">		fastcgi_cache 			fcgi_cache;</div><div class="line">		fastcgi_cache_key		$request_uri;</div><div class="line">		fastcgi_cache_methods	        GET HEAD;</div><div class="line">		fastcgi_cache_min_uses	        2;</div><div class="line">		fastcgi_cache_valid		200 301 302 10m;</div><div class="line">		fastcgi_cache_valid		any 1m;</div><div class="line">		fastcgi_keep_conn		on;</div><div class="line"></div><div class="line">		include				fastcgi_params;</div><div class="line">	&#125;</div><div class="line"></div><div class="line">	location ~* ^/pm_(ping|status)$ &#123;</div><div class="line">		include				fastcgi_params;</div><div class="line">		fastcgi_pass			172.16.1.120:9000;</div><div class="line">		fastcgi_param 			SCRIPT_FILENAME /web/www1/fcgi$fastcgi_script_name;</div><div class="line"></div><div class="line">	&#125;</div><div class="line"></div><div class="line">	location ~* ^/pma$ &#123;</div><div class="line">		include				fastcgi_params;</div><div class="line">		fastcgi_pass			172.16.1.120:9000;</div><div class="line">		fastcgi_param 			SCRIPT_FILENAME /web/www1/fcgi$fastcgi_script_name;</div><div class="line"></div><div class="line">		if ($request_filename ~ /pma ) &#123;</div><div class="line">            rewrite ^       	http://www1.maxie.com/pma/index.php permanent;</div><div class="line">    	&#125;</div><div class="line">	&#125;</div><div class="line">&#125;</div></pre></td></tr></table></figure>
<p><br></p>
<h5 id="4、创建配置文件中的目录以及主站html"><a href="#4、创建配置文件中的目录以及主站html" class="headerlink" title="4、创建配置文件中的目录以及主站html "></a><font size="3" color="#32CD99">4、创建配置文件中的目录以及主站html </font></h5><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div></pre></td><td class="code"><pre><div class="line">$ mkdir -pv /web/www1/</div><div class="line">$ mkdir -pv /web/cache/</div><div class="line">$ vim /web/www1/index.html </div><div class="line">&lt;h1&gt; Nginx Server &lt;/h1&gt;</div><div class="line">&lt;h2&gt; =_= &lt;/h2&gt;</div></pre></td></tr></table></figure>
<p><img src="https://ws3.sinaimg.cn/large/006tNc79ly1fgo8z39mo1j30qo0fgjsr.jpg" alt=""></p>
<p><br></p>
<h4 id="php-fpm配置"><a href="#php-fpm配置" class="headerlink" title="php-fpm配置"></a>php-fpm配置</h4><h5 id="1、安装php-fpm以及其他所需组件"><a href="#1、安装php-fpm以及其他所需组件" class="headerlink" title="1、安装php-fpm以及其他所需组件"></a><font size="3" color="#007FFF">1、安装php-fpm以及其他所需组件</font></h5><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">$ yum -y install php-fpm php-mysql php-mbstring</div></pre></td></tr></table></figure>
<p><br></p>
<h5 id="2、编辑配置文件"><a href="#2、编辑配置文件" class="headerlink" title="2、编辑配置文件"></a><font size="3" color="#007FFF">2、编辑配置文件</font></h5><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div></pre></td><td class="code"><pre><div class="line">$ vim /etc/php-fpm.d/www.conf</div><div class="line">将如下选项修改默认值的为这里的值：</div><div class="line">listen = 172.16.1.120:9000</div><div class="line">listen.allowed_clients = 172.16.1.70</div><div class="line">user = nginx</div><div class="line">group = nginx</div><div class="line">pm.status_path = /pm_status</div><div class="line">ping.path = /pm_ping</div><div class="line">ping.response = pong</div><div class="line">并创建/var/lib/php/session目录 修改属主属组为nginx</div></pre></td></tr></table></figure>
<p><br></p>
<h5 id="3、创建用户以及所需目录以及主站index-php"><a href="#3、创建用户以及所需目录以及主站index-php" class="headerlink" title="3、创建用户以及所需目录以及主站index.php"></a><font size="3" color="#007FFF">3、创建用户以及所需目录以及主站index.php</font></h5><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div></pre></td><td class="code"><pre><div class="line">$ useradd -r nginx </div><div class="line">$ mkdir -pv /var/lib/php/session </div><div class="line">$ chown -R nginx.nginx /var/lib/php/session</div><div class="line"></div><div class="line">$ mkdir -pv /web/www1/fcgi </div><div class="line">$ chown -R nginx.nginx /web/www1/fcgi</div><div class="line"></div><div class="line">$ vim /web/www1/fcgi/index.php</div><div class="line">&lt;?php </div><div class="line">	phpinfo();</div><div class="line">?&gt;</div></pre></td></tr></table></figure>
<p><br></p>
<h5 id="4、启动php-fpm"><a href="#4、启动php-fpm" class="headerlink" title="4、启动php-fpm"></a><font size="3" color="#007FFF">4、启动php-fpm</font></h5><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">$ systemctl start php-fpm</div></pre></td></tr></table></figure>
<p><br></p>
<h4 id="MariaDB配置"><a href="#MariaDB配置" class="headerlink" title="MariaDB配置"></a>MariaDB配置</h4><h5 id="1、安装maridb"><a href="#1、安装maridb" class="headerlink" title="1、安装maridb"></a><font size="3" color="#32CD99">1、安装maridb</font></h5><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">$ yum -y install mariadb-server</div></pre></td></tr></table></figure>
<p><br></p>
<h5 id="2、编辑配置文件-1"><a href="#2、编辑配置文件-1" class="headerlink" title="2、编辑配置文件"></a><font size="3" color="#32CD99">2、编辑配置文件</font></h5><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div></pre></td><td class="code"><pre><div class="line">$ vim /etc/my.conf</div><div class="line">[mysqld]</div><div class="line">skil_name_resolve=ON</div><div class="line">innodb_file_per_table=ON</div><div class="line">log-bin=mysql_bin</div></pre></td></tr></table></figure>
<p><br></p>
<h5 id="3、启动mariadb"><a href="#3、启动mariadb" class="headerlink" title="3、启动mariadb"></a><font size="3" color="#32CD99">3、启动mariadb</font></h5><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">$ systemctl start mariadb.service</div></pre></td></tr></table></figure>
<p><br></p>
<h5 id="4、授权远程用户登陆数据库"><a href="#4、授权远程用户登陆数据库" class="headerlink" title="4、授权远程用户登陆数据库"></a><font size="3" color="#32CD99">4、授权远程用户登陆数据库</font></h5><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div></pre></td><td class="code"><pre><div class="line">$ mysql </div><div class="line">&gt; GRANT ALL PRIVILEGES ON *.* TO &apos;root&apos;@&apos;172.16.1.120&apos; IDENTIFIED BY &apos;root@123&apos;;</div><div class="line">&gt; GRANT ALL PRIVILEGES ON *.* TO &apos;root&apos;@&apos;172.16.1.70&apos; IDENTIFIED BY &apos;root@123&apos;;</div><div class="line">&gt; FLUSH PRIVILEGES;</div></pre></td></tr></table></figure>
<p><br></p>
<h4 id="配置phpMyAdmin"><a href="#配置phpMyAdmin" class="headerlink" title="配置phpMyAdmin"></a>配置phpMyAdmin</h4><h5 id="1、拷贝rpm包"><a href="#1、拷贝rpm包" class="headerlink" title="1、拷贝rpm包"></a><font size="3" color="#FF7F00">1、拷贝rpm包</font></h5><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">$ scp Downloads/LinuxPackages/phpMyAdmin-4.0.10.20-all-languages.zip root@172.16.1.120:/web/www1/fcgi/</div></pre></td></tr></table></figure>
<p><br></p>
<h5 id="2、解压缩并修改配置文件"><a href="#2、解压缩并修改配置文件" class="headerlink" title="2、解压缩并修改配置文件"></a><font size="3" color="#FF7F00">2、解压缩并修改配置文件</font></h5><p><strong>php主机上进行的操作：</strong></p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div></pre></td><td class="code"><pre><div class="line">$ tar -xf /web/www1/fcgi/phpMyAdmin-4.0.10.20-all-languages.zip</div><div class="line">$ cd /web/www1/fcgi/</div><div class="line">$ ln -sv phpMyAdmin-4.0.10.20-all-languages pma</div><div class="line">$ cd pma </div><div class="line">$ cp config.sample.inc.php config.inc.php</div><div class="line">$ vim config.inc.php</div><div class="line">修改下面一行中的localhost改为 mariadb主机的IP地址</div><div class="line">$cfg[&apos;Servers&apos;][$i][&apos;host&apos;] = &apos;172.16.1.110&apos;;</div><div class="line"></div><div class="line">$ vim libraries/config.default.php</div><div class="line">修改下面一行中的localhost改为 mariadb主机的IP地址</div><div class="line">$cfg[&apos;Servers&apos;][$i][&apos;host&apos;] = &apos;172.16.1.110&apos;;</div><div class="line"></div><div class="line">$ chown -R nginx.nginx /web/www1/fcgi</div></pre></td></tr></table></figure>
<p><strong>nginx主机上进行的操作：</strong></p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line">$ scp root@172.16.1.120:/web/www1/fcgi/phpMyAdmin-4.0.10.20-all-languages /web/www1/pma</div><div class="line">$ chown -R nginx.nginx /web/www1/</div></pre></td></tr></table></figure>
<h5 id="3、开启nginx服务、打开网页进行测试即可，LEMP搭建完成-font-gt"><a href="#3、开启nginx服务、打开网页进行测试即可，LEMP搭建完成-font-gt" class="headerlink" title="3、开启nginx服务、打开网页进行测试即可，LEMP搭建完成/font&gt;"></a><font size="3" color="#FF7F00">3、开启nginx服务、打开网页进行测试即可，LEMP搭建完成/font&gt;</font></h5><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line">$ nginx -t</div><div class="line">$ systemctl start nginx</div></pre></td></tr></table></figure>
<h4 id="配置文件预览-2"><a href="#配置文件预览-2" class="headerlink" title="配置文件预览"></a>配置文件预览</h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div><div class="line">37</div><div class="line">38</div><div class="line">39</div><div class="line">40</div><div class="line">41</div><div class="line">42</div><div class="line">43</div><div class="line">44</div><div class="line">45</div><div class="line">46</div><div class="line">47</div><div class="line">48</div><div class="line">49</div><div class="line">50</div><div class="line">51</div><div class="line">52</div><div class="line">53</div><div class="line">54</div></pre></td><td class="code"><pre><div class="line">$ vim /etc/nginx/conf.d/maxie.conf</div><div class="line">fastcgi_cache_path              /web/cache/fcgi levels=2:1:1 keys_zone=fcgi_cache:20m inactive=1m max_size=1g;</div><div class="line"></div><div class="line">server &#123;</div><div class="line">        listen                  80;</div><div class="line">        server_name             www1.maxie.com;</div><div class="line">        root                    /web/www1;</div><div class="line">        index                   index.php index.html index.htm;</div><div class="line">        add_header              X-Via   $server_addr;</div><div class="line">        add_header              X-Accel $server_name;</div><div class="line"></div><div class="line">        location / &#123;</div><div class="line">                access_log              /web/www1/access.log my_log flush=4m buffer=1m;</div><div class="line">        &#125;</div><div class="line"></div><div class="line">        location ~* \.php$ &#123;</div><div class="line">                root                    /web/www1/fcgi;</div><div class="line">                fastcgi_pass            172.16.1.120:9000;</div><div class="line">                fastcgi_index           index.php;</div><div class="line">                fastcgi_param           SCRIPT_FILENAME /web/www1/fcgi$fastcgi_script_name;</div><div class="line">                include                 fastcgi_params;</div><div class="line"></div><div class="line">                fastcgi_cache           fcgi_cache;</div><div class="line">                fastcgi_cache_key       $request_uri;</div><div class="line">                fastcgi_cache_methods   GET HEAD;</div><div class="line">                fastcgi_cache_min_uses  2;</div><div class="line">                fastcgi_cache_valid     200 301 302 5m;</div><div class="line">                fastcgi_cache_valid     any 1m;</div><div class="line">                fastcgi_keep_conn       on;</div><div class="line">        &#125;</div><div class="line"></div><div class="line">        location ~* ^/pm_(ping|status)$ &#123;</div><div class="line">                include                 fastcgi_params;</div><div class="line">                fastcgi_pass            172.16.1.120:9000;</div><div class="line">                fastcgi_param           SCRIPT_FILENAME $fastcgi_script_name;</div><div class="line">        &#125;</div><div class="line"></div><div class="line">        location ~* ^/pma$ &#123;</div><div class="line">                root                    /web/www1/;</div><div class="line">                include                 fastcgi_params;</div><div class="line">                fastcgi_pass            172.16.1.120:9000;</div><div class="line">                fastcgi_param           SCRIPT_FILENAME /web/www/fcgi$fastcgi_script_name;</div><div class="line"></div><div class="line">                #^表示从匹配的开始就替换为后面的URL</div><div class="line">                if ($request_filename ~ /pma ) &#123;</div><div class="line">                        rewrite ^       http://www1.maxie.com/pma/index.php permanent;</div><div class="line">                &#125;</div><div class="line">        &#125;</div><div class="line">        </div><div class="line">        error_page                      404     http://www1.maxie.com/404.html;</div><div class="line"></div><div class="line">        location = /404.html &#123;</div><div class="line">        &#125;</div><div class="line">&#125;</div></pre></td></tr></table></figure>
<h4 id="实例演示"><a href="#实例演示" class="headerlink" title="实例演示"></a>实例演示</h4><p><img src="https://ws3.sinaimg.cn/large/006tNc79ly1fgo9g2f8fdg30qk0fc1la.gif" alt=""></p>
<hr>
<iframe frameborder="no" border="0" marginwidth="0" marginheight="0" width="330" height="86" src="//music.163.com/outchain/player?type=2&id=21968164&auto=1&height=66"></iframe>


<p>本文出自<a href="http://maxiecloud.com">Maxie’s Notes</a>博客，转载请务必保留此出处。</p>
<p><img src="https://ww1.sinaimg.cn/large/006tNbRwly1fdzc80odsuj30gn0ilq5m.jpg" alt=""></p>
]]></content>
    
    <summary type="html">
    
      &lt;span itemprop=&quot;image&quot; itemscope itemtype=&quot;http://schema.org/ImageObject&quot;&gt;&lt;img itemprop=&quot;url image&quot; src=&quot;/images/LEMP.png&quot; class=&quot;full-image&quot; alt=&quot;nginx_LEMP&quot; /&gt;&lt;meta itemprop=&quot;width&quot; content=&quot;auto&quot;&gt;&lt;meta itemprop=&quot;height&quot; content=&quot;auto&quot;&gt;&lt;/span&gt;
&lt;blockquote class=&quot;blockquote-center&quot;&gt;在学习了之前的一些关于Nginx相关的基础配置以及功能，下面我们就开始学习如何搭建LEMP以及Load-Balacning&lt;br&gt;&lt;/blockquote&gt;

&lt;font size=4 color=&quot;#32CD99&quot;&gt;LEMP&lt;/font&gt;

&lt;p&gt;&lt;code&gt;L&lt;/code&gt;：Linux&lt;br&gt;&lt;code&gt;E&lt;/code&gt;：Engine X –&amp;gt; Nginx&lt;br&gt;&lt;code&gt;M&lt;/code&gt;：MariaDB&lt;br&gt;&lt;code&gt;P&lt;/code&gt;：PHP-FPM&lt;/p&gt;
&lt;p&gt;在做&lt;code&gt;LEMP&lt;/code&gt;之前，我们先要学习一下&lt;code&gt;proxy&lt;/code&gt;模块的使用，方便我们对&lt;code&gt;fastcgi&lt;/code&gt;的理解&lt;/p&gt;
&lt;hr&gt;
    
    </summary>
    
      <category term="Nginx" scheme="http://maxiecloud.com/categories/Nginx/"/>
    
    
      <category term="linux" scheme="http://maxiecloud.com/tags/linux/"/>
    
      <category term="server" scheme="http://maxiecloud.com/tags/server/"/>
    
      <category term="nginx" scheme="http://maxiecloud.com/tags/nginx/"/>
    
      <category term="web" scheme="http://maxiecloud.com/tags/web/"/>
    
      <category term="http" scheme="http://maxiecloud.com/tags/http/"/>
    
  </entry>
  
  <entry>
    <title>nginx从入门到进阶【一】</title>
    <link href="http://maxiecloud.com/2017/06/14/nginx-1/"/>
    <id>http://maxiecloud.com/2017/06/14/nginx-1/</id>
    <published>2017-06-14T11:26:37.000Z</published>
    <updated>2017-06-17T08:14:19.000Z</updated>
    
    <content type="html"><![CDATA[<span itemprop="image" itemscope="" itemtype="http://schema.org/ImageObject"><img itemprop="url image" src="/images/nginx.jpg" class="full-image" alt="nginx"><meta itemprop="width" content="auto"><meta itemprop="height" content="auto"></span>
<blockquote class="blockquote-center">近几年来，Nginx逐步进入高速发展的时期，从各类主流的IT媒体到各大著名的IT论坛，我们不时能够看到它的身影。<br>经过逐步的改进，Nginx已成为一款高性能、功能完善、性能稳定的服务器产品。<br></blockquote>

<p><strong><font size="3" color="#7093DB"> Nginx服务器以其功能丰富著称于世。</font></strong></p>
<p>它既可以作为<code>http服务器</code>，也可以作为<code>反向代理服务器</code>；能够快速响应静态页面(HTML)的请求；支持FastCGI、SSL、Virtual Host、URL Rewirte、HTTP Basic Auth、Gzip等大量功能；并且<code>支持第三方</code>模块扩展。</p>
<p>在这篇博客中，我们主要对 <code>Nginx</code> 提供的 <code>HTTP</code>服务来讲解。</p>
<a id="more"></a>
<p><code>Nginx</code>提供基本的<code>HTTP</code>服务，可以作为<code>HTTP</code>代理服务器和反向代理服务器，支持通过缓存加速访问，可以完成简单的负载均衡和容错，支持包过滤功能，支持SSL等。</p>
<p><img src="https://ws3.sinaimg.cn/large/006tNbRwly1fgkz0jup0mj30q80gbt9r.jpg" alt="Nginx架构图"></p>
<p>上图是<code>Nginx</code>的整体架构图，下面我们就围绕着这张图，来讲解<code>Nginx</code></p>
<hr>
<div class="note primary"><h3 id="安装Nginx"><a href="#安装Nginx" class="headerlink" title="安装Nginx"></a>安装Nginx</h3></div>
<p>关于<code>Nginx</code>的安装，有两种方法，一种是编译安装，另一种则是使用官方提供的yum仓库进行安装。</p>
<p>为了更深入的了解<code>Nginx</code>，我们当然是选择编译安装了。不过在安装完成之后，我们还是会使用yum安装的<code>Nginx</code>来演示和讲解各种功能。</p>
<h4 id="下载源码包并解压"><a href="#下载源码包并解压" class="headerlink" title=" 下载源码包并解压 "></a><font szie="4" color="#5F9F9F"> 下载源码包并解压 </font></h4><p>1、到<code>Nginx</code>的官方站点下载源码包：<a href="http://nginx.org/download/nginx-1.12.0.tar.gz" target="_blank" rel="external">下载地址</a></p>
<p>2、拷贝到我们的虚拟机上并解压缩：</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line">$ scp maxie@172.16.1.11:/Users/maxie/Downloads/nginx-1.12.0.tar ./</div><div class="line">$ tar -xvf nginx-1.12.0.tar</div></pre></td></tr></table></figure>
<h4 id="编译安装Nginx"><a href="#编译安装Nginx" class="headerlink" title=" 编译安装Nginx "></a><font szie="4" color="#5F9F9F"> 编译安装Nginx </font></h4><p>1、安装编译安装所需的开发组包：</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line">$ cd nginx-1.12.0</div><div class="line">$ yum -y groupinstall &quot;Development Tools&quot; &quot;Server Platform Development&quot;</div><div class="line">$ yum -y install pcre-devel openssl-devel zlib-devel</div></pre></td></tr></table></figure>
<p>2、开始生成Makefile文件：</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div></pre></td><td class="code"><pre><div class="line">$ ./configure --prefix=/usr/local/nginx \</div><div class="line">--conf-path=/etc/nginx/nginx.conf \</div><div class="line">--error-log-path=/var/log/nginx/error.log \</div><div class="line">--http-log-path=/var/log/nginx/access.log \</div><div class="line">--pid-path=/var/run/nginx.pid \</div><div class="line">--lock-path=/var/run/nginx.lock \</div><div class="line">--user=nginx --group=nginx \</div><div class="line">--with-http_ssl_module \</div><div class="line">--with-http_v2_module \</div><div class="line">--with-http_dav_module \</div><div class="line">--with-http_stub_status_module \</div><div class="line">--with-threads --with-file-aio</div></pre></td></tr></table></figure>
<p><br></p>
<font szie="3" color="#007FFF"><strong>其中的各个选项的意义如下：</strong></font>

<table>
<thead>
<tr>
<th>选项</th>
<th>说明</th>
</tr>
</thead>
<tbody>
<tr>
<td>—-prefix=PATH</td>
<td>指定Nginx软件的安装路径。此项如果未指定，默认为/usr/local/nginx/目录</td>
</tr>
<tr>
<td>—-conf-path=PATH</td>
<td>在未给定 -c 选项下，指定默认的 nginx.conf 路径。如果未指定，默认为 prefix/conf/</td>
</tr>
<tr>
<td>—-error-log-path=PATH</td>
<td>在nginx.conf中未指定error_log指令的情况下，指定默认的错误日志路径。如果未指定，默认为 prefix/logs/error.log</td>
</tr>
<tr>
<td>—-http-log-path=PATH</td>
<td>在nginx.conf中未指定access_log指令的情况下，指定默认的错误日志路径。如果未指定，默认为 prefix/logs/access.log</td>
</tr>
<tr>
<td>—-pid-path=PATH</td>
<td>在nginx.conf中未指定pid指令的情况下，指定默认的 nginx.pid路径。nginx.pid保存了当前运行的Nginx服务的进程号</td>
</tr>
<tr>
<td>—-lock-path=PATH</td>
<td>指定nginx.lock文件的路径。nginx.lock是Nginx服务器的锁文件。如果未指定，默认为/var/lock目录</td>
</tr>
<tr>
<td>-—user=USER</td>
<td>在nginx.conf中未指定user指令的情况下，指定默认的Nginx服务器进程的属主用户，即Nginx进程运行的用户。如果未指定，默认为nobody。</td>
</tr>
<tr>
<td>—-group=GROUP</td>
<td>在nginx.conf中未指定group指令的情况下，指定默认的Nginx服务器进程的属主用户组，即Nginx进程运行的用户组。如果未指定，默认为nobody</td>
</tr>
<tr>
<td>—-with-http_ssl_module</td>
<td>声明启用HTTP的ssl模块，这样Nginx服务器就可以支持HTTPS请求了。这个模块的正常运行需要安装 openssl库</td>
</tr>
<tr>
<td>—-with-http_v2_module</td>
<td>声明启用HTTPv2版本模块。</td>
</tr>
<tr>
<td>—-with-http_dav_module</td>
<td>声明启用HTTP的dav模块。默认不启用</td>
</tr>
<tr>
<td>—-with-http_stub_status_module</td>
<td>声明启用Server Status页。默认不启用</td>
</tr>
<tr>
<td>—-with-threads</td>
<td>声明启用线程池(1.7版本以上)</td>
</tr>
<tr>
<td>—-with-file-aio</td>
<td>声明启用异步IO(0.8版本以上)</td>
</tr>
</tbody>
</table>
<p><br></p>
<h4 id="更多编译选项点击这里"><a href="#更多编译选项点击这里" class="headerlink" title="更多编译选项点击这里"></a><a href="#编译选项">更多编译选项点击这里</a></h4><p><br></p>
<p>3、开始编译并安装</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line">$ make              #编译</div><div class="line">$ make install      #安装</div></pre></td></tr></table></figure>
<hr>
<div class="note success"><h3 id="Nginx配置文件详解"><a href="#Nginx配置文件详解" class="headerlink" title="Nginx配置文件详解"></a>Nginx配置文件详解</h3></div>
<p>安装完成之后，让我们看一看<code>Nginx</code>生成了哪些配置文件</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div></pre></td><td class="code"><pre><div class="line">$ cd /etc/nginx/</div><div class="line">$ ls</div><div class="line">conf.d                  koi-utf             scgi_params</div><div class="line">default.d               koi-win             scgi_params.default</div><div class="line">fastcgi.conf            mime.types          uwsgi_params</div><div class="line">fastcgi.conf.default    mime.types.default  uwsgi_params.default</div><div class="line">fastcgi_params          nginx.conf          win-utf</div><div class="line">fastcgi_params.default  nginx.conf.default</div></pre></td></tr></table></figure>
<p>其中<code>nginx.conf</code>是主配置文件，<code>conf.d/</code>目录下是其他配置文件</p>
<h4 id="主配置文件介绍"><a href="#主配置文件介绍" class="headerlink" title=" 主配置文件介绍 "></a><font szie="4" color="#5F9F9F"> 主配置文件介绍 </font></h4><p>让我们使用<code>vim</code>命令查看一下主配置文件：</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">$ vim /etc/nginx/nginx.conf</div></pre></td></tr></table></figure>
<p><img src="https://ws1.sinaimg.cn/large/006tNbRwly1fgl0lxboblj31h42zc4qr.jpg" alt=""></p>
<p>看了上面的图，想必不用我多解释了，各个配置段的内容以及生效范围，已经画出来了。</p>
<p>下面我们就对上面的各个配置段进行详细的介绍</p>
<h4 id="全局块-Main"><a href="#全局块-Main" class="headerlink" title=" 全局块[Main] "></a><font szie="2" color="#D98719"> 全局块[Main] </font></h4><p>全局块是默认配置文件从开始到<code>events</code>块之间的一部分内容，主要设置一些影响Nginx服务器整体运行的配置命令，因此，这些指令的作用域是Nginx服务器全局。</p>
<p><strong>Main配置段常见的配置指令：</strong></p>
<pre><code>通过查看官方帮助文档中的 Core Functionnality 即可获得详细帮助
</code></pre><h5 id="正常运行必备的配置如下"><a href="#正常运行必备的配置如下" class="headerlink" title="正常运行必备的配置如下"></a>正常运行必备的配置如下</h5><p>1、user/group：用于配置运行<code>Nginx</code>服务器用户(组)的指令是user<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line">user user [group];</div><div class="line">默认为:</div><div class="line">user nobody nobody;</div></pre></td></tr></table></figure></p>
<p>2、pid：指定存储<code>Nginx</code>主进程进程号码的文件路径</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">pid /PATH/TO/PID_FILE;</div></pre></td></tr></table></figure>
<p>3、include file | mask：指定包含进来的其他配置文件片段</p>
<p>4、load_module file：指明要装载的动态模块</p>
<p>5、sendfile on | off：直接在内核中发送响应报文，不经由用户空间</p>
<p>6、keepalive_timeout NUM：是否开启长连接模式，0为关闭</p>
<p>7、include /PATH/TO/SOME/DIR：包含哪些配置文件的目录</p>
<p>8、server_name：虚拟主机名; </p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">_;      表示匹配所有主机名</div></pre></td></tr></table></figure>
<p><br></p>
<h5 id="性能优化相关的配置："><a href="#性能优化相关的配置：" class="headerlink" title="性能优化相关的配置："></a>性能优化相关的配置：</h5><p>1、worker_processes number | auto;</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line">worker进程的数量；通常应该为当前主机的cpu的物理核心数；应该小于等于当前主机的CPU的物理核心数;</div><div class="line">auto：当前主机物理CPU核心数;</div></pre></td></tr></table></figure>
<p>2、worker_cpu_affinity auto [cpumask];</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div></pre></td><td class="code"><pre><div class="line">绑定worker进程与CPU核心</div><div class="line"></div><div class="line">CPU MASK：CPU掩码</div><div class="line">00000001：0号CPU</div><div class="line">00000010：1号CPU</div><div class="line">... ...</div></pre></td></tr></table></figure>
<p>3、worker_priority number;</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">指定worker进程的nice值，设定worker进程优先级；[-20,20]</div></pre></td></tr></table></figure>
<p>4、worker_rlimit_nofile number;</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">worker进程所能够打开的文件数量上限；</div></pre></td></tr></table></figure>
<p><br></p>
<h5 id="测试、定位选项配置"><a href="#测试、定位选项配置" class="headerlink" title="测试、定位选项配置"></a>测试、定位选项配置</h5><p>1、daemon on|off;    (在CentOS6上要开启)</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">是否以守护进程方式运行Nginx</div></pre></td></tr></table></figure>
<p>2、master_process on|off; (调试使用，输出错误信息到屏幕)</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">是否以master/worker模型运行nginx；默认为on；</div></pre></td></tr></table></figure>
<p>3、error_log file [level]; 错误日志级别</p>
<hr>
<h4 id="事件驱动-events"><a href="#事件驱动-events" class="headerlink" title=" 事件驱动[events] "></a><font szie="2" color="#D98719"> 事件驱动[events] </font></h4><p>1、worker_connections number;</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line">每个worker进程所能够打开的最大并发连接数数量；</div><div class="line">number = worker_processes * worker_connections</div></pre></td></tr></table></figure>
<p>2、use method;</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line">指明并发连接请求的处理方法；</div><div class="line">默认使用:</div><div class="line">use epoll;</div></pre></td></tr></table></figure>
<p>3、accept_mutex on | off;    (互斥锁)</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line">处理新的连接请求的方法；on意味着由各worker轮流处理新请求，Off意味着每个新请求的到达都会通知所有的worker进程；</div><div class="line">		on：起点公平</div><div class="line">		off：结果公平(更合理)</div></pre></td></tr></table></figure>
<hr>
<div class="note info"><h3 id="HTTP协议的相关配置"><a href="#HTTP协议的相关配置" class="headerlink" title="HTTP协议的相关配置"></a>HTTP协议的相关配置</h3></div>
<h4 id="与套接字相关的配置"><a href="#与套接字相关的配置" class="headerlink" title=" 与套接字相关的配置 "></a><font szie="3" color="#32CD99"> 与套接字相关的配置 </font></h4><p>1、server { … }：配置一个虚拟主机</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div></pre></td><td class="code"><pre><div class="line">server &#123;</div><div class="line">    listen address[:PORT]|PORT;</div><div class="line">    server_name SERVER_NAME;</div><div class="line">    root /PATH/TO/DOCUMENT_ROOT;</div><div class="line">    &#125;</div></pre></td></tr></table></figure>
<p>2、listen PORT|address[:port]|unix:/PATH/TO/SOCKET_FILE</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div></pre></td><td class="code"><pre><div class="line">default_server：设定为默认虚拟主机；</div><div class="line">ssl：限制仅能够通过ssl连接提供服务；强制使用443</div><div class="line">http2 | spdy：强制使用http协议</div><div class="line">backlog=number：后援队列长度；</div><div class="line">rcvbuf=size：接收缓冲区大小；</div><div class="line">sndbuf=size：发送缓冲区大小；</div></pre></td></tr></table></figure>
<p>3、server_name name …;</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div></pre></td><td class="code"><pre><div class="line">指明虚拟主机的主机名称；后可跟多个由空白字符分隔的字符串；</div><div class="line">支持*通配任意长度的任意字符；server_name *.magedu.com  www.magedu.*</div><div class="line">支持~起始的字符做正则表达式模式匹配；server_name ~^www\d+\.magedu\.com$</div><div class="line">	</div><div class="line">匹配机制：</div><div class="line">(1) 首先是字符串精确匹配;</div><div class="line">(2) 左侧*通配符；</div><div class="line">(3) 右侧*通配符；</div><div class="line">(4) 正则表达式；</div></pre></td></tr></table></figure>
<p><img src="https://ws4.sinaimg.cn/large/006tNbRwly1fgl1lqps0pg30qk0fc7wo.gif" alt=""></p>
<p>配置文件如下：</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div></pre></td><td class="code"><pre><div class="line">server &#123;</div><div class="line">   listen          8080;</div><div class="line">   server_name     www1.maxie.com;</div><div class="line">   root            /web/www1/;</div><div class="line">&#125;</div></pre></td></tr></table></figure>
<p>4、tcp_nodelay on | off;</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line">在keepalived模式下的连接是否启用TCP_NODELAY选项；</div><div class="line">当请求资源过小时，如果开启nodelay，则不管请求资源多小，都立即发送;</div><div class="line">如果off，并开启keepalived，则等待请求好几个资源</div></pre></td></tr></table></figure>
<p>5、tcp_nopush on | off;</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line">在sendfile模式下，是否启用TCP_CORK选项;</div><div class="line">在sendfile发送响应报文之前，等待用户空间把首部发过来之后，和响应报文+首部一起发给用户;</div></pre></td></tr></table></figure>
<p>6、sendfile on | off;(默认开启on)</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line">是否启用sendfile功能；</div><div class="line">直接在内核中发送响应报文，不经由用户空间</div></pre></td></tr></table></figure>
<p><br></p>
<h4 id="定义路径相关的配置"><a href="#定义路径相关的配置" class="headerlink" title=" 定义路径相关的配置 "></a><font szie="3" color="#32CD99"> 定义路径相关的配置 </font></h4><p>1、root path; (适用以下上下文 : http、server、location、if in location)</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line">设置web资源路径映射；用于指明用户请求的url所对应的本地文件系统上的文档所在目录路径；</div><div class="line">可用的位置：http, server, location, if</div></pre></td></tr></table></figure>
<p>2、location [ = | ~ | ~* | ^~ ] uri { … } </p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div></pre></td><td class="code"><pre><div class="line">其中的root可以继承于server，也可以自己创建，生效的最后是location自己定义的</div><div class="line">	</div><div class="line">在一个server中location配置段可存在多个，用于实现从uri到文件系统的路径映射；</div><div class="line">ngnix会根据用户请求的URI来检查定义的所有location，并找出一个最佳匹配，而后应用其配置；</div><div class="line">	</div><div class="line">=：对URI做精确匹配；</div><div class="line">~：对URI做正则表达式模式匹配，区分字符大小写；</div><div class="line">~*：对URI做正则表达式模式匹配，不区分字符大小写；</div><div class="line">^~：对URI的左半部分做匹配检查，不区分字符大小写；</div><div class="line">不带符号：匹配起始于此uri的所有的url；</div><div class="line">	</div><div class="line">匹配优先级：=, ^~, ～/～*，不带符号；</div></pre></td></tr></table></figure>
<p>3、alias path;</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div></pre></td><td class="code"><pre><div class="line">定义路径别名，文档映射的另一种机制；仅能用于location上下文；</div><div class="line">注意：location中使用root指令和alias指令的意义不同；</div><div class="line">	(a) root，给定的路径对应于location中的/uri/左侧的/；</div><div class="line">	(b) alias，给定的路径对应于location中的/uri/右侧的</div></pre></td></tr></table></figure>
<p>4、index file …;</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">使用于http、server、location</div></pre></td></tr></table></figure>
<p>5、error_page code … [=[response]] uri;</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div></pre></td><td class="code"><pre><div class="line">自定义错误页</div><div class="line">code：要处理的HTTP错误代码</div><div class="line">response：可选项，将 code 指定的错误代码转化为新的错误代码 response</div><div class="line">uri：错误页面的路径或者网站地址。如果设置为路径，则是以Nginx服务器安装路径下的html目录为根路径的相对路径; 如果设置为网址，则Nginx服务器会直接访问该网址获取错误页面，并返回给用户端</div></pre></td></tr></table></figure>
<p><strong>实例：</strong></p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div></pre></td><td class="code"><pre><div class="line">$ cd /etc/nginx</div><div class="line">$ vim conf.d/maxie.conf</div><div class="line">server &#123;</div><div class="line">        listen          8080;</div><div class="line">        server_name     www1.maxie.com;</div><div class="line"></div><div class="line">        location / &#123;</div><div class="line">                index   index.html index.htm;</div><div class="line">                root /web/www1/;</div><div class="line">        &#125;</div><div class="line"></div><div class="line">        location /images &#123;</div><div class="line">                alias /web/pic/;</div><div class="line">        &#125;</div><div class="line"></div><div class="line">        location ~* /source &#123;</div><div class="line">                root /web/Source/;</div><div class="line">        &#125;</div><div class="line"></div><div class="line">        error_page 404 http://www1.maxie.com:8080/404.html;</div><div class="line">&#125;</div><div class="line">$ nginx -t</div><div class="line">$ nginx -s reload</div></pre></td></tr></table></figure>
<p>打开网页进行测试：</p>
<p><img src="https://ws1.sinaimg.cn/large/006tKfTcly1fgl3m1s2r4g30qk0fc1l4.gif" alt=""></p>
<p><br></p>
<h4 id="定义客户端请求相关的配置"><a href="#定义客户端请求相关的配置" class="headerlink" title=" 定义客户端请求相关的配置 "></a><font szie="3" color="#32CD99"> 定义客户端请求相关的配置 </font></h4><p>1、keepalive_timeout timeout [header_timeout];(时间维度)</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">设定保持连接的超时时长，0表示禁止长连接；默认为75s；</div></pre></td></tr></table></figure>
<p>2、keepalive_requests number;(数量维度)</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">在一次长连接上所允许请求的资源的最大数量，默认为100;</div></pre></td></tr></table></figure>
<p>3、keepalive_disable none | browser …;</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">对哪种浏览器禁用长连接；</div></pre></td></tr></table></figure>
<p>4、send_timeout time;</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">向客户端发送响应报文的超时时长，此处，是指两次写操作之间的间隔时长；</div></pre></td></tr></table></figure>
<p>5、client_body_buffer_size size;</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line">用于接收客户端请求报文的&apos;body部分的缓冲区大小&apos;；默认为16k；超出此大小时，其将被暂存到磁盘上的由client_body_temp_path指令所定义的位置；</div><div class="line">	如果是博客或者论坛站点,可以提高缓冲区大小;如果是电商站点,则使用默认即可.</div></pre></td></tr></table></figure>
<p>6、client_body_temp_path path [level1 [level2 [level3]]];</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div></pre></td><td class="code"><pre><div class="line">设定用于存储客户端请求报文的body部分的临时存储路径及子目录结构和数量</div><div class="line"></div><div class="line">分级缓存： 	通过hash(md5sum)进行生成校验码，取校验码的第一位作为一级子目录，以此类推；也可以取2位作为一级子目录</div><div class="line">	client_body_temp_path /var/tmp/client_body  2 1 1 </div><div class="line">		1：表示用一位16进制数字表示一级子目录；0-f：16个</div><div class="line">		2：表示用2位16进程数字表示二级子目录：00-ff：16 * 256 个</div><div class="line">		2：表示用2位16进程数字表示三级子目录：00-ff：16 * 256 * 256个</div></pre></td></tr></table></figure>
<p>注意：启用此项会影响性能</p>
<p>实例：</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div></pre></td><td class="code"><pre><div class="line">$ vim conf.d/maxie.conf</div><div class="line">server &#123;</div><div class="line">        listen          8080;</div><div class="line">        server_name     www1.maxie.com;</div><div class="line">        keepalive_timeout 30s;</div><div class="line">        keepalive_requests 4;</div><div class="line">        send_timeout 3s;</div><div class="line"></div><div class="line">        client_body_buffer_size 8k;</div><div class="line">        client_body_temp_path /web/cache 1 1 1;</div><div class="line"></div><div class="line">        location / &#123;</div><div class="line">                index   index.html index.htm;</div><div class="line">                root /web/www1/;</div><div class="line">        &#125;</div><div class="line"></div><div class="line">        location /images &#123;</div><div class="line">                alias /web/pic/;</div><div class="line">        &#125;</div><div class="line"></div><div class="line"></div><div class="line"></div><div class="line">        error_page 404 http://www1.maxie.com:8080/404.html;</div><div class="line">&#125;</div></pre></td></tr></table></figure>
<p><br></p>
<h4 id="对客户端进行限制的相关配置"><a href="#对客户端进行限制的相关配置" class="headerlink" title=" 对客户端进行限制的相关配置 "></a><font szie="3" color="#32CD99"> 对客户端进行限制的相关配置 </font></h4><p>1、limit_rate rate;  (一般不开启)</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">限制响应给客户端的传输速率，单位是bytes/second，0表示无限制；</div></pre></td></tr></table></figure>
<p>2、limit_except method … { … }</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div></pre></td><td class="code"><pre><div class="line">限制除这里定义的method以外的所有method对此location的动作</div><div class="line">					</div><div class="line">limit_except GET &#123;</div><div class="line">    deny 172.16.1.20;</div><div class="line">    allow 172.16.0.0/16;</div><div class="line">    deny  all;</div><div class="line">&#125;</div></pre></td></tr></table></figure>
<p>实例：</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div></pre></td><td class="code"><pre><div class="line">$ vim conf.d/maxie.conf</div><div class="line">server &#123;</div><div class="line">        listen          8080;</div><div class="line">        server_name     www1.maxie.com;</div><div class="line">        keepalive_timeout 30s;</div><div class="line">        keepalive_requests 4;</div><div class="line">        send_timeout 3s;</div><div class="line"></div><div class="line">        client_body_buffer_size 8k;</div><div class="line">        client_body_temp_path /web/cache 1 1 1;</div><div class="line"></div><div class="line">        limit_rate 100;</div><div class="line"></div><div class="line">        location  / &#123;</div><div class="line">                index   index.html index.htm;</div><div class="line">                root /web/www1/;</div><div class="line">                limit_except PUT &#123;</div><div class="line">                        deny 172.16.1.20;</div><div class="line">                        allow 172.16.0.0/16;</div><div class="line">                        deny all;</div><div class="line">                &#125;</div><div class="line">        &#125;</div><div class="line"></div><div class="line">        location /images &#123;</div><div class="line">                alias /web/pic/;</div><div class="line">        &#125;</div><div class="line">         error_page 404 http://www1.maxie.com:8080/404.html;</div><div class="line">&#125;</div></pre></td></tr></table></figure>
<p><img src="https://ws1.sinaimg.cn/large/006tNbRwly1fglmatxa6yg30qk0fcb2m.gif" alt=""></p>
<font szie="4" color="#FF0000">总结</font>

<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line">1、开启 limit_rate 之后，客户端访问网站资源明显变慢，对用户体验极差，不建议开启;</div><div class="line">2、开启 limit_except 之后，可以对用户访问网站的请求方法进行限制，可以设置成只允许用户有 GET、HEAD、POST等方法的权限;</div><div class="line">3、limit_except METHOD:表示此方法所有人都可以方法，但是除了此方法以外的其他方法，只允许在其中设置的 allow 的用户IP使用。</div></pre></td></tr></table></figure>
<p><br></p>
<h4 id="文件操作优化的相关配置"><a href="#文件操作优化的相关配置" class="headerlink" title=" 文件操作优化的相关配置 "></a><font szie="3" color="#32CD99"> 文件操作优化的相关配置 </font></h4><p>1、aio on | off | threads[=pool];  (一般都要启用)</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">是否启用aio功能(异步IO)</div></pre></td></tr></table></figure>
<p>2、directio size | off;</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">在Linux主机启用O_DIRECT标记，此处意味文件大于等于给定的大小时使用，例如directio 4m;</div></pre></td></tr></table></figure>
<p>3、open_file_cache off; | open_file_cache max=N [inactive=time];</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div></pre></td><td class="code"><pre><div class="line">nginx可以缓存以下三种信息：</div><div class="line">(1) 文件的描述符、文件大小和最近一次的修改时间；</div><div class="line">(2) 打开的目录结构；</div><div class="line">(3) 没有找到的或者没有权限访问的文件的相关信息；</div><div class="line">	</div><div class="line">max=N：可缓存的缓存项上限；达到上限后会使用LRU算法实现缓存管理；</div><div class="line">缓存多少个文件</div><div class="line">&apos;LRU：最近最少使用算法&apos;</div><div class="line"></div><div class="line">inactive=time：缓存项的非活动时长，在此处指定的时长内未被命中的或命中的次数少于open_file_cache_min_uses指令所指定的次数的缓存项即为非活动项</div></pre></td></tr></table></figure>
<p>4、open_file_cache_valid time;</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line">缓存项有效性的检查频率；默认为60s;</div><div class="line">检查非活动时长频率</div></pre></td></tr></table></figure>
<p>5、open_file_cache_min_uses number;</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">在open_file_cache指令的inactive参数指定的时长内，至少应该被命中多少次方可被归类为活动项；</div></pre></td></tr></table></figure>
<p>6、open_file_cache_errors on | off;</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">是否缓存查找时发生错误的文件一类的信息；</div></pre></td></tr></table></figure>
<p>实例：</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div></pre></td><td class="code"><pre><div class="line">$ vim conf.d/maxie.conf</div><div class="line">server &#123;</div><div class="line">        listen          8080;</div><div class="line">        server_name     www1.maxie.com;</div><div class="line">        keepalive_timeout 30s;</div><div class="line">        keepalive_requests 4;</div><div class="line">        send_timeout 3s;</div><div class="line"></div><div class="line">        client_body_buffer_size 8k;</div><div class="line">        client_body_temp_path /web/cache 1 1 1;</div><div class="line"></div><div class="line">        limit_rate 100;</div><div class="line">        </div><div class="line">        aio on;</div><div class="line">        directio 5m;</div><div class="line">                        </div><div class="line">        location / &#123;</div><div class="line">                index   index.html index.htm;</div><div class="line">                root /web/www1/;</div><div class="line">        &#125;</div><div class="line"></div><div class="line">        location /images &#123;</div><div class="line">                alias /web/pic/;</div><div class="line">                open_file_cache max=10 inactive=20s;</div><div class="line">                open_file_cache_valid 50s;</div><div class="line">                open_file_cache_min_uses 2;</div><div class="line">                open_file_cache_errors on;</div><div class="line">                &#125;</div><div class="line">         error_page 404 http://www1.maxie.com:8080/404.html;</div><div class="line">&#125;</div></pre></td></tr></table></figure>
<p><br></p>
<h4 id="其他配置"><a href="#其他配置" class="headerlink" title=" 其他配置 "></a><font szie="3" color="#32CD99"> 其他配置 </font></h4><p>1、实现基于用户的访问控制，使用basic机制进行用户认证</p>
<p>auth_basic string | off;<br>auth_basic_user_file file;</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div><div class="line">37</div><div class="line">38</div><div class="line">39</div><div class="line">40</div><div class="line">41</div><div class="line">42</div></pre></td><td class="code"><pre><div class="line">安装http-tools工具包：</div><div class="line">$ yum install -y httpd-tools</div><div class="line"></div><div class="line">使用htpasswd生成认证用户文件：</div><div class="line">$ htpasswd -c -m /etc/nginx/.ngxpasswd tom</div><div class="line">$ htpasswd -m /etc/nginx/.ngxpasswd jerry</div><div class="line"></div><div class="line">编辑虚拟主机配置文件：</div><div class="line">$ vim conf.d/maxie.conf</div><div class="line">$ vim conf.d/maxie.conf</div><div class="line">server &#123;</div><div class="line">        listen          8080;</div><div class="line">        server_name     www1.maxie.com;</div><div class="line">        keepalive_timeout 30s;</div><div class="line">        keepalive_requests 4;</div><div class="line">        send_timeout 3s;</div><div class="line"></div><div class="line">        client_body_buffer_size 8k;</div><div class="line">        client_body_temp_path /web/cache 1 1 1;</div><div class="line"></div><div class="line">        limit_rate 100;</div><div class="line">        </div><div class="line">        aio on;</div><div class="line">        directio 5m;</div><div class="line">                        </div><div class="line">        location / &#123;</div><div class="line">                index   index.html index.htm;</div><div class="line">                root /web/www1/;</div><div class="line">        &#125;</div><div class="line"></div><div class="line">        location /images &#123;</div><div class="line">                alias /web/pic/;</div><div class="line">                open_file_cache max=10 inactive=20s;</div><div class="line">                open_file_cache_valid 50s;</div><div class="line">                open_file_cache_min_uses 2;</div><div class="line">                open_file_cache_errors on;</div><div class="line">                </div><div class="line">                auth_basic &quot;Admin Area&quot;;</div><div class="line">                auth_basic_user_file /etc/nginx/.ngxpasswd;</div><div class="line">                &#125;</div><div class="line">         error_page 404 http://www1.maxie.com:8080/404.html;</div><div class="line">&#125;</div></pre></td></tr></table></figure>
<p><img src="https://ws4.sinaimg.cn/large/006tNbRwly1fgl61r850lg30qk0fcqvc.gif" alt=""></p>
<p><br></p>
<p>2、使用ngx_http_stub_status_module模块输出nginx的基本状态信息</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div></pre></td><td class="code"><pre><div class="line">$ vim conf.d/maxie.conf</div><div class="line">在最后一个location的后面添加下面这条</div><div class="line">location /ngx_status &#123;</div><div class="line">                stub_status;</div><div class="line">        &#125;</div><div class="line">    </div><div class="line">$ nginx -t</div><div class="line">$ nginx -s reload</div></pre></td></tr></table></figure>
<p><img src="https://ws2.sinaimg.cn/large/006tNbRwly1fgl66b164xg30qk0fc1l0.gif" alt=""></p>
<p>其中的各个信息的详细解释：</p>
<table>
<thead>
<tr>
<th>Active connections</th>
<th>活动状态的连接数</th>
</tr>
</thead>
<tbody>
<tr>
<td>accepts</td>
<td>已经接受的客户端请求的总</td>
</tr>
<tr>
<td>handled</td>
<td>已经处理完成的客户端请求的总数</td>
</tr>
<tr>
<td>requests</td>
<td>客户端发来的总的请求数</td>
</tr>
<tr>
<td>Reading</td>
<td>处于读取客户端请求报文首部的连接的连接数</td>
</tr>
<tr>
<td>Writing</td>
<td>处于向客户端发送响应报文过程中的连接数</td>
</tr>
<tr>
<td>Waiting</td>
<td>处于等待客户端发出请求的空闲连接数</td>
</tr>
</tbody>
</table>
<p>3、使用ngx_http_log_module模块自定义<code>Nginx</code>日志</p>
<ul>
<li>log_format name string …; 只能定义在http段中，不能在server段中配置</li>
</ul>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">string可以使用nginx核心模块及其他模块内嵌的变量</div></pre></td></tr></table></figure>
<p>日志格式变量：</p>
<table>
<thead>
<tr>
<th>变量</th>
<th>意义</th>
</tr>
</thead>
<tbody>
<tr>
<td>$remote</td>
<td>记录客户端的IP地址</td>
</tr>
<tr>
<td>$remote_user</td>
<td>记录客户端用户名</td>
</tr>
<tr>
<td>$request</td>
<td>记录请求的URL和HTTP协议</td>
</tr>
<tr>
<td>$status</td>
<td>记录请求状态</td>
</tr>
<tr>
<td>$body_bytes_sent</td>
<td>发送给客户端的字节数，不包括响应头的大小</td>
</tr>
<tr>
<td>$connection</td>
<td>连接的序列号</td>
</tr>
<tr>
<td>$connection_requests</td>
<td>当前通过一个连接获得的请求数量</td>
</tr>
<tr>
<td>$msec</td>
<td>日志写入时间。单位为秒，精度是毫秒</td>
</tr>
<tr>
<td>$pipe</td>
<td>如果请求是通过HTTP流水线(pipelined)发送，pipe值为”p”，否则为”.”</td>
</tr>
<tr>
<td>$http_referer</td>
<td>记录从哪个页面链接访问过来的</td>
</tr>
<tr>
<td>$http_user_agent</td>
<td>记录客户端浏览器相关信息</td>
</tr>
<tr>
<td>$request_length</td>
<td>请求的长度(包括请求行，头部、正文)</td>
</tr>
<tr>
<td>$request_time</td>
<td>请求处理时间，单位为秒，精度毫秒</td>
</tr>
<tr>
<td>$time_iso8601</td>
<td>ISO8601标准格式下的本地时间</td>
</tr>
<tr>
<td>$time_local</td>
<td>通用格式下的本地时间</td>
</tr>
</tbody>
</table>
<ul>
<li>access_log path [format [buffer=size] [gzip[=level]] [flush=time] [if=condition]];</li>
</ul>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div></pre></td><td class="code"><pre><div class="line">可以在单独的location中关闭日志功能;</div><div class="line">访问日志文件路径，格式及相关的缓冲的配置；</div><div class="line">buffer=size：接收缓冲区大小，防止磁盘IO过大导致性能降低;</div><div class="line">flush=time ：刷新时间</div></pre></td></tr></table></figure>
<p>使用<code>Nginx</code>日志格式变量定义类似于httpd的combined格式的访问日志：</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div></pre></td><td class="code"><pre><div class="line">$ vim /etc/nginx/nginx.conf</div><div class="line">在http段添加如下信息：</div><div class="line">log_format  mylog   &apos;$remote_addr - $remote_user [$time_local] &quot;$request&quot;&apos;</div><div class="line">                    &apos;$status - &quot;$http_server&quot; &quot;$http_user_agent&quot;&apos;;</div><div class="line"></div><div class="line">$ vim /etc/nginx/conf.d/maxie.conf</div><div class="line">在server段添加：</div><div class="line">access_log              /var/log/nginx/www1/access.log  mylog;</div><div class="line">在status段添加：(关闭状态信息的记录日志)</div><div class="line">location /ngx_status &#123;</div><div class="line">                stub_status;</div><div class="line">                access_log off;</div><div class="line">        &#125;</div></pre></td></tr></table></figure>
<ul>
<li>open_log_file_cache max=N [inactive=time] [min_uses=N] [valid=time];</li>
</ul>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div></pre></td><td class="code"><pre><div class="line">缓存各日志文件相关的元数据信息（加速读操作)</div><div class="line"></div><div class="line">max：缓存的最大文件描述符数量；</div><div class="line">min_uses：在inactive指定的时长内访问大于等于此值方可被当作活动项；</div><div class="line">inactive：非活动时长；</div><div class="line">valid：验正缓存中各缓存项是否为活动项的时间间隔；</div></pre></td></tr></table></figure>
<p><strong>实例：</strong></p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div><div class="line">37</div><div class="line">38</div><div class="line">39</div><div class="line">40</div><div class="line">41</div><div class="line">42</div><div class="line">43</div><div class="line">44</div><div class="line">45</div></pre></td><td class="code"><pre><div class="line">$ vim /etc/nginx/conf.d/maxie.conf</div><div class="line">server &#123;</div><div class="line">        listen                  8080;</div><div class="line">        server_name             www1.maxie.com;</div><div class="line">        keepalive_timeout       30s;</div><div class="line">        keepalive_requests      4;</div><div class="line">        send_timeout            3s;</div><div class="line"></div><div class="line">        client_body_buffer_size 8k;</div><div class="line">        client_body_temp_path   /web/cache 1 1 1;</div><div class="line"></div><div class="line">        #limit_rate 100;</div><div class="line"></div><div class="line">        aio                     on;</div><div class="line">        directio                5m;</div><div class="line"></div><div class="line">        access_log              /var/log/nginx/www1/access.log  mylog buffer=16k flush=30s;</div><div class="line">        open_log_file_cache     max=1000 inactive=20s min_uses=2 valid=60s;</div><div class="line"></div><div class="line">        location / &#123;</div><div class="line">                index   index.html index.htm;</div><div class="line">                root /web/www1/;</div><div class="line">        &#125;</div><div class="line"></div><div class="line"></div><div class="line">        location /images/ &#123;</div><div class="line">                alias /web/pic/;</div><div class="line">                open_file_cache max=10 inactive=20s;</div><div class="line">                open_file_cache_valid 50s;</div><div class="line">                open_file_cache_min_uses 2;</div><div class="line">                open_file_cache_errors on;</div><div class="line"></div><div class="line">                auth_basic &quot;Admin Area&quot;;</div><div class="line">                auth_basic_user_file /etc/nginx/.ngxpasswd;</div><div class="line">        &#125;</div><div class="line"></div><div class="line"></div><div class="line">        location /ngx_status &#123;</div><div class="line">                stub_status;</div><div class="line">                access_log off;</div><div class="line">        &#125;</div><div class="line"></div><div class="line">        error_page 404 http://www1.maxie.com:8080/404.html;</div><div class="line"></div><div class="line">&#125;</div></pre></td></tr></table></figure>
<hr>
<p><br></p>
<h4 id="gzip相关的配置"><a href="#gzip相关的配置" class="headerlink" title=" gzip相关的配置 "></a><font szie="3" color="#32CD99"> gzip相关的配置 </font></h4><p>如果要查看<code>Nginx</code>支持的压缩格式有哪些：</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div><div class="line">37</div><div class="line">38</div><div class="line">39</div><div class="line">40</div><div class="line">41</div><div class="line">42</div><div class="line">43</div><div class="line">44</div><div class="line">45</div><div class="line">46</div><div class="line">47</div><div class="line">48</div><div class="line">49</div><div class="line">50</div><div class="line">51</div><div class="line">52</div><div class="line">53</div><div class="line">54</div><div class="line">55</div><div class="line">56</div><div class="line">57</div><div class="line">58</div><div class="line">59</div><div class="line">60</div><div class="line">61</div><div class="line">62</div><div class="line">63</div><div class="line">64</div><div class="line">65</div><div class="line">66</div><div class="line">67</div><div class="line">68</div><div class="line">69</div><div class="line">70</div><div class="line">71</div><div class="line">72</div><div class="line">73</div><div class="line">74</div><div class="line">75</div><div class="line">76</div><div class="line">77</div><div class="line">78</div><div class="line">79</div><div class="line">80</div><div class="line">81</div><div class="line">82</div><div class="line">83</div><div class="line">84</div><div class="line">85</div><div class="line">86</div><div class="line">87</div><div class="line">88</div><div class="line">89</div><div class="line">90</div></pre></td><td class="code"><pre><div class="line">$ cat /etc/nginx/mime.types</div><div class="line"></div><div class="line">types &#123;</div><div class="line">    text/html                             html htm shtml;</div><div class="line">    text/css                              css;</div><div class="line">    text/xml                              xml;</div><div class="line">    image/gif                             gif;</div><div class="line">    image/jpeg                            jpeg jpg;</div><div class="line">    application/javascript                js;</div><div class="line">    application/atom+xml                  atom;</div><div class="line">    application/rss+xml                   rss;</div><div class="line"></div><div class="line">    text/mathml                           mml;</div><div class="line">    text/plain                            txt;</div><div class="line">    text/vnd.sun.j2me.app-descriptor      jad;</div><div class="line">    text/vnd.wap.wml                      wml;</div><div class="line">    text/x-component                      htc;</div><div class="line"></div><div class="line">    image/png                             png;</div><div class="line">    image/tiff                            tif tiff;</div><div class="line">    image/vnd.wap.wbmp                    wbmp;</div><div class="line">    image/x-icon                          ico;</div><div class="line">    image/x-jng                           jng;</div><div class="line">    image/x-ms-bmp                        bmp;</div><div class="line">    image/svg+xml                         svg svgz;</div><div class="line">    image/webp                            webp;</div><div class="line"></div><div class="line">    application/font-woff                 woff;</div><div class="line">    application/java-archive              jar war ear;</div><div class="line">    application/json                      json;</div><div class="line">    application/mac-binhex40              hqx;</div><div class="line">    application/msword                    doc;</div><div class="line">    application/pdf                       pdf;</div><div class="line">    application/postscript                ps eps ai;</div><div class="line">    application/rtf                       rtf;</div><div class="line">    application/vnd.apple.mpegurl         m3u8;</div><div class="line">    application/vnd.ms-excel              xls;</div><div class="line">    application/vnd.ms-fontobject         eot;</div><div class="line">    application/vnd.ms-powerpoint         ppt;</div><div class="line">    application/vnd.wap.wmlc              wmlc;</div><div class="line">    application/vnd.google-earth.kml+xml  kml;</div><div class="line">    application/vnd.google-earth.kmz      kmz;</div><div class="line">    application/x-7z-compressed           7z;</div><div class="line">    application/x-cocoa                   cco;</div><div class="line">    application/x-java-archive-diff       jardiff;</div><div class="line">    application/x-java-jnlp-file          jnlp;</div><div class="line">    application/x-makeself                run;</div><div class="line">    application/x-perl                    pl pm;</div><div class="line">    application/x-pilot                   prc pdb;</div><div class="line">    application/x-rar-compressed          rar;</div><div class="line">    application/x-redhat-package-manager  rpm;</div><div class="line">    application/x-sea                     sea;</div><div class="line">    application/x-shockwave-flash         swf;</div><div class="line">    application/x-stuffit                 sit;</div><div class="line">    application/x-tcl                     tcl tk;</div><div class="line">    application/x-x509-ca-cert            der pem crt;</div><div class="line">    application/x-xpinstall               xpi;</div><div class="line">    application/xhtml+xml                 xhtml;</div><div class="line">    application/xspf+xml                  xspf;</div><div class="line">    application/zip                       zip;</div><div class="line"></div><div class="line">    application/octet-stream              bin exe dll;</div><div class="line">    application/octet-stream              deb;</div><div class="line">    application/octet-stream              dmg;</div><div class="line">    application/octet-stream              iso img;</div><div class="line">    application/octet-stream              msi msp msm;</div><div class="line"></div><div class="line">    application/vnd.openxmlformats-officedocument.wordprocessingml.document    docx;</div><div class="line">    application/vnd.openxmlformats-officedocument.spreadsheetml.sheet          xlsx;</div><div class="line">    application/vnd.openxmlformats-officedocument.presentationml.presentation  pptx;</div><div class="line"></div><div class="line">    audio/midi                            mid midi kar;</div><div class="line">    audio/mpeg                            mp3;</div><div class="line">    audio/ogg                             ogg;</div><div class="line">    audio/x-m4a                           m4a;</div><div class="line">    audio/x-realaudio                     ra;</div><div class="line"></div><div class="line">    video/3gpp                            3gpp 3gp;</div><div class="line">    video/mp2t                            ts;</div><div class="line">    video/mp4                             mp4;</div><div class="line">    video/mpeg                            mpeg mpg;</div><div class="line">    video/quicktime                       mov;</div><div class="line">    video/webm                            webm;</div><div class="line">    video/x-flv                           flv;</div><div class="line">    video/x-m4v                           m4v;</div><div class="line">    video/x-mng                           mng;</div><div class="line">    video/x-ms-asf                        asx asf;</div><div class="line">    video/x-ms-wmv                        wmv;</div><div class="line">    video/x-msvideo                       avi;</div><div class="line">&#125;</div></pre></td></tr></table></figure>
<p>1、gzip on | off; 是否开启gzip压缩功能</p>
<p>2、gzip_comp_level LEVEL; 压缩比</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">默认为1,可以设置1-9之间</div></pre></td></tr></table></figure>
<p>3、gzip_disable regex …;</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line">针对不同种类客户端发起的请求，可以选择性的开启和关闭gzip功能。(0.6.23版本以上)</div><div class="line">其中 regex 根据客户端的浏览器标志(User-Agent,UA)进行设置，支持使用正则表达式</div></pre></td></tr></table></figure>
<h5 id="以下是常见的PC以及手机浏览器的UA字符串"><a href="#以下是常见的PC以及手机浏览器的UA字符串" class="headerlink" title="以下是常见的PC以及手机浏览器的UA字符串"></a>以下是常见的PC以及手机浏览器的UA字符串</h5><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div><div class="line">37</div><div class="line">38</div><div class="line">39</div><div class="line">40</div><div class="line">41</div><div class="line">42</div><div class="line">43</div><div class="line">44</div><div class="line">45</div><div class="line">46</div><div class="line">47</div><div class="line">48</div><div class="line">49</div><div class="line">50</div><div class="line">51</div><div class="line">52</div><div class="line">53</div><div class="line">54</div><div class="line">55</div><div class="line">56</div><div class="line">57</div><div class="line">58</div><div class="line">59</div><div class="line">60</div><div class="line">61</div><div class="line">62</div><div class="line">63</div><div class="line">64</div><div class="line">65</div><div class="line">66</div><div class="line">67</div><div class="line">68</div><div class="line">69</div><div class="line">70</div><div class="line">71</div><div class="line">72</div><div class="line">73</div><div class="line">74</div><div class="line">75</div><div class="line">76</div><div class="line">77</div><div class="line">78</div><div class="line">79</div><div class="line">80</div><div class="line">81</div><div class="line">82</div><div class="line">83</div><div class="line">84</div><div class="line">85</div><div class="line">86</div><div class="line">87</div><div class="line">88</div><div class="line">89</div><div class="line">90</div><div class="line">91</div><div class="line">92</div><div class="line">93</div><div class="line">94</div><div class="line">95</div><div class="line">96</div><div class="line">97</div><div class="line">98</div><div class="line">99</div><div class="line">100</div><div class="line">101</div><div class="line">102</div><div class="line">103</div><div class="line">104</div><div class="line">105</div><div class="line">106</div><div class="line">107</div><div class="line">108</div><div class="line">109</div><div class="line">110</div><div class="line">111</div><div class="line">112</div><div class="line">113</div><div class="line">114</div><div class="line">115</div><div class="line">116</div><div class="line">117</div><div class="line">118</div><div class="line">119</div></pre></td><td class="code"><pre><div class="line">桌面</div><div class="line"></div><div class="line">============================================</div><div class="line"></div><div class="line">IE</div><div class="line">  而IE各个版本典型的userAgent如下：</div><div class="line">  Mozilla/4.0 (compatible; MSIE 8.0; Windows NT 6.0)</div><div class="line">  Mozilla/4.0 (compatible; MSIE 7.0; Windows NT 5.2)</div><div class="line">  Mozilla/4.0 (compatible; MSIE 6.0; Windows NT 5.1)</div><div class="line">  Mozilla/4.0 (compatible; MSIE 5.0; Windows NT)</div><div class="line">  其中，版本号是MSIE之后的数字。</div><div class="line"></div><div class="line">注：MSIE后面跟的数字为IE的版本号，如MSIE 8.0代表IE8, Windows NT 6.1 对应操作系统 windows 7</div><div class="line"></div><div class="line">Windows NT 6.0 对应操作系统 windows vista 　</div><div class="line">Windows NT 5.2 对应操作系统 windows 2003 　　</div><div class="line">Windows NT 5.1 对应操作系统 windows xp 　　</div><div class="line">Windows NT 5.0 对应操作系统 windows 2000   </div><div class="line"></div><div class="line">UNIX/LINUX下的为X11代替，具体可以从网上找下，百度百科上也有的。</div><div class="line"></div><div class="line">Firefox</div><div class="line">  Firefox几个版本的userAgent大致如下：</div><div class="line">  Mozilla/5.0 (Windows; U; Windows NT 5.2) Gecko/2008070208 Firefox/3.0.1</div><div class="line">  Mozilla/5.0 (Windows; U; Windows NT 5.1) Gecko/20070309 Firefox/2.0.0.3</div><div class="line">  Mozilla/5.0 (Windows; U; Windows NT 5.1) Gecko/20070803 Firefox/1.5.0.12  其中，版本号是Firefox之后的数字。</div><div class="line">注：N: 表示无安全加密 　　I: 表示弱安全加密 　　U: 表示强安全加密     上面的U代表加密等级</div><div class="line"></div><div class="line">Opera</div><div class="line">  Opera典型的userAgent如下：</div><div class="line">  Opera/9.27 (Windows NT 5.2; U; zh-cn)</div><div class="line">  Opera/8.0 (Macintosh; PPC Mac OS X; U; en)</div><div class="line">  Mozilla/5.0 (Macintosh; PPC Mac OS X; U; en) Opera 8.0 </div><div class="line">  其中，版本号是靠近Opera的数字。</div><div class="line"></div><div class="line">Safari</div><div class="line">  Safari典型的userAgent如下：</div><div class="line">  Mozilla/5.0 (Windows; U; Windows NT 5.2) AppleWebKit/525.13 (KHTML, like Gecko) Version/3.1 Safari/525.13</div><div class="line">  Mozilla/5.0 (iPhone; U; CPU like Mac OS X) AppleWebKit/420.1 (KHTML, like Gecko) Version/3.0 Mobile/4A93 Safari/419.3</div><div class="line">  其版本号是Version之后的数字。</div><div class="line"></div><div class="line">Chrome</div><div class="line">  目前，Chrome的userAgent是：</div><div class="line">Mozilla/5.0 (Windows; U; Windows NT 5.2) AppleWebKit/525.13 (KHTML, like Gecko) Chrome/0.2.149.27 Safari/525.13 </div><div class="line">  其中，版本号在Chrome之后的数字。</div><div class="line"></div><div class="line">Navigator</div><div class="line">目前，Navigator的userAgent是：</div><div class="line">Mozilla/5.0 (Windows; U; Windows NT 5.1; en-US; rv:1.8.1.12) Gecko/20080219 Firefox/2.0.0.12 Navigator/9.0.0.6</div><div class="line">其中，版本号在Navigator之后的数字。</div><div class="line"></div><div class="line">360SE                                                                                                                                                                  Mozilla/4.0 (compatible; MSIE 8.0; Windows NT 5.1; Trident/4.0; .NET CLR 2.0.50727; 360SE)</div><div class="line"></div><div class="line"></div><div class="line">360</div><div class="line"></div><div class="line">[USER_AGENT] =&gt; Mozilla/4.0 (compatible; MSIE 7.0; Windows NT 5.1; Trident/4.0; Mozilla/4.0 (compatible; MSIE 6.0; Windows NT 5.1; SV1) ; 360SE)</div><div class="line"></div><div class="line">360极速浏览器</div><div class="line"></div><div class="line">[USER_AGENT] =&gt; Mozilla/4.0 (compatible; MSIE 8.0; Windows NT 5.1; Trident/4.0; Mozilla/4.0 (compatible; MSIE 6.0; Windows NT 5.1; SV1) ;  QIHU 360EE)</div><div class="line"></div><div class="line">傲游浏览器</div><div class="line"></div><div class="line">[USER_AGENT] =&gt; Mozilla/4.0 (compatible; MSIE 7.0; Windows NT 5.1; Trident/4.0; Mozilla/4.0 (compatible; MSIE 6.0; Windows NT 5.1; SV1) ; Maxthon/3.0)</div><div class="line"></div><div class="line">TT</div><div class="line"></div><div class="line">[USER_AGENT] =&gt; Mozilla/4.0 (compatible; MSIE 7.0; Windows NT 5.1; Trident/4.0; TencentTraveler 4.0; Mozilla/4.0 (compatible; MSIE 6.0; Windows NT 5.1; SV1) )</div><div class="line"></div><div class="line">safari</div><div class="line"></div><div class="line">[USER_AGENT] =&gt; Mozilla/5.0 (Windows NT 5.1) AppleWebKit/534.55.3 (KHTML, like Gecko) Version/5.1.5 Safari/534.55.3</div><div class="line"></div><div class="line">==============================</div><div class="line"></div><div class="line">移动</div><div class="line"></div><div class="line">==============================</div><div class="line"></div><div class="line">安卓 QQ浏览器</div><div class="line"></div><div class="line">Mozilla/5.0 (Linux; U; Android 4.0.3; zh-cn; M032 Build/IML74K) AppleWebKit/533.1 (KHTML, like Gecko)Version/4.0 MQQBrowser/4.1 Mobile Safari/533.1</div><div class="line"></div><div class="line">安卓 原生浏览器</div><div class="line"></div><div class="line">Mozilla/5.0 (Linux; U; Android 4.0.3; zh-cn; M032 Build/IML74K) AppleWebKit/534.30 (KHTML, like Gecko) Version/4.0 Mobile Safari/534.30</div><div class="line"></div><div class="line">安卓 UC</div><div class="line"></div><div class="line">Mozilla/5.0 (Linux; U; Android 4.0.3; zh-cn; M032 Build/IML74K) UC AppleWebKit/534.31 (KHTML, like Gecko) Mobile Safari/534.31</div><div class="line"></div><div class="line">安卓 Opera</div><div class="line"></div><div class="line">Opera/9.80 (Android 4.0.3; Linux; Opera Mobi/ADR-1210241554) Presto/2.11.355 Version/12.10</div><div class="line"></div><div class="line">三星手机</div><div class="line"></div><div class="line">SAMSUNG-SGH-G508E/G508EZCIG2 SHP/VPP/R5 NetFront/3.4 Qtv5.3 SMM-MMS/1.2.0 profile/MIDP-2.0 configuration/CLDC-1.1</div><div class="line"></div><div class="line">iphone safria</div><div class="line"></div><div class="line">Mozilla/5.0 (iPhone; CPU iPhone OS 5_1_1 like Mac OS X) AppleWebKit/534.46 (KHTML, like Gecko) Version/5.1 Mobile/9B206 Safari/7534.48.3</div><div class="line"></div><div class="line">iphone QQ</div><div class="line"></div><div class="line">MQQBrowser/38 (iOS 4; U; CPU like Mac OS X; zh-cn)</div><div class="line"></div><div class="line">iphone UC</div><div class="line"></div><div class="line">IUC(U;iOS 5.1.1;Zh-cn;320*480;)/UCWEB8.9.1.271/42/800</div><div class="line"></div><div class="line">塞班 自带浏览器</div><div class="line"></div><div class="line">Nokia5320/04.13 (SymbianOS/9.3; U; Series60/3.2 Mozilla/5.0; Profile/MIDP-2.1 Configuration/CLDC-1.1 ) AppleWebKit/413 (KHTML, like Gecko) Safari/413</div><div class="line"></div><div class="line">塞班 QQ浏览器</div><div class="line"></div><div class="line">Nokia5320(19.01)/SymbianOS/9.1 Series60/3.0</div></pre></td></tr></table></figure>
<p>4、gzip_min_length LENGTH;</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div></pre></td><td class="code"><pre><div class="line">Gzip压缩功能能对大数据的压缩效果明显，但是如果压缩很小的数据，可能会出现越压缩数据量越大的情况(参考本站之前关于压缩的文章)。</div><div class="line">因此应该根据响应页面的大小，选择性的开启或关闭Gzip功能。</div><div class="line"></div><div class="line">该指令设置页面的字节数，当响应页面的大小小于该值时，不启用Gzip功能。</div><div class="line">默认值为20，0为不管响应页面的大小如何一律压缩。</div></pre></td></tr></table></figure>
<p><a href="http://maxiecloud.com/2017/04/08/compression-tool/">本站–压缩解压缩详解</a></p>
<p>5、gzip_buffers NUMBER SIZE;</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div></pre></td><td class="code"><pre><div class="line">该指令用于设置Gzip压缩文件使用缓存空间的大小</div><div class="line">number：指定Nginx服务器需要向系统申请缓存空间的个数</div><div class="line">size：指定每个缓存空间的大小</div><div class="line"></div><div class="line">默认情况下：number * size = 128k</div><div class="line">所以设置为：</div><div class="line">gzip_buffers 32 4k | 16 8k;</div></pre></td></tr></table></figure>
<p>6、gzip_proxied off | expired | no-cache | no-store | private | no_last_modified | no_etag | auth | any …;</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line">当Nginx作为反向代理服务器时有效;</div><div class="line">主要用于设置Nginx服务器是否对后端服务器返回的结果进行Gzip压缩。</div></pre></td></tr></table></figure>
<p><strong>各参数详解：</strong></p>
<table>
<thead>
<tr>
<th>指令</th>
<th>意义</th>
</tr>
</thead>
<tbody>
<tr>
<td>off</td>
<td>关闭Nginx服务器对后端服务器返回结果的Gzip压缩(默认设置)</td>
</tr>
<tr>
<td>expired</td>
<td>当后端服务器相应页头部包含用于指示响应数据过期时间的expired 头域时，启用对响应数据的Gzip压缩</td>
</tr>
<tr>
<td>no-cache</td>
<td>当后端…….包含用于通知所有缓存机制是否缓存的Cache-Control头域、且指令值为no-cache时，启用对响应数据的Gzip压缩</td>
</tr>
<tr>
<td>no-store</td>
<td>当后端…….包含用于通知所有缓存机制是否缓存的Cache-Control头域、且指令值为no-store时，启用对响应数据的Gzip压缩</td>
</tr>
<tr>
<td>private</td>
<td>当后端…….包含用于通知所有缓存机制是否缓存的Cache-Control头域、且指令值为private时，启用对响应数据的Gzip压缩</td>
</tr>
<tr>
<td>no_last_modified</td>
<td>当后端服务器响应页头部不包含用于指明需要获取数据最后修改时间的Last-Modified头域时，启用对响应数据的Gzip压缩</td>
</tr>
<tr>
<td>no_etag</td>
<td>当后端服务器响应页头部不包含用于标示被请求变量的实体值得ETag头域时，启用对响应数据的Gzip压缩</td>
</tr>
<tr>
<td>auth</td>
<td>当后端服务器响应页头部包含用于标示HTTP授权证书的Authorization头域时，启用对响应数据的Gzip压缩</td>
</tr>
<tr>
<td>any</td>
<td>无条件启用对后端服务器响应数据的Gzip压缩</td>
</tr>
</tbody>
</table>
<p>7、gzip_types mime-type …;</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line">压缩过滤器，仅对此处设定的MIME类型的内容启用压缩功能(默认对text/html开启功能)</div><div class="line">mime-type我们在开篇就介绍了，请自行查找</div></pre></td></tr></table></figure>
<p>8、gzip_vary on | off;</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div></pre></td><td class="code"><pre><div class="line">该指令用于设置在使用Gzip功能时，是否发送带有&quot;Vary: Accept-Encoding&quot;头域的响应头部。</div><div class="line">该头域的主要功能是告诉接收方发送的数据经过了压缩处理</div><div class="line">默认设置为 off。</div><div class="line"></div><div class="line">我们也可以通过Nginx配置的add_header指令强制达到这种效果</div><div class="line">add_header Vary Accept-Encoding gzip;</div></pre></td></tr></table></figure>
<p><em>注意：该指令在使用过程中存在bug，会导致IE4及以上浏览器的数据缓存功能失效。</em></p>
<p>实例：</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div></pre></td><td class="code"><pre><div class="line">$ vim /etc/nginx/conf.d/maxie.conf</div><div class="line">添加一条location：</div><div class="line">location /log &#123;</div><div class="line">                root /web/www1/;</div><div class="line">                gzip on;</div><div class="line">                gzip_comp_level 6;</div><div class="line">                gzip_min_length 1024;</div><div class="line">                gzip_proxied any;</div><div class="line">                gzip_types text/xml text/css application/javascript;</div><div class="line">                gzip_vary on;</div><div class="line">        &#125;</div><div class="line">$ cp /var/log/nginx/access.log /web/www1/log/index.html</div><div class="line">$ nginx -t</div><div class="line">$ nginx -s reload</div></pre></td></tr></table></figure>
<p><img src="https://ws2.sinaimg.cn/large/006tNbRwly1fglnrggdh8g30qk0fche5.gif" alt=""></p>
<hr>
<p><br></p>
<h4 id="HTTP-SSL-相关的配置"><a href="#HTTP-SSL-相关的配置" class="headerlink" title=" HTTP + SSL 相关的配置 "></a><font szie="3" color="#32CD99"> HTTP + SSL 相关的配置 </font></h4><p>HTTPS建立连接的过程：</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">TCP三次握手 --&gt; Clinet hello --&gt; 服务器回复 (Server Hello) --&gt; 服务端发送公钥 --&gt; Certificate Status --&gt; 客户端验证证书 --&gt; 密钥交换 --&gt; 传输数据</div></pre></td></tr></table></figure>
<font color="#FF0000"> <strong>注意：ssl的所有设置只能在http、server中设置</strong></font>

<p>1、ssl on | off;</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line">是否开启SSL功能</div><div class="line">为了强制开启此功能，需要在监听端口设置443以后，在443 之后加上 ssl --&gt; listen 443 ssl;</div></pre></td></tr></table></figure>
<p>2、ssl_certificate file;</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">当前虚拟主机使用PEM格式的证书文件路径</div></pre></td></tr></table></figure>
<p>3、ssl_certificate file;</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">当前虚拟主机上与其证书匹配的私钥文件路径</div></pre></td></tr></table></figure>
<p>4、ssl_protocols [SSLv2] [SSLv3] [TLSv1] [TLSv1.1] [TLSv1.2];</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">支持ssl协议的版本</div></pre></td></tr></table></figure>
<p>5、ssl_session_cache off | none | [builtin[:size]] [shared:name:size];</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div></pre></td><td class="code"><pre><div class="line">ssl缓存设置</div><div class="line">builtin[:size]：使用OpenSSL內建的缓存，此缓存为每个worker进程私有</div><div class="line">shared:name:size：在各个worker之间使用一个共享的缓存</div><div class="line"></div><div class="line">shared的目的是为了使缓存更加有效</div></pre></td></tr></table></figure>
<p>6、ssl_session_timeout time;</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">客户端一侧的连接可以复用ssl session cache中缓存 的ssl参数的有效时长；</div></pre></td></tr></table></figure>
<p>7、ssl_ciphers;</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line">ssl的加密算法 --&gt; 使用 openssl cipheres命令可以获得最全的加密算法表</div><div class="line"></div><div class="line">ssl_ciphers ALL:!aNULL:!EXPORT56:RC4+RSA:+HIGH:+MEDIUM:+LOW:+SSLv2:+EXP;</div></pre></td></tr></table></figure>
<p>默认我们使用如下配置即可：</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">ssl_ciphers HIGH:!aNULL:!MD5;</div></pre></td></tr></table></figure>
<hr>
<p><br></p>
<h5 id="在Nginx上配置一个https"><a href="#在Nginx上配置一个https" class="headerlink" title=" 在Nginx上配置一个https"></a><font size="2" color="#A67D3D"> 在Nginx上配置一个https</font></h5><p>1、自建CA</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div></pre></td><td class="code"><pre><div class="line">$ cd /etc/pki/CA/</div><div class="line">$ (umask 077;openssl genrsa -out /etc/pki/CA/private/cakey.pem 4096)</div><div class="line">$ openssl req -new -x509 -key /etc/pki/CA/private/cakey.pem -out /etc/pki/CA/cacert.pem -days 3650</div><div class="line">$ touch &#123;serial,index.txt&#125;</div><div class="line">$ echo 01 &gt; serial</div></pre></td></tr></table></figure>
<p>2、生成ssl签署请求，并让CA签署</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div></pre></td><td class="code"><pre><div class="line">$ mkdir -pv /etc/nginx/ssl </div><div class="line">$ cd /etc/nginx/ssl </div><div class="line">$ (umask 077;openssl genrsa -out /etc/nginx/ssl/nginx.key 4096)</div><div class="line">$ openssl req -new -key /etc/nginx/ssl/nginx.key -out /etc/nginx/ssl/nginx.csr -day 550</div><div class="line">$ openssl ca -in /etc/nginx/ssl/nginx.csr -out /etc/nginx/ssl/nginx.crt</div></pre></td></tr></table></figure>
<p>3、编辑虚拟主机配置文件：使其开启 SSL功能</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div></pre></td><td class="code"><pre><div class="line">$ cd /etc/nginx</div><div class="line">$ vim conf.d/maxie.conf</div><div class="line">添加如下信息在server段内：</div><div class="line">ssl                     on;</div><div class="line">        ssl_certificate         /etc/nginx/ssl/nginx.crt;</div><div class="line">        ssl_certificate_key     /etc/nginx/ssl/nginx.key;</div><div class="line">        ssl_session_timeout     1m;</div><div class="line">        ssl_protocols           SSLv2 SSLv3 tlsv1 tlsv1.2;</div><div class="line">        ssl_session_cache       shared:ssl_cache:10m;</div><div class="line">        ssl_ciphers             HIGH:!aNULL:!MD5;</div><div class="line">        </div><div class="line">并修改listen：</div><div class="line">listen 443 ssl;</div><div class="line"></div><div class="line">$ nginx -t</div><div class="line">$ nginx -s reload</div></pre></td></tr></table></figure>
<p>4、将CA公钥拷贝至客户端，并导入浏览器，测试</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">$ scp /etc/pki/CA/cacert.pem maxie@172.16.1.11:/Users/maxie/</div></pre></td></tr></table></figure>
<p><img src="https://ws2.sinaimg.cn/large/006tNbRwly1fglos1uabbg30qk0fce8a.gif" alt=""></p>
<p><strong>配置文件：</strong></p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div><div class="line">37</div><div class="line">38</div><div class="line">39</div><div class="line">40</div><div class="line">41</div><div class="line">42</div><div class="line">43</div><div class="line">44</div><div class="line">45</div><div class="line">46</div><div class="line">47</div><div class="line">48</div><div class="line">49</div><div class="line">50</div><div class="line">51</div><div class="line">52</div><div class="line">53</div><div class="line">54</div><div class="line">55</div><div class="line">56</div><div class="line">57</div><div class="line">58</div><div class="line">59</div><div class="line">60</div><div class="line">61</div><div class="line">62</div><div class="line">63</div><div class="line">64</div><div class="line">65</div><div class="line">66</div><div class="line">67</div><div class="line">68</div><div class="line">69</div><div class="line">70</div><div class="line">71</div><div class="line">72</div><div class="line">73</div><div class="line">74</div><div class="line">75</div></pre></td><td class="code"><pre><div class="line">$ vim conf.d/maxie.conf</div><div class="line">server &#123;</div><div class="line">	listen 			443 ssl;</div><div class="line">	server_name		www1.maxie.com;</div><div class="line">	keepalive_timeout 	30s;</div><div class="line">	keepalive_requests 	4;</div><div class="line">	send_timeout		3s;</div><div class="line"></div><div class="line">	ssl			on;</div><div class="line">	ssl_certificate		/etc/nginx/ssl/nginx.crt;</div><div class="line">	ssl_certificate_key	/etc/nginx/ssl/nginx.key;</div><div class="line">	ssl_session_timeout	1m;</div><div class="line">	ssl_protocols		SSLv2 SSLv3 tlsv1 tlsv1.2;</div><div class="line">	ssl_session_cache	shared:ssl_cache:10m;</div><div class="line">	ssl_ciphers		HIGH:!aNULL:!MD5;</div><div class="line"></div><div class="line"></div><div class="line">	client_body_buffer_size 8k;</div><div class="line">	client_body_temp_path 	/web/cache 1 1 1;</div><div class="line"></div><div class="line">	#limit_rate 100;</div><div class="line"></div><div class="line">	aio			on;</div><div class="line">	directio		5m;</div><div class="line"></div><div class="line"></div><div class="line"></div><div class="line">	access_log		/var/log/nginx/www1/access.log	mylog buffer=16k flush=30s;</div><div class="line">	open_log_file_cache	max=1000 inactive=20s min_uses=2 valid=60s;</div><div class="line"></div><div class="line"></div><div class="line"></div><div class="line">	location  / &#123;</div><div class="line">		index	index.html index.htm;</div><div class="line">		root /web/www1/;</div><div class="line">		limit_except PUT &#123;</div><div class="line">			deny 172.16.1.20;</div><div class="line">			allow 172.16.0.0/16;</div><div class="line">			deny all;</div><div class="line">		&#125;</div><div class="line">	&#125;</div><div class="line"></div><div class="line"></div><div class="line">	location /images/ &#123;</div><div class="line">		alias /web/pic/;</div><div class="line">		open_file_cache max=10 inactive=20s;</div><div class="line">		open_file_cache_valid 50s;</div><div class="line">		open_file_cache_min_uses 2;</div><div class="line">		open_file_cache_errors on;</div><div class="line"></div><div class="line">		auth_basic &quot;Admin Area&quot;;</div><div class="line">		auth_basic_user_file /etc/nginx/.ngxpasswd;</div><div class="line"></div><div class="line">	&#125;</div><div class="line"></div><div class="line"></div><div class="line">	location /ngx_status &#123;</div><div class="line">		stub_status;</div><div class="line">		access_log off;</div><div class="line"></div><div class="line">	&#125;</div><div class="line"></div><div class="line">	location /log &#123;</div><div class="line">		root /web/www1/;</div><div class="line">		gzip on;</div><div class="line">		gzip_comp_level 6;</div><div class="line">		gzip_min_length 1024;</div><div class="line">		gzip_proxied any;</div><div class="line">		gzip_types text/xml text/css application/javascript;</div><div class="line">		gzip_vary on;</div><div class="line">	&#125;</div><div class="line"></div><div class="line">	error_page 404 http://www1.maxie.com:8080/404.html;</div><div class="line"></div><div class="line">&#125;</div></pre></td></tr></table></figure>
<hr>
<div class="note warning"><h3 id="Nginx服务器的Rewrite功能"><a href="#Nginx服务器的Rewrite功能" class="headerlink" title="Nginx服务器的Rewrite功能"></a>Nginx服务器的Rewrite功能</h3></div>
<p>Nginx中关于Rewirte功能非常多，这里我们只介绍其中的<code>rewrite指令</code>、<code>return指令</code>、<code>if (conndition){...}指令</code></p>
<h4 id="rewirte指令"><a href="#rewirte指令" class="headerlink" title=" rewirte指令 "></a><font size="4" color="#7093DB"> rewirte指令 </font></h4><p>该指令通过正则表达式的使用来改变URL。可以同时存在一个或者多个指令。按照顺序依次对URL进行匹配和处理。</p>
<font color="#FF0000">提示：URL和URI的区别和联系</font>

<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line">URI（Universal Resource Identifier，通用资源标识符），用于对网络中的各种资源进行标识，由存放资源的主机名、片段标志和相对URI三部分组成。存放资源的主机名一般由传输协议(Scheme),主机和资源路径三部分组成；片段标志符指向资源内容的具体元素；相对URI表示资源在主机上的相对路径。一般格式为：Scheme:[//][用户名[:密码]]@主机名[:端口号][/资源路径]</div><div class="line"></div><div class="line">URL（Uniform Resource Location，统一资源定位符），是用于Internet中描述资源的字符串，是URI的子集，主要包括传输协议(Scheme)，主机(IP,端口或者域名)和资源具体地址(目录和文件名)等三部分。一般格式为：Scheme://主机名[:端口号][/资源路径]</div></pre></td></tr></table></figure>
<p><br><br>指令的语法结构：</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">rewrite regex replacement [flag]</div></pre></td></tr></table></figure>
<p>将用户请求的URI基于regex所描述的模式进行检查，匹配到时将其替换为replacement指定的新的URI；</p>
<font color="#FF0000"><em>注意：如果在同一级配置块中存在多个rewrite规则，那么会自下而下逐个检查；被某条件规则替换完成后，会重新一轮的替换检查，因此，隐含有循环机制；[flag]所表示的标志位用于控制此循环机制；</em>        </font>    

<p><br>        </p>
<p>1、regex：用于匹配URI的正则表达式，使用括号”( )”标记要截取的内容</p>
<p>2、replacement：匹配成功后用于替换URI中被截取内容的字符。默认情况下，如果该字符是由<code>http://</code>或者<code>https://</code>开头的，则不会继续向下对URI进行其他处理，而直接将重写后的URI返回给客户端。</p>
<p>3、flag：用来设置rewrite对URI的处理行为，可以为以下标志中的一个：</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div></pre></td><td class="code"><pre><div class="line">last：重写完成后停止对当前URI在当前location中后续的其它重写操作，而后对新的URI启动新一轮重写检查；提前重启新一轮循环； </div><div class="line">break：重写完成后停止对当前URI在当前location中后续的其它重写操作，而后直接跳转至重写规则配置块之后的其它配置；结束循环；</div><div class="line">redirect：重写完成后以临时重定向方式直接返回重写后生成的新URI给客户端，由客户端重新发起请求；不能以http://或https://开头；</div><div class="line">permanent:重写完成后以永久重定向方式直接返回重写后生成的新URI给客户端，由客户端重新发起请求；</div></pre></td></tr></table></figure>
<p><br><br><strong>实例1：</strong></p>
<p>如果要实现全站https则使用如下配置：</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div></pre></td><td class="code"><pre><div class="line">先把nginx.conf主配置文件内的server注释掉或者删除</div><div class="line"></div><div class="line">编辑虚拟主机配置文件</div><div class="line">$ vim conf.d/maxie.conf</div><div class="line">在https的server段之前再添加一个80的server段：</div><div class="line">server &#123;</div><div class="line">    listen 80;</div><div class="line">    server_name www1.maxie.com;</div><div class="line">    rewrite ^(.*)$ https://$&#123;server_name&#125;$1 permanent;</div><div class="line">&#125;</div></pre></td></tr></table></figure>
<font color="#FF0000"> 这里注意不要在https的server块之中配置rewrite，需要在用户只要访问默认80端口时，直接重写URL即可</font>

<p><br><br><strong>实例2：</strong></p>
<p>只要访问本站的任何<code>.jpg文件</code>都重写至<code>.png文件</code></p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div></pre></td><td class="code"><pre><div class="line">$ vim conf.d/maxie.conf</div><div class="line">添加如下location：</div><div class="line">location /png &#123;</div><div class="line">                root /web/pic/;</div><div class="line">                rewrite /(.*)\.jpg /$1.png;</div><div class="line">        &#125;</div><div class="line"></div><div class="line">拷贝png文件至/web/pic/png目录</div><div class="line">$ scp maxie@172.16.1.11:/Users/maxie/Download/Netfilter-packet-flow.svg.png /web/pic/png/net.jpg</div><div class="line"></div><div class="line">$ nginx -t</div><div class="line">$ nginx -s reload</div></pre></td></tr></table></figure>
<p><img src="https://ws3.sinaimg.cn/large/006tNbRwly1fgluffcb6vg30qk0fce8b.gif" alt=""></p>
<p><br></p>
<h4 id="return指令"><a href="#return指令" class="headerlink" title=" return指令 "></a><font size="4" color="#7093DB"> return指令 </font></h4><p>该指令用于完成对请求的处理，直接向客户端返回响应状态代码。<code>处于该指令后</code>的所有Nginx配合都是<code>无效的</code>。<br>该指令可以在server块和location块以及if块中使用</p>
<p><strong>语法结构如下：</strong></p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line">return code [ text ];</div><div class="line">return code URL;</div><div class="line">return URL;</div></pre></td></tr></table></figure>
<p><br><br>1、code：为返回给客户端的HTTP状态代码。可以返回的状态代码为<code>0 ~ 999</code>的任意HTTP状态代码。非标准的444代码可以强制关闭服务器与客户端的连接而不返回任何响应信息给客户端。</p>
<p>2、text：为返回给客户端的响应体内容，支持变量的使用</p>
<p>3、URL：为返回给客户端的URL地址</p>
<p>其中当<code>code</code>使用 301（表示被请求资源永久移动到新的位置）， 302（表示请求的资源限制临时从不同的URL响应，要求使用GET方式请求）。</p>
<p><br></p>
<h5 id="实例"><a href="#实例" class="headerlink" title="实例"></a>实例</h5><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div></pre></td><td class="code"><pre><div class="line">$ vim conf.d/maxie.conf</div><div class="line">添加以下信息：</div><div class="line">error_page 404 https://www1.maxie.com/404.html;</div><div class="line">        location ~* 404.html &#123;</div><div class="line">                return 505;</div><div class="line">        &#125;</div><div class="line">$ nginx -t </div><div class="line">$ nginx -s reload</div></pre></td></tr></table></figure>
<p><img src="https://ws3.sinaimg.cn/large/006tNbRwly1fglvsur411g30qk0fcx71.gif" alt=""></p>
<p><br></p>
<h4 id="if-conndition-指令"><a href="#if-conndition-指令" class="headerlink" title=" if (conndition) 指令 "></a><font size="4" color="#7093DB"> if (conndition) 指令 </font></h4><p>该指令用来支持条件判断，并根据条件判断结果选择不同的Nginx配置，可以在server块或者location块中配置该指令。</p>
<p><strong>语法格式：</strong></p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">if (conndition) &#123; ... &#125;</div></pre></td></tr></table></figure>
<p>其中花括号代表一个作用域，形成一个<code>if</code>配置块，是条件为真时的Nginx配置。</p>
<p><code>condition</code>：为判断条件(true/false)，它可以支持以下几种设置方法：</p>
<h5 id="变量名"><a href="#变量名" class="headerlink" title="变量名"></a>变量名</h5><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div></pre></td><td class="code"><pre><div class="line">如果变量的值为空字符串或者以&quot;0&quot;开头的任意字符串，if指令认为条件为false，其他情况认为条件为true。</div><div class="line"></div><div class="line">if ($slow) &#123;        #这里slow变量是一个布尔值的变量，如果为1则执行如下的Nginx配置；反之，不执行</div><div class="line">    ...             #Nginx配置</div><div class="line">&#125;</div></pre></td></tr></table></figure>
<h5 id="比较操作符"><a href="#比较操作符" class="headerlink" title="比较操作符"></a>比较操作符</h5><p>使用比较操作符，比较变量和字符串是否相等；相等时<code>if</code>条件为true；反之为false</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div></pre></td><td class="code"><pre><div class="line">==      是否相等</div><div class="line">!=      是否不相等</div><div class="line">~       模式匹配，区分字符大小写；</div><div class="line">~*      模式匹配，不区分字符大小写；</div><div class="line">!~      模式不匹配，区分字符大小写；</div><div class="line">!~*     模式不匹配，不区分字符大小写；</div></pre></td></tr></table></figure>
<p><strong>例子：</strong></p>
<font color="#23238E"> 如果请求方法是POST，返回405代码 </font><br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line">if ($request_method = POST) &#123;       </div><div class="line">    return 405;</div><div class="line">&#125;</div></pre></td></tr></table></figure><br><br><font color="#23238E"> 如果用户agent内包含curl字符串，返回404代码 </font><br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line">if ($http_user_agent ~ curl) &#123;</div><div class="line">                return 404;</div><div class="line">        &#125;</div></pre></td></tr></table></figure><br><br>##### 文件及目录存在性判断<br><br><strong>各判断符详解</strong><br><br>| -f | 如果请求的文件存在，if指令认为条件为true;反之，为false |<br>| — | — |<br>| !-f   | 如果请求的文件不存在，但是文件所在的目录存在，if指令认为条件为true；如果两者都不存在，或者请求的文件存在，则为false |<br>| -e | 如果请求的目录或者文件存在时，if指令认为条件为true，否则为false |<br>| !-e | 如果请求的文件和该文件所在路径上的目录都不存在，为true，否则为false |<br>| -d | 如果请求的目录存在，if指令认为条件为true；反之，为false |<br>| !-d   | 如果请求的目录不存在，但该目录的上级目录存在，if指令认为条件为true；如果该目录和他的上级目录都不存在，或者请求的目录存在，则为false； |<br>| -x     | 如果请求的文件可执行，if指令认为条件为true，否则为false |<br>| !-x | 如果请求的文件不可执行，为true；反之，为false |<br><br><br><br><strong>实例</strong><br><br><br><font color="#23238E"> 如果请求的文件不存在，则返回404响应码 </font>

<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line">if (!-f $request_filename) &#123;</div><div class="line">    return 404;</div><div class="line">   &#125;</div></pre></td></tr></table></figure>
<p><br></p>
<h4 id="referer模块"><a href="#referer模块" class="headerlink" title=" referer模块 "></a><font size="4" color="#7093DB"> referer模块 </font></h4><p>该模块经常被我们用来做网站的<code>防盗链</code>，是很有效的。</p>
<p><strong>语法格式</strong></p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">valid_referers none | blocked | server_names | string ...;</div></pre></td></tr></table></figure>
<p>各个参数详解：</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div></pre></td><td class="code"><pre><div class="line">none                请求报文首部没有referer首部</div><div class="line">blocked             请求报文的referer首部没有值</div><div class="line">server_names        服务器主机名</div><div class="line">arbitrary_string    直接字符串，但可使用*作通配符</div><div class="line">regular expression  被指定的正则表达式模式匹配到的字符串；要使用~打头，例如 ~.*\.maxie\.com;</div></pre></td></tr></table></figure>
<p><strong>实例：</strong></p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div></pre></td><td class="code"><pre><div class="line">$ vim conf.d/maxie.conf</div><div class="line">location ~* \.(jpg|png|gif|bmp)$ &#123;</div><div class="line">                valid_referers          none block server_names *.maxie.com maxie.*;</div><div class="line">                if ($invalid_referer) &#123;</div><div class="line">                        return http://www1.maxie.com/403.png;</div><div class="line">                &#125;</div><div class="line">        &#125;</div><div class="line"></div><div class="line">location = /403.png &#123;           #单独定义403.png，防止循环过多</div><div class="line">      root /web/www1;</div><div class="line">&#125;</div><div class="line"></div><div class="line">新建一个虚拟主机引用maxie.com的图片</div><div class="line">$ vim conf.d/www2.conf</div><div class="line">server &#123;</div><div class="line">        listen          80;</div><div class="line">        server_name     www2.ilinux.com;</div><div class="line">        root /web/www2/;</div><div class="line">        location / &#123;</div><div class="line">                try_files $uri $uri/ index.html;</div><div class="line">        &#125;</div><div class="line"></div><div class="line">&#125;</div><div class="line">$ mkdir -p /web/www2</div><div class="line">$ vim /web/www2/index.html</div><div class="line">&lt;h2&gt; www2.maxiecloud.com &lt;/h2&gt;</div><div class="line"></div><div class="line">&lt;img src=&quot;https://www1.maxie.com/png/java.png&quot;/&gt;        #引用maxie.com上的java.png这个图片资源</div><div class="line"></div><div class="line"></div><div class="line">$ nginx -t</div><div class="line">$ nginx -s reload</div><div class="line"></div><div class="line">配置完成之后打开浏览器检测</div></pre></td></tr></table></figure>
<p><img src="https://ws2.sinaimg.cn/large/006tNbRwly1fglz57ua3jg30qk0fcx73.gif" alt=""></p>
<hr>
<div class="note danger"><h3 id="到此我们的-Nginx-从入门到进阶【一】就算讲完了"><a href="#到此我们的-Nginx-从入门到进阶【一】就算讲完了" class="headerlink" title="到此我们的 Nginx 从入门到进阶【一】就算讲完了"></a>到此我们的 Nginx 从入门到进阶【一】就算讲完了</h3></div>
<h4 id="以上所有配置完成后的配置文件"><a href="#以上所有配置完成后的配置文件" class="headerlink" title="以上所有配置完成后的配置文件"></a>以上所有配置完成后的配置文件</h4><h5 id="代码版"><a href="#代码版" class="headerlink" title="代码版"></a>代码版</h5><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div><div class="line">37</div><div class="line">38</div><div class="line">39</div><div class="line">40</div><div class="line">41</div><div class="line">42</div><div class="line">43</div><div class="line">44</div><div class="line">45</div><div class="line">46</div><div class="line">47</div><div class="line">48</div><div class="line">49</div><div class="line">50</div><div class="line">51</div><div class="line">52</div><div class="line">53</div><div class="line">54</div><div class="line">55</div><div class="line">56</div><div class="line">57</div><div class="line">58</div><div class="line">59</div><div class="line">60</div><div class="line">61</div><div class="line">62</div><div class="line">63</div><div class="line">64</div><div class="line">65</div><div class="line">66</div><div class="line">67</div><div class="line">68</div><div class="line">69</div><div class="line">70</div><div class="line">71</div><div class="line">72</div><div class="line">73</div><div class="line">74</div><div class="line">75</div><div class="line">76</div><div class="line">77</div><div class="line">78</div><div class="line">79</div><div class="line">80</div><div class="line">81</div><div class="line">82</div><div class="line">83</div><div class="line">84</div><div class="line">85</div><div class="line">86</div><div class="line">87</div><div class="line">88</div><div class="line">89</div><div class="line">90</div><div class="line">91</div><div class="line">92</div><div class="line">93</div><div class="line">94</div><div class="line">95</div><div class="line">96</div><div class="line">97</div><div class="line">98</div><div class="line">99</div><div class="line">100</div></pre></td><td class="code"><pre><div class="line">[root@test-2 nginx]# cat conf.d/maxie.conf</div><div class="line">server &#123;</div><div class="line">    listen 80;</div><div class="line">    server_name www1.maxie.com;</div><div class="line">    return 301 https://www1.maxie.com$request_uri;</div><div class="line">&#125;</div><div class="line"></div><div class="line">server &#123;</div><div class="line">	listen 			443 ssl;</div><div class="line">	server_name		www1.maxie.com;</div><div class="line">	keepalive_timeout 	30s;</div><div class="line">	keepalive_requests 	4;</div><div class="line">	send_timeout		3s;</div><div class="line"></div><div class="line"></div><div class="line">	ssl			on;</div><div class="line">	ssl_certificate		/etc/nginx/ssl/nginx.crt;</div><div class="line">	ssl_certificate_key	/etc/nginx/ssl/nginx.key;</div><div class="line">	ssl_session_timeout	1m;</div><div class="line">	ssl_protocols		SSLv2 SSLv3 tlsv1 tlsv1.2;</div><div class="line">	ssl_session_cache	shared:ssl_cache:10m;</div><div class="line">	ssl_ciphers		HIGH:!aNULL:!MD5;</div><div class="line"></div><div class="line"></div><div class="line">	client_body_buffer_size 8k;</div><div class="line">	client_body_temp_path 	/web/cache 1 1 1;</div><div class="line"></div><div class="line">	#limit_rate 100;</div><div class="line"></div><div class="line">	aio			on;</div><div class="line">	directio		5m;</div><div class="line"></div><div class="line">	access_log		/var/log/nginx/www1/access.log	mylog buffer=16k flush=30s;</div><div class="line">	open_log_file_cache	max=1000 inactive=20s min_uses=2 valid=60s;</div><div class="line"></div><div class="line"></div><div class="line"></div><div class="line">	location  / &#123;</div><div class="line">		try_files $uri $uri/ /index.html;</div><div class="line">		root /web/www1/;</div><div class="line">		limit_except PUT &#123;</div><div class="line">			deny 172.16.1.20;</div><div class="line">			allow 172.16.0.0/16;</div><div class="line">			deny all;</div><div class="line">		&#125;</div><div class="line"></div><div class="line">	&#125;</div><div class="line"></div><div class="line">	location /images &#123;</div><div class="line">		alias /web/pic;</div><div class="line">		open_file_cache max=10 inactive=20s;</div><div class="line">		open_file_cache_valid 50s;</div><div class="line">		open_file_cache_min_uses 2;</div><div class="line">		open_file_cache_errors on;</div><div class="line"></div><div class="line">		auth_basic &quot;Admin Area&quot;;</div><div class="line">		auth_basic_user_file /etc/nginx/.ngxpasswd;</div><div class="line"></div><div class="line">	&#125;</div><div class="line"></div><div class="line"></div><div class="line">	location ~* \.(jpg|png|gif|bmp)$ &#123;</div><div class="line">		valid_referers		none block server_names *.maxie.com maxie.*;</div><div class="line">		if ($invalid_referer) &#123;</div><div class="line">			return http://www1.maxie.com/403.png;</div><div class="line">		&#125;</div><div class="line">	&#125;</div><div class="line"></div><div class="line">	location = /403.png &#123;</div><div class="line">		root /web/www1;</div><div class="line">	&#125;</div><div class="line"></div><div class="line">	location /ngx_status &#123;</div><div class="line">		stub_status;</div><div class="line">		access_log off;</div><div class="line"></div><div class="line">	&#125;</div><div class="line"></div><div class="line">	location /log &#123;</div><div class="line">		root /web/www1/;</div><div class="line">		gzip on;</div><div class="line">		gzip_comp_level 6;</div><div class="line">		gzip_min_length 1024;</div><div class="line">		gzip_proxied any;</div><div class="line">		gzip_types text/xml text/css application/javascript;</div><div class="line">		gzip_vary on;</div><div class="line">	&#125;</div><div class="line"></div><div class="line">	location /png &#123;</div><div class="line">		root /web/pic/;</div><div class="line">		rewrite /(.*)\.jpg /$1.png;</div><div class="line">	&#125;</div><div class="line"></div><div class="line"></div><div class="line">	if ($http_user_agent ~ curl) &#123;</div><div class="line">		return 404;</div><div class="line">	&#125;</div><div class="line"></div><div class="line">	error_page 404 https://www1.maxie.com/404.html;</div><div class="line">&#125;</div></pre></td></tr></table></figure>
<p>资源路径：</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div></pre></td><td class="code"><pre><div class="line">[root@test-2 nginx]# tree /web</div><div class="line">/web</div><div class="line">├── cache</div><div class="line">├── pic</div><div class="line">│   ├── 2.jpg</div><div class="line">│   ├── 3.jpg</div><div class="line">│   ├── images</div><div class="line">│   │   └── index.html</div><div class="line">│   └── png</div><div class="line">│       ├── java.png</div><div class="line">│       └── net.png</div><div class="line">├── Source</div><div class="line">│   └── source</div><div class="line">│       ├── nginx-1.10.2-1.el7.ngx.x86_64.rpm</div><div class="line">│       ├── nginx-1.12.0-1.el7.ngx.x86_64.rpm</div><div class="line">│       ├── nginx-1.12.0.tar</div><div class="line">│       ├── nginx-1.12.0.tar.gz</div><div class="line">│       ├── nginx-module-geoip-1.10.2-1.el7.ngx.x86_64.rpm</div><div class="line">│       └── nginx.vim</div><div class="line">├── www1</div><div class="line">│   ├── 403.png</div><div class="line">│   ├── 404-file</div><div class="line">│   │   └── 404.jpeg</div><div class="line">│   ├── 404.html</div><div class="line">│   ├── hello.jpg</div><div class="line">│   ├── index.html</div><div class="line">│   └── log</div><div class="line">│       └── index.html</div><div class="line">└── www2</div><div class="line">    └── index.html</div><div class="line"></div><div class="line">10 directories, 18 files</div></pre></td></tr></table></figure>
<h5 id="图片详解版"><a href="#图片详解版" class="headerlink" title="图片详解版"></a>图片详解版</h5><font size="3" color="#FF0000">图片可能分辨率过大，为了您的用户体验：请右键在新标签页中打开，或者下载之后查看</font> 

<p><img src="https://ws2.sinaimg.cn/large/006tNbRwly1fgm14s79yhj31kw2rsu0y.jpg" alt=""></p>
<hr>
<h3 id="编译选项"><a href="#编译选项" class="headerlink" title="编译选项"></a>编译选项</h3><table>
<thead>
<tr>
<th>选项</th>
<th>说明</th>
</tr>
</thead>
<tbody>
<tr>
<td>–sbin-path=path</td>
<td>设置nginx的可执行文件的路径，默认为  prefix/sbin/nginx.</td>
</tr>
<tr>
<td>–with-select_module</td>
<td>启用一个模块来允许服务器使用select()方法</td>
</tr>
<tr>
<td>–without-select_module</td>
<td>禁用一个模块来允许服务器使用select()方法</td>
</tr>
<tr>
<td>–with-poll_module</td>
<td>启用一个模块来允许服务器使用poll()方法</td>
</tr>
<tr>
<td>–without-poll_module</td>
<td>禁用一个模块来允许服务器使用poll()方法</td>
</tr>
<tr>
<td>–without-http_gzip_module</td>
<td>不编译压缩的HTTP服务器的响应模块。编译并运行此模块需要zlib库。</td>
</tr>
<tr>
<td>–without-http_rewrite_module</td>
<td>不编译重写模块。编译并运行此模块需要PCRE库支持。</td>
</tr>
<tr>
<td>–without-http_proxy_module</td>
<td>不编译http_proxy模块。</td>
</tr>
<tr>
<td>–with-pcre=path</td>
<td>设置PCRE库的源码路径。</td>
</tr>
<tr>
<td>–with-cc-opt=parameters</td>
<td>设置额外的参数将被添加到CFLAGS变量</td>
</tr>
<tr>
<td>–with-ld-opt=parameters</td>
<td>设置附加的参数，将用于在链接期间</td>
</tr>
<tr>
<td>–with-http_sub_module</td>
<td>启用sub模块。支持URL重定向功能</td>
</tr>
<tr>
<td>–with-http_memcached_module</td>
<td>启用memcache缓存</td>
</tr>
</tbody>
</table>
<hr>
<iframe frameborder="no" border="0" marginwidth="0" marginheight="0" width="330" height="86" src="//music.163.com/outchain/player?type=2&id=28798452&auto=0&height=66"></iframe>


<p>本文出自<a href="http://maxiecloud.com">Maxie’s Notes</a>博客，转载请务必保留此出处。</p>
<p><img src="https://ww1.sinaimg.cn/large/006tNbRwly1fdzc80odsuj30gn0ilq5m.jpg" alt=""></p>
]]></content>
    
    <summary type="html">
    
      &lt;span itemprop=&quot;image&quot; itemscope itemtype=&quot;http://schema.org/ImageObject&quot;&gt;&lt;img itemprop=&quot;url image&quot; src=&quot;/images/nginx.jpg&quot; class=&quot;full-image&quot; alt=&quot;nginx&quot; /&gt;&lt;meta itemprop=&quot;width&quot; content=&quot;auto&quot;&gt;&lt;meta itemprop=&quot;height&quot; content=&quot;auto&quot;&gt;&lt;/span&gt;
&lt;blockquote class=&quot;blockquote-center&quot;&gt;近几年来，Nginx逐步进入高速发展的时期，从各类主流的IT媒体到各大著名的IT论坛，我们不时能够看到它的身影。&lt;br&gt;经过逐步的改进，Nginx已成为一款高性能、功能完善、性能稳定的服务器产品。&lt;br&gt;&lt;/blockquote&gt;

&lt;p&gt;&lt;strong&gt;&lt;font size=3 color=&quot;#7093DB&quot;&gt; Nginx服务器以其功能丰富著称于世。&lt;/font&gt;&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;它既可以作为&lt;code&gt;http服务器&lt;/code&gt;，也可以作为&lt;code&gt;反向代理服务器&lt;/code&gt;；能够快速响应静态页面(HTML)的请求；支持FastCGI、SSL、Virtual Host、URL Rewirte、HTTP Basic Auth、Gzip等大量功能；并且&lt;code&gt;支持第三方&lt;/code&gt;模块扩展。&lt;/p&gt;
&lt;p&gt;在这篇博客中，我们主要对 &lt;code&gt;Nginx&lt;/code&gt; 提供的 &lt;code&gt;HTTP&lt;/code&gt;服务来讲解。&lt;/p&gt;
    
    </summary>
    
      <category term="Nginx" scheme="http://maxiecloud.com/categories/Nginx/"/>
    
    
      <category term="linux" scheme="http://maxiecloud.com/tags/linux/"/>
    
      <category term="server" scheme="http://maxiecloud.com/tags/server/"/>
    
      <category term="nginx" scheme="http://maxiecloud.com/tags/nginx/"/>
    
      <category term="web" scheme="http://maxiecloud.com/tags/web/"/>
    
      <category term="http" scheme="http://maxiecloud.com/tags/http/"/>
    
  </entry>
  
  <entry>
    <title>layer7实现禁止登陆QQ,迅雷</title>
    <link href="http://maxiecloud.com/2017/06/12/iptables-of-layer7/"/>
    <id>http://maxiecloud.com/2017/06/12/iptables-of-layer7/</id>
    <published>2017-06-12T12:03:57.000Z</published>
    <updated>2017-06-12T13:53:23.000Z</updated>
    
    <content type="html"><![CDATA[<p><img src="https://ws1.sinaimg.cn/large/006tNbRwly1fgioztll76j31hc0s7wm7.jpg" alt=""></p>
<blockquote class="blockquote-center">作为网络管理员，对p2p，QQ，迅雷等软件是又爱又恨<br>大多数公司，为了提高工作效率禁止公司员工上QQ，用迅雷下载高清无码视频，在市场上买专门的上网行为管理设备，动辄就是上万。<br>但是，如果使用Linux来做网关，一样可以禁止这些软件，成本才不到万把块钱。<br></blockquote>

<p>在使用 <code>layer7</code> 之前，我们需要知道，<code>layer7</code>是第三方的软件，而非 <code>Liunx</code>内核或者其他发行版自带的功能。所以我们要想使用其提供的功能，就要先把它编译到<code>kernel</code>中。</p>
<p>一听到<font size="3" color="#FF0000">编译内核 </font>，大多数人都会有<code>好麻烦</code>，<code>会不会出错</code>，<code>还是算了吧</code>这样的心态或者想法；但是，对于<code>Linux</code>来说，只有<strong><font color="#7093DB">永无止境的折腾</font></strong>才能学好并精通<code>Linux</code>。</p>
<p>废话不多说，下面让我们开始第一步：<code>编译Linux内核</code></p>
<hr>
<a id="more"></a>
<font size="5" color="#FF6EC7"> 实验环境： </font>

<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line">虚拟机操作系统（OS）：CentOS Linux release 7.2.1511 (Core)</div><div class="line">内核版本（Kernel）：3.10.0-327.el7.x86_64</div><div class="line">虚拟机环境：VMware Fusion 专业版 8.5.3 (4696910)</div></pre></td></tr></table></figure>
<p>这里因为要编译内核，所以尽可能增加一下虚拟机的配置</p>
<font szie="5" color="#FF0000"> /usr目录如果是单独分区，分区大小必须大于20G，以免编译时空间不足</font>

<p><strong>客户端环境：</strong><br><img src="https://ws4.sinaimg.cn/large/006tNc79ly1fg5rfg0cjsj30ga0a8dj6.jpg" alt=""></p>
<hr>
<div class="note primary"><h3 id="编译Linux内核并打layer7补丁"><a href="#编译Linux内核并打layer7补丁" class="headerlink" title="编译Linux内核并打layer7补丁"></a>编译Linux内核并打layer7补丁</h3></div>
<h4 id="1、安装基本开发库及相关依赖软件"><a href="#1、安装基本开发库及相关依赖软件" class="headerlink" title="1、安装基本开发库及相关依赖软件"></a>1、安装基本开发库及相关依赖软件</h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">$ yum -y groupinstall &quot;Development Libraries&quot; &quot;Development Tools&quot;  &quot;Server Platform Development&quot;</div></pre></td></tr></table></figure>
<h4 id="2、下载内核源码以及layer7补丁"><a href="#2、下载内核源码以及layer7补丁" class="headerlink" title="2、下载内核源码以及layer7补丁"></a>2、下载内核源码以及layer7补丁</h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line">$ wget ftp://172.16.0.1/pub/Sources/sources/iptables/* ./</div><div class="line">$ wget ftp://172.16.0.1/pub/Sources/sources/kernel/linux-2.6.32.61.tar.xz ./</div></pre></td></tr></table></figure>
<h5 id="下载好了之后将其复制到-usr-src"><a href="#下载好了之后将其复制到-usr-src" class="headerlink" title="下载好了之后将其复制到/usr/src"></a>下载好了之后将其复制到<code>/usr/src</code></h5><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div></pre></td><td class="code"><pre><div class="line">$ cp /root/linux-2.6.32.61.tar.xz /usr/src</div><div class="line">$ cp /root/netfilter-layer7-v2.23.tar.bz2 /usr/src</div><div class="line">$ cd /usr/src</div><div class="line">$ tar xf linux-2.6.32.61.tar.xz  </div><div class="line">$ tar xf netfilter-layer7-v2.23.tar.bz2 </div><div class="line">$ ln -s linux-2.6.32.61 linux </div><div class="line">$ cd /usr/src/linux </div><div class="line">$ patch -p1 &lt; ../netfilter-layer7-v2.23/kernel-2.6.32-layer7-2.23.patch </div><div class="line">$ cp /root/config-2.6.32-el6 /usr/src/linux/.config </div><div class="line">$ make menuconfig  #执行之后会出现一个让用户选择内核模块的界面,进入相应的菜单,将下面的模块选上</div></pre></td></tr></table></figure>
<h5 id="Networking-support-→-Networking-Options-→Network-packet-filtering-framework-→Core-Netfilter-Configuration"><a href="#Networking-support-→-Networking-Options-→Network-packet-filtering-framework-→Core-Netfilter-Configuration" class="headerlink" title="Networking support → Networking Options →Network packet filtering framework →Core Netfilter Configuration"></a>Networking support → Networking Options →Network packet filtering framework →Core Netfilter Configuration</h5><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div></pre></td><td class="code"><pre><div class="line">&lt;M&gt;  Netfilter connection tracking support </div><div class="line">&lt;M&gt;  “layer7” match support</div><div class="line">&lt;M&gt;  “string” match support</div><div class="line">&lt;M&gt;  “time”  match support</div><div class="line">&lt;M&gt;  “iprange”  match support</div><div class="line">&lt;M&gt;  “connlimit”  match support</div><div class="line">&lt;M&gt;  “state”  match support</div><div class="line">&lt;M&gt;  “conntrack”  connection  match support</div><div class="line">&lt;M&gt;  “mac”  address  match support</div><div class="line">&lt;M&gt;   &quot;multiport&quot; Multiple port match support</div></pre></td></tr></table></figure>
<h5 id="Networking-support-→-Networking-Options-→Network-packet-filtering-framework-→-IP-Netfilter-Configuration"><a href="#Networking-support-→-Networking-Options-→Network-packet-filtering-framework-→-IP-Netfilter-Configuration" class="headerlink" title="Networking support → Networking Options →Network packet filtering framework → IP: Netfilter Configuration"></a>Networking support → Networking Options →Network packet filtering framework → IP: Netfilter Configuration</h5><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div></pre></td><td class="code"><pre><div class="line">&lt;M&gt; IPv4 connection tracking support (required for NAT)</div><div class="line">&lt;M&gt;   Full NAT</div><div class="line">	&lt;M&gt;     MASQUERADE target support                                                                                   </div><div class="line">	&lt;M&gt;     NETMAP target support                                                                               </div><div class="line">	&lt;M&gt;     REDIRECT target support</div></pre></td></tr></table></figure>
<h5 id="编译内核"><a href="#编译内核" class="headerlink" title="编译内核"></a>编译内核</h5><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div></pre></td><td class="code"><pre><div class="line">$ yum install screen</div><div class="line">$ screen</div><div class="line">$ make </div><div class="line">$ make modules_install</div><div class="line">$ make install</div></pre></td></tr></table></figure>
<p>编译完成后记得要重启服务器，启动时选择新的内核</p>
<hr>
<div class="note success"><h3 id="编译安装iptables"><a href="#编译安装iptables" class="headerlink" title="编译安装iptables"></a>编译安装iptables</h3></div>
<h4 id="1、卸载系统上自带的iptables"><a href="#1、卸载系统上自带的iptables" class="headerlink" title="1、卸载系统上自带的iptables"></a>1、卸载系统上自带的iptables</h4><p>卸载之前要先把<code>iptables</code>的启动脚本以及配置文件备份</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line">$ cp /etc/init.d/iptables /root</div><div class="line">$ cp /etc/sysconfig/iptables-config /root</div></pre></td></tr></table></figure>
<p>卸载iptables：</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">$ rpm -e --nodeps iptables iptables-ipv6 iptstate</div></pre></td></tr></table></figure>
<h4 id="2、编译安装iptables"><a href="#2、编译安装iptables" class="headerlink" title="2、编译安装iptables"></a>2、编译安装iptables</h4><p>先下载<code>iptables-1.4.20.tar.bz2</code>包到系统的 <code>/usr/src</code>目录下，然后开始编译安装</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div></pre></td><td class="code"><pre><div class="line">$ wget ftp://172.16.0.1/pub/Sources/sources/iptables/iptables-1.4.20.tar.bz2 /usr/src</div><div class="line">$ cd /usr/src</div><div class="line">$ tar xf iptables-1.4.20.tar.bz2 </div><div class="line">$ cd iptables-1.4.20 </div><div class="line">$ cp ../netfilter-layer7-v2.23/iptables-1.4.3forward-for-kernel-2.6.20forward/libxt_layer7.* ./extensions/ </div><div class="line">$ ./configure --prefix=/usr --with-ksource=/usr/src/linux</div><div class="line">$ make </div><div class="line">$ make install</div></pre></td></tr></table></figure>
<hr>
<div class="note info"><h3 id="安装l7-protocols"><a href="#安装l7-protocols" class="headerlink" title="安装l7-protocols"></a>安装l7-protocols</h3></div>
<p><code>l7protocols</code> 是layer7所能够支持的协议包</p>
<p>下载<code>l7-protocols-2009-05-28.tar.gz</code>到/usr/src目录,然后开始编译安装</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div></pre></td><td class="code"><pre><div class="line">$ wget ftp://172.16.0.1/pub/Sources/sources/iptables/l7-protocols-2009-05-28.tar.gz /usr/src</div><div class="line">$ cd /usr/src </div><div class="line">$ tar xf l7-protocols-2009-05-28.tar.gz </div><div class="line">$ cd l7-protocols-2009-05-28 </div><div class="line">$ make install</div></pre></td></tr></table></figure>
<hr>
<div class="note warning"><h3 id="修改iptables启动脚本"><a href="#修改iptables启动脚本" class="headerlink" title="修改iptables启动脚本"></a>修改iptables启动脚本</h3></div>
<p>就是之前我们做的关于<code>iptables</code>的启动脚本与配置文件的备份</p>
<h4 id="修改iptables启动脚本"><a href="#修改iptables启动脚本" class="headerlink" title="修改iptables启动脚本"></a>修改iptables启动脚本</h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div></pre></td><td class="code"><pre><div class="line">$ cp /root/iptables-config /etc/sysconfig/</div><div class="line">$ cp /root/iptables /etc/init.d/</div><div class="line">$ chmod +x /etc/init.d/iptables</div><div class="line">$ vim /etc/init.d/iptables      #注意，这里要把所有 /sbin/$IPTABLES 替换为 /usr/sbin/$IPTABLES</div><div class="line">在vim的命令模式下输入：</div><div class="line">%s@/sbin/$IPTABLES@/usr/sbin/$IPTABLES@g   回车执行后，保存退出</div></pre></td></tr></table></figure>
<h4 id="启动iptables"><a href="#启动iptables" class="headerlink" title="启动iptables"></a>启动iptables</h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">$ service iptables restar</div></pre></td></tr></table></figure>
<hr>
<div class="note danger"><h3 id="封QQ，迅雷"><a href="#封QQ，迅雷" class="headerlink" title="封QQ，迅雷"></a>封QQ，迅雷</h3></div>
<p>使本机作为一个局域网的网关，并具有上网功能的情况下：</p>
<h4 id="封QQ"><a href="#封QQ" class="headerlink" title="封QQ"></a>封QQ</h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">$ iptables -A FORWARD -s 192.168.1.0/24 -m layer7 --l7proto qq -j REJECT</div></pre></td></tr></table></figure>
<p><img src="https://ws4.sinaimg.cn/large/006tKfTcly1fgird94hz3j30bp08zacc.jpg" alt=""></p>
<h4 id="封迅雷"><a href="#封迅雷" class="headerlink" title="封迅雷"></a>封迅雷</h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">$ iptables -A FORWARD -s 192.168.1.0/24 -m layer7 --l7proto xunlei -j REJECT</div></pre></td></tr></table></figure>
<h4 id="layer7支持百种协议"><a href="#layer7支持百种协议" class="headerlink" title="layer7支持百种协议"></a>layer7支持百种协议</h4><p>如果你想封其他程序，只需要查看程序是否在 <code>/etc/l7-protocols/protocols/</code> 目录下，如果有则<code>照猫画虎</code>似的按照上面的例子进行封杀即可。</p>
<hr>
<iframe frameborder="no" border="0" marginwidth="0" marginheight="0" width="330" height="86" src="//music.163.com/outchain/player?type=2&id=189895&auto=0&height=66"></iframe>


<p>本文出自<a href="http://maxiecloud.com">Maxie’s Notes</a>博客，转载请务必保留此出处。</p>
<p><img src="https://ww1.sinaimg.cn/large/006tNbRwly1fdzc80odsuj30gn0ilq5m.jpg" alt=""></p>
]]></content>
    
    <summary type="html">
    
      &lt;p&gt;&lt;img src=&quot;https://ws1.sinaimg.cn/large/006tNbRwly1fgioztll76j31hc0s7wm7.jpg&quot; alt=&quot;&quot;&gt;&lt;/p&gt;
&lt;blockquote class=&quot;blockquote-center&quot;&gt;作为网络管理员，对p2p，QQ，迅雷等软件是又爱又恨&lt;br&gt;大多数公司，为了提高工作效率禁止公司员工上QQ，用迅雷下载高清无码视频，在市场上买专门的上网行为管理设备，动辄就是上万。&lt;br&gt;但是，如果使用Linux来做网关，一样可以禁止这些软件，成本才不到万把块钱。&lt;br&gt;&lt;/blockquote&gt;

&lt;p&gt;在使用 &lt;code&gt;layer7&lt;/code&gt; 之前，我们需要知道，&lt;code&gt;layer7&lt;/code&gt;是第三方的软件，而非 &lt;code&gt;Liunx&lt;/code&gt;内核或者其他发行版自带的功能。所以我们要想使用其提供的功能，就要先把它编译到&lt;code&gt;kernel&lt;/code&gt;中。&lt;/p&gt;
&lt;p&gt;一听到&lt;font size=3 color=&quot;#FF0000&quot;&gt;编译内核 &lt;/font&gt;，大多数人都会有&lt;code&gt;好麻烦&lt;/code&gt;，&lt;code&gt;会不会出错&lt;/code&gt;，&lt;code&gt;还是算了吧&lt;/code&gt;这样的心态或者想法；但是，对于&lt;code&gt;Linux&lt;/code&gt;来说，只有&lt;strong&gt;&lt;font color=&quot;#7093DB&quot;&gt;永无止境的折腾&lt;/font&gt;&lt;/strong&gt;才能学好并精通&lt;code&gt;Linux&lt;/code&gt;。&lt;/p&gt;
&lt;p&gt;废话不多说，下面让我们开始第一步：&lt;code&gt;编译Linux内核&lt;/code&gt;&lt;/p&gt;
&lt;hr&gt;
    
    </summary>
    
      <category term="iptables" scheme="http://maxiecloud.com/categories/iptables/"/>
    
    
      <category term="linux" scheme="http://maxiecloud.com/tags/linux/"/>
    
      <category term="iptables" scheme="http://maxiecloud.com/tags/iptables/"/>
    
      <category term="layer7" scheme="http://maxiecloud.com/tags/layer7/"/>
    
      <category term="QQ" scheme="http://maxiecloud.com/tags/QQ/"/>
    
      <category term="xunlei" scheme="http://maxiecloud.com/tags/xunlei/"/>
    
  </entry>
  
  <entry>
    <title>iptables进阶</title>
    <link href="http://maxiecloud.com/2017/06/10/iptables-advanced/"/>
    <id>http://maxiecloud.com/2017/06/10/iptables-advanced/</id>
    <published>2017-06-10T06:38:14.000Z</published>
    <updated>2017-06-11T12:09:02.000Z</updated>
    
    <content type="html"><![CDATA[<p><img src="https://ws2.sinaimg.cn/large/006tNbRwly1fgg5yvq7kzj30xc0go7wh.jpg" alt=""></p>
<blockquote class="blockquote-center">在这章我们会介绍iptables中如何配置NAT(Network Address Translation)，<br>也就是网络地址转换的功能。<br></blockquote>

<p>在iptables中，定义NAT时，需要在自带的<code>五表</code>之中的<code>nat表</code>中定义：</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line">SNAT        源地址转换       --&gt;     POSTROUTING链</div><div class="line">DNAT        目标地址转换     --&gt;     PREROUTING链 </div><div class="line">PAT         端口转换        --&gt;     端口映射</div></pre></td></tr></table></figure>
<hr>
<a id="more"></a>
<div class="note primary"><h3 id="SNAT"><a href="#SNAT" class="headerlink" title="SNAT"></a>SNAT</h3></div>
<p>SNAT：Source NAT；请求来自内网，隐藏客户端IP地址</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">-j SNAT --to-source [ipaddr[-ipaddr]]</div></pre></td></tr></table></figure>
<h4 id="SNAT实例"><a href="#SNAT实例" class="headerlink" title=" SNAT实例"></a><font size="4" color="#7093DB"> SNAT实例</font></h4><p>实验拓扑图：</p>
<p><img src="https://ws3.sinaimg.cn/large/006tNbRwly1fgg76jvc82j312y0mvqdi.jpg" alt=""></p>
<p><code>NAT IP</code>: 172.16.1.70 ; 192.168.1.254<br><code>Client IP</code>: 172.16.1.100<br><code>http IP</code>: 192.168.1.10</p>
<p>实验目标：</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line">1、实现三台机器之间互通，开启NAT服务器的核心转发功能</div><div class="line">2、通过iptables的SNAT的功能，对http服务器隐藏客户端的IP地址</div></pre></td></tr></table></figure>
<h5 id="开启核心转发功能"><a href="#开启核心转发功能" class="headerlink" title=" 开启核心转发功能"></a><font size="3" color="#3299CC"> 开启核心转发功能</font></h5><p>在NAT服务器上进行操作:</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line">$ sysctl -w net.ipv4.ip_forward=1</div><div class="line">$ cat /proc/sys/net/ipv4/ip_forward/</div><div class="line">1</div></pre></td></tr></table></figure>
<p>在外网客户端上进行操作：</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div></pre></td><td class="code"><pre><div class="line">$ route -n</div><div class="line">Kernel IP routing table</div><div class="line">Destination     Gateway         Genmask         Flags Metric Ref    Use Iface</div><div class="line">0.0.0.0         172.16.0.1      0.0.0.0         UG    0      0        0 eth0</div><div class="line">172.16.0.0      0.0.0.0         255.255.0.0     U     100    0        0 eth0</div><div class="line"></div><div class="line">$ route del -net 0.0.0.0</div><div class="line">$ route add defalut gw 172.16.1.70</div><div class="line">$ route -n</div><div class="line">Kernel IP routing table</div><div class="line">Destination     Gateway         Genmask         Flags Metric Ref    Use Iface</div><div class="line">0.0.0.0         172.16.1.70     0.0.0.0         UG    0      0        0 eth0</div><div class="line">172.16.0.0      0.0.0.0         255.255.0.0     U     100    0        0 eth0</div></pre></td></tr></table></figure>
<p>在http服务器上的操作：</p>
<p>配置好网关为NAT服务器的内网网卡地址</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div></pre></td><td class="code"><pre><div class="line">$ route -n</div><div class="line">Kernel IP routing table</div><div class="line">Destination     Gateway         Genmask         Flags Metric Ref    Use Iface</div><div class="line">0.0.0.0         192.168.1.254   0.0.0.0         UG    100    0        0 eth0</div><div class="line">192.168.1.0     0.0.0.0         255.255.255.0   U     100    0        0 eth0</div></pre></td></tr></table></figure>
<h5 id="配置SNAT"><a href="#配置SNAT" class="headerlink" title=" 配置SNAT"></a><font size="3" color="#3299CC"> 配置SNAT</font></h5><p>在NAT服务器上进行操作：</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line">$ iptables -t nat -F</div><div class="line">$ iptables -F</div><div class="line">$ iptables -t nat -A POSTROUTING -s 172.16.0.0/16 -p tcp --dport 80 -j SNAT --to-source 192.168.1.254</div></pre></td></tr></table></figure>
<h5 id="测试SNAT"><a href="#测试SNAT" class="headerlink" title=" 测试SNAT"></a><font size="3" color="#3299CC"> 测试SNAT</font></h5><p>在外网客户端上进行操作：</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div></pre></td><td class="code"><pre><div class="line">$ curl http://192.168.1.10</div><div class="line">&lt;h1&gt; hello world&lt;/h1&gt;</div><div class="line"></div><div class="line">&lt;font size=4 color=&quot;#3299CC&quot; &gt; IP: 192.168.1.10 HTTP &lt;/font&gt;</div></pre></td></tr></table></figure>
<p>在http服务器上查看http访问日志：</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line">$ cat /var/log/httpd/access_log</div><div class="line">192.168.1.254 - - [10/Jun/2017:13:33:54 +0800] &quot;GET / HTTP/1.1&quot; 200 84 &quot;-&quot; &quot;curl/7.29.0&quot;</div></pre></td></tr></table></figure>
<hr>
<div class="note success"><h3 id="DNAT"><a href="#DNAT" class="headerlink" title="DNAT"></a>DNAT</h3></div>
<p>DNAT：Destination NAT；请求来自外网，隐藏服务器</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">-j DNAT --to-destination [ipaddr[-ipaddr]][:port[-port]]</div></pre></td></tr></table></figure>
<h4 id="DNAT实例"><a href="#DNAT实例" class="headerlink" title=" DNAT实例"></a><font size="4" color="#7093DB"> DNAT实例</font></h4><p>实验拓扑图：</p>
<p><img src="https://ws3.sinaimg.cn/large/006tNbRwly1fgg76jvc82j312y0mvqdi.jpg" alt=""></p>
<p><code>NAT IP</code>: 172.16.1.70 ; 192.168.1.254<br><code>Client IP</code>: 172.16.1.100<br><code>http IP</code>: 192.168.1.10</p>
<p>实验目标：</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line">1、实现三台机器之间互通，开启NAT服务器的核心转发功能</div><div class="line">2、通过iptables的DNAT的功能，对客户端隐藏http服务器的IP地址</div></pre></td></tr></table></figure>
<h5 id="配置DNAT"><a href="#配置DNAT" class="headerlink" title=" 配置DNAT"></a><font size="3" color="#3299CC"> 配置DNAT</font></h5><p>在NAT服务器上进行操作：</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line">$ iptables -t nat -F</div><div class="line">$ iptables -F</div><div class="line">$ iptables -t nat -A PREROUTING -d 172.16.1.70 -p tcp --dport 80 -j DNAT --to-destination 192.168.1.10</div></pre></td></tr></table></figure>
<h5 id="测试DNAT"><a href="#测试DNAT" class="headerlink" title=" 测试DNAT"></a><font size="3" color="#3299CC"> 测试DNAT</font></h5><p>在外网客户端上进行操作：</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div></pre></td><td class="code"><pre><div class="line">$ curl http://172.16.1.70</div><div class="line">&lt;h1&gt; hello world&lt;/h1&gt;</div><div class="line"></div><div class="line">&lt;font size=4 color=&quot;#3299CC&quot; &gt; IP: 192.168.1.10 HTTP &lt;/font&gt;</div></pre></td></tr></table></figure>
<p>在http服务器上查看http访问日志：</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line">$ cat /var/log/httpd/access_log</div><div class="line">192.168.1.254 - - [10/Jun/2017:13:33:54 +0800] &quot;GET / HTTP/1.1&quot; 200 84 &quot;-&quot; &quot;curl/7.29.0&quot;</div><div class="line">172.16.1.100 - - [10/Jun/2017:13:40:24 +0800] &quot;GET / HTTP/1.1&quot; 200 84 &quot;-&quot; &quot;curl/7.29.0&quot;</div></pre></td></tr></table></figure>
<hr>
<div class="note info"><h3 id="iptables-NAT转换实操视频"><a href="#iptables-NAT转换实操视频" class="headerlink" title="iptables NAT转换实操视频"></a>iptables NAT转换实操视频</h3></div>
<p>哔哩哔哩视频源：</p>
<embed height="415" width="544" quality="high" allowfullscreen="true" type="application/x-shockwave-flash" src="//static.hdslb.com/miniloader.swf" flashvars="aid=11219192&page=1" pluginspage="//www.adobe.com/shockwave/download/download.cgi?P1_Prod_Version=ShockwaveFlash">


<hr>
<div class="note warning"><h3 id="iptables放行ftp服务并使远程可以正常访问"><a href="#iptables放行ftp服务并使远程可以正常访问" class="headerlink" title="iptables放行ftp服务并使远程可以正常访问"></a>iptables放行ftp服务并使远程可以正常访问</h3></div>
<p>哔哩哔哩视频源：</p>
<embed height="415" width="544" quality="high" allowfullscreen="true" type="application/x-shockwave-flash" src="//static.hdslb.com/miniloader.swf" flashvars="aid=11216926&page=1" pluginspage="//www.adobe.com/shockwave/download/download.cgi?P1_Prod_Version=ShockwaveFlash">

<hr>
<div class="note primary"><h3 id="创建iptables配置文件开机自动导入的Unit-File文件"><a href="#创建iptables配置文件开机自动导入的Unit-File文件" class="headerlink" title="创建iptables配置文件开机自动导入的Unit File文件"></a>创建iptables配置文件开机自动导入的Unit File文件</h3></div>
<h4 id="1、先复制一份别的程序的Unit-File："><a href="#1、先复制一份别的程序的Unit-File：" class="headerlink" title="1、先复制一份别的程序的Unit File："></a>1、先复制一份别的程序的Unit File：</h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">$ cp /usr/lib/systemd/system/httpd.service /usr/lib/systemd/system/iptables.service</div></pre></td></tr></table></figure>
<h4 id="2、编辑复制好的配置文件"><a href="#2、编辑复制好的配置文件" class="headerlink" title="2、编辑复制好的配置文件"></a>2、编辑复制好的配置文件</h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div></pre></td><td class="code"><pre><div class="line">$ vim /usr/lib/systemd/system/iptables.service</div><div class="line">[Unit]</div><div class="line">Description=iptables rules constructor	#描述</div><div class="line">After=network.target remote-fs.target nss-lookup.target</div><div class="line"></div><div class="line">[Service]</div><div class="line">Type=notify</div><div class="line">ExecStart=/usr/sbin/iptables-restore /root/iptables-rules/rules1		#启动时执行</div><div class="line">ExecReload=/usr/sbin/iptables-restore /root/iptables-rules/rules1		#重载时执行</div><div class="line">ExecStop=/usr/sbin/iptables -F          #停止时执行</div><div class="line"></div><div class="line">[Install]</div><div class="line">WantedBy=multi-user.target		#多用户模式下运行</div></pre></td></tr></table></figure>
<h4 id="3、装载配置文件"><a href="#3、装载配置文件" class="headerlink" title="3、装载配置文件"></a>3、装载配置文件</h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">$ systemctl daemon-reload</div></pre></td></tr></table></figure>
<h4 id="4、启动自定义配置"><a href="#4、启动自定义配置" class="headerlink" title="4、启动自定义配置"></a>4、启动自定义配置</h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line">$ systemctl enable iptables</div><div class="line">$ systemctl start iptables</div></pre></td></tr></table></figure>
<hr>
<font size="5" color="#70DBDB"> 呃。。。这篇博客可能写的有点不太完善，有点草草应付了事的样子，最近为了学习Nginx，练习iptables，实在是无暇完善博客内容了。该做的都录屏了，以后再完善吧</font>

<hr>
<iframe frameborder="no" border="0" marginwidth="0" marginheight="0" width="330" height="86" src="//music.163.com/outchain/player?type=2&id=32272267&auto=1&height=66"></iframe>

<p>本文出自<a href="http://maxiecloud.com">Maxie’s Notes</a>博客，转载请务必保留此出处。</p>
<p><img src="https://ww1.sinaimg.cn/large/006tNbRwly1fdzc80odsuj30gn0ilq5m.jpg" alt=""></p>
]]></content>
    
    <summary type="html">
    
      &lt;p&gt;&lt;img src=&quot;https://ws2.sinaimg.cn/large/006tNbRwly1fgg5yvq7kzj30xc0go7wh.jpg&quot; alt=&quot;&quot;&gt;&lt;/p&gt;
&lt;blockquote class=&quot;blockquote-center&quot;&gt;在这章我们会介绍iptables中如何配置NAT(Network Address Translation)，&lt;br&gt;也就是网络地址转换的功能。&lt;br&gt;&lt;/blockquote&gt;

&lt;p&gt;在iptables中，定义NAT时，需要在自带的&lt;code&gt;五表&lt;/code&gt;之中的&lt;code&gt;nat表&lt;/code&gt;中定义：&lt;/p&gt;
&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;1&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;2&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;3&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;SNAT        源地址转换       --&amp;gt;     POSTROUTING链&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;DNAT        目标地址转换     --&amp;gt;     PREROUTING链 &lt;/div&gt;&lt;div class=&quot;line&quot;&gt;PAT         端口转换        --&amp;gt;     端口映射&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;hr&gt;
    
    </summary>
    
      <category term="iptables" scheme="http://maxiecloud.com/categories/iptables/"/>
    
    
      <category term="linux" scheme="http://maxiecloud.com/tags/linux/"/>
    
      <category term="iptables" scheme="http://maxiecloud.com/tags/iptables/"/>
    
      <category term="nat" scheme="http://maxiecloud.com/tags/nat/"/>
    
      <category term="DNAT" scheme="http://maxiecloud.com/tags/DNAT/"/>
    
      <category term="SNAT" scheme="http://maxiecloud.com/tags/SNAT/"/>
    
  </entry>
  
  <entry>
    <title>iptables从入门到&quot;放弃&quot;</title>
    <link href="http://maxiecloud.com/2017/06/09/iptables-and-netfilter/"/>
    <id>http://maxiecloud.com/2017/06/09/iptables-and-netfilter/</id>
    <published>2017-06-09T11:24:50.000Z</published>
    <updated>2017-06-09T14:55:00.000Z</updated>
    
    <content type="html"><![CDATA[<p><img src="https://ws1.sinaimg.cn/large/006tKfTcly1fgf6igu3zwj30xc0go7wh.jpg" alt=""></p>
<blockquote class="blockquote-center">iptables是一个配置 Linux内核 防火墙的命令行工具，是 netfilter 项目的一部分。<br>术语 iptables 也经常代指该内核级防火墙。<br>iptables可以直接配置，也可以通过 CentOS7中的新特性–firewalld 和图形界面配置。<br>iptables 适用于ipv4, ip6tables 适用于ipv6。<br></blockquote>

<p>在介绍如何在 Linux中使用与配置<code>iptables</code>之前，让我们先对<font color="#FF000">防火墙</font>有一个简单的理解：</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div></pre></td><td class="code"><pre><div class="line">它是一种位于内部网络与外部网络之间的网络安全系统。</div><div class="line">一项信息安全的防护系统，依照特定的规则，允许或是限制传输的数据通过。</div><div class="line">内部网络和外部网络之间的所有网络数据流都必须经过防火墙，这是防火墙所处网络位置特性，同时也是一个前提。</div><div class="line">因为只有当防火墙是内、外部网络之间通信的唯一通道，才可以全面、有效地保护企业网内部网络不受侵害，所以防火墙一般部署在内网的最外层。</div></pre></td></tr></table></figure>
<a id="more"></a>
<h2 id="iptables发展历史简介"><a href="#iptables发展历史简介" class="headerlink" title="iptables发展历史简介"></a>iptables发展历史简介</h2><h3 id="ipfirewall"><a href="#ipfirewall" class="headerlink" title="ipfirewall"></a>ipfirewall</h3><p>ipfirewall，简称<code>ipfw</code>，在<a href="https://zh.wikipedia.org/wiki/FreeBSD" target="_blank" rel="external">FreeBSD</a>上开发的IP封包过滤程式，具备防火墙功能，由FreeBSD开发团队负责维护。它曾被移植到多个平台上，Mac OS X曾经采用它作为预设防火墙，直到Mac OS X 10.7 Lion 采用另一个FreeBSD程式<a href="https://www.freebsd.org/doc/handbook/firewalls-pf.html" target="_blank" rel="external">PF</a>。在1994年，<a href="https://zh.wikipedia.org/wiki/%E8%89%BE%E5%80%AB%C2%B7%E8%80%83%E5%85%8B%E6%96%AF" target="_blank" rel="external">艾伦·考克斯</a>曾经将它移植到Linux 1.1上，作为Linux的预设防火墙，直到Linux2.4 采用iptable来取代</p>
<h3 id="ipchains"><a href="#ipchains" class="headerlink" title="ipchains"></a>ipchains</h3><p>Linux IP Firewalling Chains，一般称为ipchains，一种自由软件，在Linux内核2.2系列中运作，可用来作为封包过滤与防火墙功能之用。它被设计来取代旧有的ipfwadm，在Linux内核2.4系列中被iptables取代。</p>
<h3 id="iptables"><a href="#iptables" class="headerlink" title="iptables"></a>iptables</h3><p>iptables，一个运行在用户空间的应用软件，通过控制Linux内核netfilter模块，来管理网络数据包的流动与转送。在大部分的Linux系统上面，iptables是使用/usr/sbin/iptables来操作，文件则放置在手册页（Man page）底下，可以通过 man iptables 指令获取。通常iptables都需要内核层级的模块来配合运作，Xtables是主要在内核层级里面iptables API运作功能的模块。因相关动作上的需要，iptables的操作需要用到超级用户的权限。</p>
<p>目前iptables系在2.4、2.6及3.0的内核底下运作，旧版的Linux内核（2.2）使用ipchains及<font color="#FF000">ipwadm（Linux 2.0)</font>来达成类似的功能，2014年1月19日起发行的新版Linux内核（3.13后）则使用<font color="#FF000">nftables</font>取而代之。</p>
<hr>
<div class="note primary"><h2 id="iptables简介"><a href="#iptables简介" class="headerlink" title="iptables简介"></a>iptables简介</h2></div>
<p>iptables其实应该叫<code>netfilter/iptables</code>它实际上由两个组件<code>netfilter</code> 和 <code>iptables</code> 组成。</p>
<p><code>netfilter</code> 组件也称为内核空间（kernelspace），是内核的一部分，由一些信息包过滤表组成，这些表包含内核用来控制信息包过滤处理的规则集。<br><code>iptables</code> 组件是一种规则编写工具，也称为用户空间（userspace），它使插入、修改和除去信息包过滤表中的规则变得容易。</p>
<h3 id="iptables是定义规则的工具"><a href="#iptables是定义规则的工具" class="headerlink" title="iptables是定义规则的工具"></a>iptables是定义规则的工具</h3><p>iptables本身并不算是防火墙。它定义的规则，可以让内核空间当中的 netfilter 来读取，并且实现让防火墙工作。而放入内核的地方必须要是特定的位置，必须是 <code>tcp/ip</code>的协议栈经过的地方。<br>而这个<code>tcp/ip</code>协议栈必须经过的地方，可以实现读取规则的地方就叫做 <code>netfilter</code>(网络过滤器)</p>
<h3 id="Hook-functions"><a href="#Hook-functions" class="headerlink" title="Hook functions"></a>Hook functions</h3><p>在Linux的内核空间中有五个位置可以对数据包进行过滤：</p>
<p><img src="https://ws1.sinaimg.cn/large/006tKfTcly1fgf8vso1paj31kw0x8azk.jpg" alt=""></p>
<p>由上图可以看出：<br>一个数据包经过时，必须经过这五个关卡中的其一个或多个，而每个关卡都可以做相关的<code>规则</code>来进行限制，而这个关卡就叫做<code>Chain(链)</code>，每个关卡都会通过数据包的特征来进行判断（IP、port等）</p>
<p>iptables的表有四种，顾名思义，每个表的名字都已经高度概括了其功能，即<code>filter表</code>、<code>nat表</code>、<code>mangle</code>表和<code>raw表</code>，分别用于实现包过滤（防火墙），网络地址转换、包重构(修改)和数据跟踪处理，而每个表又定义了不同的链组合：</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div></pre></td><td class="code"><pre><div class="line">raw: INPUT,FORWARD,OUTPUT</div><div class="line">nat: PREROUTING,INPUT,OUTPUT,POSTROUTING</div><div class="line">mangle: PREROUTING,INPUT,OUTPUT,POSTROUTING</div><div class="line">filter: INPUT,FORWARD,OUTPUT</div></pre></td></tr></table></figure>
<p>其中表与表之间的优先级也就是：<code>raw</code> &gt; <code>mangle</code> &gt; <code>nat</code> &gt; <code>filter</code></p>
<p><strong>由图可以分析得出，其中的报文流向也就是：</strong></p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line">流入本机：PREROUTING --&gt; INPUT</div><div class="line">由本机流出：OUTPUT --&gt; POSTROUTING</div><div class="line">转发： PREROUTING --&gt; FORWARD --&gt; POSTROUTING</div></pre></td></tr></table></figure>
<hr>
<div class="note success"><h2 id="iptables规则的组成部分"><a href="#iptables规则的组成部分" class="headerlink" title="iptables规则的组成部分"></a>iptables规则的组成部分</h2></div>
<p>根据规则匹配条件来尝试匹配报文，一旦匹配成功，就由规则定义的处理动作做出处理。</p>
<h3 id="匹配条件"><a href="#匹配条件" class="headerlink" title="匹配条件"></a>匹配条件</h3><p>基本匹配条件：源地址，目标地址，传输层协议<br>扩展匹配条件：由扩展模块定义</p>
<p>隐式扩展：无需知名扩展模块的扩展机制<br>显式扩展：必须指明要调用的扩展模块的扩展机制</p>
<h3 id="处理动作-跳转目标"><a href="#处理动作-跳转目标" class="headerlink" title="处理动作(跳转目标)"></a>处理动作(跳转目标)</h3><p>基本处理动作：ACCEPT、DROP<br>扩展处理动作：REJECT、RETURN、LOG、REDIRECT</p>
<h3 id="iptables的链：内置链和自定义链"><a href="#iptables的链：内置链和自定义链" class="headerlink" title="iptables的链：内置链和自定义链"></a>iptables的链：内置链和自定义链</h3><p>内置链：对应于hook functions<br>自定义链接：用于内置链的扩展和补充，可实现更灵活的规则管理机制；自定义链可以设置完之后，添加到内置链中，方便管理</p>
<h3 id="添加规则时需要考量的因素"><a href="#添加规则时需要考量的因素" class="headerlink" title="添加规则时需要考量的因素"></a>添加规则时需要考量的因素</h3><p>(1) 实现的功能：用于判定将规则添加至哪个表；<br>(2) 报文的流经位置：用于判断将规则添加至哪个链；<br>(3) 报文的流向：判定规则中何为”源“，何为”目标“；<br>(4) 匹配条件：用于编写正确的匹配规则；</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line">专用于某种应用的同类规则，匹配范围小的放前面；</div><div class="line">专用于某些应用的不同类规则，匹配到的可能性较多的放前面；同一类别的规则可使用自定义链单独存放；访问量大的放前面，访问量小的放后面</div><div class="line">用于通用目的的规则放前面；</div></pre></td></tr></table></figure>
<p><strong>链：    链上的规则次序，即为检查的次序；因此，隐含一定的应用法则：</strong></p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div></pre></td><td class="code"><pre><div class="line">(1)同类规则（访问统一应用），匹配范围小的放上面；</div><div class="line">(2)不同类的规则(访问不同应用)，匹配到报文频率较大的放在上面</div><div class="line">(3)将那些可由一条规则描述的多个规则合并起来；</div><div class="line">(4)设置默认策略</div></pre></td></tr></table></figure>
<hr>
<div class="note info"><h2 id="iptables命令详解"><a href="#iptables命令详解" class="headerlink" title="iptables命令详解"></a>iptables命令详解</h2></div>
<h3 id="安装"><a href="#安装" class="headerlink" title="安装"></a>安装</h3><p><code>netfilter</code>：位于内核中的tcp/ip协议栈报文处理框架<br><code>iptables</code>：</p>
<p>CentOS5/6：iptables命令生成规则，可保存于文件中以反复装载生效</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line">$ iptables -t filter -F     #清空filter表的规则</div><div class="line">$ service iptables save     #保存iptables规则</div></pre></td></tr></table></figure>
<p>CentOS 7：firewalld, firewall-cmd, firewall-config</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">$ systemctl start firewalld.service     #开启防火墙，自动生成规则</div></pre></td></tr></table></figure>
<h3 id="iptables命令"><a href="#iptables命令" class="headerlink" title="iptables命令"></a>iptables命令</h3><p>iptables是高度模块化的，由诸多扩展模块实现其检查条件或处理动作的</p>
<p>模块文件：</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div></pre></td><td class="code"><pre><div class="line">/usr/lib64/xtables/</div><div class="line"></div><div class="line">IPv4使用范围的模块文件：libip6t_*</div><div class="line">IPv6使用范围的模块文件：libipt_*,libxt_*</div></pre></td></tr></table></figure>
<h4 id="命令格式"><a href="#命令格式" class="headerlink" title="命令格式"></a>命令格式</h4><p><code>iptables [-t table] COMMAND chain [-m matchname [per-match-options]] -j targetname [per-target-options]</code></p>
<p><img src="https://ws1.sinaimg.cn/large/006tKfTcly1fgf9zcpfsmj30s30kttag.jpg" alt=""></p>
<h4 id="t-table"><a href="#t-table" class="headerlink" title="-t table"></a><font size="5" color="#7093DB">-t table</font></h4><p><code>raw表</code>：<br>Chain：</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line">PREROUTING</div><div class="line">OUTPUT</div></pre></td></tr></table></figure>
<p><br><br><code>mangle表：</code><br>Chain：</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div></pre></td><td class="code"><pre><div class="line">PREROUTING</div><div class="line">INPUT</div><div class="line">FORWARD</div><div class="line">OUTPUT</div><div class="line">POSTROUTING</div></pre></td></tr></table></figure>
<p><br><br><code>nat表：</code><br>Chain</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div></pre></td><td class="code"><pre><div class="line">PREROUTING</div><div class="line">INPUT</div><div class="line">OUTPUT</div><div class="line">POSTROUTING</div></pre></td></tr></table></figure>
<p><br><br><code>filter表：</code><br>Chain：</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line">INPUT</div><div class="line">OUTPUT</div><div class="line">FORWARD</div></pre></td></tr></table></figure>
<h4 id="COMMAND"><a href="#COMMAND" class="headerlink" title="COMMAND"></a><font size="5" color="#FF2400">COMMAND</font></h4><p><strong>链管理：</strong></p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div></pre></td><td class="code"><pre><div class="line">-N，--new-chain CHAIN                    新建一个自定义的规则链</div><div class="line">-X，--delete-chain CHAIN                 删除用户自定义的且引用计数为0的空链</div><div class="line">-F，--flush [CHAIN]                      清空指定的规则链上的规则</div><div class="line">-E，--rename-chain old-CHAIN new-CHAIN   重命名链</div><div class="line">-Z，--zero [CHAIN [rulenum]]             置零计数器</div><div class="line">-P，--policy CHAIN target                设置默认策略(ACCEPT/DROP/REJECT)</div></pre></td></tr></table></figure>
<p><strong>规则管理</strong></p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div></pre></td><td class="code"><pre><div class="line">-A, --append chain rule-specification               追加新规则于指定链的尾部； </div><div class="line">-I, --insert chain [rulenum] rule-specification     插入新规则于指定链的指定位置，默认为首部；</div><div class="line">-R, --replace chain rulenum rule-specification      替换指定的规则为新的规则；</div><div class="line">-D, --delete chain rulenum                          根据规则编号删除规则；</div><div class="line">-D, --delete chain rule-specification               根据规则本身删除规则；</div></pre></td></tr></table></figure>
<p><strong>规则显示</strong></p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div></pre></td><td class="code"><pre><div class="line">-L, --list [chain]：列出规则</div><div class="line">子命令：	</div><div class="line">	-v, --verbose      详细信息； </div><div class="line">		-vv        更详细信息；</div><div class="line">	-n, --numeric      数字格式显示主机地址和端口号；</div><div class="line">	-x, --exact        显示计数器的精确值，而非圆整后的数据；</div><div class="line">	--line-numbers     列出规则时，显示其在链上的相应的编号；</div><div class="line"></div><div class="line">查看单个链：</div><div class="line">$ iptables -vnL INPUT  </div><div class="line"></div><div class="line">-S, --list-rules [chain]：显示指定链的所有规则</div></pre></td></tr></table></figure>
<h4 id="PARAMETER-AND-MATCH-EXTENSIONS"><a href="#PARAMETER-AND-MATCH-EXTENSIONS" class="headerlink" title="PARAMETER AND MATCH EXTENSIONS"></a><font size="5" color="#9932CD">PARAMETER AND MATCH EXTENSIONS</font></h4><h5 id="通用匹配"><a href="#通用匹配" class="headerlink" title="通用匹配"></a><strong>通用匹配</strong></h5><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div></pre></td><td class="code"><pre><div class="line">[!] -s, --source address[/mask][,...]           检查报文的&apos;源IP地址&apos;是否符合此处指定的范围，或是否等于此处给定的地址；</div><div class="line">[!] -d, --destination address[/mask][,...]      检查报文的&apos;目标IP地址&apos;是否符合此处指定的范围，或是否等于此处给定的地址；</div><div class="line">[!] -p, --protocol protocol                     匹配报文中的协议，可用值tcp,udp,udplite,icmp,icmpv6,esp,ah,sctp,mh 或者 &quot;all&quot;, 亦可以数字格式指明协议； </div><div class="line">[!] -i, --in-interface name                     限定报文仅能够从指定的接口流入</div><div class="line">[!] -o, --out-interface name                    限定报文仅能够从指定的接口流出</div></pre></td></tr></table></figure>
<h5 id="扩展匹配"><a href="#扩展匹配" class="headerlink" title="扩展匹配"></a><strong>扩展匹配</strong></h5><p>可以出现多次，使用多个扩展模块</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">-m MODE [per-match-options]</div></pre></td></tr></table></figure>
<h5 id="隐式扩展"><a href="#隐式扩展" class="headerlink" title="隐式扩展"></a><strong>隐式扩展</strong></h5><p><code>-p tcp</code>：可直接使用tcp扩展模块的专用选项</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div></pre></td><td class="code"><pre><div class="line">[!] --source-port,--sport port[:port]               匹配报文源端口；可以给出多个端口，但只能是连续的端口范围 ；</div><div class="line">[!] --destination-port,--dport port[:port]          匹配报文目标端口；可以给出多个端口，但只能是连续的端口范围 ；</div><div class="line">[!] --tcp-flags mask comp                           匹配报文中的tcp协议的标志位；Flags are: SYN ACK FIN RST URG PSH ALL NONE；</div><div class="line">	mask：要检查的FLAGS list，以逗号分隔；</div><div class="line">	comp：在mask给定的诸多的FLAGS中，其值必须为1的FLAGS列表，余下的其值必须为0；</div><div class="line">[!] --syn                                           匹配第一次握手，等于--tcp-flags SYN,ACK,FIN,RST  SYN</div></pre></td></tr></table></figure>
<p><br><br><code>-p udp</code>：可直接使用udp协议扩展模块的专用选项</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line">[!] --source-port,--sport port[:port]</div><div class="line">[!] --destination-port,--dport port[:port]</div></pre></td></tr></table></figure>
<p><br><br><code>-p icmp</code>：可直接使用icmp协议扩展模块的专用选项</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line">[!] --icmp-type &#123;type[/code]|typename&#125;</div><div class="line">    0/0： echo reply（请求的回显）</div><div class="line">    8/0：echo request（发出去的请求）</div></pre></td></tr></table></figure>
<p><br></p>
<h5 id="显式扩展"><a href="#显式扩展" class="headerlink" title="显式扩展"></a><font size="4" color="#3299CC">显式扩展</font></h5><p>必须使用<code>-m</code>选项指明要调用的扩展模块的扩展机制</p>
<p><code>man iptables-extensions</code> 查看扩展帮助</p>
<font size="3" color="#5F9F9F">1、multiport</font>

<p>以离散或连续的 方式定义多端口匹配条件，最多15个；<br>支持tcp、udp、udplite、dccp、sctp</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div></pre></td><td class="code"><pre><div class="line">[!] --source-ports,--sports port[,port|,port:port]...</div><div class="line">[!] --destination-ports,--dports port[,port|,port:port]...</div><div class="line">	</div><div class="line">$ iptables -I INPUT  -d 172.16.0.7 -p tcp -m multiport --dports 22,80,139,445,3306 -j ACCEPT</div></pre></td></tr></table></figure>
<p><br></p>
<font size="3" color="#5F9F9F">2、iprange</font><br>    以连续地址块的方式来指明多IP地址匹配条件；<br><br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div></pre></td><td class="code"><pre><div class="line">[!] --src-range from[-to]</div><div class="line">[!] --dst-range from[-to]</div><div class="line">	</div><div class="line">$ iptables -I INPUT -d 172.16.0.7 -p tcp -m multiport --dports 22,80,139,445,3306 -m iprange --src-range 172.16.0.61-172.16.0.70 -j REJECT</div></pre></td></tr></table></figure><br><br><br><br><font size="3" color="#5F9F9F">3、time</font><br>This  matches  if the packet arrival time/date is within a given range.<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div></pre></td><td class="code"><pre><div class="line">--timestart hh:mm[:ss]</div><div class="line">--timestop hh:mm[:ss]</div><div class="line">	 </div><div class="line">[!] --weekdays day[,day...]</div><div class="line">[!] --monthdays day[,day...]</div><div class="line">	 </div><div class="line">--datestart YYYY[-MM[-DD[Thh[:mm[:ss]]]]]</div><div class="line">--datestop YYYY[-MM[-DD[Thh[:mm[:ss]]]]]</div><div class="line">	</div><div class="line">--kerneltz：使用内核配置的时区而非默认的UTC；CentOS6无需使用，默认就使用</div></pre></td></tr></table></figure><br><br><br><br><font size="3" color="#5F9F9F">4、string(可以检查7层协议) ‘只能对明文编码的协议有效’</font>

<p>This modules matches a given string by using some pattern matching strategy.<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div></pre></td><td class="code"><pre><div class="line">--algo &#123;bm|kmp&#125;：bm和kmp算法处理的速度其实无太大的差别</div><div class="line"></div><div class="line">[!] --string pattern</div><div class="line">[!] --hex-string pattern</div><div class="line">	</div><div class="line">--from offset：从哪个位置开始</div><div class="line">--to offset：从哪个位置结束</div><div class="line">	</div><div class="line">$ iptables -I OUTPUT -m string --algo bm --string &quot;gay&quot; -j REJECT</div></pre></td></tr></table></figure></p>
<p><br></p>
<font size="3" color="#5F9F9F">5、connlimit ：连接限制；单个客户端最多并发数量的限制</font>

<p>Allows  you  to  restrict  the  number  of parallel connections to a server per client IP address (or client address block).<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div></pre></td><td class="code"><pre><div class="line">--connlimit-upto n：上限，小于等于</div><div class="line">--connlimit-above n：大于</div><div class="line">	</div><div class="line">$ iptables -I INPUT -d 172.16.0.7 -p tcp --syn --dport 22 -m connlimit --connlimit-above 2 -j REJECT</div></pre></td></tr></table></figure></p>
<p><br></p>
<font size="3" color="#5F9F9F">6、limit ：速率限制</font><br>This  module  matches  at  a limited rate using a token bucket filter.<br><br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div></pre></td><td class="code"><pre><div class="line">--limit rate[/second|/minute|/hour|/day]：限制令牌发放的速率</div><div class="line">--limit-burst number：令牌桶最大收多少个令牌</div><div class="line">	</div><div class="line">$ iptables -I INPUT -d 172.16.1.70 -p icpmp --icmp-type 8 -m limit --limit-burst 5 --limit 4/minute -j ACCEPT</div><div class="line">$ iptables -I OUTPUT -s 172.16.1.70 -p icmp --icmp-type 0 -j ACCEPT</div></pre></td></tr></table></figure><br><br><br><br><font size="3" color="#5F9F9F">7、state：连接追踪(开启后，大大增强服务器安全性)</font><br>The “state” extension is a subset of the “conntrack” module.  “state” allows access to the connection tracking state for this packet.<br><br><strong>连接追踪机制：</strong><br><br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div></pre></td><td class="code"><pre><div class="line">连接过的，存在内存中的一个缓存表中。</div><div class="line">	但是内存空间是有限的，记录具有超时时间</div><div class="line">	对于访问量大的服务器：(不建议开启)</div><div class="line">解决办法：</div><div class="line">    (1)关闭连接追踪</div><div class="line">    (2)扩大内存空间</div></pre></td></tr></table></figure><br><br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div></pre></td><td class="code"><pre><div class="line">[!] --state STATE</div><div class="line">	INVALID, ESTABLISHED, NEW, RELATED or UNTRACKED.</div><div class="line">	</div><div class="line">STATE：</div><div class="line">	NEW: 新连接请求；</div><div class="line">	ESTABLISHED：已建立的连接；(一旦接受新请求之后，NEW --&gt; ESTABLISHED)</div><div class="line">	INVALID：无法识别的连接；不合法的连接</div><div class="line">	RELATED：相关联的连接；当前连接是一个新请求，但附属于某个已存在的连接；(与某个ESTABLISHED具有关系的)</div><div class="line">	UNTRACKED：未追踪的连接；</div></pre></td></tr></table></figure><br><br><font></font>


<h5 id="Target"><a href="#Target" class="headerlink" title="Target"></a><font size="5" color="#007FFF">Target</font></h5><p><code>-j targetname [per-target-options]</code></p>
<p><strong>简单target：</strong><br>    ACCEPT， DROP</p>
<p><strong>扩展target：</strong><br>    REJECT</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div></pre></td><td class="code"><pre><div class="line">--reject-with type：&apos;表示以什么理由去拒绝；</div><div class="line">拒绝理由：</div><div class="line">icmp-net-unreachable            网络不可达</div><div class="line">icmp-host-unreachable           主机不可达</div><div class="line">icmp-port-unreachable           端口不可达(默认拒绝理由)</div><div class="line">icmp-proto-unreach‐able         协议不可达</div><div class="line">icmp-net-prohibited             网络被禁止        </div><div class="line">icmp-host-prohibited            主机被禁止</div><div class="line">icmp-admin-prohibited           管理员被禁止</div></pre></td></tr></table></figure>
<p><strong>LOG：记录日志</strong></p>
<p>默认日志信息保存于：/var/log/message</p>
<font color="#FF0000"><em>注意：日志规则要放在REJECT和ACCEPT之前</em></font>


<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line">--log-level：日志级别</div><div class="line">--log-prefix：日志前缀(加一些自定义字符在记录日志之前，用于区别)</div></pre></td></tr></table></figure>
<p><br></p>
<h4 id="保存和载入规则"><a href="#保存和载入规则" class="headerlink" title="保存和载入规则"></a><font size="5" color="#8F8FBD">保存和载入规则</font></h4><p>保存：iptables-save &gt; /PATH/TO/SOME_RULE_FILE<br>重载：iptabls-restore &lt; /PATH/FROM/SOME_RULE_FILE<br>    -n, –noflush：不清除原有规则<br>    -t, –test：仅分析生成规则集，但不提交(测试规则是否正常，正常后再重载)</p>
<font color="#FF0000"><em>注意：重载时，不会自动装载 nf_conntrack_ftp模块；可以使用脚本实现</em></font>

<p><br><br><code>CentOS6使用方法：</code></p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div></pre></td><td class="code"><pre><div class="line">保存规则：</div><div class="line">$ service iptables save</div><div class="line">	保存规则于/etc/sysconfig/iptables文件，覆盖保存；</div><div class="line">重载规则：(直接重载)</div><div class="line">$ service iptables restart</div><div class="line">	默认重载/etc/sysconfig/iptables文件中的规则 </div><div class="line">	</div><div class="line">配置文件：/etc/sysconfig/iptables-config</div></pre></td></tr></table></figure>
<p><br><br><code>CentOS7使用方法：</code></p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line">(1) 自定义Unit File，进行iptables-restore；</div><div class="line">(2) firewalld服务；</div><div class="line">(3) 自定义脚本；</div></pre></td></tr></table></figure>
<p><br></p>
<h3 id="规则优化的思路"><a href="#规则优化的思路" class="headerlink" title="规则优化的思路"></a>规则优化的思路</h3><p>使用自定义链管理特定应用的相关规则，模块化管理规则；</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div></pre></td><td class="code"><pre><div class="line">(1) 优先放行双方向状态为ESTABLISHED的报文；</div><div class="line">(2) 服务于不同类别的功能的规则，匹配到报文可能性更大的放前面；</div><div class="line">(3) 服务于同一类别的功能的规则，匹配条件较严格的放在前面；</div><div class="line">(4) 设置默认策略：白名单机制</div><div class="line">	(a) iptables -P，不建议；</div><div class="line">	(b) 建议在规则的最后定义规则做为默认策略；</div></pre></td></tr></table></figure>
<hr>
<h2 id="Netfilter-packet-flow详解图-网络配图"><a href="#Netfilter-packet-flow详解图-网络配图" class="headerlink" title="Netfilter-packet-flow详解图(网络配图)"></a>Netfilter-packet-flow详解图(网络配图)</h2><p><img src="https://ws2.sinaimg.cn/large/006tNbRwly1fgfcasgobvj314a0d7n0j.jpg" alt=""></p>
<hr>
<p>到此为止，iptables的简介和用法已经介绍完毕，下一章，我们会介绍 <font color="#3299CC"><strong>iptables的进阶用法–NAT地址转换</strong></font></p>
<hr>
<iframe frameborder="no" border="0" marginwidth="0" marginheight="0" width="330" height="86" src="//music.163.com/outchain/player?type=2&id=1591910&auto=0&height=66"></iframe>

<p>本文出自<a href="http://maxiecloud.com">Maxie’s Notes</a>博客，转载请务必保留此出处。</p>
<p><img src="https://ww1.sinaimg.cn/large/006tNbRwly1fdzc80odsuj30gn0ilq5m.jpg" alt=""></p>
]]></content>
    
    <summary type="html">
    
      &lt;p&gt;&lt;img src=&quot;https://ws1.sinaimg.cn/large/006tKfTcly1fgf6igu3zwj30xc0go7wh.jpg&quot; alt=&quot;&quot;&gt;&lt;/p&gt;
&lt;blockquote class=&quot;blockquote-center&quot;&gt;iptables是一个配置 Linux内核 防火墙的命令行工具，是 netfilter 项目的一部分。&lt;br&gt;术语 iptables 也经常代指该内核级防火墙。&lt;br&gt;iptables可以直接配置，也可以通过 CentOS7中的新特性–firewalld 和图形界面配置。&lt;br&gt;iptables 适用于ipv4, ip6tables 适用于ipv6。&lt;br&gt;&lt;/blockquote&gt;

&lt;p&gt;在介绍如何在 Linux中使用与配置&lt;code&gt;iptables&lt;/code&gt;之前，让我们先对&lt;font color=&quot;#FF000&quot;&gt;防火墙&lt;/font&gt;有一个简单的理解：&lt;/p&gt;
&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;1&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;2&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;3&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;4&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;它是一种位于内部网络与外部网络之间的网络安全系统。&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;一项信息安全的防护系统，依照特定的规则，允许或是限制传输的数据通过。&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;内部网络和外部网络之间的所有网络数据流都必须经过防火墙，这是防火墙所处网络位置特性，同时也是一个前提。&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;因为只有当防火墙是内、外部网络之间通信的唯一通道，才可以全面、有效地保护企业网内部网络不受侵害，所以防火墙一般部署在内网的最外层。&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
    
    </summary>
    
      <category term="iptables" scheme="http://maxiecloud.com/categories/iptables/"/>
    
    
      <category term="linux" scheme="http://maxiecloud.com/tags/linux/"/>
    
      <category term="iptables" scheme="http://maxiecloud.com/tags/iptables/"/>
    
      <category term="firewall" scheme="http://maxiecloud.com/tags/firewall/"/>
    
      <category term="netfilter" scheme="http://maxiecloud.com/tags/netfilter/"/>
    
  </entry>
  
  <entry>
    <title>转载：iptables详解：图文并茂理解iptables</title>
    <link href="http://maxiecloud.com/2017/06/09/iptables-1/"/>
    <id>http://maxiecloud.com/2017/06/09/iptables-1/</id>
    <published>2017-06-09T02:42:51.000Z</published>
    <updated>2017-06-09T09:12:54.000Z</updated>
    
    <content type="html"><![CDATA[<p>（原文地址：<a href="http://www.zsythink.net/archives/1199" target="_blank" rel="external">http://www.zsythink.net/archives/1199</a> ）</p>
<p>以下是转载内容：</p>
<font size="4"> iptables详解：图文并茂理解iptables | 朱双印博客 </font><br><br><br><font size="3">朱双印</font>


<p>这篇文章会尽量以通俗易懂的方式描述iptables的相关概念，请耐心的读完它。</p>
<h2 id="防火墙相关概念"><a href="#防火墙相关概念" class="headerlink" title="防火墙相关概念"></a>防火墙相关概念</h2><p>此处先描述一些相关概念。</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div></pre></td><td class="code"><pre><div class="line">从逻辑上讲。防火墙可以大体分为主机防火墙和网络防火墙。</div><div class="line">主机防火墙：针对于单个主机进行防护。</div><div class="line">网络防火墙：往往处于网络入口或边缘，针对于网络入口进行防护，服务于防火墙背后的本地局域网。</div><div class="line">网络防火墙和主机防火墙并不冲突，可以理解为，网络防火墙主外（集体）， 主机防火墙主内（个人）。</div><div class="line"> </div><div class="line">从物理上讲，防火墙可以分为硬件防火墙和软件防火墙。</div><div class="line">硬件防火墙：在硬件级别实现部分防火墙功能，另一部分功能基于软件实现，性能高，成本高。</div><div class="line">软件防火墙：应用软件处理逻辑运行于通用硬件平台之上的防火墙，性能低，成本低。</div></pre></td></tr></table></figure>
<p><img src="https://ws1.sinaimg.cn/large/006tKfTcly1fgerbvmnt0j31ab0utq4r.jpg" alt=""></p>
<a id="more"></a>
<p>那么在此处，我们就来聊聊Linux的iptables</p>
<p>iptables其实不是真正的防火墙，我们可以把它理解成一个客户端代理，用户通过iptables这个代理，将用户的安全设定执行到对应的”安全框架”中，这个”安全框架”才是真正的防火墙，这个框架的名字叫netfilter</p>
<p>netfilter才是防火墙真正的安全框架（framework），netfilter位于内核空间。<br>iptables其实是一个命令行工具，位于用户空间，我们用这个工具操作真正的框架。</p>
<p>netfilter/iptables（下文中简称为iptables）组成Linux平台下的包过滤防火墙，与大多数的Linux软件一样，这个包过滤防火墙是免费的，它可以代替昂贵的商业防火墙解决方案，完成封包过滤、封包重定向和网络地址转换（NAT）等功能。</p>
<p>Netfilter是Linux操作系统核心层内部的一个数据包处理模块，它具有如下功能：<br>网络地址转换(Network Address Translate)<br>数据包内容修改<br>以及数据包过滤的防火墙功能</p>
<p>所以说，虽然我们使用service iptables start启动iptables”服务”，但是其实准确的来说，iptables并没有一个守护进程，所以并不能算是真正意义上的服务，而应该算是内核提供的功能。</p>
<hr>
<h2 id="iptables基础"><a href="#iptables基础" class="headerlink" title="iptables基础"></a>iptables基础</h2><p>我们知道iptables是按照规则来办事的，我们就来说说规则（rules），规则其实就是网络管理员预定义的条件，规则一般的定义为”如果数据包头符合这样的条件，就这样处理这个数据包”。规则存储在内核空间的信息包过滤表中，这些规则分别指定了源地址、目的地址、传输协议（如TCP、UDP、ICMP）和服务类型（如HTTP、FTP和SMTP）等。当数据包与规则匹配时，iptables就根据规则所定义的方法来处理这些数据包，如放行（accept）、拒绝（reject）和丢弃（drop）等。配置防火墙的主要工作就是添加、修改和删除这些规则。</p>
<p>这样说可能并不容易理解，我们来换个容易理解的角度，从头说起.</p>
<p>当客户端访问服务器的web服务时，客户端发送报文到网卡，而tcp/ip协议栈是属于内核的一部分，所以，客户端的信息会通过内核的TCP协议传输到用户空间中的web服务中，而此时，客户端报文的目标终点为web服务所监听的套接字（IP：Port）上，当web服务需要响应客户端请求时，web服务发出的响应报文的目标终点则为客户端，这个时候，web服务所监听的IP与端口反而变成了原点，我们说过，netfilter才是真正的防火墙，它是内核的一部分，所以，如果我们想要防火墙能够达到”防火”的目的，则需要在内核中设置关卡，所有进出的报文都要通过这些关卡，经过检查后，符合放行条件的才能放行，符合阻拦条件的则需要被阻止，于是，就出现了input关卡和output关卡，<font color="#FF0000">而这些关卡在iptables中不被称为”关卡”,而被称为”链”</font>。</p>
<p><img src="https://ws4.sinaimg.cn/large/006tKfTcly1fgerfb23uzj310011941g.jpg" alt=""></p>
<p>其实我们上面描述的场景并不完善，因为客户端发来的报文访问的目标地址可能并不是本机，而是其他服务器，当本机的内核支持IP_FORWARD时，我们可以将报文转发给其他服务器，所以，这个时候，我们就会提到iptables中的其他”关卡”，也就是其他”链”，他们就是  “路由前”、”转发”、”路由后”，他们的英文名是<br>PREROUTING、FORWARD、POSTROUTING</p>
<p>也就是说，当我们启用了防火墙功能时，报文需要经过如下关卡，也就是说，根据实际情况的不同，报文经过”链”可能不同。如果报文需要转发，那么报文则不会经过input链发往用户空间，而是直接在内核空间中经过forward链和postrouting链转发出去的。</p>
<p><img src="https://ws1.sinaimg.cn/large/006tKfTcly1fgerftzhqrj31kw107dnb.jpg" alt=""></p>
<p>所以，根据上图，我们能够想象出某些常用场景中，报文的流向：<br>到本机某进程的报文：PREROUTING –&gt; INPUT<br>由本机转发的报文：PREROUTING –&gt; FORWARD –&gt; POSTROUTING<br>由本机的某进程发出报文（通常为响应报文）：OUTPUT –&gt; POSTROUTING</p>
<hr>
<h2 id="链的概念"><a href="#链的概念" class="headerlink" title="链的概念"></a>链的概念</h2><p>现在，我们想象一下，这些”关卡”在iptables中为什么被称作”链”呢？我们知道，防火墙的作用就在于对经过的报文匹配”规则”，然后执行对应的”动作”,所以，当报文经过这些关卡的时候，则必须匹配这个关卡上的规则，但是，这个关卡上可能不止有一条规则，而是有很多条规则，当我们把这些规则串到一个链条上的时候，就形成了”链”,所以，我们把每一个”关卡”想象成如下图中的模样  ，这样来说，把他们称为”链”更为合适，每个经过这个”关卡”的报文，都要将这条”链”上的所有规则匹配一遍，如果有符合条件的规则，则执行规则对应的动作。</p>
<p><img src="https://ws3.sinaimg.cn/large/006tKfTcly1fgergsancjj31e01a00yz.jpg" alt=""></p>
<h2 id="表的概念"><a href="#表的概念" class="headerlink" title="表的概念"></a>表的概念</h2><p>我们再想想另外一个问题，我们对每个”链”上都放置了一串规则，但是这些规则有些很相似，比如，A类规则都是对IP和者端口的过滤，B类规则是修改报文，那么这个时候，我们是不是能把实现相同功能的规则放在一起呢，必须能的。</p>
<p>我们把具有相同功能的规则的集合叫做”表”，所以说，不同功能的规则，我们可以放置在不同的表中进行管理，而iptables已经为我们定义了4种表，每种表对应了不同的功能，而我们定义的规则也都逃脱不了这4种功能的范围，所以，学习iptables之前，我们必须先搞明白每种表 的作用。<br>iptables为我们提供了如下规则的分类，或者说，iptables为我们提供了如下”表”</p>
<p>filter表：负责过滤功能，防火墙；内核模块：iptables_filter<br>nat表：network address translation，网络地址转换功能；内核模块：iptable_nat<br>mangle表：拆解报文，做出修改，并重新封装 的功能；iptable_mangle<br>raw表：关闭nat表上启用的连接追踪机制；iptable_raw<br>也就是说，我们自定义的所有规则，都是这四种分类中的规则，或者说，所有规则都存在于这4张”表”中。</p>
<hr>
<h2 id="表链关系"><a href="#表链关系" class="headerlink" title="表链关系"></a>表链关系</h2><p>但是我们需要注意的是，某些”链”中注定不会包含”某类规则”，就像某些”关卡”天生就不具备某些功能一样，比如，A”关卡”只负责打击陆地敌人，没有防空能力，B”关卡”只负责打击空中敌人，没有防御步兵的能力，C”关卡”可能比较NB，既能防空，也能防御陆地敌人，D”关卡”最屌，海陆空都能防。<br>那让我们来看看，每个”关卡”都有哪些能力，或者说，让我们看看每个”链”上的规则都存在于哪些”表”中。<br>我们还是以图为例，先看看prerouting”链”上的规则都存在于哪些表中。</p>
<font color="#FF0000">注意：下图只用于说明prerouting链上的规则存在于哪些表中，并没有描述表的顺序。</font>

<p><img src="https://ws2.sinaimg.cn/large/006tKfTcly1fgerifz96ej30kl1e3414.jpg" alt=""></p>
<p>这幅图是什么意思呢，它的意思是说，prerouting”链”只拥有nat表、raw表和mangle表所对应的功能，所以，prerouting中的规则只能存放于nat表、raw表和mangle表中。</p>
<p>那么，根据上述思路，我们来总结一下，每个”关卡”都拥有什么功能，<br>或者说，每个”链”中的规则都存在于哪些”表”中。<br>PREROUTING      的规则可以存在于：raw表，mangle表，nat表。<br>INPUT          的规则可以存在于：mangle表，filter表，（centos7中还有nat表，centos6中没有）。<br>FORWARD         的规则可以存在于：mangle表，filter表。<br>OUTPUT         的规则可以存在于：raw表mangle表，nat表，filter表。<br>POSTROUTING      的规则可以存在于：mangle表，nat表。</p>
<p>但是，<font color="#FF0000">我们在实际的使用过程中，往往是通过”表”作为操作入口，对规则进行定义的</font>，之所以按照上述过程介绍iptables，是因为从”关卡”的角度更容易从入门的角度理解，但是为了以便在实际使用的时候，更加顺畅的理解它们，此处我们还要将各”表”与”链”的关系罗列出来，<br>表（功能）&lt;–&gt;   链（钩子）：<br>raw     表中的规则可以被哪些链使用：PREROUTING，OUTPUT<br>mangle  表中的规则可以被哪些链使用：PREROUTING，INPUT，FORWARD，OUTPUT，POSTROUTING<br>nat     表中的规则可以被哪些链使用：PREROUTING，OUTPUT，POSTROUTING（centos7中还有INPUT，centos6中没有）<br>filter  表中的规则可以被哪些链使用：INPUT，FORWARD，OUTPUT</p>
<p>其实我们还需要注意一点，因为数据包经过一个”链”的时候，会将当前链的所有规则都匹配一遍，但是匹配时总归要有顺序，我们应该一条一条的去匹配，而且我们说过，相同功能类型的规则会汇聚在一张”表”中，那么，哪些”表”中的规则会放在”链”的最前面执行呢，这时候就需要有一个优先级的问题，我们还拿prerouting”链”做图示。</p>
<p><img src="https://ws1.sinaimg.cn/large/006tKfTcly1fgerjh17dyj30mh1drad3.jpg" alt=""></p>
<p>rerouting链中的规则存放于三张表中，而这三张表中的规则执行的优先级如下：<br>raw –&gt; mangle –&gt; nat</p>
<p>但是我们知道，iptables为我们定义了4张”表”,当他们处于同一条”链”时，执行的优先级如下。<br>优先级次序（由高而低）：<br>raw –&gt; mangle –&gt; nat –&gt; filter<br>但是我们前面说过，某些链天生就不能使用某些表中的规则，所以，4张表中的规则处于同一条链的目前只有output链，它就是传说中海陆空都能防守的关卡。</p>
<p>为了更方便的管理，我们还可以在某个表里面创建自定义链，将针对某个应用程序所设置的规则放置在这个自定义链中，但是自定义链接不能直接使用，只能被某个默认的链当做动作去调用才能起作用，我们可以这样想象，自定义链就是一段比较”短”的链子，这条”短”链子上的规则都是针对某个应用程序制定的，但是这条短的链子并不能直接使用，而是需要”焊接”在iptables默认定义链子上，才能被IPtables使用，这就是为什么默认定义的”链”需要把”自定义链”当做”动作”去引用的原因。这是后话，后面再聊，在实际使用时我们即可更加的明白。</p>
<hr>
<h2 id="数据经过防火墙流程"><a href="#数据经过防火墙流程" class="headerlink" title="数据经过防火墙流程"></a>数据经过防火墙流程</h2><p>结合上述所有的描述，我们可以将数据包通过防火墙的流程总结为下图：</p>
<p><img src="https://ws3.sinaimg.cn/large/006tKfTcly1fgerkkbnonj31kw0u3dsi.jpg" alt=""></p>
<p>我们在写Iptables规则的时候，要时刻牢记这张路由次序图，灵活配置规则。</p>
<p>我们将经常用到的对应关系重新写在此处，方便对应图例查看。<br>链的规则存放于哪些表中（从链到表的对应关系）：<br>PREROUTING   的规则可以存在于：raw表，mangle表，nat表。<br>INPUT        的规则可以存在于：mangle表，filter表，（centos7中还有nat表，centos6中没有）。<br>FORWARD      的规则可以存在于：mangle表，filter表。<br>OUTPUT       的规则可以存在于：raw表mangle表，nat表，filter表。<br>POSTROUTING  的规则可以存在于：mangle表，nat表。</p>
<p>表中的规则可以被哪些链使用（从表到链的对应关系）：<br>raw     表中的规则可以被哪些链使用：PREROUTING，OUTPUT<br>mangle  表中的规则可以被哪些链使用：PREROUTING，INPUT，FORWARD，OUTPUT，POSTROUTING<br>nat     表中的规则可以被哪些链使用：PREROUTING，OUTPUT，POSTROUTING（centos7中还有INPUT，centos6中没有）<br>filter  表中的规则可以被哪些链使用：INPUT，FORWARD，OUTPUT</p>
<p>下图中nat表在centos7中的情况就不再标明。</p>
<p><img src="https://ws3.sinaimg.cn/large/006tKfTcly1fgerl3npzdj31e00nzgq3.jpg" alt=""></p>
<h2 id="规则的概念"><a href="#规则的概念" class="headerlink" title="规则的概念"></a>规则的概念</h2><p>说了一圈又说回来了，在上述描述中我们一直在提规则，可是没有细说，现在说说它。</p>
<p>先说说规则的概念，然后再通俗的解释它。<br>规则：根据指定的匹配条件来尝试匹配每个流经此处的报文，一旦匹配成功，则由规则后面指定的处理动作进行处理；</p>
<p>那么我们来通俗的解释一下什么是iptables的规则，之前打过一个比方，每条”链”都是一个”关卡”，每个通过这个”关卡”的报文都要匹配这个关卡上的规则，如果匹配，则对报文进行对应的处理，比如说，你我二人此刻就好像两个”报文”，你我二人此刻都要入关，可是城主有命，只有器宇轩昂的人才能入关，不符合此条件的人不能入关，于是守关将士按照城主制定的”规则”，开始打量你我二人，最终，你顺利入关了，而我已被拒之门外，因为你符合”器宇轩昂”的标准，所以把你”放行”了，而我不符合标准，所以没有被放行，其实，”器宇轩昂”就是一种”匹配条件”，”放行”就是一种”动作”，”匹配条件”与”动作”组成了规则。</p>
<p>了解了规则的概念，那我们来聊聊规则的组成部分,此处只是大概的将规则的结构列出，后面的文章中会单独对规则进行总结。<br>规则由匹配条件和处理动作组成。</p>
<h3 id="匹配条件"><a href="#匹配条件" class="headerlink" title="匹配条件"></a>匹配条件</h3><p>匹配条件分为基本匹配条件与扩展匹配条件</p>
<p><strong>基本匹配条件：</strong><br>源地址Source IP，目标地址 Destination IP<br>上述内容都可以作为基本匹配条件。</p>
<p><strong>扩展匹配条件：</strong><br>除了上述的条件可以用于匹配，还有很多其他的条件可以用于匹配，这些条件泛称为扩展条件，这些扩展条件其实也是netfilter中的一部分，只是以模块的形式存在，如果想要使用这些条件，则需要依赖对应的扩展模块。<br>源端口Source Port, 目标端口Destination Port<br>上述内容都可以作为扩展匹配条件</p>
<h3 id="处理动作"><a href="#处理动作" class="headerlink" title="处理动作"></a>处理动作</h3><p>处理动作在iptables中被称为target（这样说并不准确，我们暂且这样称呼），动作也可以分为基本动作和扩展动作。<br>此处列出一些常用的动作，之后的文章会对它们进行详细的示例与总结：</p>
<p><strong>ACCEPT：</strong>允许数据包通过。<br><strong>DROP：</strong>直接丢弃数据包，不给任何回应信息，这时候客户端会感觉自己的请求泥牛入海了，过了超时时间才会有反应。<br><strong>REJECT：</strong>拒绝数据包通过，必要时会给数据发送端一个响应的信息，客户端刚请求就会收到拒绝的信息。<br><strong>SNAT：</strong>源地址转换，解决内网用户用同一个公网地址上网的问题。<br><strong>MASQUERADE：</strong>是SNAT的一种特殊形式，适用于动态的、临时会变的ip上。<br><strong>DNAT：</strong>目标地址转换。<br><strong>REDIRECT：</strong>在本机做端口映射。<br><strong>LOG：</strong>在/var/log/messages文件中记录日志信息，然后将数据包传递给下一条规则，也就是说除了记录以外不对数据包做任何其他操作，仍然让下一条规则去匹配。</p>
<hr>
<h2 id="小结"><a href="#小结" class="headerlink" title="小结"></a>小结</h2><p>好了，iptables的概念暂时总结到这里，懂得概念之后，再结合实际的命令去练习，搞定iptables绝对妥妥的。<br>iptables的实际操作我们会另外总结为其他文章，iptables系列文章列表直达链接如下：</p>
<p><a href="http://www.zsythink.net/archives/tag/iptables/" target="_blank" rel="external">iptables零基础快速入门系列</a></p>
<p>最后说一句，客官您的评论、收藏、推荐是兄弟我写博客的最大动力，希望亲以后多捧场哦，么么哒~~~~</p>
<hr>
<iframe frameborder="no" border="0" marginwidth="0" marginheight="0" width="400" height="86" src="//music.163.com/outchain/player?type=2&id=417250673&auto=0&height=66"></iframe>

<p><img src="https://ww1.sinaimg.cn/large/006tNbRwly1fdzc80odsuj30gn0ilq5m.jpg" alt=""></p>
]]></content>
    
    <summary type="html">
    
      &lt;p&gt;（原文地址：&lt;a href=&quot;http://www.zsythink.net/archives/1199&quot;&gt;http://www.zsythink.net/archives/1199&lt;/a&gt; ）&lt;/p&gt;
&lt;p&gt;以下是转载内容：&lt;/p&gt;
&lt;font size=4&gt; iptables详解：图文并茂理解iptables | 朱双印博客 &lt;/font&gt;&lt;br&gt;&lt;br&gt;&lt;br&gt;&lt;font size=3&gt;朱双印&lt;/font&gt;


&lt;p&gt;这篇文章会尽量以通俗易懂的方式描述iptables的相关概念，请耐心的读完它。&lt;/p&gt;
&lt;h2 id=&quot;防火墙相关概念&quot;&gt;&lt;a href=&quot;#防火墙相关概念&quot; class=&quot;headerlink&quot; title=&quot;防火墙相关概念&quot;&gt;&lt;/a&gt;防火墙相关概念&lt;/h2&gt;&lt;p&gt;此处先描述一些相关概念。&lt;/p&gt;
&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;1&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;2&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;3&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;4&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;5&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;6&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;7&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;8&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;从逻辑上讲。防火墙可以大体分为主机防火墙和网络防火墙。&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;主机防火墙：针对于单个主机进行防护。&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;网络防火墙：往往处于网络入口或边缘，针对于网络入口进行防护，服务于防火墙背后的本地局域网。&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;网络防火墙和主机防火墙并不冲突，可以理解为，网络防火墙主外（集体）， 主机防火墙主内（个人）。&lt;/div&gt;&lt;div class=&quot;line&quot;&gt; &lt;/div&gt;&lt;div class=&quot;line&quot;&gt;从物理上讲，防火墙可以分为硬件防火墙和软件防火墙。&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;硬件防火墙：在硬件级别实现部分防火墙功能，另一部分功能基于软件实现，性能高，成本高。&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;软件防火墙：应用软件处理逻辑运行于通用硬件平台之上的防火墙，性能低，成本低。&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;&lt;img src=&quot;https://ws1.sinaimg.cn/large/006tKfTcly1fgerbvmnt0j31ab0utq4r.jpg&quot; alt=&quot;&quot;&gt;&lt;/p&gt;
    
    </summary>
    
      <category term="iptables" scheme="http://maxiecloud.com/categories/iptables/"/>
    
    
      <category term="linux" scheme="http://maxiecloud.com/tags/linux/"/>
    
      <category term="iptables" scheme="http://maxiecloud.com/tags/iptables/"/>
    
      <category term="转载" scheme="http://maxiecloud.com/tags/%E8%BD%AC%E8%BD%BD/"/>
    
  </entry>
  
  <entry>
    <title>NFS、Samba从入门到进阶</title>
    <link href="http://maxiecloud.com/2017/06/06/share-file-system/"/>
    <id>http://maxiecloud.com/2017/06/06/share-file-system/</id>
    <published>2017-06-06T13:18:32.000Z</published>
    <updated>2017-06-06T14:51:07.000Z</updated>
    
    <content type="html"><![CDATA[<p><img src="https://ws2.sinaimg.cn/large/006tNbRwly1fgbt54fxxuj30xc0go49h.jpg" alt=""></p>
<blockquote class="blockquote-center">在本章我们将介绍nfs与samba的进阶实验与配置<br>nfs: Network File System,是由著名的 Sun 公司在1984年发布，其功能旨在允许客户端主机可以像访问本地存储一样通过访问服务器端文件。<br>samba：samba是种用来让UNIX系列的操作系统与微软Windows操作系统的SMB/CIFS（Server Message Block/Common Internet File System）<br></blockquote>

<font size="4" color="#97694F"> NFS： </font> 

<ul>
<li>监听的端口：<code>2049/tcp</code></li>
<li>辅助类的服务：<code>rpc(远程过程调用)</code>,<code>portmapper</code></li>
<li>必备工具包：<code>nfs-utils</code></li>
<li>配置文件：<code>/etc/exports</code></li>
<li>其他命令程序：<code>showmount</code>,<code>exportfs</code></li>
</ul>
<hr>
<font size="4" color="#97694F"> Samba： </font> 

<ul>
<li>监听的端口：<code>137/udp</code>,<code>138/udp</code> ; <code>139/tcp</code>,<code>445/tcp</code></li>
<li>服务端程序包：<code>samba</code>,<code>samba-common</code>,<code>samba-libs</code></li>
<li>主程序：<code>nmbd</code>,<code>smbd</code></li>
<li>Unit File：<code>smb.service</code>,<code>nmb.service</code></li>
<li>主配置文件：<code>/etc/samba/smb.conf</code></li>
</ul>
<hr>
<a id="more"></a>
<font size="5" color="#FF6EC7"> 实验环境： </font>

<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line">虚拟机操作系统（OS）：CentOS Linux release 7.2.1511 (Core)</div><div class="line">内核版本（Kernel）：3.10.0-327.el7.x86_64</div><div class="line">虚拟机环境：VMware Fusion 专业版 8.5.3 (4696910)</div></pre></td></tr></table></figure>
<p><strong>客户端环境：</strong><br><img src="https://ws4.sinaimg.cn/large/006tNc79ly1fg5rfg0cjsj30ga0a8dj6.jpg" alt=""></p>
<hr>
<h3 id="NFS进阶实验："><a href="#NFS进阶实验：" class="headerlink" title="NFS进阶实验："></a>NFS进阶实验：</h3><font size="4" color="#38B0DE"> <strong>此次实验的目标如下：</strong> </font>


<p><strong>第一题：</strong></p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div></pre></td><td class="code"><pre><div class="line">(1) nfs server导出/data/mywp，在目录中提供wordpress; </div><div class="line">(2) nfs client挂载nfs server导出的文件系统至/nfs/wordpress；</div><div class="line">(3) 客户端（lamp）部署wordpress，并让其正常访问；要确保能正常发文章，上传图片；</div><div class="line">(4) 客户端2(lamp)，挂载nfs server导出的文件系统至/nfs/wordpress；验正其wordpress是否可被访问； 要确保能正常发文章，上传图片；</div></pre></td></tr></table></figure>
<p><strong>第二题：</strong></p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line">(1) nfs server导出/data/目录；</div><div class="line">(2) nfs client挂载/data/至本地的/mydata目录；本地的mysqld或mariadb服务的数据目录设置为/mydata, 要求服务能正常启动，且可正常 存储数据；</div></pre></td></tr></table></figure>
<hr>
<div class="note primary"><h3 id="NFS实验步骤"><a href="#NFS实验步骤" class="headerlink" title="NFS实验步骤"></a>NFS实验步骤</h3></div>
<p>LAMP Server 1：172.16.1.70   www.mywp1.com<br>LAMP Server 2：172.16.1.20   www.mywp2.com</p>
<p>NFS Server：172.16.1.100</p>
<font size="5" color="#70DBDB">第一题步骤：</font>



<h4 id="1、安装配置第一台LAMP服务器"><a href="#1、安装配置第一台LAMP服务器" class="headerlink" title="1、安装配置第一台LAMP服务器"></a>1、安装配置第一台LAMP服务器</h4><p><strong>安装httpd并配置虚拟主机</strong><br>（注意这里为了方便，不再测试httpd服务，直接配置）</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div></pre></td><td class="code"><pre><div class="line">$ yum install httpd php php-mysql php-mbstring</div><div class="line">$ vim /etc/httpd/conf.d/lamp.conf</div><div class="line">&lt;VirtualHost *:80&gt;</div><div class="line">        ServerName 172.16.1.70</div><div class="line">        DocumentRoot &quot;/nfs/wordpress/&quot;</div><div class="line">        &lt;Directory &quot;/nfs/wordpress/&quot;&gt;</div><div class="line">                Options None</div><div class="line">                AllowOverride None</div><div class="line">                Require all granted</div><div class="line">        &lt;/Directory&gt;</div><div class="line">        CustomLog &quot;/nfs/wordpress/log/access_log&quot; combined</div><div class="line">        ErrorLog &quot;/nfs/wordpress/log/error_log&quot;</div><div class="line">&lt;/VirtualHost&gt;</div><div class="line"></div><div class="line">$ mkdir -pv /nfs/wordpress/log</div></pre></td></tr></table></figure>
<h4 id="2、配置NFS-Server"><a href="#2、配置NFS-Server" class="headerlink" title="2、配置NFS Server"></a>2、配置NFS Server</h4><p><strong>安装nfs、nfs-utils、php、php-mysql、php-mbstring</strong></p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">$ yum install nfs nfs-utils php php-mysql php-mbstring</div></pre></td></tr></table></figure>
<p><strong>安装MariaDB以及修改配置文件</strong></p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div></pre></td><td class="code"><pre><div class="line">$ yum install mariadb-server</div><div class="line">$ vim /etc/my.cnf.d/server.conf</div><div class="line">[mysqld]</div><div class="line">skip_name_resolve=ON            #开启跳过名称解析功能</div><div class="line">innodb_file_per_table=ON        #将共享表空间改为独立表空间</div><div class="line">log_bin=mysql-bin               #开启二进制日志</div></pre></td></tr></table></figure>
<p><strong>启动数据库</strong></p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">$ systemctl start mariadb.service</div></pre></td></tr></table></figure>
<p><strong>编辑nfs配置文件</strong></p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div></pre></td><td class="code"><pre><div class="line">$ vim /etc/exports </div><div class="line">/data/mywp	172.16.1.70(rw,no_root_squash) 172.16.1.20(rw,no_root_squash)</div><div class="line"></div><div class="line">创建共享目录：</div><div class="line">$ mkdir -pv /data/mywp</div></pre></td></tr></table></figure>
<p><strong>启动NFS服务</strong></p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">$ systemctl start nfs.service</div></pre></td></tr></table></figure>
<h4 id="3、在LAMP1-上挂载NFS共享的目录"><a href="#3、在LAMP1-上挂载NFS共享的目录" class="headerlink" title="3、在LAMP1 上挂载NFS共享的目录"></a>3、在LAMP1 上挂载NFS共享的目录</h4><p><strong>查看并挂载</strong></p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div></pre></td><td class="code"><pre><div class="line">$ showmount -e 172.16.1.100</div><div class="line">Export list for 172.16.1.100:</div><div class="line">/data/mywp   172.16.1.20,172.16.1.70</div><div class="line"></div><div class="line">$ mount -t nfs 172.16.1.100:/data/mywp /nfs/wordpress</div></pre></td></tr></table></figure>
<p><strong>测试挂载点读写权限</strong></p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div></pre></td><td class="code"><pre><div class="line">$ cd /nfs/wordpress</div><div class="line">$ mkdir testdir</div><div class="line">$ touch 1.txt </div><div class="line">$ rm 1.txt</div><div class="line">$ rm -f testdir</div></pre></td></tr></table></figure>
<h4 id="4、在NFS服务器上的共享目录解压wordpress并配置，为其创建数据库，以及远程连接的权限"><a href="#4、在NFS服务器上的共享目录解压wordpress并配置，为其创建数据库，以及远程连接的权限" class="headerlink" title="4、在NFS服务器上的共享目录解压wordpress并配置，为其创建数据库，以及远程连接的权限"></a>4、在NFS服务器上的共享目录解压wordpress并配置，为其创建数据库，以及远程连接的权限</h4><p><strong>解压WordPress并修改其配置文件</strong></p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div></pre></td><td class="code"><pre><div class="line">$ scp wordpress-4.7.4-zh_CN.tar.gz root@172.16.1.100:/data/mywp         #这步操作在个人客户端操作</div><div class="line"></div><div class="line">$ cd /root </div><div class="line">$ tar xf wordpress-4.7.4-zh_CN.tar.gz</div><div class="line">$ mv wordpress /data/mywp/</div><div class="line">$ cd /data/mywp/wordpress</div><div class="line">$ mv config.sample.inc.php config.inc.php</div><div class="line">$ vim config.inc.php</div><div class="line">修改如下：</div><div class="line"></div><div class="line">// ** MySQL 设置 - 具体信息来自您正在使用的主机 ** //</div><div class="line">/** WordPress数据库的名称 */</div><div class="line">define(&apos;DB_NAME&apos;, &apos;wordpress&apos;);</div><div class="line"></div><div class="line">/** MySQL数据库用户名 */</div><div class="line">define(&apos;DB_USER&apos;, &apos;wordpress&apos;);</div><div class="line"></div><div class="line">/** MySQL数据库密码 */</div><div class="line">define(&apos;DB_PASSWORD&apos;, &apos;root@123&apos;);</div><div class="line"></div><div class="line">/** MySQL主机 */</div><div class="line">define(&apos;DB_HOST&apos;, &apos;172.16.1.100&apos;);</div><div class="line"></div><div class="line">/** 创建数据表时默认的文字编码 */</div><div class="line">define(&apos;DB_CHARSET&apos;, &apos;utf8&apos;);</div><div class="line"></div><div class="line">/** 数据库整理类型。如不确定请勿更改 */</div><div class="line">define(&apos;DB_COLLATE&apos;, &apos;&apos;);</div></pre></td></tr></table></figure>
<p><strong>创建WordPress数据库，并授权远程连接的权限</strong></p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div></pre></td><td class="code"><pre><div class="line">$ mysql </div><div class="line">mysql&gt; CREATE DATEBASE wordpress;</div><div class="line">mysql&gt; GRANT ALL PRIVILEGES ON wordpress.* TO &apos;wordpress&apos;@&apos;172.16.1.100&apos; IDENTIFIED BY &apos;root@123&apos;;</div><div class="line">mysql&gt; GRANT ALL PRIVILEGES ON wordpress.* TO &apos;wordpress&apos;@&apos;172.16.1.70&apos; IDENTIFIED BY &apos;root@123&apos;;</div><div class="line">mysql&gt; GRANT ALL PRIVILEGES ON wordpress.* TO &apos;wordpress&apos;@&apos;172.16.1.20&apos; IDENTIFIED BY &apos;root@123&apos;;</div><div class="line">mysql&gt; FLUSH PRIVILEGES;</div></pre></td></tr></table></figure>
<p><strong>重启数据库服务</strong></p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">$ systemctl restart mariadb.service</div></pre></td></tr></table></figure>
<p><strong>修改/data/mywp目录权限</strong></p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line">$ chmod a+w /data/mywp/wordpress/wp-contet</div><div class="line">$ chown -R apache.apache /data/mywp/wordpress</div></pre></td></tr></table></figure>
<h4 id="5、在LAMP1上执行如下操作"><a href="#5、在LAMP1上执行如下操作" class="headerlink" title="5、在LAMP1上执行如下操作"></a>5、在LAMP1上执行如下操作</h4><p><strong>重启httpd服务</strong></p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">$ systemctl restart httpd</div></pre></td></tr></table></figure>
<h4 id="6、创建另一台LAMP2："><a href="#6、创建另一台LAMP2：" class="headerlink" title="6、创建另一台LAMP2："></a>6、创建另一台LAMP2：</h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div></pre></td><td class="code"><pre><div class="line">$ yum install httpd php php-mysql php-mbstring</div><div class="line">$ vim /etc/httpd/conf.d/lamp.conf</div><div class="line">	&lt;VirtualHost *:80&gt;</div><div class="line">	        ServerName 172.16.1.20</div><div class="line">	        DocumentRoot &quot;/nfs/wordpress/&quot;</div><div class="line">	        &lt;Directory &quot;/nfs/wordpress/&quot;&gt;</div><div class="line">	                Options None</div><div class="line">	                AllowOverride None</div><div class="line">	                Require all granted</div><div class="line">	        &lt;/Directory&gt;</div><div class="line">	        CustomLog &quot;/nfs/wordpress/log/access_log&quot; combined</div><div class="line">	        ErrorLog &quot;/nfs/wordpress/log/error_log&quot;</div><div class="line">	&lt;/VirtualHost&gt;</div><div class="line"></div><div class="line">$ mkdir -pv /nfs/wordpress/log</div><div class="line"></div><div class="line">$ mount -t nfs 172.16.1.100:/data/mywp /nfs/wordpress</div><div class="line"></div><div class="line">$ systemctl start httpd</div></pre></td></tr></table></figure>
<h4 id="7、在客户端-Mac-打开浏览器验证"><a href="#7、在客户端-Mac-打开浏览器验证" class="headerlink" title="7、在客户端(Mac)打开浏览器验证"></a>7、在客户端(Mac)打开浏览器验证</h4><p><strong>添加解析：</strong></p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div></pre></td><td class="code"><pre><div class="line">$ sudo vim /etc/hosts</div><div class="line">Password:</div><div class="line">172.16.1.70 www.mywp1.com</div><div class="line">172.16.1.70 www.mywp2.com</div></pre></td></tr></table></figure>
<p><strong>浏览器验证：</strong></p>
<p>www.mywp1.com<br><img src="https://ws3.sinaimg.cn/large/006tNc79ly1fgbubw51l0g30qo0v61l9.gif" alt=""></p>
<p>www.mywp2.com<br><img src="https://ws4.sinaimg.cn/large/006tNc79ly1fgbue5lbvpg30qo0v67wt.gif" alt=""></p>
<hr>
<font size="5" color="#70DBDB">第二题步骤：</font>

<h4 id="1、NFS-Server步骤如下"><a href="#1、NFS-Server步骤如下" class="headerlink" title="1、NFS Server步骤如下"></a>1、NFS Server步骤如下</h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div></pre></td><td class="code"><pre><div class="line">$ ! rpm -q nfs-utils &gt;/dev/null  &amp;&amp; yum install -y nfs-utils  #安装nfs </div><div class="line"></div><div class="line">$ systemctl  start nfs.service</div><div class="line"></div><div class="line">$ mkdir /data/mydata                                          #创建共享目录</div><div class="line"></div><div class="line">$ vim /etc/exports</div><div class="line">/data/mydata    172.16.1.70(rw,anonuid=27,anongid=27,async)</div><div class="line"></div><div class="line">$ exportfs  -avr</div><div class="line"></div><div class="line">$ setfacl -m o:rwx  /data/mydata</div></pre></td></tr></table></figure>
<h4 id="2、NFS-Client步骤如下："><a href="#2、NFS-Client步骤如下：" class="headerlink" title="2、NFS Client步骤如下："></a>2、NFS Client步骤如下：</h4><p>这里我们就使用之前的LAMP1作为我们的NFS Client</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div></pre></td><td class="code"><pre><div class="line">1、 安装nfs工具包</div><div class="line">$ yum install -y  nfs-utils</div><div class="line"></div><div class="line">2、 安装数据库服务端</div><div class="line">$ yum install -y mariadb-server</div><div class="line"></div><div class="line">3、 创建挂载点</div><div class="line">$ mkdir /mydata</div><div class="line"></div><div class="line">4、 挂载nfs文件系统</div><div class="line">$ mount  -t nfs  172.18.9.119:/data   /mydata</div><div class="line"></div><div class="line">5、 编辑mariadb配置文件：</div><div class="line">$ vim  /etc/my.cnf</div><div class="line">datadir=/mydata</div><div class="line"></div><div class="line">6、 启动数据库服务</div><div class="line">$ systemctl start mariadb.service</div></pre></td></tr></table></figure>
<hr>
<h3 id="Samba进阶实验"><a href="#Samba进阶实验" class="headerlink" title="Samba进阶实验"></a>Samba进阶实验</h3><font size="4" color="#38B0DE"> <strong>此次实验的目标如下：</strong> </font>


<p><strong>第一题：</strong></p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div></pre></td><td class="code"><pre><div class="line">(1) samba server导出/data/application/web，在目录中提供wordpress; </div><div class="line">(2) samba  client挂载nfs server导出的文件系统至/var/www/html；</div><div class="line">(3) 客户端（lamp）部署wordpress，并让其正常访问；要确保能正常发文章，上传图片；</div><div class="line">(4) 客户端2(lamp)，挂载samba  server导出的文件系统至/var/www/html；验正其wordpress是否可被访问； 要确保能正常发文章，上传图片；</div></pre></td></tr></table></figure>
<p><strong>第二题：</strong></p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line">(1) samba  server导出/data/目录；</div><div class="line">(2) samba  client挂载/data/至本地的/mydata目录；本地的mysqld或mariadb服务的数据目录设置为/mydata, 要求服务能正常启动，且可正常 存储数据；</div></pre></td></tr></table></figure>
<hr>
<div class="note info"><h3 id="Samba实验步骤"><a href="#Samba实验步骤" class="headerlink" title="Samba实验步骤"></a>Samba实验步骤</h3></div>
<font size="5" color="#70DBDB">第一题步骤：</font>


<h4 id="1、在samba服务器上创建共享目录，安装samba并添加共享目录配置"><a href="#1、在samba服务器上创建共享目录，安装samba并添加共享目录配置" class="headerlink" title="1、在samba服务器上创建共享目录，安装samba并添加共享目录配置"></a>1、在samba服务器上创建共享目录，安装samba并添加共享目录配置</h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div></pre></td><td class="code"><pre><div class="line">$ mkdir -pv /samba/mywp </div><div class="line">$ yum install samba </div><div class="line">$ vim /etc/samba/smb.conf </div><div class="line">在文件尾部添加如下信息：</div><div class="line">[wordpress]</div><div class="line">comment = My samba share WordPress          #配置说明</div><div class="line">path = /samba/mywp                          #共享目录位置</div><div class="line">writable = yes                              #是否可写 </div><div class="line">write list = apache 			    #拥有写权限的用户列表</div><div class="line">guest ok = no 				    #来宾账号是否可读</div></pre></td></tr></table></figure>
<h4 id="2、检查配置文件语法"><a href="#2、检查配置文件语法" class="headerlink" title="2、检查配置文件语法"></a>2、检查配置文件语法</h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div></pre></td><td class="code"><pre><div class="line">$ testparm</div><div class="line">Load smb config files from /etc/samba/smb.conf</div><div class="line">rlimit_max: increasing rlimit_max (1024) to minimum Windows limit (16384)</div><div class="line">Processing section &quot;[homes]&quot;</div><div class="line">Processing section &quot;[printers]&quot;</div><div class="line"></div><div class="line"></div><div class="line">Processing section &quot;[wordpress]&quot;</div><div class="line">Loaded services file OK.</div><div class="line">Server role: ROLE_STANDALONE</div><div class="line"></div><div class="line">Press enter to see a dump of your service definitions</div><div class="line">...</div><div class="line">...</div><div class="line">...</div><div class="line">[wordpress]</div><div class="line">	comment = My samba share WordPress</div><div class="line">	path = /samba/mywp</div><div class="line">	write list = apache</div><div class="line">	read only = No</div></pre></td></tr></table></figure>
<h4 id="3、拷贝wordpress文件到共享目录，并设置apache用户对其拥有rwx权限"><a href="#3、拷贝wordpress文件到共享目录，并设置apache用户对其拥有rwx权限" class="headerlink" title="3、拷贝wordpress文件到共享目录，并设置apache用户对其拥有rwx权限"></a>3、拷贝wordpress文件到共享目录，并设置apache用户对其拥有rwx权限</h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div></pre></td><td class="code"><pre><div class="line">$ tar xf wordpress-4.7.4-zh_CN.tar.gz </div><div class="line">$ mv wordpress /samba/mywp/</div><div class="line">$ cp /samba/mywp/wp-config-sample.php  /samba/mywp/wp-config.php</div><div class="line">$ vim /samba/mywp/wp-config.php</div><div class="line">// ** MySQL 设置 - 具体信息来自您正在使用的主机 ** //</div><div class="line">/** WordPress数据库的名称 */</div><div class="line">define(&apos;DB_NAME&apos;, &apos;smb_wordpress&apos;);</div><div class="line"></div><div class="line">/** MySQL数据库用户名 */</div><div class="line">define(&apos;DB_USER&apos;, &apos;smb_wordpress&apos;);</div><div class="line"></div><div class="line">/** MySQL数据库密码 */</div><div class="line">define(&apos;DB_PASSWORD&apos;, &apos;root@123&apos;);</div><div class="line"></div><div class="line">/** MySQL主机 */</div><div class="line">define(&apos;DB_HOST&apos;, &apos;172.16.1.100&apos;);</div><div class="line"></div><div class="line">/** 创建数据表时默认的文字编码 */</div><div class="line">define(&apos;DB_CHARSET&apos;, &apos;utf8&apos;);</div><div class="line"></div><div class="line">/** 数据库整理类型。如不确定请勿更改 */</div><div class="line">define(&apos;DB_COLLATE&apos;, &apos;&apos;);</div><div class="line"></div><div class="line">$ chown -R apache.apache /samba/mywp/wordpress</div><div class="line">$ chmod 777 /samba/mywp/wordpress/wp-content</div></pre></td></tr></table></figure>
<h4 id="4、添加apache用户到smb，并重载smb-service"><a href="#4、添加apache用户到smb，并重载smb-service" class="headerlink" title="4、添加apache用户到smb，并重载smb.service"></a>4、添加apache用户到smb，并重载smb.service</h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line">$ smbpasswd -a apache </div><div class="line">$ systemctl reload smb.service</div></pre></td></tr></table></figure>
<h4 id="5、在LAMP服务器上挂载samba共享目录以及配置httpd虚拟主机："><a href="#5、在LAMP服务器上挂载samba共享目录以及配置httpd虚拟主机：" class="headerlink" title="5、在LAMP服务器上挂载samba共享目录以及配置httpd虚拟主机："></a>5、在LAMP服务器上挂载samba共享目录以及配置httpd虚拟主机：</h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div></pre></td><td class="code"><pre><div class="line">$ mkdir /samba/wordpress/ -pv</div><div class="line">$ mount.cifs //172.16.1.100/wordpress /samba/wordpress/ -o username=apache</div><div class="line">$ mount</div><div class="line">$ cd /samba/wordpress/</div><div class="line">$ ll </div><div class="line">$ cp /etc/httpd/conf.d/lamp.conf /etc/httpd/conf.d/wp2.conf</div><div class="line">$ vim /etc/httpd/conf.d/wp2.conf</div><div class="line">&lt;VirtualHost 172.16.1.70:80&gt;</div><div class="line">        ServerName www.mywp2.com</div><div class="line">        DocumentRoot &quot;/samba/wordpress/&quot;</div><div class="line">        &lt;Directory &quot;/samba/wordpress/&quot;&gt;</div><div class="line">                Options None</div><div class="line">                AllowOverride None</div><div class="line">                Require all granted</div><div class="line">        &lt;/Directory&gt;</div><div class="line">&lt;/VirtualHost&gt;</div><div class="line"></div><div class="line">$ vim /etc/httpd/conf.d/lamp.conf           #修改之前配置nfs的虚拟主机配置</div><div class="line">&lt;VirtualHost 172.16.1.70:80&gt;</div><div class="line">        ServerName www.mywp1.com</div><div class="line">        DocumentRoot &quot;/nfs/wordpress/&quot;</div><div class="line">        &lt;Directory &quot;/nfs/wordpress/&quot;&gt;</div><div class="line">                Options None</div><div class="line">                AllowOverride None</div><div class="line">                Require all granted</div><div class="line">        &lt;/Directory&gt;</div><div class="line">        CustomLog &quot;/nfs/wordpress/log/access_log&quot; combined</div><div class="line">        ErrorLog &quot;/nfs/wordpress/log/error_log&quot;</div><div class="line">&lt;/VirtualHost&gt;</div><div class="line"></div><div class="line">$ systemctl restart httpd                   #重启httpd服务</div></pre></td></tr></table></figure>
<h4 id="6、在客户端上的操作："><a href="#6、在客户端上的操作：" class="headerlink" title="6、在客户端上的操作："></a>6、在客户端上的操作：</h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line">$ vim /etc/hosts</div><div class="line">172.16.1.70 www.mywp1.com</div><div class="line">172.16.1.70 www.mywp2.com</div></pre></td></tr></table></figure>
<p>打开浏览器访问，并创建wordpress站点，创建文章，测试上传图片的功能</p>
<hr>
<font size="5" color="#70DBDB">第二题步骤：</font>

<h4 id="1、在Samba服务器上创建共享目录，修改配置文件，添加mysql用户对共享目录的rwx权限，把mysql添加到smb中，重载smb服务"><a href="#1、在Samba服务器上创建共享目录，修改配置文件，添加mysql用户对共享目录的rwx权限，把mysql添加到smb中，重载smb服务" class="headerlink" title="1、在Samba服务器上创建共享目录，修改配置文件，添加mysql用户对共享目录的rwx权限，把mysql添加到smb中，重载smb服务"></a>1、在Samba服务器上创建共享目录，修改配置文件，添加mysql用户对共享目录的rwx权限，把mysql添加到smb中，重载smb服务</h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div></pre></td><td class="code"><pre><div class="line">$ mkdir /samba/mysql </div><div class="line">$ chown mysql.mysql /samba/mysql/</div><div class="line">$ vim /etc/samba/smb.conf</div><div class="line">[mysqldata]</div><div class="line">comment = My samba share MySQL Data</div><div class="line">path = /samba/mysql</div><div class="line">writable = yes</div><div class="line">write list = mysql</div><div class="line">guest ok = no</div><div class="line"></div><div class="line">$ smbpasswd -a mysql</div><div class="line"></div><div class="line">$ systemctl reload smb.service</div></pre></td></tr></table></figure>
<h4 id="2、在LAMP2上的操作"><a href="#2、在LAMP2上的操作" class="headerlink" title="2、在LAMP2上的操作"></a>2、在LAMP2上的操作</h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div></pre></td><td class="code"><pre><div class="line">$ mkdir /samba/mydata -pv</div><div class="line">$ mount.cifs //172.16.1.100/mysqldata /samba/mydata/ -o username=mysql </div><div class="line">$ mount</div><div class="line">$ vim /etc/my.cnf.d/server.conf</div><div class="line">[mysqld]</div><div class="line">skip_name_resolve=ON</div><div class="line">innodb_file_per_table=ON</div><div class="line">log_bin=mysql-bin</div><div class="line"></div><div class="line">$ vim /etc/my.cnf</div><div class="line">[mysqld]</div><div class="line">datadir=/samba/mydata</div><div class="line"></div><div class="line">$ systemctl start mariadb.service</div><div class="line"></div><div class="line">登入数据库创建数据库，表，进行读写测试：</div><div class="line">$ mysql </div><div class="line">MariaDB [(none)]&gt; CREATE DATABASE test_db;</div><div class="line">MariaDB [(none)]&gt; user test_db;</div><div class="line">MariaDB [(none)]&gt; CREATE TABLE test_tb (id INT UNSIGNED AUTO_INCREMENT PRIMARY KEY,name VARCHAR(30),gender ENUM(&apos;M&apos;,&apos;F&apos;));</div><div class="line">MariaDB [(none)]&gt; DESC test_db.test_tb;</div><div class="line">+--------+------------------+------+-----+---------+----------------+</div><div class="line">| Field  | Type             | Null | Key | Default | Extra          |</div><div class="line">+--------+------------------+------+-----+---------+----------------+</div><div class="line">| id     | int(10) unsigned | NO   | PRI | NULL    | auto_increment |</div><div class="line">| name   | varchar(30)      | YES  |     | NULL    |                |</div><div class="line">| gender | enum(&apos;M&apos;,&apos;F&apos;)    | YES  |     | NULL    |                |</div><div class="line">+--------+------------------+------+-----+---------+----------------+</div><div class="line">3 rows in set (0.00 sec)</div></pre></td></tr></table></figure>
<hr>
<h3 id="实验步骤视频："><a href="#实验步骤视频：" class="headerlink" title="实验步骤视频："></a>实验步骤视频：</h3><h4 id="NFS-MariaDB-使用NFS存储数据库数据"><a href="#NFS-MariaDB-使用NFS存储数据库数据" class="headerlink" title="NFS+MariaDB(使用NFS存储数据库数据)"></a>NFS+MariaDB(使用NFS存储数据库数据)</h4><embed height="415" width="544" quality="high" allowfullscreen="true" type="application/x-shockwave-flash" src="//static.hdslb.com/miniloader.swf" flashvars="aid=11101728&page=1" pluginspage="//www.adobe.com/shockwave/download/download.cgi?P1_Prod_Version=ShockwaveFlash">

<h4 id="NFS-LAMP-WordPress"><a href="#NFS-LAMP-WordPress" class="headerlink" title="NFS+LAMP+WordPress"></a>NFS+LAMP+WordPress</h4><embed height="415" width="544" quality="high" allowfullscreen="true" type="application/x-shockwave-flash" src="//static.hdslb.com/miniloader.swf" flashvars="aid=11106147&page=1" pluginspage="//www.adobe.com/shockwave/download/download.cgi?P1_Prod_Version=ShockwaveFlash">

<h4 id="Samba-LAMP-WordPress-Samba-MariaDB"><a href="#Samba-LAMP-WordPress-Samba-MariaDB" class="headerlink" title="Samba+LAMP+WordPress/Samba+MariaDB"></a>Samba+LAMP+WordPress/Samba+MariaDB</h4><embed height="415" width="544" quality="high" allowfullscreen="true" type="application/x-shockwave-flash" src="//static.hdslb.com/miniloader.swf" flashvars="aid=11107261&page=1" pluginspage="//www.adobe.com/shockwave/download/download.cgi?P1_Prod_Version=ShockwaveFlash">


<hr>
<p>上述实验文档：<a href="https://www.dropbox.com/s/dhl5zfnfd0s6rxl/6.5%E8%AF%BE%E5%90%8E%E5%8D%9A%E5%AE%A2%E4%BD%9C%E4%B8%9A.txt?dl=0" target="_blank" rel="external">dropbox共享</a></p>
<p>需科学上网</p>
<hr>
<iframe frameborder="no" border="0" marginwidth="0" marginheight="0" width="400" height="86" src="//music.163.com/outchain/player?type=2&id=417250673&auto=0&height=66"></iframe>

<p><img src="https://ww1.sinaimg.cn/large/006tNbRwly1fdzc80odsuj30gn0ilq5m.jpg" alt=""></p>
]]></content>
    
    <summary type="html">
    
      &lt;p&gt;&lt;img src=&quot;https://ws2.sinaimg.cn/large/006tNbRwly1fgbt54fxxuj30xc0go49h.jpg&quot; alt=&quot;&quot;&gt;&lt;/p&gt;
&lt;blockquote class=&quot;blockquote-center&quot;&gt;在本章我们将介绍nfs与samba的进阶实验与配置&lt;br&gt;nfs: Network File System,是由著名的 Sun 公司在1984年发布，其功能旨在允许客户端主机可以像访问本地存储一样通过访问服务器端文件。&lt;br&gt;samba：samba是种用来让UNIX系列的操作系统与微软Windows操作系统的SMB/CIFS（Server Message Block/Common Internet File System）&lt;br&gt;&lt;/blockquote&gt;

&lt;font size=4 color=&quot;#97694F&quot;&gt; NFS： &lt;/font&gt; 

&lt;ul&gt;
&lt;li&gt;监听的端口：&lt;code&gt;2049/tcp&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;辅助类的服务：&lt;code&gt;rpc(远程过程调用)&lt;/code&gt;,&lt;code&gt;portmapper&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;必备工具包：&lt;code&gt;nfs-utils&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;配置文件：&lt;code&gt;/etc/exports&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;其他命令程序：&lt;code&gt;showmount&lt;/code&gt;,&lt;code&gt;exportfs&lt;/code&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;hr&gt;
&lt;font size=4 color=&quot;#97694F&quot;&gt; Samba： &lt;/font&gt; 

&lt;ul&gt;
&lt;li&gt;监听的端口：&lt;code&gt;137/udp&lt;/code&gt;,&lt;code&gt;138/udp&lt;/code&gt; ; &lt;code&gt;139/tcp&lt;/code&gt;,&lt;code&gt;445/tcp&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;服务端程序包：&lt;code&gt;samba&lt;/code&gt;,&lt;code&gt;samba-common&lt;/code&gt;,&lt;code&gt;samba-libs&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;主程序：&lt;code&gt;nmbd&lt;/code&gt;,&lt;code&gt;smbd&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;Unit File：&lt;code&gt;smb.service&lt;/code&gt;,&lt;code&gt;nmb.service&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;主配置文件：&lt;code&gt;/etc/samba/smb.conf&lt;/code&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;hr&gt;
    
    </summary>
    
      <category term="linux进阶" scheme="http://maxiecloud.com/categories/linux%E8%BF%9B%E9%98%B6/"/>
    
    
      <category term="linux" scheme="http://maxiecloud.com/tags/linux/"/>
    
      <category term="samba" scheme="http://maxiecloud.com/tags/samba/"/>
    
      <category term="nfs" scheme="http://maxiecloud.com/tags/nfs/"/>
    
      <category term="filesystem" scheme="http://maxiecloud.com/tags/filesystem/"/>
    
      <category term="share" scheme="http://maxiecloud.com/tags/share/"/>
    
  </entry>
  
  <entry>
    <title>小秘密</title>
    <link href="http://maxiecloud.com/2017/06/04/AV/"/>
    <id>http://maxiecloud.com/2017/06/04/AV/</id>
    <published>2017-06-04T11:20:11.000Z</published>
    <updated>2017-06-04T11:43:32.000Z</updated>
    
    <content type="html"><![CDATA[<blockquote class="blockquote-center"><br><font size="5" color="#FF6EC7"> My Little Secret </font><br></blockquote>


<a id="more"></a>
<p><img src="https://ws4.sinaimg.cn/large/006tNc79ly1fg9e113q2wj30ks0ksdh5.jpg" alt=""><br><img src="https://ws1.sinaimg.cn/large/006tNc79ly1fg9e10qr8lj30sg0sgwj0.jpg" alt=""><br><img src="https://ws2.sinaimg.cn/large/006tNc79ly1fg9eja7d11j30qo0zk0xk.jpg" alt=""><br><img src="https://ws1.sinaimg.cn/large/006tNc79ly1fg9ej9yz3uj30qo0zkn1e.jpg" alt=""><br><img src="https://ws1.sinaimg.cn/large/006tNc79ly1fg9ej9rxc6j30qo0zi43g.jpg" alt=""></p>
]]></content>
    
    <summary type="html">
    
      &lt;blockquote class=&quot;blockquote-center&quot;&gt;&lt;br&gt;&lt;font size=5 color=&quot;#FF6EC7&quot; &gt; My Little Secret &lt;/font&gt;&lt;br&gt;&lt;/blockquote&gt;
    
    </summary>
    
    
      <category term="pic" scheme="http://maxiecloud.com/tags/pic/"/>
    
  </entry>
  
  <entry>
    <title>CentOS7配置LAMP (fastcgi版本)</title>
    <link href="http://maxiecloud.com/2017/06/03/lamp/"/>
    <id>http://maxiecloud.com/2017/06/03/lamp/</id>
    <published>2017-06-03T14:29:58.000Z</published>
    <updated>2017-06-06T14:35:07.000Z</updated>
    
    <content type="html"><![CDATA[<blockquote class="blockquote-center">在大多数的情况下，我们搭建的LAMP都是基于：<br>Liunx、Apache、MySQL、PHP<br>其中PHP使用的CGI，这样对系统负载压力会比使用fastCGI更大一些；<br>为了极致的性能，我们这次的实验是基于php-fpm，也就是fastCGI。<br></blockquote>

<p><code>LAMP</code>所有服务的配置文件：</p>
<font size="5" color="#FF0000"> Apache：</font> 也就是我们之前安装过的httpd服务<br><br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line">主配置文件：/etc/httpd/conf/httpd.conf</div><div class="line">其他配置文件目录：/etc/httpd/conf.d/*.conf</div><div class="line">默认的网站主页目录：/var/www/html</div></pre></td></tr></table></figure><br><br><font size="5" color="#FF0000">MySQL：</font>这次我们使用的是MySQL衍生的开源版本，<code>MariaDB</code>。因为MySQL被Oracle收购了，因此我们不建议再使用MySQL。<br><br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line">主配置文件：/etc/my.cnf</div><div class="line">其他配置文件：/etc/my.cnf.d/*.cnf</div></pre></td></tr></table></figure><br><br><font size="5" color="#FF0000"> PHP：</font> <code>php-fpm</code>，fastCGI版本。<br><br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line">主配置文件：/etc/php-fpm.conf</div><div class="line">其他配置文件：/etc/php-fpm.d/*.conf</div></pre></td></tr></table></figure><br><br><img src="https://ws3.sinaimg.cn/large/006tKfTcly1fg8ejxbzrkj30xc0go1kx.jpg" alt=""><br><br><a id="more"></a><br><br><br><br><font size="6" color="#EE7700"> <strong>此次搭建LAMP的目标如下：</strong> </font>


<p>在三台服务器上分别配置 <font size="5" color="#00BBFF"> httpd，php-fpm，mariadb </font></p>
<hr>
<font size="6" color="#855E42"> 实验环境： </font>

<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div></pre></td><td class="code"><pre><div class="line">三台服务器都是CentOS7：</div><div class="line">操作系统（OS）：CentOS Linux release 7.2.1511 (Core)</div><div class="line">内核版本（Kernel）：3.10.0-327.el7.x86_64</div><div class="line">虚拟机环境：VMware Fusion 专业版 8.5.3 (4696910)</div></pre></td></tr></table></figure>
<p>客户端环境：<br><img src="https://ws4.sinaimg.cn/large/006tNc79ly1fg5rfg0cjsj30ga0a8dj6.jpg" alt=""></p>
<hr>
<div class="note primary"><h3 id="安装配置MariaDB-IP-172-16-1-110"><a href="#安装配置MariaDB-IP-172-16-1-110" class="headerlink" title="安装配置MariaDB   (IP:172.16.1.110)"></a>安装配置MariaDB   (IP:172.16.1.110)</h3></div>
<h4 id="1、安装MariaDB以及修改数据库配置文件："><a href="#1、安装MariaDB以及修改数据库配置文件：" class="headerlink" title="1、安装MariaDB以及修改数据库配置文件："></a>1、安装MariaDB以及修改数据库配置文件：</h4><p><strong>安装MariaDB</strong></p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">$ yum install mariadb-server</div></pre></td></tr></table></figure>
<p><strong>修改配置文件</strong></p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div></pre></td><td class="code"><pre><div class="line">$ vim /etc/my.cnf.d/server.conf </div><div class="line">在[server]一项的下面添加如下信息：</div><div class="line">skip_name_resolve=ON            --跳过名字解析</div><div class="line">innodb_file_per_table=ON        --将共享表空间改为独立表空间</div></pre></td></tr></table></figure>
<h4 id="2、启动服务"><a href="#2、启动服务" class="headerlink" title="2、启动服务"></a>2、启动服务</h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">$ systemctl start mariadb.service</div></pre></td></tr></table></figure>
<h4 id="3、创建测试数据库"><a href="#3、创建测试数据库" class="headerlink" title="3、创建测试数据库"></a>3、创建测试数据库</h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line">$ mysql</div><div class="line">mysql&gt; CREATE DATABASE mydb;</div></pre></td></tr></table></figure>
<h4 id="4、重启MariaDB"><a href="#4、重启MariaDB" class="headerlink" title="4、重启MariaDB"></a>4、重启MariaDB</h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">$ systemctl restart mariadb.service</div></pre></td></tr></table></figure>
<hr>
<div class="note success"><h3 id="安装配置php-fpm-IP-172-16-1-130"><a href="#安装配置php-fpm-IP-172-16-1-130" class="headerlink" title="安装配置php-fpm   (IP:172.16.1.130)"></a>安装配置php-fpm   (IP:172.16.1.130)</h3></div>
<h4 id="1、安装php-fpm以及php-mysql"><a href="#1、安装php-fpm以及php-mysql" class="headerlink" title="1、安装php-fpm以及php-mysql"></a>1、安装php-fpm以及php-mysql</h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">$ yum install php-fpm php-mysql</div></pre></td></tr></table></figure>
<h4 id="2、修改php-fpm的配置文件"><a href="#2、修改php-fpm的配置文件" class="headerlink" title="2、修改php-fpm的配置文件"></a>2、修改php-fpm的配置文件</h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div></pre></td><td class="code"><pre><div class="line">$ vim /etc/php-fpm.d/www.conf </div><div class="line">#这里的监听地址改为本机的对外IP地址</div><div class="line">listen = 172.16.1.130:9000</div><div class="line"></div><div class="line">#这里允许请求的客户端地址为我们的HTTPD服务器IP地址：</div><div class="line">listen.allowed_clients = 172.16.1.120</div><div class="line"></div><div class="line">#取消这项的注释；状态信息查看</div><div class="line">pm.status_path = /status</div><div class="line"></div><div class="line">#取消这项的注释；网络状态信息查看</div><div class="line">ping.path = /ping</div><div class="line">ping.response = pong</div><div class="line"></div><div class="line">#这里的地址为默认；一般会没有这个目录，需要我们编辑完配置文件然后创建</div><div class="line">chdir = /var/www</div><div class="line"></div><div class="line">#这里的目录需要我们创建，并修改目录的属主属组</div><div class="line">php_value[session.save_path] = /var/lib/php/session</div></pre></td></tr></table></figure>
<h4 id="3、创建之前配置文件内缺少的目录，并更改其属主属组"><a href="#3、创建之前配置文件内缺少的目录，并更改其属主属组" class="headerlink" title="3、创建之前配置文件内缺少的目录，并更改其属主属组"></a>3、创建之前配置文件内缺少的目录，并更改其属主属组</h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div></pre></td><td class="code"><pre><div class="line">$ mkdir -pv /var/lib/php/session </div><div class="line">$ chown -R apache.apache /var/lib/php/session </div><div class="line"></div><div class="line">$ mkdir -pv /var/www/html           #这里的地址其实是我们在httpd一会配置的反向代理的地址</div><div class="line">$ chown -R apache.apache /var/www/</div></pre></td></tr></table></figure>
<h4 id="4、启动php-fpm"><a href="#4、启动php-fpm" class="headerlink" title="4、启动php-fpm"></a>4、启动php-fpm</h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">$ systemctl start php-fpm</div></pre></td></tr></table></figure>
<hr>
<div class="note info"><h3 id="安装配置httpd-IP-172-16-1-120"><a href="#安装配置httpd-IP-172-16-1-120" class="headerlink" title="安装配置httpd   (IP:172.16.1.120)"></a>安装配置httpd   (IP:172.16.1.120)</h3></div>
<h4 id="1、安装httpd，并编辑其配置文件"><a href="#1、安装httpd，并编辑其配置文件" class="headerlink" title="1、安装httpd，并编辑其配置文件"></a>1、安装httpd，并编辑其配置文件</h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div></pre></td><td class="code"><pre><div class="line">$ yum install httpd </div><div class="line"></div><div class="line">编辑httpd的配置文件，并创建虚拟主机配置文件：</div><div class="line">$ vim /etc/httpd/conf/httpd.conf</div><div class="line">#取消这里的注释，并修改为我们httpd的IP地址：</div><div class="line">ServerName 172.16.1.120:80</div></pre></td></tr></table></figure>
<h4 id="2、编辑虚拟主机配置文件"><a href="#2、编辑虚拟主机配置文件" class="headerlink" title="2、编辑虚拟主机配置文件"></a>2、编辑虚拟主机配置文件</h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div></pre></td><td class="code"><pre><div class="line">$ vim /etc/httpd/conf.d/virual.conf</div><div class="line">DirectoryIndex index.php</div><div class="line"></div><div class="line">&lt;VirtualHost *:80&gt;</div><div class="line">    ServerName 172.16.1.120</div><div class="line">    DocumentRoot &quot;/var/www/html/&quot;  </div><div class="line">    ProxyRequests Off</div><div class="line">    ProxyPassMatch ^/(.*\.php)$ fcgi://172.16.1.130:9000/var/www/html/$1 timeout=1800           #这里的IP地址是我们的php-fpm主机地址，路径也必须在php主机上存在，如果不存在则无法查找到资源</div><div class="line">    ProxyPassMatch ^/(ping|status).*$ fcgi://172.16.1.130:9000/                                 #反向代理php自带的ping(网络测试）以及status(php-fpm状态页)</div><div class="line">    &lt;Directory &quot;/var/www/html/&quot;&gt;   </div><div class="line">        Options None</div><div class="line">        AllowOverride None</div><div class="line">        Require all granted</div><div class="line">    &lt;/Directory&gt;</div><div class="line">&lt;/VirtualHost&gt;</div></pre></td></tr></table></figure>
<h4 id="3、在php-fpm主机上创建php测试页面"><a href="#3、在php-fpm主机上创建php测试页面" class="headerlink" title="3、在php-fpm主机上创建php测试页面"></a>3、在php-fpm主机上创建php测试页面</h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div></pre></td><td class="code"><pre><div class="line">$ vim /var/www/html/index.php </div><div class="line">php-fpm</div><div class="line">&lt;?php </div><div class="line">	phpinfo();</div><div class="line">?&gt;</div><div class="line"></div><div class="line">$ systemctl restart php-fpm</div></pre></td></tr></table></figure>
<h4 id="4、回到httpd服务器上，重启服务。并打开浏览器测试"><a href="#4、回到httpd服务器上，重启服务。并打开浏览器测试" class="headerlink" title="4、回到httpd服务器上，重启服务。并打开浏览器测试"></a>4、回到httpd服务器上，重启服务。并打开浏览器测试</h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">$ systemctl restart httpd</div></pre></td></tr></table></figure>
<p><strong>在MacBookPro上的操作：</strong></p>
<p><img src="https://ws1.sinaimg.cn/large/006tKfTcly1fg8xxyclrbg30qo0v6b2g.gif" alt=""></p>
<p>验证成功，可以解析php页面了。</p>
<p>下面我们开始配置<code>phpMyAdmin</code></p>
<hr>
<div class="note warning"><h3 id="配置-phpMyAdmin"><a href="#配置-phpMyAdmin" class="headerlink" title="配置 phpMyAdmin"></a>配置 phpMyAdmin</h3></div>
<p>部署前的准备工作：</p>
<p>下载phpMyAdmin:<br>    如果php-fpm版本是高于5.5的，则下载phpMyAdmin-4.7.1-all-languages.zip<br>    如果php-fpm版本是低于5.5的，则下载phpMyAdmin-4.0.10.20-all-languages.zip</p>
<p><strong> <a href="https://www.phpmyadmin.net/downloads/" target="_blank" rel="external">下载地址在这里</a></strong></p>
<h4 id="1、注意如下的操作在-php-fpm主机-与-httpd主机-上都需要操作"><a href="#1、注意如下的操作在-php-fpm主机-与-httpd主机-上都需要操作" class="headerlink" title="1、注意如下的操作在 php-fpm主机 与 httpd主机 上都需要操作"></a>1、注意如下的操作在 php-fpm主机 与 httpd主机 上都需要操作</h4><p>为了方便，以下所有关于php-fpm的配置都以php说明</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div></pre></td><td class="code"><pre><div class="line">$ unzip phpMyAdmin-4.0.10.20-all-languages.zip </div><div class="line">$ mv phpMyAdmin-4.0.10.20-all-languages pma</div><div class="line">$ mv pma /var/www/html/</div><div class="line">$ cd /var/www/html </div><div class="line">$ chown -R apache.apache pma</div></pre></td></tr></table></figure>
<p><strong><font size="4" color="#7093DB">仅在php主机上的操作：</font></strong></p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line">$ yum install php-mbstring </div><div class="line">$ yum install php-mcrypt</div></pre></td></tr></table></figure>
<p><strong><font size="4" color="#5F9F9F">两台主机：</font></strong></p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div></pre></td><td class="code"><pre><div class="line">$ vim  /var/www/html/pma/config.inc.php                 #编辑第一个配置文件：修改mysql的地址</div><div class="line">$cfg[&apos;Servers&apos;][$i][&apos;host&apos;] = &apos;172.16.1.110&apos;;</div><div class="line"></div><div class="line">$ vim /var/www/html/pma/libraries/config.defalut.php    #编辑phpMyAdmin的配置文件；修改mysql数据库的地址；默认为localhost</div><div class="line">#修改localhost为我们的mysql数据库地址:172.16.1.110</div><div class="line">$cfg[&apos;Servers&apos;][$i][&apos;host&apos;] = &apos;172.16.1.110&apos;;</div><div class="line"></div><div class="line">#编辑phpmyadmin默认的配置文件</div><div class="line">$ cp /var/www/html/pma/config.sample.inc.php /var/www/html/pma/config.inc.php </div><div class="line">$ vim /var/www/html/pma/config.inc.php </div><div class="line"></div><div class="line">#在&apos;&apos;中填入一段随机字符串即可</div><div class="line">$cfg[&apos;blowfish_secret&apos;] = &apos;adawdad32k2rjf2f2hh8b7c6d&apos;; /* YOU MUST FILL IN THIS FOR COOKIE AUTH! */</div></pre></td></tr></table></figure>
<p>配置完成之后保存退出文件</p>
<h4 id="2、在MariaDB上对远程连接数据库的用户授权"><a href="#2、在MariaDB上对远程连接数据库的用户授权" class="headerlink" title="2、在MariaDB上对远程连接数据库的用户授权"></a>2、在MariaDB上对远程连接数据库的用户授权</h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div></pre></td><td class="code"><pre><div class="line">&gt; GRANT ALL PRIVILEGES ON *.* TO &apos;root&apos;@&apos;172.16.1.110&apos; IDENTIFIED BY &apos;root@123&apos;;</div><div class="line">&gt; GRANT ALL PRIVILEGES ON *.* TO &apos;root&apos;@&apos;172.16.1.120&apos; IDENTIFIED BY &apos;root@123&apos;;</div><div class="line">&gt; GRANT ALL PRIVILEGES ON *.* TO &apos;root&apos;@&apos;172.16.1.130&apos; IDENTIFIED BY &apos;root@123&apos;;</div><div class="line">&gt; FLUSH PRIVILEGES;</div></pre></td></tr></table></figure>
<p><em>注意：上述授权极为不安全，不建议在生产环境中执行</em></p>
<h4 id="3、授权完毕之后依次重启服务"><a href="#3、授权完毕之后依次重启服务" class="headerlink" title="3、授权完毕之后依次重启服务"></a>3、授权完毕之后依次重启服务</h4><font size="4" color="#D98719">MariaDB：</font>

<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">$ systemctl restart mariadb.service</div></pre></td></tr></table></figure>
<font size="4" color="#7093DB">php-fpm：</font>

<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">$ systemctl restart php-fpm</div></pre></td></tr></table></figure>
<font size="4" color="#23238E">httpd：</font>

<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">$ systemctl restart httpd</div></pre></td></tr></table></figure>
<h4 id="4、打开FireFox浏览器输入地址，进行测试"><a href="#4、打开FireFox浏览器输入地址，进行测试" class="headerlink" title="4、打开FireFox浏览器输入地址，进行测试"></a>4、打开FireFox浏览器输入地址，进行测试</h4><p><strong>注意：由于phpMyAdmin有基于cookie的认证缓存机制，我们之前测试的时候，可能留下了缓存；所以在做之前，建议清理缓存。</strong></p>
<p><img src="https://ws1.sinaimg.cn/large/006tKfTcly1fg8yi368nsg30qo0v6npp.gif" alt=""></p>
<hr>
<div class="note danger"><h3 id="上述实验的实操过程视频"><a href="#上述实验的实操过程视频" class="headerlink" title="上述实验的实操过程视频"></a>上述实验的实操过程视频</h3></div>
<p>Bilibili视频源：</p>
<embed height="415" width="544" quality="high" allowfullscreen="true" type="application/x-shockwave-flash" src="//static.hdslb.com/miniloader.swf" flashvars="aid=11051187&page=1" pluginspage="//www.adobe.com/shockwave/download/download.cgi?P1_Prod_Version=ShockwaveFlash">


<hr>
<p>上述实验文档：<a href="https://www.dropbox.com/s/3zrvymi6dovpmmm/6.2%E8%AF%BE%E5%90%8E%E4%BD%9C%E4%B8%9A%E4%B8%89%E5%8F%B0%E6%9C%8D%E5%8A%A1%E5%99%A8%E6%90%AD%E5%BB%BALAMP%28php-fpm%2Chttpd%2Cmariadb%29.txt?dl=0" target="_blank" rel="external">dropbox共享</a></p>
<hr>
<iframe frameborder="no" border="0" marginwidth="0" marginheight="0" width="330" height="86" src="//music.163.com/outchain/player?type=2&id=5039560&auto=1&height=66"></iframe>



<p><img src="https://ww1.sinaimg.cn/large/006tNbRwly1fdzc80odsuj30gn0ilq5m.jpg" alt=""></p>
]]></content>
    
    <summary type="html">
    
      &lt;blockquote class=&quot;blockquote-center&quot;&gt;在大多数的情况下，我们搭建的LAMP都是基于：&lt;br&gt;Liunx、Apache、MySQL、PHP&lt;br&gt;其中PHP使用的CGI，这样对系统负载压力会比使用fastCGI更大一些；&lt;br&gt;为了极致的性能，我们这次的实验是基于php-fpm，也就是fastCGI。&lt;br&gt;&lt;/blockquote&gt;

&lt;p&gt;&lt;code&gt;LAMP&lt;/code&gt;所有服务的配置文件：&lt;/p&gt;
&lt;font size=5 color=&quot;#FF0000&quot; &gt; Apache：&lt;/font&gt; 也就是我们之前安装过的httpd服务&lt;br&gt;&lt;br&gt;&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;1&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;2&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;3&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;主配置文件：/etc/httpd/conf/httpd.conf&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;其他配置文件目录：/etc/httpd/conf.d/*.conf&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;默认的网站主页目录：/var/www/html&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;br&gt;&lt;br&gt;&lt;font size=5 color=&quot;#FF0000&quot; &gt;MySQL：&lt;/font&gt;这次我们使用的是MySQL衍生的开源版本，&lt;code&gt;MariaDB&lt;/code&gt;。因为MySQL被Oracle收购了，因此我们不建议再使用MySQL。&lt;br&gt;&lt;br&gt;&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;1&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;2&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;主配置文件：/etc/my.cnf&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;其他配置文件：/etc/my.cnf.d/*.cnf&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;br&gt;&lt;br&gt;&lt;font size=5 color=&quot;#FF0000&quot;&gt; PHP：&lt;/font&gt; &lt;code&gt;php-fpm&lt;/code&gt;，fastCGI版本。&lt;br&gt;&lt;br&gt;&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;1&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;2&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;主配置文件：/etc/php-fpm.conf&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;其他配置文件：/etc/php-fpm.d/*.conf&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;br&gt;&lt;br&gt;&lt;img src=&quot;https://ws3.sinaimg.cn/large/006tKfTcly1fg8ejxbzrkj30xc0go1kx.jpg&quot; alt=&quot;&quot;&gt;&lt;br&gt;&lt;br&gt;
    
    </summary>
    
      <category term="linux进阶" scheme="http://maxiecloud.com/categories/linux%E8%BF%9B%E9%98%B6/"/>
    
    
      <category term="linux" scheme="http://maxiecloud.com/tags/linux/"/>
    
      <category term="httpd" scheme="http://maxiecloud.com/tags/httpd/"/>
    
      <category term="php-fpm" scheme="http://maxiecloud.com/tags/php-fpm/"/>
    
      <category term="lamp" scheme="http://maxiecloud.com/tags/lamp/"/>
    
      <category term="mysql" scheme="http://maxiecloud.com/tags/mysql/"/>
    
      <category term="php" scheme="http://maxiecloud.com/tags/php/"/>
    
  </entry>
  
  <entry>
    <title>Linux安装httpd服务实现虚拟主机、https功能</title>
    <link href="http://maxiecloud.com/2017/06/01/httpd-server/"/>
    <id>http://maxiecloud.com/2017/06/01/httpd-server/</id>
    <published>2017-06-01T07:28:13.000Z</published>
    <updated>2017-06-06T01:56:42.000Z</updated>
    
    <content type="html"><![CDATA[<blockquote class="blockquote-center">httpd是一个开源软件，且一般用作web服务器来使用。目前最流行的web服务器软件叫做httpd，httpd还有一个俗称叫apache，Apache是一个软件基金会，httpd也是这个软件基金会的一个项目。<br>在早期的http server就叫做apache，到了http server 2.0以后就改名为httpd了。所以有时候听到apache服务器和httpd服务器其实都是指得是一个意思。<br>httpd是一个高度模块化软件，由核心（core）和模块（module）组成。这些模块大都是动态模块，因此可以随时加载。<br></blockquote>

<p><code>httpd</code>服务的主配置文件：<code>/etc/httpd/conf/httpd.conf</code><br><code>httpd</code>服务的其他配置文件目录：<code>/etc/httpd/conf.d/</code><br>默认的主页目录：<code>/var/www/html/</code></p>
<p><img src="https://ws2.sinaimg.cn/large/006tNc79ly1fg5r1i4nprj30m8020jrm.jpg" alt=""></p>
<a id="more"></a>
<h4 id="此次搭建的目标如下："><a href="#此次搭建的目标如下：" class="headerlink" title="此次搭建的目标如下："></a>此次搭建的目标如下：</h4><h5 id="1、建立httpd服务，要求如下："><a href="#1、建立httpd服务，要求如下：" class="headerlink" title="1、建立httpd服务，要求如下："></a>1、建立httpd服务，要求如下：</h5><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div></pre></td><td class="code"><pre><div class="line">(1) 提供两个基于名称的虚拟主机：</div><div class="line">    www1.maxie.com，页面文件目录为/web/www/html/www1；</div><div class="line">    错误日志为/var/log/httpd/www1/error_log，访问日志为/var/log/httpd/www1/access_log；</div><div class="line">	</div><div class="line">    www2.maxie.com，页面文件目录为/web/www/html//www2；</div><div class="line">    错误日志为/var/log/httpd/www2/error_log，访问日志为/var/log/httpd/www2/access_log；</div><div class="line"></div><div class="line">(2) 通过www1.maxie.com/server-status输出其状态信息，且要求只允许提供账号的用户访问；</div><div class="line">(3) www1不允许192.168.1.0/24网络中的主机访问；</div></pre></td></tr></table></figure>
<h5 id="2、为上面的第2个虚拟主机提供https服务，使得用户可以通过https安全的访问此web站点；"><a href="#2、为上面的第2个虚拟主机提供https服务，使得用户可以通过https安全的访问此web站点；" class="headerlink" title="2、为上面的第2个虚拟主机提供https服务，使得用户可以通过https安全的访问此web站点；"></a>2、为上面的第2个虚拟主机提供https服务，使得用户可以通过https安全的访问此web站点；</h5><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line">(1) 要求使用证书认证，证书中要求使用国家（CN），州（Beijing），城市（Beijing），组织为(CAorg)；</div><div class="line">(2) 设置部门为Ops, 主机名为www2.maxie.com；</div></pre></td></tr></table></figure>
<hr>
<p><strong>此次的所有实验环境如下：</strong></p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div></pre></td><td class="code"><pre><div class="line">CentOS6：</div><div class="line">操作系统（OS）：CentOS release 6.8 (Final)</div><div class="line">内核版本（Kernel）：2.6.32-642.el6.x86_64</div><div class="line">虚拟机环境：VMware Fusion 专业版 8.5.3 (4696910)</div></pre></td></tr></table></figure>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div></pre></td><td class="code"><pre><div class="line">CentOS7：</div><div class="line">操作系统（OS）：CentOS Linux release 7.2.1511 (Core)</div><div class="line">内核版本（Kernel）：3.10.0-327.el7.x86_64</div><div class="line">虚拟机环境：VMware Fusion 专业版 8.5.3 (4696910)</div></pre></td></tr></table></figure>
<p>客户端环境：<br><img src="https://ws4.sinaimg.cn/large/006tNc79ly1fg5rfg0cjsj30ga0a8dj6.jpg" alt=""></p>
<hr>
<div class="note primary"><h3 id="在CentOS6上完成如上实验"><a href="#在CentOS6上完成如上实验" class="headerlink" title="在CentOS6上完成如上实验"></a>在CentOS6上完成如上实验</h3></div>
<h4 id="第一题操作步骤："><a href="#第一题操作步骤：" class="headerlink" title="第一题操作步骤："></a>第一题操作步骤：</h4><h5 id="1、安装httpd服务"><a href="#1、安装httpd服务" class="headerlink" title="1、安装httpd服务"></a>1、安装httpd服务</h5><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">$ yum install httpd</div></pre></td></tr></table></figure>
<h5 id="2、编辑httpd配置文件"><a href="#2、编辑httpd配置文件" class="headerlink" title="2、编辑httpd配置文件"></a>2、编辑httpd配置文件</h5><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div></pre></td><td class="code"><pre><div class="line">$ vim /etc/httpd/conf/httpd.conf</div><div class="line">修改其中下面的值：</div><div class="line">		DocumentRoot <span class="string">"/web/www/html"</span></div><div class="line">		&lt;Directory <span class="string">"/web/www/html"</span>&gt;</div><div class="line">		ServerName www.maxie.com:80</div></pre></td></tr></table></figure>
<h5 id="3、创建网页主目录并进行httpd语法检查"><a href="#3、创建网页主目录并进行httpd语法检查" class="headerlink" title="3、创建网页主目录并进行httpd语法检查"></a>3、创建网页主目录并进行httpd语法检查</h5><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line">$ mkdir -pv /web/www/html</div><div class="line">$ httpd -t</div></pre></td></tr></table></figure>
<h5 id="4、启动服务，并测试"><a href="#4、启动服务，并测试" class="headerlink" title="4、启动服务，并测试"></a>4、启动服务，并测试</h5><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line">$ vim /web/www/html/index.html </div><div class="line">hello world </div><div class="line">$ service httpd start</div></pre></td></tr></table></figure>
<h5 id="5、测试完之后，开始配置虚拟主机。"><a href="#5、测试完之后，开始配置虚拟主机。" class="headerlink" title="5、测试完之后，开始配置虚拟主机。"></a>5、测试完之后，开始配置虚拟主机。</h5><p>打开浏览器输入 <code>http://www.maxie.com</code>，测试是否能打开并显示 <code>hello world</code>的信息</p>
<h5 id="6、注释掉Main主机的配置文件，也就是主配置文件内的”DocumentRoot”这一行信息需要注释掉"><a href="#6、注释掉Main主机的配置文件，也就是主配置文件内的”DocumentRoot”这一行信息需要注释掉" class="headerlink" title="6、注释掉Main主机的配置文件，也就是主配置文件内的”DocumentRoot”这一行信息需要注释掉"></a>6、注释掉Main主机的配置文件，也就是主配置文件内的”DocumentRoot”这一行信息需要注释掉</h5><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line">$ vim /etc/httpd/conf/httpd.conf</div><div class="line">#DocumentRoot &quot;/web/www/html&quot;</div><div class="line">$ httpd -t</div></pre></td></tr></table></figure>
<h5 id="7、开始配置虚拟主机文件："><a href="#7、开始配置虚拟主机文件：" class="headerlink" title="7、开始配置虚拟主机文件："></a>7、开始配置虚拟主机文件：</h5><p>我们这里把第二题中的https的配置也一同配置好了，但是不启用，注释掉即可，之后再配置https时，取消注释，修改端口号即可：</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div><div class="line">37</div><div class="line">38</div><div class="line">39</div><div class="line">40</div><div class="line">41</div><div class="line">42</div></pre></td><td class="code"><pre><div class="line">[root@httpd-6 ssl]# vim /etc/httpd/conf.d/www1.maxie.com.conf</div><div class="line">&lt;VirtualHost *:80&gt;</div><div class="line">    DocumentRoot /web/www/html/www1/</div><div class="line">    ServerName www1.maxie.com</div><div class="line">        &lt;Directory &quot;/web/www/html/www1/&quot;&gt;</div><div class="line">                Options None</div><div class="line">                AllowOverride None</div><div class="line"></div><div class="line">                Order allow,deny</div><div class="line">                Deny from 192.168.1.0/24</div><div class="line">                Allow from all</div><div class="line">        &lt;/Directory&gt;</div><div class="line"></div><div class="line">        &lt;Location &quot;/server-status&quot;&gt;</div><div class="line">                AuthType Basic</div><div class="line">                AuthName &quot;please input admin account and passwd!!!&quot;</div><div class="line">                AuthUserFile &quot;/etc/httpd/conf.d/.htpasswd&quot;</div><div class="line">                SetHandler server-status</div><div class="line">                Require valid-user</div><div class="line">        &lt;/Location&gt;</div><div class="line">    ErrorLog /var/log/httpd/www1/error_log</div><div class="line">    CustomLog /var/log/httpd/www2/access_log common</div><div class="line">&lt;/VirtualHost&gt;</div><div class="line"></div><div class="line">[root@httpd-6 ssl]# vim /etc/httpd/conf.d/www2.maxie.com.conf</div><div class="line">&lt;VirtualHost *:80&gt;</div><div class="line">    DocumentRoot /web/www/html/www2/</div><div class="line">    ServerName www2.maxie.com</div><div class="line">#SSLEngine on</div><div class="line">#SSLCipherSuite DEFAULT:!EXP:!SSLv2:!DES:!IDEA:!SEED:+3DES</div><div class="line">#SSLCertificateFile /etc/httpd/ssl/httpd.crt</div><div class="line">#SSLCertificateKeyFile /etc/httpd/ssl/httpd.key</div><div class="line">        &lt;Directory &quot;/web/www/html/www2/&quot;&gt;</div><div class="line">                Options None</div><div class="line">                AllowOverride None</div><div class="line">                Order allow,deny</div><div class="line">                Allow from all</div><div class="line">        &lt;/Directory&gt;</div><div class="line"></div><div class="line">    ErrorLog /var/log/httpd/www2/error_log</div><div class="line">    CustomLog /var/log/httpd/www2/access_log common</div><div class="line">&lt;/VirtualHost&gt;</div></pre></td></tr></table></figure>
<h5 id="8、配置完成后，检查语法，并重启服务"><a href="#8、配置完成后，检查语法，并重启服务" class="headerlink" title="8、配置完成后，检查语法，并重启服务"></a>8、配置完成后，检查语法，并重启服务</h5><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line">$ httpd -t </div><div class="line">$ service httpd restart</div></pre></td></tr></table></figure>
<h5 id="9、打开浏览器验证这两个虚拟主机是否配置成功"><a href="#9、打开浏览器验证这两个虚拟主机是否配置成功" class="headerlink" title="9、打开浏览器验证这两个虚拟主机是否配置成功"></a>9、打开浏览器验证这两个虚拟主机是否配置成功</h5><p>在浏览器输入<code>http://www1.maxie.com</code> 和 <code>http://www2.maxie.com</code></p>
<p><img src="https://ws1.sinaimg.cn/large/006tNc79ly1fg5rz33j9tj31hg0oajye.jpg" alt=""></p>
<p><strong>至此第一题要求已完成</strong></p>
<hr>
<h4 id="第二题操作步骤："><a href="#第二题操作步骤：" class="headerlink" title="第二题操作步骤："></a>第二题操作步骤：</h4><h5 id="1、使用另一台虚拟机作为我们的CA服务器，并在其上进行自签的操作"><a href="#1、使用另一台虚拟机作为我们的CA服务器，并在其上进行自签的操作" class="headerlink" title="1、使用另一台虚拟机作为我们的CA服务器，并在其上进行自签的操作"></a>1、使用另一台虚拟机作为我们的CA服务器，并在其上进行自签的操作</h5><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div><div class="line">37</div></pre></td><td class="code"><pre><div class="line">生成CA私钥：</div><div class="line">[root@lamp-server ~]# (umask 077;openssl genrsa -out /etc/pki/CA/private/cakey.pem)</div><div class="line">Generating RSA private key, 1024 bit long modulus</div><div class="line">.............++++++</div><div class="line">.........................................................++++++</div><div class="line">e is 65537 (0x10001)</div><div class="line"></div><div class="line">CA自签：</div><div class="line">[root@lamp-server ~]# openssl req -new -x509 -key /etc/pki/CA/private/cakey.pem -out /etc/pki/CA/cacert.pem</div><div class="line">You are about to be asked to enter information that will be incorporated</div><div class="line">into your certificate request.</div><div class="line">What you are about to enter is what is called a Distinguished Name or a DN.</div><div class="line">There are quite a few fields but you can leave some blank</div><div class="line">For some fields there will be a default value,</div><div class="line">If you enter &apos;.&apos;, the field will be left blank.</div><div class="line">-----</div><div class="line">Country Name (2 letter code) [XX]:CN</div><div class="line">State or Province Name (full name) []:Beijing</div><div class="line">Locality Name (eg, city) [Default City]:Beijing</div><div class="line">Organization Name (eg, company) [Default Company Ltd]:CAorg</div><div class="line">Organizational Unit Name (eg, section) []:CA</div><div class="line">Common Name (eg, your name or your servers hostname) []:ca.com</div><div class="line">Email Address []:</div><div class="line"></div><div class="line">[root@lamp-server ~]# ll /etc/pki/CA/cacert.pem</div><div class="line">-rw-r--r-- 1 root root 944 5月  27 12:19 /etc/pki/CA/cacert.pem</div><div class="line"></div><div class="line">[root@lamp-server ~]# ll /etc/pki/CA/</div><div class="line">总用量 20</div><div class="line">-rw-r--r--  1 root root  944 5月  27 12:19 cacert.pem</div><div class="line">drwxr-xr-x. 2 root root 4096 6月  29 2015 certs</div><div class="line">drwxr-xr-x. 2 root root 4096 6月  29 2015 crl</div><div class="line">drwxr-xr-x. 2 root root 4096 6月  29 2015 newcerts</div><div class="line">drwx------. 2 root root 4096 5月  27 12:18 private</div><div class="line"></div><div class="line">[root@lamp-server ~]# touch /etc/pki/CA/&#123;serial,index.txt&#125;</div><div class="line">[root@lamp-server ~]# echo 01 &gt;/etc/pki/CA/serial</div></pre></td></tr></table></figure>
<h6 id="2、在httpd服务器上的操作"><a href="#2、在httpd服务器上的操作" class="headerlink" title="2、在httpd服务器上的操作"></a>2、在httpd服务器上的操作</h6><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div></pre></td><td class="code"><pre><div class="line">[root@httpd-6 ssl]# yum install mod_ssl                                 #安装ssl组件</div><div class="line">[root@httpd-6 ssl]# vim /etc/httpd/conf.d/www2.maxie.com.conf           #取消之前注释信息</div><div class="line"></div><div class="line">[root@httpd-6 ssl]# (umask 077; openssl genrsa -out httpd.key)          #生成http的私钥</div><div class="line">Generating RSA private key, 1024 bit long modulus</div><div class="line">...............................++++++</div><div class="line">....................++++++</div><div class="line">e is 65537 (0x10001)</div><div class="line">[root@httpd-6 ssl]# ll</div><div class="line">总用量 4</div><div class="line">-rw------- 1 root root 887 5月  25 12:46 httpd.key</div><div class="line"></div><div class="line">[root@httpd-6 ssl]# openssl req -new -key httpd.key -out httpd.csr          #生成签署请求证书</div><div class="line">You are about to be asked to enter information that will be incorporated</div><div class="line">into your certificate request.</div><div class="line">What you are about to enter is what is called a Distinguished Name or a DN.</div><div class="line">There are quite a few fields but you can leave some blank</div><div class="line">For some fields there will be a default value,</div><div class="line">If you enter &apos;.&apos;, the field will be left blank.</div><div class="line">-----</div><div class="line">Country Name (2 letter code) [XX]:CN</div><div class="line">State or Province Name (full name) []:Beijing</div><div class="line">Locality Name (eg, city) [Default City]:Beijing</div><div class="line">Organization Name (eg, company) [Default Company Ltd]:CAorg</div><div class="line">Organizational Unit Name (eg, section) []:Ops</div><div class="line">Common Name (eg, your name or your server&apos;s hostname) []:www2.maxie.com</div><div class="line">Email Address []:</div><div class="line"></div><div class="line">Please enter the following &apos;extra&apos; attributes</div><div class="line">to be sent with your certificate request</div><div class="line">A challenge password []:</div><div class="line">An optional company name []:</div><div class="line"></div><div class="line">[root@httpd-6 ssl]# scp httpd.csr root@172.16.1.20:/root                #将要签署的证书发送给CA服务器，请求其签署</div><div class="line">root@172.16.1.20&apos;s password:</div><div class="line">httpd.csr                                                              100%  651     0.6KB/s   00:00</div></pre></td></tr></table></figure>
<h5 id="3、在CA服务器上进行签署证书的操作"><a href="#3、在CA服务器上进行签署证书的操作" class="headerlink" title="3、在CA服务器上进行签署证书的操作"></a>3、在CA服务器上进行签署证书的操作</h5><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div><div class="line">37</div><div class="line">38</div><div class="line">39</div><div class="line">40</div><div class="line">41</div><div class="line">42</div><div class="line">43</div><div class="line">44</div><div class="line">45</div></pre></td><td class="code"><pre><div class="line">[root@lamp-server ~]# openssl ca -in httpd.csr -out /etc/pki/CA/certs/httpd.crt             #对httpd服务器的请求证书进行签署操作</div><div class="line">Using configuration from /etc/pki/tls/openssl.cnf</div><div class="line">Check that the request matches the signature</div><div class="line">Signature ok</div><div class="line">Certificate Details:</div><div class="line">        Serial Number: 1 (0x1)</div><div class="line">        Validity</div><div class="line">            Not Before: May 27 04:24:27 2017 GMT</div><div class="line">            Not After : May 27 04:24:27 2018 GMT</div><div class="line">        Subject:</div><div class="line">            countryName               = CN</div><div class="line">            stateOrProvinceName       = Beijing</div><div class="line">            organizationName          = CAorg</div><div class="line">            organizationalUnitName    = Ops</div><div class="line">            commonName                = www2.maxie.com</div><div class="line">        X509v3 extensions:</div><div class="line">            X509v3 Basic Constraints:</div><div class="line">                CA:FALSE</div><div class="line">            Netscape Comment:</div><div class="line">                OpenSSL Generated Certificate</div><div class="line">            X509v3 Subject Key Identifier:</div><div class="line">                EA:D7:21:76:1C:9C:89:61:DB:B9:6A:5C:37:DD:FD:F6:C3:5A:B9:2E</div><div class="line">            X509v3 Authority Key Identifier:</div><div class="line">                keyid:EC:0D:8A:1D:98:03:F8:E5:BC:13:C4:9E:89:C6:30:FE:22:10:9D:E0</div><div class="line"></div><div class="line">Certificate is to be certified until May 27 04:24:27 2018 GMT (365 days)</div><div class="line">Sign the certificate? [y/n]:y</div><div class="line"></div><div class="line"></div><div class="line">1 out of 1 certificate requests certified, commit? [y/n]y</div><div class="line">Write out database with 1 new entries</div><div class="line">Data Base Updated</div><div class="line"></div><div class="line">[root@lamp-server ~]# ls</div><div class="line">anaconda-ks.cfg  httpd.csr  local.repo</div><div class="line">[root@lamp-server ~]#</div><div class="line">[root@lamp-server ~]# ls /etc/pki/CA/certs/</div><div class="line">httpd.crt</div><div class="line">[root@lamp-server ~]# scp /etc/pki/CA/certs/httpd.crt root@172.16.1.62:/etc/httpd/ssl       #将签署好的证书发送给httpd服务器</div><div class="line">The authenticity of host &apos;172.16.1.62 (172.16.1.62)&apos; can&apos;t be established.</div><div class="line">RSA key fingerprint is 8f:a7:5e:07:a3:43:a1:0b:6f:9e:62:74:e0:60:f3:a1.</div><div class="line">Are you sure you want to continue connecting (yes/no)? yes</div><div class="line">Warning: Permanently added &apos;172.16.1.62&apos; (RSA) to the list of known hosts.</div><div class="line">root@172.16.1.62&apos;s password:</div><div class="line">httpd.crt                                                              100% 3056     3.0KB/s   00:00</div></pre></td></tr></table></figure>
<h5 id="4、在Httpd服务器上接收证书，在CA服务器上发送CA的证书到客户端，导入浏览器内，测试https是否配置成功"><a href="#4、在Httpd服务器上接收证书，在CA服务器上发送CA的证书到客户端，导入浏览器内，测试https是否配置成功" class="headerlink" title="4、在Httpd服务器上接收证书，在CA服务器上发送CA的证书到客户端，导入浏览器内，测试https是否配置成功"></a>4、在Httpd服务器上接收证书，在CA服务器上发送CA的证书到客户端，导入浏览器内，测试https是否配置成功</h5><p>下面操作在客户端上执行：(Mac客户端)</p>
<p><img src="https://ws1.sinaimg.cn/large/006tNc79ly1fg5swsct4sj31020een46.jpg" alt=""></p>
<p>打开浏览器导入证书，并输入网址进行测试：</p>
<p><img src="https://ws2.sinaimg.cn/large/006tNc79ly1fg5t3iglm3g30qo0uwx75.gif" alt=""></p>
<hr>
<div class="note success"><h3 id="在CentOS7上完成如上实验"><a href="#在CentOS7上完成如上实验" class="headerlink" title="在CentOS7上完成如上实验"></a>在CentOS7上完成如上实验</h3></div>
<p>为了区别于CentOS6，我们这里两台虚拟主机的FQDN为：</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line">1、www.maxiecloud.com</div><div class="line">2www.mcy95.com</div></pre></td></tr></table></figure>
<h4 id="第一题操作步骤"><a href="#第一题操作步骤" class="headerlink" title="第一题操作步骤:"></a>第一题操作步骤:</h4><h5 id="1、安装httpd服务-1"><a href="#1、安装httpd服务-1" class="headerlink" title="1、安装httpd服务"></a>1、安装httpd服务</h5><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">$ yum install httpd</div></pre></td></tr></table></figure>
<h5 id="2、编辑httpd配置文件-1"><a href="#2、编辑httpd配置文件-1" class="headerlink" title="2、编辑httpd配置文件"></a>2、编辑httpd配置文件</h5><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div></pre></td><td class="code"><pre><div class="line">$ vim /etc/httpd/conf/httpd.conf</div><div class="line">修改其中下面的值：</div><div class="line">		DocumentRoot <span class="string">"/web/www/html"</span></div><div class="line">		&lt;Directory <span class="string">"/web/www/html"</span>&gt;</div><div class="line">		ServerName www.maxiecloud.com:80</div></pre></td></tr></table></figure>
<h5 id="3、创建网页主目录并进行httpd语法检查-1"><a href="#3、创建网页主目录并进行httpd语法检查-1" class="headerlink" title="3、创建网页主目录并进行httpd语法检查"></a>3、创建网页主目录并进行httpd语法检查</h5><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line">$ mkdir -pv /web/www/html</div><div class="line">$ httpd -t</div></pre></td></tr></table></figure>
<h5 id="4、启动服务，并测试-1"><a href="#4、启动服务，并测试-1" class="headerlink" title="4、启动服务，并测试"></a>4、启动服务，并测试</h5><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line">$ vim /web/www/html/index.html </div><div class="line">hello world </div><div class="line">$ systemctl start httpd.service</div></pre></td></tr></table></figure>
<h5 id="5、测试完之后，开始配置虚拟主机。-1"><a href="#5、测试完之后，开始配置虚拟主机。-1" class="headerlink" title="5、测试完之后，开始配置虚拟主机。"></a>5、测试完之后，开始配置虚拟主机。</h5><p>打开浏览器输入 <code>http://www.maxiecloud.com</code>，测试是否能打开并显示 <code>hello world</code>的信息</p>
<h5 id="6、在CentOS7上无需注释掉Main主机的配置文件"><a href="#6、在CentOS7上无需注释掉Main主机的配置文件" class="headerlink" title="6、在CentOS7上无需注释掉Main主机的配置文件"></a>6、在CentOS7上无需注释掉Main主机的配置文件</h5><h5 id="7、开始配置虚拟主机文件：-1"><a href="#7、开始配置虚拟主机文件：-1" class="headerlink" title="7、开始配置虚拟主机文件："></a>7、开始配置虚拟主机文件：</h5><p>我们这里把第二题中的https的配置也一同配置好了，但是不启用，注释掉即可，之后再配置https时，取消注释，修改端口号即可：</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div><div class="line">37</div><div class="line">38</div><div class="line">39</div><div class="line">40</div><div class="line">41</div><div class="line">42</div><div class="line">43</div><div class="line">44</div></pre></td><td class="code"><pre><div class="line">[root@httpd-7 ~]# vim /etc/httpd/conf.d/maxiecloud.conf</div><div class="line">	&lt;VirtualHost *:80&gt;</div><div class="line">	        ServerName www.maxiecloud.com</div><div class="line">	        DocumentRoot &quot;/web/www/html/maxiecloud/&quot;</div><div class="line">	        &lt;Directory &quot;/web/www/html/maxiecloud/&quot;&gt;</div><div class="line">	                Options None</div><div class="line">	                AllowOverride None</div><div class="line">	                Require not ip 192.168.1.0/24</div><div class="line">	                Require all granted</div><div class="line">	        &lt;/Directory&gt;</div><div class="line">	</div><div class="line">          &lt;Location &quot;/server-status&quot;&gt;</div><div class="line">                AuthType Basic</div><div class="line">                AuthName &quot;please input admin account and passwd!!!&quot;</div><div class="line">                AuthUserFile &quot;/etc/httpd/conf.d/.htpasswd&quot;</div><div class="line">                SetHandler server-status</div><div class="line">                Require valid-user</div><div class="line">            &lt;/Location&gt;</div><div class="line">	      </div><div class="line">	        CustomLog &quot;/var/log/httpd/maxiecloud/access_log&quot;  combined</div><div class="line">	        ErrorLog &quot;/var/log/httpd/maxiecloud/error_log&quot;</div><div class="line">	&lt;/VirtualHost&gt;</div><div class="line"></div><div class="line">[root@httpd-7 ~]# cp /etc/httpd/conf.d/maxiecloud.conf /etc/httpd/conf.d/mcy95.conf</div><div class="line"></div><div class="line">[root@httpd-7 ~]# vim /etc/httpd/conf.d/mcy95.conf</div><div class="line">	&lt;VirtualHost *:80&gt;</div><div class="line">	        ServerName www.mcy95.com</div><div class="line">	        DocumentRoot &quot;/web/www/html/mcy95/&quot;</div><div class="line">#SSLEngine on</div><div class="line">#SSLCipherSuite DEFAULT:!EXP:!SSLv2:!DES:!IDEA:!SEED:+3DES</div><div class="line">#SSLCertificateFile /etc/httpd/ssl/httpd.crt</div><div class="line">#SSLCertificateKeyFile /etc/httpd/ssl/httpd.key</div><div class="line"></div><div class="line">	        &lt;Directory &quot;/web/www/html/mcy95/&quot;&gt;</div><div class="line">	                Options None</div><div class="line">	                AllowOverride None</div><div class="line">	                Require all granted</div><div class="line">	        &lt;/Directory&gt;</div><div class="line">	        CustomLog &quot;/var/log/httpd/mcy95/access_log&quot;  combined</div><div class="line">	        ErrorLog &quot;/var/log/httpd/mcy95/error_log&quot;</div><div class="line">	&lt;/VirtualHost&gt;</div><div class="line"></div><div class="line">[root@httpd-7 ~]# mkdir /web/www/html/&#123;mcy95,maxiecloud&#125;</div></pre></td></tr></table></figure>
<h5 id="8、创建虚拟机主机的日志记录"><a href="#8、创建虚拟机主机的日志记录" class="headerlink" title="8、创建虚拟机主机的日志记录"></a>8、创建虚拟机主机的日志记录</h5><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line">[root@httpd-7 ~]# mkdir /var/log/httpd/&#123;maxiecloud,mcy95&#125;</div><div class="line">[root@httpd-7 ~]# httpd -t</div></pre></td></tr></table></figure>
<h5 id="9、重启服务测试："><a href="#9、重启服务测试：" class="headerlink" title="9、重启服务测试："></a>9、重启服务测试：</h5><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line">[root@httpd-7 ~]# httpd -t</div><div class="line">[root@httpd-7 ~]# systemctl restart httpd.service</div></pre></td></tr></table></figure>
<h5 id="10、浏览器键入两个虚拟主机地址"><a href="#10、浏览器键入两个虚拟主机地址" class="headerlink" title="10、浏览器键入两个虚拟主机地址"></a>10、浏览器键入两个虚拟主机地址</h5><p><code>http://www.maxiecloud.com/</code></p>
<p><img src="https://ws1.sinaimg.cn/large/006tNc79ly1fg5tkuu9ygj31hc0pkahw.jpg" alt=""></p>
<p><code>http://www.mcy95.com/</code></p>
<p><strong>测试server-status页面</strong>（CentOS6与CentOS7)</p>
<p><img src="https://ws1.sinaimg.cn/large/006tNbRwly1fg5u0060dug30qo0uw7wv.gif" alt=""></p>
<p><strong>至此第一题已经全部完成</strong></p>
<hr>
<h4 id="第二题操作步骤：-1"><a href="#第二题操作步骤：-1" class="headerlink" title="第二题操作步骤："></a>第二题操作步骤：</h4><h5 id="1、创建CA服务器，生成CA自签证书"><a href="#1、创建CA服务器，生成CA自签证书" class="headerlink" title="1、创建CA服务器，生成CA自签证书"></a>1、创建CA服务器，生成CA自签证书</h5><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div></pre></td><td class="code"><pre><div class="line">$ (umask 077;openssl genrsa -out /etc/pki/CA/private/cakey.pem 2048)</div><div class="line">$ openssl req -new -x509 -key /etc/pki/CA/private/cakey.pem -out /etc/pki/CA/cacert.pem -days 2017</div><div class="line">$ touch /etc/pki/CA/&#123;serial,index.txt&#125;</div><div class="line">$ echo 01 &gt;/etc/pki/CA/serial</div></pre></td></tr></table></figure>
<h5 id="2、httpd服务器制作私钥以及签署请求，并发送给CA服务器："><a href="#2、httpd服务器制作私钥以及签署请求，并发送给CA服务器：" class="headerlink" title="2、httpd服务器制作私钥以及签署请求，并发送给CA服务器："></a>2、httpd服务器制作私钥以及签署请求，并发送给CA服务器：</h5><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div><div class="line">37</div><div class="line">38</div><div class="line">39</div><div class="line">40</div><div class="line">41</div><div class="line">42</div><div class="line">43</div><div class="line">44</div><div class="line">45</div><div class="line">46</div><div class="line">47</div><div class="line">48</div><div class="line">49</div><div class="line">50</div><div class="line">51</div><div class="line">52</div><div class="line">53</div><div class="line">54</div><div class="line">55</div><div class="line">56</div><div class="line">57</div><div class="line">58</div><div class="line">59</div><div class="line">60</div><div class="line">61</div></pre></td><td class="code"><pre><div class="line">[root@httpd-7 ~]# yum install mod_ssl                                 #安装ssl组件</div><div class="line">[root@httpd-7 ~]# vim /etc/httpd/conf.d/mcy95.conf                    #取消之前注释信息</div><div class="line"></div><div class="line">[root@httpd-7 ~]# mkdir /etc/httpd/ssl</div><div class="line">[root@httpd-7 ~]# cd /etc/httpd/ssl</div><div class="line"></div><div class="line">[root@httpd-7 ssl]# (umask 077;openssl genrsa -out httpd.key 2048)</div><div class="line">Generating RSA private key, 2048 bit long modulus</div><div class="line">.........................................................................................+++</div><div class="line">....+++</div><div class="line">e is 65537 (0x10001)</div><div class="line">[root@httpd-7 ssl]# ls</div><div class="line">httpd.key</div><div class="line"></div><div class="line">[root@httpd-7 ssl]# openssl req -new -key httpd.key -out httpd.csr</div><div class="line">You are about to be asked to enter information that will be incorporated</div><div class="line">into your certificate request.</div><div class="line">What you are about to enter is what is called a Distinguished Name or a DN.</div><div class="line">There are quite a few fields but you can leave some blank</div><div class="line">For some fields there will be a default value,</div><div class="line">If you enter &apos;.&apos;, the field will be left blank.</div><div class="line">-----</div><div class="line">Country Name (2 letter code) [XX]:CN</div><div class="line">State or Province Name (full name) []:Beijing</div><div class="line">Locality Name (eg, city) [Default City]:Beijing</div><div class="line">Organization Name (eg, company) [Default Company Ltd]:MageEdu</div><div class="line">Organizational Unit Name (eg, section) []:www.mcy95.com</div><div class="line">Common Name (eg, your name or your server&apos;s hostname) []:^C</div><div class="line">[root@httpd-7 ssl]# openssl req -new -key httpd.key -out httpd.csr</div><div class="line">You are about to be asked to enter information that will be incorporated</div><div class="line">into your certificate request.</div><div class="line">What you are about to enter is what is called a Distinguished Name or a DN.</div><div class="line">There are quite a few fields but you can leave some blank</div><div class="line">For some fields there will be a default value,</div><div class="line">If you enter &apos;.&apos;, the field will be left blank.</div><div class="line">-----</div><div class="line">Country Name (2 letter code) [XX]:CN</div><div class="line">State or Province Name (full name) []:Beijing</div><div class="line">Locality Name (eg, city) [Default City]:Beijing</div><div class="line">Organization Name (eg, company) [Default Company Ltd]:MageEdu</div><div class="line">Organizational Unit Name (eg, section) []:Ops</div><div class="line">Common Name (eg, your name or your server&apos;s hostname) []:www.mcy95.com</div><div class="line">Email Address []:mcy95@magedu.com</div><div class="line"></div><div class="line">Please enter the following &apos;extra&apos; attributes</div><div class="line">to be sent with your certificate request</div><div class="line">A challenge password []:</div><div class="line">An optional company name []:</div><div class="line">[root@httpd-7 ssl]#</div><div class="line">[root@httpd-7 ssl]# ll</div><div class="line">总用量 8</div><div class="line">-rw-r--r-- 1 root root 1054 5月  31 20:47 httpd.csr</div><div class="line">-rw------- 1 root root 1679 5月  31 20:45 httpd.key</div><div class="line"></div><div class="line">[root@httpd-7 ssl]# scp httpd.csr root@172.16.1.62:/root</div><div class="line">The authenticity of host &apos;172.16.1.62 (172.16.1.62)&apos; can&apos;t be established.</div><div class="line">RSA key fingerprint is 8f:a7:5e:07:a3:43:a1:0b:6f:9e:62:74:e0:60:f3:a1.</div><div class="line">Are you sure you want to continue connecting (yes/no)? yes</div><div class="line">Warning: Permanently added &apos;172.16.1.62&apos; (RSA) to the list of known hosts.</div><div class="line">root@172.16.1.62&apos;s password:</div><div class="line">httpd.csr                                                              100% 1054     1.0KB/s   00:00</div></pre></td></tr></table></figure>
<h5 id="3、让CA签署请求证书，并发送签署后的证书到httpd服务器："><a href="#3、让CA签署请求证书，并发送签署后的证书到httpd服务器：" class="headerlink" title="3、让CA签署请求证书，并发送签署后的证书到httpd服务器："></a>3、让CA签署请求证书，并发送签署后的证书到httpd服务器：</h5><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div><div class="line">37</div><div class="line">38</div><div class="line">39</div><div class="line">40</div><div class="line">41</div><div class="line">42</div></pre></td><td class="code"><pre><div class="line">[root@CA-server ~]# openssl ca -in /root/httpd.csr -out /etc/pki/CA/certs/httpd.crt</div><div class="line">Using configuration from /etc/pki/tls/openssl.cnf</div><div class="line">Check that the request matches the signature</div><div class="line">Signature ok</div><div class="line">Certificate Details:</div><div class="line">        Serial Number: 1 (0x1)</div><div class="line">        Validity</div><div class="line">            Not Before: May 31 12:48:52 2017 GMT</div><div class="line">            Not After : May 31 12:48:52 2018 GMT</div><div class="line">        Subject:</div><div class="line">            countryName               = CN</div><div class="line">            stateOrProvinceName       = Beijing</div><div class="line">            organizationName          = MageEdu</div><div class="line">            organizationalUnitName    = Ops</div><div class="line">            commonName                = www.mcy95.com</div><div class="line">            emailAddress              = mcy95@magedu.com</div><div class="line">        X509v3 extensions:</div><div class="line">            X509v3 Basic Constraints:</div><div class="line">                CA:FALSE</div><div class="line">            Netscape Comment:</div><div class="line">                OpenSSL Generated Certificate</div><div class="line">            X509v3 Subject Key Identifier:</div><div class="line">                29:5A:D6:5B:DD:FE:0F:62:4C:01:BE:4F:92:69:66:E5:F0:5B:4A:C3</div><div class="line">            X509v3 Authority Key Identifier:</div><div class="line">                keyid:53:C0:E9:71:97:CA:91:D9:D4:2A:71:5D:3F:AE:D3:C6:BA:5F:73:0D</div><div class="line"></div><div class="line">Certificate is to be certified until May 31 12:48:52 2018 GMT (365 days)</div><div class="line">Sign the certificate? [y/n]:y</div><div class="line"></div><div class="line"></div><div class="line">1 out of 1 certificate requests certified, commit? [y/n]y</div><div class="line">Write out database with 1 new entries</div><div class="line">Data Base Updated</div><div class="line">[root@CA-server ~]#</div><div class="line"></div><div class="line">[root@CA-server ~]# scp /etc/pki/CA/certs/httpd.crt root@172.16.1.61:/etc/httpd/ssl</div><div class="line">The authenticity of host &apos;172.16.1.61 (172.16.1.61)&apos; can&apos;t be established.</div><div class="line">RSA key fingerprint is d3:a9:c3:ce:e3:ce:69:04:db:26:c0:fb:1f:26:81:05.</div><div class="line">Are you sure you want to continue connecting (yes/no)? yes</div><div class="line">Warning: Permanently added &apos;172.16.1.61&apos; (RSA) to the list of known hosts.</div><div class="line">root@172.16.1.61&apos;s password:</div><div class="line">httpd.crt                                                              100% 4588     4.5KB/s   00:00</div></pre></td></tr></table></figure>
<h5 id="4、在客户端导入CA的自签证书，通过浏览器验证是否配置完成https："><a href="#4、在客户端导入CA的自签证书，通过浏览器验证是否配置完成https：" class="headerlink" title="4、在客户端导入CA的自签证书，通过浏览器验证是否配置完成https："></a>4、在客户端导入CA的自签证书，通过浏览器验证是否配置完成https：</h5><p>下面操作在客户端上执行：(Mac客户端)</p>
<p><img src="https://ws1.sinaimg.cn/large/006tNc79ly1fg5swsct4sj31020een46.jpg" alt=""></p>
<p>打开浏览器导入证书，并测试</p>
<p><strong>至此，第二题的配置就全部完成了</strong></p>
<hr>
<div class="note danger"><h3 id="LAMP之搭建phpwind-wordpress-discuz"><a href="#LAMP之搭建phpwind-wordpress-discuz" class="headerlink" title="LAMP之搭建phpwind,wordpress,discuz"></a>LAMP之搭建phpwind,wordpress,discuz</h3></div>
<p>实验环境为CentOS7</p>
<p><strong>哔哩哔哩视频源：</strong></p>
<embed height="415" width="544" quality="high" allowfullscreen="true" type="application/x-shockwave-flash" src="//static.hdslb.com/miniloader.swf" flashvars="aid=10983961&page=1" pluginspage="//www.adobe.com/shockwave/download/download.cgi?P1_Prod_Version=ShockwaveFlash">

<hr>
<div class="note warning"><h3 id="LAMP之搭建phpMyadmin"><a href="#LAMP之搭建phpMyadmin" class="headerlink" title="LAMP之搭建phpMyadmin"></a>LAMP之搭建phpMyadmin</h3></div>
<p>实验环境为CentOS7</p>
<p><strong>哔哩哔哩视频源：</strong></p>
<embed height="415" width="544" quality="high" allowfullscreen="true" type="application/x-shockwave-flash" src="//static.hdslb.com/miniloader.swf" flashvars="aid=10994770&page=1" pluginspage="//www.adobe.com/shockwave/download/download.cgi?P1_Prod_Version=ShockwaveFlash">


<hr>
<div class="note primary"><h3 id="CentOS6配置httpd虚拟主机以及https功能"><a href="#CentOS6配置httpd虚拟主机以及https功能" class="headerlink" title="CentOS6配置httpd虚拟主机以及https功能"></a>CentOS6配置httpd虚拟主机以及https功能</h3></div>
<p>实验环境为CentOS6</p>
<p><strong>哔哩哔哩视频源：</strong></p>
<embed height="415" width="544" quality="high" allowfullscreen="true" type="application/x-shockwave-flash" src="//static.hdslb.com/miniloader.swf" flashvars="aid=11000344&page=1" pluginspage="//www.adobe.com/shockwave/download/download.cgi?P1_Prod_Version=ShockwaveFlash">


<hr>
<p>上述实验文档：<a href="https://www.dropbox.com/s/dhl5zfnfd0s6rxl/6.5%E8%AF%BE%E5%90%8E%E5%8D%9A%E5%AE%A2%E4%BD%9C%E4%B8%9A.txt?dl=0" target="_blank" rel="external">dropbox共享</a></p>
<hr>
<iframe frameborder="no" border="0" marginwidth="0" marginheight="0" width="330" height="86" src="//music.163.com/outchain/player?type=2&id=29789260&auto=1&height=66"></iframe>

<p>本文出自<a href="http://maxiecloud.com">Maxie’s Notes</a>博客，转载请务必保留此出处。</p>
<p><img src="https://ww1.sinaimg.cn/large/006tNbRwly1fdzc80odsuj30gn0ilq5m.jpg" alt=""></p>
]]></content>
    
    <summary type="html">
    
      &lt;blockquote class=&quot;blockquote-center&quot;&gt;httpd是一个开源软件，且一般用作web服务器来使用。目前最流行的web服务器软件叫做httpd，httpd还有一个俗称叫apache，Apache是一个软件基金会，httpd也是这个软件基金会的一个项目。&lt;br&gt;在早期的http server就叫做apache，到了http server 2.0以后就改名为httpd了。所以有时候听到apache服务器和httpd服务器其实都是指得是一个意思。&lt;br&gt;httpd是一个高度模块化软件，由核心（core）和模块（module）组成。这些模块大都是动态模块，因此可以随时加载。&lt;br&gt;&lt;/blockquote&gt;

&lt;p&gt;&lt;code&gt;httpd&lt;/code&gt;服务的主配置文件：&lt;code&gt;/etc/httpd/conf/httpd.conf&lt;/code&gt;&lt;br&gt;&lt;code&gt;httpd&lt;/code&gt;服务的其他配置文件目录：&lt;code&gt;/etc/httpd/conf.d/&lt;/code&gt;&lt;br&gt;默认的主页目录：&lt;code&gt;/var/www/html/&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;https://ws2.sinaimg.cn/large/006tNc79ly1fg5r1i4nprj30m8020jrm.jpg&quot; alt=&quot;&quot;&gt;&lt;/p&gt;
    
    </summary>
    
      <category term="linux进阶" scheme="http://maxiecloud.com/categories/linux%E8%BF%9B%E9%98%B6/"/>
    
    
      <category term="linux" scheme="http://maxiecloud.com/tags/linux/"/>
    
      <category term="config" scheme="http://maxiecloud.com/tags/config/"/>
    
      <category term="httpd" scheme="http://maxiecloud.com/tags/httpd/"/>
    
      <category term="https" scheme="http://maxiecloud.com/tags/https/"/>
    
      <category term="server" scheme="http://maxiecloud.com/tags/server/"/>
    
  </entry>
  
  <entry>
    <title>DNS 和 Bind 配置指南 (+httpd服务组合实验)</title>
    <link href="http://maxiecloud.com/2017/05/23/dns-and-bind/"/>
    <id>http://maxiecloud.com/2017/05/23/dns-and-bind/</id>
    <published>2017-05-23T11:30:02.000Z</published>
    <updated>2017-06-04T07:05:22.000Z</updated>
    
    <content type="html"><![CDATA[<blockquote class="blockquote-center">网域名称系统（英文：Domain Name System，缩写：DNS）是互联网的一项服务。<br>它作为将域名和IP地址相互映射的一个分布式数据库，能够使人更方便地访问互联网。<br>DNS使用TCP和UDP端口53。当前，对于每一级域名长度的限制是63个字符，域名总长度则不能超过253个字符。<br></blockquote>

<p>DNS最早于1983年由保罗·莫卡派乔斯（Paul Mockapetris）发明；原始的技术规范在882号因特网标准草案（RFC 882）中发布。1987年发布的第1034和1035号草案修正了DNS技术规范，并废除了之前的第882和883号草案。在此之后对因特网标准草案的修改基本上没有涉及到DNS技术规范部分的改动。</p>
<p>早期的域名必须以英文句号“.”结尾，当用户访问<code>www.maxiecloud.com</code>的HTTP服务时必须在地址栏中输入：<code>http://www.maxiecloud.com.</code>，这样DNS才能够进行域名解析。如今DNS服务器已经可以自动补上结尾的句号。</p>
<p><img src="http://www.neustar.biz/blog/dns-cloud.jpg" alt=""></p>
<a id="more"></a>
<div class="note primary"><h3 id="DNS基础知识"><a href="#DNS基础知识" class="headerlink" title="DNS基础知识"></a>DNS基础知识</h3></div>
<h4 id="DNS-Domain-Name-Service-域名解析服务"><a href="#DNS-Domain-Name-Service-域名解析服务" class="headerlink" title="DNS:Domain Name Service 域名解析服务"></a>DNS:Domain Name Service 域名解析服务</h4><p>DNS服务是一个基于C/S架构的协议，在传输层的TCP和UDP协议的53号端口上运行。</p>
<p><strong>TCP协议：</strong> Transmission Control Protocol<br>    TCP是面向连接的协议：双方通信之前需要事先建立虚拟连接；</p>
<p><strong>UDP协议：</strong> User Datagram Protocol<br>    UDP是无连接的协议：双方通信之前无需建立虚拟连接；</p>
<p><strong>简单的来说：</strong></p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line">DNS就像是一个通讯录，Maxie的电话是11503496****，有了通讯录，我们只需通过输入Maxie这个名字就能够自动拨打其电话。</div><div class="line">DNS主要是用来定义IP地址和域名的关系。</div></pre></td></tr></table></figure>
<hr>
<h4 id="域名空间"><a href="#域名空间" class="headerlink" title="域名空间"></a>域名空间</h4><p>域名系统作为一个层次结构和分布式数据库，包含各种类型的数据，包括主机名和域名。DNS数据库中的名称形成一个分层树状结构称为域命名空间。域名包含单个标签分隔点，例如：blog.maxiecloud.com</p>
<p>对于Internet来说，域名层次结构的顶级由ICANN（互联网名称与数字地址分配机构）负责管理。目前，已经有超过250个顶级域名，每个顶级域名可以进一步划为一些子域（二级域名），这些子域可被再次划分（三级域名），依此类推。所有这些域名可以组织成一棵树，如下图所示：</p>
<p><img src="https://ws3.sinaimg.cn/large/006tNc79ly1ffwayyiokhj31e00l8jsb.jpg" alt=""></p>
<hr>
<h4 id="域名资源记录"><a href="#域名资源记录" class="headerlink" title="域名资源记录"></a>域名资源记录</h4><p>DNS设计之初是用来建立域名到IP地址的映射，理论上对于每一个域名我们只需要在域名服务器上保存一条记录即可。这里的记录一般叫作域名资源记录，它是一个五元组，可以用以下格式表示：</p>
<figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div></pre></td><td class="code"><pre><div class="line">Domain_name Time_to_live Class Type Value </div><div class="line"></div><div class="line">Domain_name     指出这条记录对应的域名</div><div class="line">Time_to_live    表明记录的生存周期，即缓存时长</div><div class="line">Class           一般总是IN</div><div class="line">Type            记录的类型</div><div class="line">Value           记录值，如果是A记录，则value是一个IPv4地址</div></pre></td></tr></table></figure>
<p>其中，常见的记录类型TYPE包括：</p>
<table>
<thead>
<tr>
<th>记录类型</th>
<th>含义</th>
</tr>
</thead>
<tbody>
<tr>
<td>SOA：（StartOf Authority,起始授权记录）</td>
<td>一个区域解析库有且只能有一个SOA记录，而且必须放在第一条</td>
</tr>
<tr>
<td>A记录（Address，主机记录）</td>
<td>用于名称解析的重要记录，将特定的主机名映射到对应主机的IP地址上</td>
</tr>
<tr>
<td>CNAME记录（Canonical Name，别名记录）</td>
<td>用于 返回另一个域名，即当前查询的域名是另一个域名的跳转，主要用于域名的内部跳转，为服务器配置提供灵活性</td>
</tr>
<tr>
<td>NS记录（Name Service，域名服务器记录）</td>
<td>用于返回保存下一级域名信息的服务器地址。该记录只能设置为域名，不能设置为IP地址</td>
</tr>
<tr>
<td>PTR记录（Pointer，指针记录）</td>
<td>PTR记录是A记录的逆向记录，又称做IP反查记录或指针记录，负责将IP反向解析为域名</td>
</tr>
<tr>
<td>MX（Mall eXchanger，邮件记录）</td>
<td>用于返回接收电子邮件的服务器地址</td>
</tr>
<tr>
<td>IPv6主机记录（AAAA记录）</td>
<td>与A记录对应，用于将特定的主机名映射到一个主机的IPv6地址。</td>
</tr>
</tbody>
</table>
<hr>
<h4 id="域名服务器"><a href="#域名服务器" class="headerlink" title="域名服务器"></a>域名服务器</h4><p>域名服务器用于响应DNS查询，由不同层级的域名服务器协同完成。下面讲解下如何将所有的域名资源记录存储到不同的域名服务器上。前面说过域名空间可以组织为一棵树，这里我们可以进一步将其划分为不重叠的区域（DNS zone），针对上图的域名空间，一种可能的域名划分如下图：</p>
<p><img src="https://ws3.sinaimg.cn/large/006tNc79ly1ffweybz1snj31cu0lg0ug.jpg" alt=""></p>
<p>然后将每个区域的域名服务器（当然每个DNS zone内应该是由集群组成，包括master，和slave服务器用来提供数据备份、加快解析速度、保证服务可用性）关联起来，称这些域名服务器为该区域的<strong>权威域名服务器(Authoritative Name Servers )</strong>，它保存两类域名资源记录：</p>
<ol>
<li>该区域内所有域名的域名资源记录。</li>
<li>父区域和子区域的域名服务器对应的域名资源记录（主要是NS记录）。</li>
</ol>
<p>这样，所有的域名资源记录都保存在多个域名服务器中，并且所有的域名服务器也组成了一个层次的索引结构，便于域名解析。下面以一个简化的域名空间为例子，说明域名资源记录是如何保存在域名服务器中的，如下图：</p>
<p><img src="https://ws4.sinaimg.cn/large/006tNc79ly1ffwf0iskulj30r80iqdh8.jpg" alt=""></p>
<p>图中域名空间划分为A, B, C, D, E, F, G七个DNS区域，每个DNS区域都有多个权威域名服务器（作为一个集群），这些域名服务器里面保存了许多域名解析记录。对于上图的DNS区域E来说，它的权威域名服务器里面保存的记录如图中表格所示。</p>
<p>仔细观察上图会发现区域A、B并没有父区域，他们之间并没有一条路径连在一起。这将导致一个很麻烦的问题，那就是区域A的权威域名服务器可能根本不知道区域B的存在。认识到这一点后，可能会想到的一个很自然的解决方案，就是在A中记录B域名服务器的地址，同时在B中记录A的，这样它们两个就联系起来了。但是考虑到有超过250个顶级域名，这样做并不是很恰当。</p>
<p>域名系统则采用了一种更加聪明的方法，那就是引入根域名服务器，它保存了所有顶级区域的权威域名服务器记录。现在通过根域名服务器，我们可以找到所有的顶级区域的权威域名服务器，然后就可以往下一级一级找下去了。根域名服务器（root   name  server）是DNS中最高级别的域名服务器，负责返回顶级域名的权威域名服务器的地址，全球13组根域名服务器以英文字母A到M依序命名，网域名称格式为“字母.root-servers.net”。其中有11个是以任播技术在全球多个地点设立镜像站。。更多关于根域名服务器的内容，可以参考：<a href="https://zh.wikipedia.org/wiki/%E6%A0%B9%E5%9F%9F%E5%90%8D%E6%9C%8D%E5%8B%99%E5%99%A8" target="_blank" rel="external">根域名服务器-维基百科</a></p>
<p>现在为止，域名服务器和根域名服务器其实组成了一个树，树根为根域名服务器，下面每个节点都是一个区域的权威域名服务器，对于上图中各个DNS区域的权威域名服务器，它们组成了下面这棵树（事实上，一个权威域名服务器可能保存有多个DNS区域的记录，因此权威域名服务器之间的联系并不构成一棵树。为了容易理解，将其简化为一棵树）：</p>
<p><img src="https://ws1.sinaimg.cn/large/006tNc79ly1ffwf456xoxj30d60g3dg6.jpg" alt=""></p>
<hr>
<h4 id="域名解析"><a href="#域名解析" class="headerlink" title="域名解析"></a>域名解析</h4><p>Local DNS（本地域名服务器）：本地由网络服务提供商（ISP）分配的DNS（一般为两个），或自行设置的公共DNS。</p>
<p>当需要查询一个域名对应的IP地址时，在检查完本地hosts文件、操作系统DNS缓存后，会向本地域名服务器(LDNS)发起请求，如果该域名恰好在Local  DNS所辖属的域名区域（DNS zone）内，那么可以直接返回记录。</p>
<p>如果LDNS没有发现该域名的资源记录，就需要在整个域名空间搜索该域名。而整个域名空间的资源记录存储在一个分层的、树状联系的一系列域名服务器上，所以本地域名服务器首先要从根域名服务器开始往下搜索。这里有一个问题就是本地域名服务器如何找到根域名服务器在哪里呢？其实域名服务器启动的时候，就会加载一个配置文件，里面保存了根域名服务器的NS记录（因为根域名服务器地址一般非常稳定，不会轻易改变，并且数量很少，所以这样配置文件会很小）。找到根域名服务器之后，就可以一级一级地往下查找。</p>
<p><strong>假设访问www.google.com ，则请求过程大致如下：</strong></p>
<p><img src="https://ws4.sinaimg.cn/large/006tNc79ly1ffwf5z5eykj30n20csab6.jpg" alt=""></p>
<ol>
<li><p>在浏览器中输入www.google.com域名，操作系统会先检查自己本地的hosts文件是否有这个网址映射关系，如果有，就先调用这个IP地址映射，完成域名解析。</p>
</li>
<li><p>如果hosts里没有这个域名的映射，则查找本地DNS解析器缓存，是否有这个网址映射关系，如果有，直接返回，完成域名解析。</p>
</li>
<li><p>如果hosts与本地操作系统缓存都没有相应的网址映射关系，则向本地设置的Local DNS服务器发起域名解析请求。LDNS收到查询后，如果要查询的域名，包含在本地配置区域资源中，则返回解析结果给客户机，完成域名解析，此解析具有权威性。</p>
</li>
<li><p>如果要查询的域名，不由Local DNS服务器区域解析，但该服务器已缓存了此网址映射关系，且缓存未过期，则调用这个IP地址映射，完成域名解析，此解析不具有权威性。</p>
</li>
<li><p>如果该域名不在Local DNS所辖属的域名区域（DNS zone）内，且没有有效缓存，则根据Local   DNS的设置（是否设置转发器）进行查询，如果未用转发模式，本地DNS就把请求发至根DNS，根DNS服务器收到请求后会判断这个域名(.com)是谁来授权管理，并会返回一个负责该顶级域名服务器的NS地址及其对应IP。本地DNS服务器收到IP信息后，将会请求.com域的这台服务器。这台负责.com域的服务器收到请求后，如果自己无法解析，便将.com域的下一级DNS服务器地址(qq.com)给的NS地址及其IP响应给Local   DNS。当Local DNS收到这个地址后，再向qq.com域服务器，重复上面查询，直至找到www.qq.com主机对应的记录。</p>
</li>
<li><p>如果用的是转发模式，此DNS服务器就会把请求转发至上一级DNS服务器，由上一级服务器进行解析，上一级服务器如果不能解析，则请求根DNS或把转请求转至上上级，以此循环。不管是Local   DNS用的是转发，还是向根DNS请求，最终都能获得查询结果，然后再返回给最初查询的客户端。</p>
</li>
</ol>
<hr>
<h4 id="缓存"><a href="#缓存" class="headerlink" title="缓存"></a>缓存</h4><p>由于绝大部分的DNS请求都集中在少部分的域名。因此可以将已经访问过域名的解析结果缓存在本地，下次访问的时候可以直接读取结果，不用再次重复DNS查询过程，客户端和域名服务器都节省了麻烦。</p>
<p>当然，这样做的一个前提是要缓存的解析结果不能频繁更改。绝大多数的域名解析确实是这样基本固定不变的。但是难免有一些“善变”的域名，他们可能会频繁更改自己的解析结果。为了使缓存机制适应这两类情况，在域名资源记录里面添加一个Time_to_live字段，表明这条记录最多可以缓存多久。对于那些解析基本不变的域名，给一个比较大的值，而那些需要经常变动解析的域名，则可以给定一个小的值。</p>
<p>同样，域名服务器会将那些查询过的域名资源记录缓存下来，再次收到来自客户端的请求时，只要缓存不过期，就可以直接返回缓存结果，不用再次向上查询。</p>
<hr>
<h4 id="端口号"><a href="#端口号" class="headerlink" title="端口号"></a>端口号</h4><p> DNS协议使用udp/tcp的53端口提供服务，客户端向DNS服务发起请求时，使用udp的53端口；DNS服务器间（包括主从之间）进行区域传送的时候使用TCP的53端口。</p>
<hr>
<h4 id="DNS服务器类型"><a href="#DNS服务器类型" class="headerlink" title="DNS服务器类型"></a>DNS服务器类型</h4><ol>
<li><p>主DNS服务器：为客户端提供域名解析的主要区域，主DNS服务器宕机，会启用从DNS服务器提供服务。</p>
</li>
<li><p>从DNS服务器：主服务器DNS长期无应答，从服务器也会停止提供服务。主从区域之间的同步采用周期性检查+通知的机制，从服务器周期性的检查主服务器上的记录情况，一旦发现修改就会同步，另外主服务器上如果有数据被修改了，会立即通知从服务器更新记录。</p>
</li>
<li><p>缓存服务器：服务器本身不提供解析区域，只提供非权威应答。</p>
</li>
<li>转发服务器：当DNS服务器的解析区域（包括缓存）中无法为当前的请求提供权威应答时，将请求转发至其它的DNS服务器，此时本地DNS服务器就是转发服务器。</li>
</ol>
<hr>
<div class="note success"><h3 id="DNS进阶原理"><a href="#DNS进阶原理" class="headerlink" title="DNS进阶原理"></a>DNS进阶原理</h3></div>
<h4 id="区域数据库-记录类型详解"><a href="#区域数据库-记录类型详解" class="headerlink" title="区域数据库 记录类型详解"></a>区域数据库 记录类型详解</h4><p>资源记录的定义格式：</p>
<figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">name [TTL] IN RR_TYPE  value</div></pre></td></tr></table></figure>
<h5 id="SOA：一个区域的第一条资源记录："><a href="#SOA：一个区域的第一条资源记录：" class="headerlink" title="SOA：一个区域的第一条资源记录："></a>SOA：一个区域的第一条资源记录：</h5><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div></pre></td><td class="code"><pre><div class="line">name: 当前区域的名字；例如”maxiecloud.com.”，或者“2.3.4.in-addr.arpa.”</div><div class="line">value：有多部分组成</div><div class="line">		(1) 当前区域的区域名称（也可以使用主DNS服务器名称）；</div><div class="line">		(2) 当前区域管理员的邮箱地址；但地址中不能使用@符号，一般使用点号来替代；</div><div class="line">		(3) (主从服务协调属性的定义以及否定答案的TTL)</div></pre></td></tr></table></figure>
<p>实例：</p>
<figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div></pre></td><td class="code"><pre><div class="line">maxiecloud.com. 	86400 	IN 	SOA	maxiecloud.com. 	admin.maxiecloudcom.  (</div><div class="line">			2017010801; serial</div><div class="line">			2H ; refresh</div><div class="line">			10M ; retry</div><div class="line">			1W	; expire</div><div class="line">			1D	; negative answer ttl )</div></pre></td></tr></table></figure>
<h5 id="NS：域名服务记录，一个区域解析库可以有多个NS记录"><a href="#NS：域名服务记录，一个区域解析库可以有多个NS记录" class="headerlink" title="NS：域名服务记录，一个区域解析库可以有多个NS记录"></a>NS：域名服务记录，一个区域解析库可以有多个NS记录</h5><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line">name: 当前区域的区域名称</div><div class="line">value：当前区域的某DNS服务器的名字，例如dns.maxiecloud.com.</div></pre></td></tr></table></figure>
<p>实例：</p>
<figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div></pre></td><td class="code"><pre><div class="line">name: 当前区域的区域名称</div><div class="line">value：当前区域某邮件交换器的主机名；</div><div class="line"></div><div class="line">注意：MX记录可以有多个；但每个记录的value之前应该有一个数字表示其优先级；</div></pre></td></tr></table></figure>
<h5 id="A：地址记录，FQDN-–-gt-IPv4"><a href="#A：地址记录，FQDN-–-gt-IPv4" class="headerlink" title="A：地址记录，FQDN –&gt; IPv4"></a>A：地址记录，FQDN –&gt; IPv4</h5><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line">name：某FQDN，例如www.maxiecloud.com.</div><div class="line">value：某个IPv4地址，例如1.2.3.4</div></pre></td></tr></table></figure>
<p>实例：</p>
<figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line">www.maxiecloud.com.		IN 	A  1.1.1.1</div><div class="line">www.maxiecloud.com.		IN 	A  1.1.1.2</div><div class="line">bbs.maxiecloud.com.		IN 	A  1.1.1.1</div></pre></td></tr></table></figure>
<h5 id="AAAA：IPv6地址记录，FQDN-–-gt-IPv6"><a href="#AAAA：IPv6地址记录，FQDN-–-gt-IPv6" class="headerlink" title="AAAA：IPv6地址记录，FQDN –&gt; IPv6"></a>AAAA：IPv6地址记录，FQDN –&gt; IPv6</h5><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line">name：FQDN</div><div class="line">value：IPv6</div></pre></td></tr></table></figure>
<h5 id="PTR：指针记录，反向解析，IP-–-gt-FQDN"><a href="#PTR：指针记录，反向解析，IP-–-gt-FQDN" class="headerlink" title="PTR：指针记录，反向解析，IP –&gt; FQDN"></a>PTR：指针记录，反向解析，IP –&gt; FQDN</h5><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line">name：IP地址，有特定格式，IP反过来写，而且加特定后缀；例如1.2.3.4的记录应该写为4.3.2.1.in-addr.arpa.</div><div class="line">value：FQDN</div></pre></td></tr></table></figure>
<p>实例：</p>
<figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">4.3.2.1.in-addr.arpa.  	IN  PTR  www.maxiecloud.com.</div></pre></td></tr></table></figure>
<h5 id="CNAME：别名记录"><a href="#CNAME：别名记录" class="headerlink" title="CNAME：别名记录"></a>CNAME：别名记录</h5><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line">name：FQDN格式的别名；</div><div class="line">value：FQDN格式的正式名字；</div></pre></td></tr></table></figure>
<p>实例：</p>
<figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">web.maxiecloud.com.  	IN  	CNAME  www.maxiecloud.com.</div></pre></td></tr></table></figure>
<p><strong>注意：</strong><br>(1) TTL可以从全局继承<br>(2) @可以表示当前区域的名称 –&gt; maxiecloud.com<br>(3) 相邻的两条记录其name相同时，后面的可省略<br>(4) 对于正向区域来说，各MX，NS等类型的记录的value为FQDN，此FQDN应该有一个A记录</p>
<hr>
<div class="note info"><h3 id="Bind的安装和基础配置"><a href="#Bind的安装和基础配置" class="headerlink" title="Bind的安装和基础配置"></a>Bind的安装和基础配置</h3></div>
<p>前面我们介绍了DNS的一些基础概念和进阶的知识，但是<code>DNS</code>是一种模型，需要使用软件去实现。</p>
<p>Bind(Berkeley Internet Name Domain)就是伴随<code>DNS</code>出生的软件。</p>
<h4 id="Bind程序包"><a href="#Bind程序包" class="headerlink" title="Bind程序包"></a>Bind程序包</h4><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div></pre></td><td class="code"><pre><div class="line">bind.x86_64             Bind程序的主程序包，提供的dns server程序、以及几个常用的测试程序</div><div class="line"><span class="built_in">bind</span>-libs.x86_64        被<span class="built_in">bind</span>和<span class="built_in">bind</span>-utils包中的程序共同用到的库文件</div><div class="line"><span class="built_in">bind</span>-utils.x86_64       <span class="built_in">bind</span>客户端程序集，例如dig，host，nslookup</div><div class="line"><span class="built_in">bind</span>-chroot.x86_64      选装，让named运行于jail模式下（<span class="string">'更安全'</span>）</div></pre></td></tr></table></figure>
<h4 id="Bind配置文件"><a href="#Bind配置文件" class="headerlink" title="Bind配置文件"></a>Bind配置文件</h4><p>主配置文件： <code>/etc/named.conf</code></p>
<p>其他配置文件<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line">/etc/named.iscdlv.key </div><div class="line">/etc/named.rfc1912.zones <span class="comment">#定义区域的文件</span></div><div class="line">/etc/named.root.key</div></pre></td></tr></table></figure></p>
<p>解析库文件：<code>/var/named/</code>目录下；一般名字为：<code>ZONE_NAME.zone</code></p>
<p><strong>注意：</strong><br>(1) 一台DNS服务器可同时为多个区域提供解析；<br>(2) 必须要有根区域解析库文件：named.ca<br>(3) 还应该有两个区域解析库文件：localhost和127.0.0.1的正反向解析库</p>
<h4 id="配置一个正向解析区域"><a href="#配置一个正向解析区域" class="headerlink" title="配置一个正向解析区域"></a>配置一个正向解析区域</h4><h5 id="修改主配置文件-etc-named-conf"><a href="#修改主配置文件-etc-named-conf" class="headerlink" title="修改主配置文件 /etc/named.conf"></a>修改主配置文件 /etc/named.conf</h5><p>把主配置文件中 <code>options</code> 中的监听端口和dnssec功能修改了：</p>
<figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div></pre></td><td class="code"><pre><div class="line">options &#123;</div><div class="line">        listen-on port 53 &#123; 127.0.0.1;172.16.1.51; &#125;;</div><div class="line">        directory       <span class="string">"/var/named"</span>;</div><div class="line">        dump-file       <span class="string">"/var/named/data/cache_dump.db"</span>;</div><div class="line">        statistics-file <span class="string">"/var/named/data/named_stats.txt"</span>;</div><div class="line">        memstatistics-file <span class="string">"/var/named/data/named_mem_stats.txt"</span>;</div><div class="line">        allow-query     &#123; any; &#125;;</div><div class="line">    </div><div class="line">        recursion yes;</div><div class="line">        </div><div class="line">        dnssec-enable no;</div><div class="line">        dnssec-validation no;</div></pre></td></tr></table></figure>
<p>主要修改的是：</p>
<ol>
<li>listen-on port 53 { 127.0.0.1;172.16.1.51; };  在127.0.0.1后添加一条监听本机网卡IP地址的信息</li>
<li>allow-query     { any; };   把这里的允许查询的范围改为<code>any</code></li>
<li>dnssec-enable no;   dnssec-validation no;  这两个防火墙功能设置为 <code>no</code>，也就是关闭其功能</li>
</ol>
<h5 id="定义一个zone"><a href="#定义一个zone" class="headerlink" title="定义一个zone"></a>定义一个zone</h5><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div></pre></td><td class="code"><pre><div class="line">~]# vim /etc/named.rfs1912.conf     #在此文件的最后一行添加如下信息</div><div class="line">	zone &quot;maxiecloud.com&quot; IN &#123;</div><div class="line">		type master;</div><div class="line">		file &quot;maxiecloud.zone&quot;;</div><div class="line">	&#125;</div></pre></td></tr></table></figure>
<h5 id="创建区域解析库文件"><a href="#创建区域解析库文件" class="headerlink" title="创建区域解析库文件"></a>创建区域解析库文件</h5><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div></pre></td><td class="code"><pre><div class="line">[root@localhost named]# cat named.maxie</div><div class="line">$TTL 600M</div><div class="line">maxiecloud.com. IN	SOA	maxiecloud.com	nsadim.maxiecloud.com. (</div><div class="line">				2017052301	; serial</div><div class="line">					1H	; refresh</div><div class="line">					5M	; retry</div><div class="line">					1W	; expire</div><div class="line">					6H )	; minimum</div><div class="line">        IN	NS	dns1.maxie.com.</div><div class="line">        IN	NS	dns2.maxie.com.</div><div class="line">dns1.maxiecloud.com. IN	A	172.16.1.51</div><div class="line">dns2.maxiecloud.com. IN	A	172.16.1.52</div><div class="line">www.maxiecloud.com.  IN A       172.16.1.12</div><div class="line">web	IN	CNAME	www</div><div class="line">[root@localhost named]# chgrp named /var/named/maxiecloud.zone</div><div class="line">[root@localhost named]# chmod o= /var/named/maxiecloud.zone</div></pre></td></tr></table></figure>
<h5 id="检查、启动并测试DNS服务"><a href="#检查、启动并测试DNS服务" class="headerlink" title="检查、启动并测试DNS服务"></a>检查、启动并测试DNS服务</h5><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line">[root@localhost named]# named-checkcon          #检查主配置文件语法</div><div class="line">[root@localhost named]# named-checkzone &quot;maxiecloud.com&quot; /var/named/maxiecloud.zone         #检查maxiecloud.com zone所对应的解析库文件</div></pre></td></tr></table></figure>
<h5 id="解析域名"><a href="#解析域名" class="headerlink" title="解析域名"></a>解析域名</h5><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div></pre></td><td class="code"><pre><div class="line">[root@localhost ~]# host -t A www.maxiecloud.com  172.16.1.51</div><div class="line">Using domain server:</div><div class="line">Name: 172.16.1.51</div><div class="line">Address: 172.16.1.51#53</div><div class="line">Aliases:</div><div class="line"></div><div class="line">www.maxiecloud.com has address 172.16.1.12</div><div class="line"></div><div class="line">[root@localhost ~]# host -t NS maxiecloud.com  172.16.1.51</div><div class="line">Using domain server:</div><div class="line">Name: 172.16.1.51</div><div class="line">Address: 172.16.1.51#53</div><div class="line">Aliases:</div><div class="line"></div><div class="line">maxiecloud.com name server dns1.maxiecloud.com.</div><div class="line">maxiecloud.com name server dns2.maxiecloud.com.</div></pre></td></tr></table></figure>
<h4 id="配置一个反向解析区域"><a href="#配置一个反向解析区域" class="headerlink" title="配置一个反向解析区域"></a>配置一个反向解析区域</h4><h5 id="定义一个zone-1"><a href="#定义一个zone-1" class="headerlink" title="定义一个zone"></a>定义一个zone</h5><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div></pre></td><td class="code"><pre><div class="line">[root@localhost ~]# vim /etc/named.rfs1912.zones </div><div class="line">zone &quot;16.172.in-addr.arpa&quot; IN &#123;</div><div class="line">	type master</div><div class="line">	file &quot;172.16.zone&quot;</div><div class="line">&#125;</div></pre></td></tr></table></figure>
<h5 id="创建区域反向解析库文件"><a href="#创建区域反向解析库文件" class="headerlink" title="创建区域反向解析库文件"></a>创建区域反向解析库文件</h5><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div></pre></td><td class="code"><pre><div class="line">[root@localhost ~]# cd /var/named </div><div class="line">[root@localhost ~]# vim 172.16.zone   #这个文件中的@：表示/etc/named.rfs1912.zones中 zone的名字，也就是&quot;16.172.in-addr.arpa&quot;这个名字</div><div class="line">$TTL 9527</div><div class="line">$ORIGIN 16.172.in-addr.arpa.	       #这一步，在出现transfer failed的时候可以尝试设置，这可能是因为同一个网内出现了两个一样的反向解析服务器</div><div class="line">@	IN	SOA	maxiecloud.com.	nsadmin.maxiecloud.com. (</div><div class="line">		2017052301</div><div class="line">		3H</div><div class="line">		20M</div><div class="line">		1W</div><div class="line">		1D )</div><div class="line">	IN	NS	dns1.maxiecloud.com.</div><div class="line">	IN	NS	dns2.maxiecloud.com.</div><div class="line">51.1	IN	PTR	dns1.maxiecloud.com.</div><div class="line">52.1	IN	PTR	dns2.maxiecloud.com.</div><div class="line">12.1	IN	PTR	www.maxiecloud.com.</div><div class="line"></div><div class="line">这里如果后面自己补上了全部的地址，就必须在最后加上&quot;.&quot;</div><div class="line">如果不补全，则无需加&quot;.&quot;</div></pre></td></tr></table></figure>
<h5 id="检查、启动并测试DNS服务-1"><a href="#检查、启动并测试DNS服务-1" class="headerlink" title="检查、启动并测试DNS服务"></a>检查、启动并测试DNS服务</h5><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line">[root@localhost named]# named-checkcon          #检查主配置文件语法</div><div class="line">[root@localhost named]# named-checkzone &quot;16.172.in-addr.arpa&quot; /var/named/maxiecloud.zone         #检查maxiecloud.com zone所对应的解析库文件</div></pre></td></tr></table></figure>
<h5 id="测试"><a href="#测试" class="headerlink" title="测试"></a>测试</h5><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div><div class="line">37</div><div class="line">38</div><div class="line">39</div><div class="line">40</div><div class="line">41</div><div class="line">42</div><div class="line">43</div><div class="line">44</div><div class="line">45</div><div class="line">46</div><div class="line">47</div><div class="line">48</div></pre></td><td class="code"><pre><div class="line">[root@localhost named]# rndc reload </div><div class="line">server reload successful</div><div class="line"></div><div class="line">[root@localhost named]# dig -t axfr 16.172.in-addr.arpa @172.16.1.51</div><div class="line"></div><div class="line">; &lt;&lt;&gt;&gt; DiG 9.9.4-RedHat-9.9.4-29.el7 &lt;&lt;&gt;&gt; -t axfr 16.172.in-addr.arpa @172.16.1.51</div><div class="line">;; global options: +cmd</div><div class="line">16.172.in-addr.arpa.	9527	IN	SOA	maxiecloud.com. nsadmin.maxiecloud.com. 2017052301 10800 1200 604800 86400</div><div class="line">16.172.in-addr.arpa.	9527	IN	NS	dns1.maxiecloud.com.</div><div class="line">16.172.in-addr.arpa.	9527	IN	NS	dns2.maxiecloud.com.</div><div class="line">12.1.16.172.in-addr.arpa. 9527	IN	PTR	www.maxiecloud.com.</div><div class="line">51.1.16.172.in-addr.arpa. 9527	IN	PTR	dns1.maxiecloud.com.</div><div class="line">52.1.16.172.in-addr.arpa. 9527	IN	PTR	dns2.maxiecloud.com.</div><div class="line">16.172.in-addr.arpa.	9527	IN	SOA	maxiecloud.com. nsadmin.maxiecloud.com. 2017052301 10800 1200 604800 86400</div><div class="line">;; Query time: 0 msec</div><div class="line">;; SERVER: 172.16.1.51#53(172.16.1.51)</div><div class="line">;; WHEN: 三 5月 24 05:42:04 CST 2017</div><div class="line">;; XFR size: 7 records (messages 1, bytes 226)</div><div class="line"></div><div class="line"></div><div class="line">[root@localhost named]# dig -x 172.16.1.12 @172.16.1.51</div><div class="line"></div><div class="line">; &lt;&lt;&gt;&gt; DiG 9.9.4-RedHat-9.9.4-29.el7 &lt;&lt;&gt;&gt; -x 172.16.1.12 @172.16.1.51</div><div class="line">;; global options: +cmd</div><div class="line">;; Got answer:</div><div class="line">;; -&gt;&gt;HEADER&lt;&lt;- opcode: QUERY, status: NOERROR, id: 59255</div><div class="line">;; flags: qr aa rd ra; QUERY: 1, ANSWER: 1, AUTHORITY: 2, ADDITIONAL: 3</div><div class="line"></div><div class="line">;; OPT PSEUDOSECTION:</div><div class="line">; EDNS: version: 0, flags:; udp: 4096</div><div class="line">;; QUESTION SECTION:</div><div class="line">;12.1.16.172.in-addr.arpa.	IN	PTR</div><div class="line"></div><div class="line">;; ANSWER SECTION:</div><div class="line">12.1.16.172.in-addr.arpa. 9527	IN	PTR	www.maxiecloud.com.</div><div class="line"></div><div class="line">;; AUTHORITY SECTION:</div><div class="line">16.172.in-addr.arpa.	9527	IN	NS	dns2.maxiecloud.com.</div><div class="line">16.172.in-addr.arpa.	9527	IN	NS	dns1.maxiecloud.com.</div><div class="line"></div><div class="line">;; ADDITIONAL SECTION:</div><div class="line">dns1.maxiecloud.com.	600	IN	A	172.16.1.51</div><div class="line">dns2.maxiecloud.com.	600	IN	A	172.16.1.52</div><div class="line"></div><div class="line">;; Query time: 0 msec</div><div class="line">;; SERVER: 172.16.1.51#53(172.16.1.51)</div><div class="line">;; WHEN: 三 5月 24 05:42:33 CST 2017</div><div class="line">;; MSG SIZE  rcvd: 155</div></pre></td></tr></table></figure>
<hr>
<div class="note warning"><h3 id="主从配置和子域授权"><a href="#主从配置和子域授权" class="headerlink" title="主从配置和子域授权"></a>主从配置和子域授权</h3></div>
<h4 id="主从配置"><a href="#主从配置" class="headerlink" title="主从配置"></a>主从配置</h4><p>在两台或多台Linux主机上进行实验或操作时，最先要做的是时间同步</p>
<figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">$ ntpdate NTP_SERVER</div></pre></td></tr></table></figure>
<p>如果时间不同步，后面出现的问题就不是几分钟能解决的了。</p>
<p>在上面的实验中，我们已经配置好了一台具有DNS解析功能的服务器了，我们就把那一台当做主服务器，下面我们开始配置从服务器：</p>
<h5 id="从节点的配置：安装bind以及修改配置文件"><a href="#从节点的配置：安装bind以及修改配置文件" class="headerlink" title="从节点的配置：安装bind以及修改配置文件"></a>从节点的配置：安装bind以及修改配置文件</h5><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div></pre></td><td class="code"><pre><div class="line">$ yum install -y <span class="built_in">bind</span></div><div class="line">$ vim /etc/named.conf</div><div class="line">options &#123;</div><div class="line">	//listen-on port 53 &#123; 127.0.0.1; &#125;     <span class="comment">#注释掉这段信息或者添加本地IP地址也可以</span></div><div class="line">	directory 	<span class="string">"/var/named"</span>;</div><div class="line">	dump-file 	<span class="string">"/var/named/data/cache_dump.db"</span>;</div><div class="line">	statistics-file <span class="string">"/var/named/data/named_stats.txt"</span>;</div><div class="line">	memstatistics-file <span class="string">"/var/named/data/named_mem_stats.txt"</span>;</div><div class="line">	allow-query     &#123; any; &#125;;	     <span class="comment">#修改为any</span></div><div class="line"></div><div class="line">	dnssec-enable no;	             <span class="comment">#设置为no</span></div><div class="line">	dnssec-validation no;                <span class="comment">#设置为no</span></div></pre></td></tr></table></figure>
<h5 id="定义一个从区域"><a href="#定义一个从区域" class="headerlink" title="定义一个从区域"></a>定义一个从区域</h5><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div></pre></td><td class="code"><pre><div class="line">[root@localhost ~]# vim /etc/named.rfc1912.zones</div><div class="line">zone &quot;maxiecloud.com&quot; IN &#123;</div><div class="line">        type slave;</div><div class="line">        file &quot;slaves/maxiecloud.zone&quot;;</div><div class="line">        masters &#123; 172.16.1.51; &#125;;</div><div class="line">&#125;;</div><div class="line"></div><div class="line">zone &quot;16.172.in-addr.arpa&quot; IN &#123;</div><div class="line">        type slave;</div><div class="line">        file &quot;slaves/172.16.zone&quot;;</div><div class="line">        masters &#123; 172.16.1.51; &#125;;</div><div class="line">&#125;;</div><div class="line">[root@localhost ~]# named-checkconf</div></pre></td></tr></table></figure>
<h5 id="开启服务并测试"><a href="#开启服务并测试" class="headerlink" title="开启服务并测试"></a>开启服务并测试</h5><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div><div class="line">37</div><div class="line">38</div><div class="line">39</div><div class="line">40</div><div class="line">41</div><div class="line">42</div><div class="line">43</div><div class="line">44</div><div class="line">45</div><div class="line">46</div><div class="line">47</div><div class="line">48</div><div class="line">49</div><div class="line">50</div><div class="line">51</div><div class="line">52</div><div class="line">53</div><div class="line">54</div><div class="line">55</div></pre></td><td class="code"><pre><div class="line">[root@localhost ~]# systemctl start named.service</div><div class="line">[root@localhost ~]# dig -t A www.maxiecloud.com @172.16.1.52</div><div class="line"></div><div class="line">; &lt;&lt;&gt;&gt; DiG 9.9.4-RedHat-9.9.4-29.el7 &lt;&lt;&gt;&gt; -t A www.maxiecloud.com @172.16.1.52</div><div class="line">;; global options: +cmd</div><div class="line">;; Got answer:</div><div class="line">;; -&gt;&gt;HEADER&lt;&lt;- opcode: QUERY, status: NOERROR, id: 50052</div><div class="line">;; flags: qr aa rd ra; QUERY: 1, ANSWER: 1, AUTHORITY: 2, ADDITIONAL: 3</div><div class="line"></div><div class="line">;; OPT PSEUDOSECTION:</div><div class="line">; EDNS: version: 0, flags:; udp: 4096</div><div class="line">;; QUESTION SECTION:</div><div class="line">;www.maxiecloud.com.		IN	A</div><div class="line"></div><div class="line">;; ANSWER SECTION:</div><div class="line">www.maxiecloud.com.	600	IN	A	172.16.1.12</div><div class="line"></div><div class="line">;; AUTHORITY SECTION:</div><div class="line">maxiecloud.com.		600	IN	NS	dns1.maxiecloud.com.</div><div class="line">maxiecloud.com.		600	IN	NS	dns2.maxiecloud.com.</div><div class="line"></div><div class="line">;; ADDITIONAL SECTION:</div><div class="line">dns1.maxiecloud.com.	600	IN	A	172.16.1.51</div><div class="line">dns2.maxiecloud.com.	600	IN	A	172.16.1.52</div><div class="line"></div><div class="line">;; Query time: 0 msec</div><div class="line">;; SERVER: 172.16.1.52#53(172.16.1.52)</div><div class="line">;; WHEN: 三 5月 24 05:56:29 CST 2017</div><div class="line">;; MSG SIZE  rcvd: 133</div><div class="line"></div><div class="line">[root@localhost ~]# dig -t NS maxiecloud.com @172.16.1.52</div><div class="line"></div><div class="line">; &lt;&lt;&gt;&gt; DiG 9.9.4-RedHat-9.9.4-29.el7 &lt;&lt;&gt;&gt; -t NS maxiecloud.com @172.16.1.52</div><div class="line">;; global options: +cmd</div><div class="line">;; Got answer:</div><div class="line">;; -&gt;&gt;HEADER&lt;&lt;- opcode: QUERY, status: NOERROR, id: 41932</div><div class="line">;; flags: qr aa rd ra; QUERY: 1, ANSWER: 2, AUTHORITY: 0, ADDITIONAL: 3</div><div class="line"></div><div class="line">;; OPT PSEUDOSECTION:</div><div class="line">; EDNS: version: 0, flags:; udp: 4096</div><div class="line">;; QUESTION SECTION:</div><div class="line">;maxiecloud.com.			IN	NS</div><div class="line"></div><div class="line">;; ANSWER SECTION:</div><div class="line">maxiecloud.com.		600	IN	NS	dns2.maxiecloud.com.</div><div class="line">maxiecloud.com.		600	IN	NS	dns1.maxiecloud.com.</div><div class="line"></div><div class="line">;; ADDITIONAL SECTION:</div><div class="line">dns1.maxiecloud.com.	600	IN	A	172.16.1.51</div><div class="line">dns2.maxiecloud.com.	600	IN	A	172.16.1.52</div><div class="line"></div><div class="line">;; Query time: 0 msec</div><div class="line">;; SERVER: 172.16.1.52#53(172.16.1.52)</div><div class="line">;; WHEN: 三 5月 24 05:56:37 CST 2017</div><div class="line">;; MSG SIZE  rcvd: 113</div></pre></td></tr></table></figure>
<hr>
<h4 id="子域授权"><a href="#子域授权" class="headerlink" title="子域授权"></a>子域授权</h4><p>现在我们开始配置子域授权，我们在主DNS服务器上进行授权</p>
<p>在<code>maxiecloud.zone</code>中添加如下信息：</p>
<figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div></pre></td><td class="code"><pre><div class="line">ops.maxiecloud.com. IN          NS dns1.ops.maxiecloud.com. </div><div class="line">ops.maxiecloud.com. IN          NS dns2.ops.maxiecloud.com.</div><div class="line">dns1.ops.maxiecloud.com. IN          A  172.16.1.53         <span class="comment">#子域DNS服务器的IP地址</span></div><div class="line">dns2.ops.maxiecloud.com. IN          A  172.16.1.54         <span class="comment">#子域DNS服务器的IP地址</span></div></pre></td></tr></table></figure>
<h5 id="在子域DNS服务器上配置"><a href="#在子域DNS服务器上配置" class="headerlink" title="在子域DNS服务器上配置"></a>在子域DNS服务器上配置</h5><p>安装bind并修改配置文件信息：</p>
<figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div></pre></td><td class="code"><pre><div class="line">$ yum install -y <span class="built_in">bind</span></div><div class="line">$ vim /etc/named.conf</div><div class="line">options &#123;</div><div class="line">	//listen-on port 53 &#123; 127.0.0.1; &#125;     <span class="comment">#注释掉这段信息或者添加本地IP地址也可以</span></div><div class="line">	directory 	<span class="string">"/var/named"</span>;</div><div class="line">	dump-file 	<span class="string">"/var/named/data/cache_dump.db"</span>;</div><div class="line">	statistics-file <span class="string">"/var/named/data/named_stats.txt"</span>;</div><div class="line">	memstatistics-file <span class="string">"/var/named/data/named_mem_stats.txt"</span>;</div><div class="line">	allow-query     &#123; any; &#125;;	     <span class="comment">#修改为any</span></div><div class="line"></div><div class="line">	dnssec-enable no;	             <span class="comment">#设置为no</span></div><div class="line">	dnssec-validation no;                <span class="comment">#设置为no</span></div></pre></td></tr></table></figure>
<p>在/etc/named.rfs1912.zones中添加子域的信息：</p>
<figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div></pre></td><td class="code"><pre><div class="line">$ vim /etc/named.rfs1912.zones</div><div class="line">zone <span class="string">"ops.maxiecloud.com"</span> IN &#123;</div><div class="line">    <span class="built_in">type</span> master;</div><div class="line">    file <span class="string">"ops.maxiecloud.zone"</span>;</div><div class="line">&#125;;</div></pre></td></tr></table></figure>
<p>定义子域解析库：</p>
<figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div></pre></td><td class="code"><pre><div class="line">$ vim /var/named/ops.maxiecloud.zone</div><div class="line"><span class="variable">$TTL</span> 600</div><div class="line">@   IN  SOA     maxiecloud.com.     nsadmin.maxiecloud.com. (</div><div class="line">        2017052301</div><div class="line">        1H</div><div class="line">        2M</div><div class="line">        3D</div><div class="line">        1D )</div><div class="line">        IN  NS  dns1.ops.maxiecloud.com.</div><div class="line">        IN  NS  dns2.ops.maxiecloud.com.</div><div class="line">dns1    IN  A   172.16.1.53</div><div class="line">dns2    IN  A   172.16.1.54</div><div class="line">www     IN  A   172.16.1.12</div></pre></td></tr></table></figure>
<p>测试：</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div></pre></td><td class="code"><pre><div class="line">[root@localhost named]# service named start</div><div class="line">Starting named:                                            [  OK  ]</div><div class="line"> </div><div class="line">通过本机解析本域主机名</div><div class="line">[root@localhost named]# host -t A www.ops.maxiecloud.com 172.16.1.53</div><div class="line">Using domain server:</div><div class="line">Name: 172.16.1.53</div><div class="line">Address: 172.16.1.53#53</div><div class="line">Aliases: </div><div class="line">www.ops.maxiecloud.com has address 172.16.1.53</div><div class="line"> </div><div class="line">通过父域DNS解析本域下的主机名</div><div class="line"> </div><div class="line">[root@localhost named]# host -t A www.ops.maxiecloud.com 172.16.1.54</div><div class="line">Using domain server:</div><div class="line">Name: 172.16.1.54</div><div class="line">Address: 172.16.1.54#53</div><div class="line">Aliases: </div><div class="line"> </div><div class="line">www.ops.maxiecloud.com has address 172.16.1.54</div><div class="line"> </div><div class="line">通过本机DNS解析父域中的主机名</div><div class="line">[root@localhost named]# host -t A www.maxiecloud.com 172.16.1.53</div><div class="line">;; connection timed out; trying next origin</div><div class="line">Using domain server:</div><div class="line">Name: 172.16.1.53</div><div class="line">Address: 172.16.1.53#53</div><div class="line">Aliases: </div><div class="line"> </div><div class="line">Host www.maxiecloud.com not found: 3(NXDOMAIN)</div></pre></td></tr></table></figure>
<p>但是我们可能会发现一个问题，如果我需要解析父域中的主机名，只能通过递归到根域去解析，这是非常不便的，所以我们要设置转发器。</p>
<h5 id="设置区域转发"><a href="#设置区域转发" class="headerlink" title="设置区域转发"></a>设置区域转发</h5><p>区域转发：仅转发对特定区域的解析请求</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div></pre></td><td class="code"><pre><div class="line">[root@localhost named]# vim /etc/named.rfc1912.zones</div><div class="line">zone &quot;maxiecloud.com&quot; IN &#123;	         #这里的ZONE_NAME是区域的名称，而非子域名称；所以这里应该是maxiecloud.com</div><div class="line">				type forward;</div><div class="line">				forward &#123; only; &#125;;</div><div class="line">				forwarders &#123; 172.16.1.51; &#125;;</div><div class="line">			&#125;;</div></pre></td></tr></table></figure>
<p>重载、测试：</p>
<figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line">[root@localhost named]<span class="comment"># rndc reload</span></div><div class="line">[root@localhost named]<span class="comment"># dig -t A www.maxiecloud.com @172.16.1.53</span></div></pre></td></tr></table></figure>
<hr>
<div class="note danger"><h3 id="BIND视图实现smart-DNS"><a href="#BIND视图实现smart-DNS" class="headerlink" title="BIND视图实现smart DNS"></a>BIND视图实现smart DNS</h3></div>
<p>由于中国的运营商之间的带宽是非常低，但是无论我们是哪个运营商的宽带，访问那些大型电商站点都是非常的快，那是因为在dns服务器中定义了来自哪些IP的请求解析成哪些地址，这就是视图的功能。</p>
<h4 id="配置视图"><a href="#配置视图" class="headerlink" title="配置视图"></a>配置视图</h4><p>初始化设置与上面的实验操作无异：</p>
<ol>
<li>安装bind</li>
<li>修改主配置文件的监听IP和allow-query、dnssec的配置</li>
</ol>
<p>初始化完毕之后，我们开始配置视图：</p>
<h5 id="定义acl"><a href="#定义acl" class="headerlink" title="定义acl"></a>定义acl</h5><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div></pre></td><td class="code"><pre><div class="line">[root@localhost named]# vim /etc/named.conf     #在此文件中 options的选项之前添加如下信息</div><div class="line">acl localnet &#123;</div><div class="line">	192.168.10.0/24;</div><div class="line">&#125;;</div><div class="line"></div><div class="line">acl mynet &#123;</div><div class="line">	172.16.0.0/16;</div><div class="line">	127.0.0.0/8</div><div class="line">&#125;;</div></pre></td></tr></table></figure>
<p>这里需要注意的是，因为主配置文件中有一段 zone的配置信息，我们需要把其剪切出来，粘贴到/etc/named.rfc1912.zones的view local视图中：</p>
<p><img src="https://ws1.sinaimg.cn/large/006tNbRwly1ffwja1t1i3g30jg0eihe6.gif" alt=""></p>
<p>配置/etc/named.rfc1912.zones文件：</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div><div class="line">37</div><div class="line">38</div><div class="line">39</div><div class="line">40</div><div class="line">41</div><div class="line">42</div><div class="line">43</div><div class="line">44</div><div class="line">45</div><div class="line">46</div><div class="line">47</div><div class="line">48</div><div class="line">49</div><div class="line">50</div><div class="line">51</div><div class="line">52</div><div class="line">53</div><div class="line">54</div><div class="line">55</div><div class="line">56</div><div class="line">57</div><div class="line">58</div><div class="line">59</div><div class="line">60</div><div class="line">61</div><div class="line">62</div></pre></td><td class="code"><pre><div class="line">[root@localhost named]# vim /etc/named.rfc1912.zones</div><div class="line">view local &#123;</div><div class="line">	match-clients &#123; localnet; &#125;;</div><div class="line"></div><div class="line">zone &quot;.&quot; IN &#123;</div><div class="line">        type hint;</div><div class="line">        file &quot;named.ca&quot;;</div><div class="line">&#125;;</div><div class="line"></div><div class="line">zone &quot;localhost.localdomain&quot; IN &#123;</div><div class="line">	type master;</div><div class="line">	file &quot;named.localhost&quot;;</div><div class="line">	allow-update &#123; none; &#125;;</div><div class="line">&#125;;</div><div class="line"></div><div class="line">zone &quot;localhost&quot; IN &#123;</div><div class="line">	type master;</div><div class="line">	file &quot;named.localhost&quot;;</div><div class="line">	allow-update &#123; none; &#125;;</div><div class="line">&#125;;</div><div class="line"></div><div class="line">zone &quot;1.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.ip6.arpa&quot; IN &#123;</div><div class="line">	type master;</div><div class="line">	file &quot;named.loopback&quot;;</div><div class="line">	allow-update &#123; none; &#125;;</div><div class="line">&#125;;</div><div class="line"></div><div class="line">zone &quot;1.0.0.127.in-addr.arpa&quot; IN &#123;</div><div class="line">	type master;</div><div class="line">	file &quot;named.loopback&quot;;</div><div class="line">	allow-update &#123; none; &#125;;</div><div class="line">&#125;;</div><div class="line"></div><div class="line">zone &quot;0.in-addr.arpa&quot; IN &#123;</div><div class="line">	type master;</div><div class="line">	file &quot;named.empty&quot;;</div><div class="line">	allow-update &#123; none; &#125;;</div><div class="line">&#125;;</div><div class="line"></div><div class="line">zone &quot;maxiecloud.com&quot; IN &#123;</div><div class="line">	type master;</div><div class="line">	file &quot;maxiecloud.zone/localnet&quot;;</div><div class="line">&#125;;</div><div class="line">&#125;;</div><div class="line"></div><div class="line">view my &#123;</div><div class="line">	match-clients &#123; mynet; &#125;;</div><div class="line"></div><div class="line">zone &quot;maxiecloud.com&quot; IN &#123;</div><div class="line">	type master;</div><div class="line">	file &quot;maxiecloud.zone/mynet&quot;;</div><div class="line">&#125;;</div><div class="line">&#125;;</div><div class="line"></div><div class="line">view ex &#123;</div><div class="line">	match-clients &#123; any; &#125;;</div><div class="line"></div><div class="line">zone &quot;maxiecloud.com&quot; IN &#123;</div><div class="line">	type master;</div><div class="line">	file &quot;maxiecloud.zone/ex&quot;;</div><div class="line">&#125;;</div><div class="line">&#125;;</div></pre></td></tr></table></figure>
<p>创建maxiecloud.zone目录以及文件：</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div><div class="line">37</div></pre></td><td class="code"><pre><div class="line">[root@localhost named]# mkdir /var/named/maxiecloud.zone</div><div class="line">[root@localhost named]# vim localnet</div><div class="line">$TTL 610</div><div class="line">@	IN 		SOA  	maxiecloud.com.		nsadmin.maxiecloud.com. (</div><div class="line">			2017052301</div><div class="line">			1H</div><div class="line">			2M</div><div class="line">			1D</div><div class="line">			2D )</div><div class="line">@	IN 		NS 		dns1.maxiecloud.com.</div><div class="line">dns1 	IN 	A 		172.16.1.53</div><div class="line">www 	IN 	A 		1.1.1.1</div><div class="line"></div><div class="line"></div><div class="line">[root@localhost named]# vim mynet </div><div class="line">$TTL 620</div><div class="line">@	IN 		SOA  	maxiecloud.com.		nsadmin.maxiecloud.com. (</div><div class="line">			2017052301</div><div class="line">			1H</div><div class="line">			2M</div><div class="line">			1D</div><div class="line">			2D )</div><div class="line">@	IN 		NS 		dns1.maxiecloud.com.</div><div class="line">dns1 	IN 	A 		172.16.1.53</div><div class="line">www 	IN 	A 		2.1.1.1</div><div class="line"></div><div class="line">[root@localhost named]# vim ex </div><div class="line">$TTL 630</div><div class="line">@	IN 		SOA  	maxiecloud.com.		nsadmin.maxiecloud.com. (</div><div class="line">			2017052301</div><div class="line">			1H</div><div class="line">			2M</div><div class="line">			1D</div><div class="line">			2D )</div><div class="line">@	IN 		NS 		dns1.maxiecloud.com.</div><div class="line">dns1 	IN 	A 		172.16.1.53</div><div class="line">www 	IN 	A 		3.1.1.1</div></pre></td></tr></table></figure>
<p>测试验证：</p>
<p><img src="https://ws3.sinaimg.cn/large/006tNc79ly1ffwjgtpxtlj30ma0hpn48.jpg" alt="view1"></p>
<p><img src="https://ws3.sinaimg.cn/large/006tNc79ly1ffwjgtg8yqj30ma0hpgsn.jpg" alt="view2"></p>
<p><img src="https://ws4.sinaimg.cn/large/006tNc79ly1ffwjgt59yoj30iy0ezdlv.jpg" alt="view3"></p>
<hr>
<div class="note primary"><h3 id="自建根域-HTTPD服务-访问"><a href="#自建根域-HTTPD服务-访问" class="headerlink" title="自建根域 + HTTPD服务 访问"></a>自建根域 + HTTPD服务 访问</h3></div>
<p>自建根域+HTTPD服务教程：</p>
<p><strong>bilibili(视频源)：</strong></p>
<embed height="415" width="544" quality="high" allowfullscreen="true" type="application/x-shockwave-flash" src="//static.hdslb.com/miniloader.swf" flashvars="aid=10907767&page=1" pluginspage="//www.adobe.com/shockwave/download/download.cgi?P1_Prod_Version=ShockwaveFlash">


<p><strong>Youtube(视频源)： 请科学上网后观看</strong></p>
<iframe width="560" height="315" src="https://www.youtube.com/embed/K-kFhmsoSIA" frameborder="0" allowfullscreen></iframe>

<hr>
<div class="note success"><h3 id="CentOS6编译安装httpd-2-4"><a href="#CentOS6编译安装httpd-2-4" class="headerlink" title="CentOS6编译安装httpd-2.4"></a>CentOS6编译安装httpd-2.4</h3></div>
<p><strong>bilibili(视频源)：</strong></p>
<embed height="415" width="544" quality="high" allowfullscreen="true" type="application/x-shockwave-flash" src="//static.hdslb.com/miniloader.swf" flashvars="aid=10908178&page=1" pluginspage="//www.adobe.com/shockwave/download/download.cgi?P1_Prod_Version=ShockwaveFlash">

<hr>
<div class="note success"><h3 id="自建CA-https配置"><a href="#自建CA-https配置" class="headerlink" title="自建CA+https配置"></a>自建CA+https配置</h3></div>
<p><strong>bilibili(视频源)：</strong></p>
<embed height="415" width="544" quality="high" allowfullscreen="true" type="application/x-shockwave-flash" src="//static.hdslb.com/miniloader.swf" flashvars="aid=10916246&page=1" pluginspage="//www.adobe.com/shockwave/download/download.cgi?P1_Prod_Version=ShockwaveFlash">

<hr>
<iframe frameborder="no" border="0" marginwidth="0" marginheight="0" width="330" height="86" src="//music.163.com/outchain/player?type=2&id=758649&auto=1&height=66"></iframe>

<p>本文出自<a href="http://maxiecloud.com">Maxie’s Notes</a>博客，转载请务必保留此出处。</p>
<p><img src="https://ww1.sinaimg.cn/large/006tNbRwly1fdzc80odsuj30gn0ilq5m.jpg" alt=""></p>
]]></content>
    
    <summary type="html">
    
      &lt;blockquote class=&quot;blockquote-center&quot;&gt;网域名称系统（英文：Domain Name System，缩写：DNS）是互联网的一项服务。&lt;br&gt;它作为将域名和IP地址相互映射的一个分布式数据库，能够使人更方便地访问互联网。&lt;br&gt;DNS使用TCP和UDP端口53。当前，对于每一级域名长度的限制是63个字符，域名总长度则不能超过253个字符。&lt;br&gt;&lt;/blockquote&gt;

&lt;p&gt;DNS最早于1983年由保罗·莫卡派乔斯（Paul Mockapetris）发明；原始的技术规范在882号因特网标准草案（RFC 882）中发布。1987年发布的第1034和1035号草案修正了DNS技术规范，并废除了之前的第882和883号草案。在此之后对因特网标准草案的修改基本上没有涉及到DNS技术规范部分的改动。&lt;/p&gt;
&lt;p&gt;早期的域名必须以英文句号“.”结尾，当用户访问&lt;code&gt;www.maxiecloud.com&lt;/code&gt;的HTTP服务时必须在地址栏中输入：&lt;code&gt;http://www.maxiecloud.com.&lt;/code&gt;，这样DNS才能够进行域名解析。如今DNS服务器已经可以自动补上结尾的句号。&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;http://www.neustar.biz/blog/dns-cloud.jpg&quot; alt=&quot;&quot;&gt;&lt;/p&gt;
    
    </summary>
    
      <category term="linux进阶" scheme="http://maxiecloud.com/categories/linux%E8%BF%9B%E9%98%B6/"/>
    
    
      <category term="linux" scheme="http://maxiecloud.com/tags/linux/"/>
    
      <category term="bind" scheme="http://maxiecloud.com/tags/bind/"/>
    
      <category term="dns" scheme="http://maxiecloud.com/tags/dns/"/>
    
      <category term="config" scheme="http://maxiecloud.com/tags/config/"/>
    
  </entry>
  
  <entry>
    <title>Linux文本三剑客之&quot;awk&quot;</title>
    <link href="http://maxiecloud.com/2017/05/21/awk-report-generator/"/>
    <id>http://maxiecloud.com/2017/05/21/awk-report-generator/</id>
    <published>2017-05-21T04:47:39.000Z</published>
    <updated>2017-05-21T06:39:23.000Z</updated>
    
    <content type="html"><![CDATA[<blockquote class="blockquote-center">awk是一个强大的文本分析工具。<br>它不仅是Liunx中，也是任何环境中现有功能最强大的数据处理引擎之一。<br>相对于“grep“的查找，”sed“的编译，awk在其对数据分析并生成报告时，显得尤为强大。<br></blockquote>

<p>当你第一次拿起双手在电脑上使用 awk 命令处理一个或者多个文件的时候，它会依次读取文件的每一行内容, 然后对其进行处理，awk 命令默认从 stdio 标准输入获取文件内容, awk 使用一对单引号来表示 一些可执行的脚本代码，在可执行脚本代码里面，使用一对花括号来表示一段可执行代码块，可以同时存在多个代码块。 awk 的每个花括号内同时又可以有多个指令，每一个指令用分号分隔，awk 其实就是一个脚本编程语言。</p>
<span itemprop="image" itemscope="" itemtype="http://schema.org/ImageObject"><img itemprop="url image" src="/images/Fallen-leaves.png" class="full-image" alt="jumpserver"><meta itemprop="width" content="auto"><meta itemprop="height" content="auto"></span>
<a id="more"></a>
<div class="note primary"><h3 id="awk语法以及基本使用方法"><a href="#awk语法以及基本使用方法" class="headerlink" title="awk语法以及基本使用方法"></a>awk语法以及基本使用方法</h3></div>
<h4 id="awk命令的基本语法"><a href="#awk命令的基本语法" class="headerlink" title="awk命令的基本语法"></a>awk命令的基本语法</h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">awk [OPTIONS] &apos;program&apos; FILE...</div></pre></td></tr></table></figure>
<p>options 这个表示一些可选的参数选项，反正就是你爱用不用，不用可以拉到。。。 </p>
<p><strong>常用选项有：</strong></p>
<figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line">-F fs：字段分隔符；fs指定输入分隔符，fs可以是字符串或正则表达式，如-F: </div><div class="line">-v var=value：用于实现自定义变量</div><div class="line"><span class="_">-f</span> FILENAME：直接从文件内读取执行的 <span class="string">'program'</span></div></pre></td></tr></table></figure>
<p>program 这个表示 awk 的可执行脚本代码，这个是必须要有的。<br>其中<code>program</code>的格式如下：</p>
<figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line"><span class="string">'program'</span>：PATTERN&#123;ACTION STATEMENTS&#125;</div><div class="line">ACTION STATEMENTS：动作语句，可以有多个；语句之间用分号分隔</div></pre></td></tr></table></figure>
<p>file 这个表示 awk 需要处理的文件，注意是纯文本文件，不是你的 mp3，也不是 mp4 啥的。。</p>
<hr>
<h4 id="awk的內建命令与变量"><a href="#awk的內建命令与变量" class="headerlink" title="awk的內建命令与变量"></a>awk的內建命令与变量</h4><h5 id="一、內建命令"><a href="#一、內建命令" class="headerlink" title="一、內建命令"></a>一、內建命令</h5><p>1、print打印</p>
<p><code>print item1,item2 ...</code></p>
<p>要点：<br>（1）逗号分隔符<br>（2）输出的各 item 可以是字符串，也可以是数值；当前记录的字段、变量或awk的表达式<br>（3）如果省略 item，通常相当于执行 print $0 打印整行字</p>
<p>2、printf 命令</p>
<p>格式化输出：<br><code>printf ”FORMAT“,item1,item2,....</code></p>
<p>要点：<br>（1）FORMAT：必须给出<br>（2）printf：不会自动换行，需要显示给出换行符: \n<br>（3）FORMAT中需要分别为后面的每个item指定一个格式化符号</p>
<p><strong>格式符：</strong></p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div></pre></td><td class="code"><pre><div class="line">%c          显示字符的ACSII码</div><div class="line">%d,%i       显示十进制整数；d表示显示10进制，i表示整数</div><div class="line">%e,%E       显示为科学计数法数值显示</div><div class="line">%f          显示为浮点数  float</div><div class="line">%g,%G       以科学计数法或浮点形式显示数值</div><div class="line">%s          显示字符串</div><div class="line">%u          无符号整数</div><div class="line">%%          显示%自身</div></pre></td></tr></table></figure>
<p><strong>实例：</strong></p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div></pre></td><td class="code"><pre><div class="line">awk &apos;&#123;FS=&quot;:&quot;;printf &quot;%s\n&quot;,$1&#125;&apos; /etc/passwd</div><div class="line"></div><div class="line">[root@centos7 ~]# awk -F: &apos;&#123;printf &quot;Username:   %s\n&quot;,$1&#125;&apos; /etc/passwd</div><div class="line">Username:   root</div><div class="line">Username:   bin</div><div class="line">Username:   daemon</div><div class="line">Username:   adm</div><div class="line"></div><div class="line">[root@centos7 ~]# awk -F: &apos;&#123;printf &quot;Username:  %s UID: %d \n&quot;,$1,$3&#125;&apos; /etc/passwd</div><div class="line">Username:   root UID:   0</div><div class="line">Username:   bin UID:   1</div><div class="line">Username:   daemon UID:   2</div></pre></td></tr></table></figure>
<p><strong>格式符的修饰符：</strong></p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div></pre></td><td class="code"><pre><div class="line">#[.#]:</div><div class="line">	第一个数字用来控制 显示的宽度</div><div class="line">	第二个数字用来表示 小数点的精度</div><div class="line">	%3.1f</div></pre></td></tr></table></figure>
<p>默认为右对齐</p>
<pre><code>[root@centos7 ~]# awk -F: &apos;{printf &quot;Username: %10s  UID: %d\n&quot;,$1,$3}&apos; /etc/passwd
Username:       root  UID: 0
Username:        bin  UID: 1
Username:     daemon  UID: 2
</code></pre><p>-：减号表示左对齐</p>
<pre><code>root@centos7 ~]# awk -F: &apos;{printf &quot;Username: %-10s  UID: %d\n&quot;,$1,$3}&apos; /etc/passwd
Username: root        UID: 0
Username: bin         UID: 1
Username: daemon      UID: 2
</code></pre><p>+：加号表示显示数值的符号（正数负数）</p>
<h5 id="二、內建变量"><a href="#二、內建变量" class="headerlink" title="二、內建变量"></a>二、內建变量</h5><p><strong>特殊内置变量：</strong></p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div></pre></td><td class="code"><pre><div class="line">$0 这个表示文本处理时的当前行</div><div class="line"></div><div class="line">$1 表示文本行被分隔后的第 1 个字段列</div><div class="line"></div><div class="line">$2 表示文本行被分割后的第 2 个字段列</div><div class="line"></div><div class="line">$3 表示文本行被分割后的第 3 个字段列</div><div class="line"></div><div class="line">$n 表示文本行被分割后的第 n 个字段列</div></pre></td></tr></table></figure>
<p><code>awk</code>中的內建变量，无需使用 $ 符号直接可以调用变量的值</p>
<p>（1）FS：input field seperator，指定分隔符，默认为空白字符；</p>
<p><code>awk -v FS=&quot;:&quot; &#39;{print $1 }&#39; /etc/passwd</code></p>
<p>（2）OFS：output field seperator，指定输出分隔符，默认为空白字符</p>
<p><code>awk -v FS=&quot;:&quot; -v OFS=&quot;:&quot; &#39;{print $1}&#39; /etc/passwd</code></p>
<p>（3）RS：input record seperator，输入时的换行符</p>
<p><code>awk -v RS=&quot; &quot; &#39;{print}&#39; /etc/passwd</code></p>
<p>（4）ORS：output record seperator，输出时的换行符</p>
<p>（5）NF：number of field，字段数量<br>    {print NF}：显示文本的每行字段数量<br>    {print $NF}：显示每行末尾字段的信息</p>
<p>（6）NR：number of record，行数（默认输出每一行的行号），最后一行的行号即为这个文件的总行数<br>    {print NR}</p>
<p>（7）FNR：files number of record，统计多个文件的行数，分别打印(各文件分别计数)<br>    {print FNR}</p>
<p>（8）FILENAME：当前正在处理的文件名</p>
<p>（9）ARGC：命令行参数的个数<br>    ARGV：数组，保存命令行中所给定的各参数</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div></pre></td><td class="code"><pre><div class="line">[root@centos7 ~]# awk &apos;BEGIN&#123;print ARGC&#125;&apos; /etc/fstab</div><div class="line">2</div><div class="line">[root@centos7 ~]# awk &apos;BEGIN&#123;print ARGV[0]&#125;&apos; /etc/fstab /etc/issue</div><div class="line">awk</div><div class="line">[root@centos7 ~]# awk &apos;BEGIN&#123;print ARGV[1]&#125;&apos; /etc/fstab /etc/issue</div><div class="line">/etc/fstab</div></pre></td></tr></table></figure>
<p>自定义变量：<br>(1)-v var=value ：自定义变量<br>    var：变量名，区分大小写<br>    value：值</p>
<p>(2)在’program’中直接定义：</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div></pre></td><td class="code"><pre><div class="line">[root@centos7 ~]# awk -v test=&quot;hello&quot; &apos;BEGIN&#123;print test&#125;&apos;</div><div class="line">hello</div><div class="line">[root@centos7 ~]# awk &apos;BEGIN&#123;test=&quot;hello&quot;;print test&#125;&apos;</div><div class="line">hello</div></pre></td></tr></table></figure>
<h5 id="三、操作符"><a href="#三、操作符" class="headerlink" title="三、操作符"></a>三、操作符</h5><ul>
<li>算数操作符：</li>
</ul>
<figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line">x+y，x-y，x*y，x-y，x/y，x^y，x%y</div><div class="line">-x</div><div class="line">+x：转换为数值</div></pre></td></tr></table></figure>
<ul>
<li><p>字符串操作符：没有符号的操作符(字符串连接)</p>
</li>
<li><p>赋值操作符：</p>
</li>
</ul>
<figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">=，+=，-=，*=，/=，%=，^=，++，--</div></pre></td></tr></table></figure>
<ul>
<li>比较操作符：</li>
</ul>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">&gt;,&gt;=,&lt;,&lt;=,!=不等于,==等值比较</div></pre></td></tr></table></figure>
<ul>
<li>模式匹配符：</li>
</ul>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line">~：左侧字符串是否匹配右侧的模式</div><div class="line">！~：左侧字符串是否不匹配右侧的模式</div></pre></td></tr></table></figure>
<ul>
<li>逻辑操作符：</li>
</ul>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line">&amp;&amp;：与</div><div class="line">||：或</div><div class="line">! ：非</div></pre></td></tr></table></figure>
<p>函数调用：</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line">function_name() ：进行调用函数</div><div class="line">或者</div><div class="line">function_name(arg1,arg2,arg3)</div></pre></td></tr></table></figure>
<p><strong>条件表达式：</strong></p>
<p><code>selector? if-true-expression:if-false-expression</code></p>
<p>selector：条件表达式，后面跟 ? 号<br>如果条件为真，则执行 if-true-expression<br>否则，执行 if-false-expression</p>
<p><strong>实例：</strong></p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div></pre></td><td class="code"><pre><div class="line">[root@centos7 ~]# awk -F: &apos;&#123;$3&gt;=1000?usertype=&quot;Common User&quot;:usertype=&quot;System User&quot;;printf &quot;Username: %15s %s\n&quot;,$1,usertype&#125;&apos; /etc/passwd</div><div class="line">Username:            root System User</div><div class="line">Username:             bin System User</div><div class="line">Username:          daemon System User</div></pre></td></tr></table></figure>
<p>$3&gt;=1000?  ：以 : 为分隔符，判断第三个字段的值是否大于1000<br>如果为真，执行变量赋值：usertype=”Common User”<br>否则，执行变量赋值：usertype=”System User”</p>
<hr>
<div class="note success"><h3 id="awk进阶使用方法"><a href="#awk进阶使用方法" class="headerlink" title="awk进阶使用方法"></a>awk进阶使用方法</h3></div>
<h4 id="PATTERN-模式匹配"><a href="#PATTERN-模式匹配" class="headerlink" title="PATTERN 模式匹配"></a>PATTERN 模式匹配</h4><p>awk中的模式匹配功能，有点类似于地址定界的功能。</p>
<p>(1) empty（匹配每一行）:空模式</p>
<p>(2) /regular expression/：能够其中基本正则表达式匹配到的行，对其进行处理，未匹配到的行不做任何操作<br>    仅能够处理能够被此处的模式匹配到的行</p>
<p>如果想对其中模式匹配到的取反，可以使用：!/regular expression/ 进行取反操作</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div></pre></td><td class="code"><pre><div class="line">[root@centos7 ~]# awk &apos;/^UUID/&#123;print $1&#125;&apos; /etc/fstab</div><div class="line">UUID=ab341a4b-a908-47c0-9553-bcf79b05ce43</div><div class="line">UUID=531365c9-8be5-40a1-bd9e-9bc980d21cda</div><div class="line">....</div><div class="line">[root@centos7 ~]# awk &apos;!/^UUID/&#123;print $1&#125;&apos; /etc/fstab</div><div class="line"></div><div class="line">#</div><div class="line">#</div><div class="line">#</div><div class="line">...</div></pre></td></tr></table></figure>
<p>（3） relational expression：关系表达式<br>    结果有真，有假；结果为”真“，才会处理<br>    真表示：结果为非0值，或者非空字符串；0表示假</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div></pre></td><td class="code"><pre><div class="line">[root@centos7 ~]# awk -F: &apos;$3&gt;=1000&#123;print $1,$3&#125;&apos; /etc/passwd</div><div class="line">nfsnobody 65534</div><div class="line">hacker 1000</div><div class="line">maxie1 1001</div><div class="line"></div><div class="line">其中 $3&gt;=1000 就是关系表达式，如果为真才会打印 $1 $3</div><div class="line"></div><div class="line">注意： 这里的&#123;print $1 $3&#125; 之前没有分号，因为这是一个语句</div><div class="line"></div><div class="line">[root@centos7 ~]# awk -F: &apos;$NF==&quot;/bin/bash&quot;&#123;print $1,$NF&#125;&apos; /etc/passwd</div><div class="line">root /bin/bash</div><div class="line">hacker /bin/bash</div><div class="line">maxie1 /bin/bash</div><div class="line">您在 /var/spool/mail/root 中有新邮件</div><div class="line">[root@centos7 ~]# awk -F: &apos;$NF~&quot;/bin/bash&quot;&#123;print $1,$NF&#125;&apos; /etc/passwd</div><div class="line">root /bin/bash</div><div class="line">hacker /bin/bash</div><div class="line">maxie1 /bin/bash</div><div class="line">[root@centos7 ~]# awk -F: &apos;$NF~/bash$/&#123;print $1,$NF&#125;&apos; /etc/passwd</div><div class="line">root /bin/bash</div><div class="line">hacker /bin/bash</div><div class="line">maxie1 /bin/bash</div></pre></td></tr></table></figure>
<p>这里 $NF 表示的是 每一行最后一个字段的值</p>
<p>注意：在使用模式匹配时，要在前后加上 // 符号</p>
<p>（4）line ranges ：行范围（地址定界）</p>
<p>startline,endline：</p>
<p>/pattern1/,/pattern2/这样来定义<br>或者<br>(NR&gt;=number&amp;&amp;NR&lt;=number)这样的格式来定义</p>
<pre><code>NR：每一行的行号
</code></pre><p>注意：不支持直接给出数字的方式</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div></pre></td><td class="code"><pre><div class="line">[root@centos7 ~]# awk -F: &apos;/^b/,/^sync/&#123;print $1&#125;&apos; /etc/passwd</div><div class="line">bin</div><div class="line">daemon</div><div class="line">adm</div><div class="line">lp</div><div class="line">sync</div><div class="line"></div><div class="line">[root@centos7 ~]# awk -F: &apos;(NR&lt;=10)&#123;print $1&#125;&apos; /etc/passwd</div><div class="line">root</div><div class="line">bin</div><div class="line">daemon</div><div class="line">adm</div><div class="line">lp</div><div class="line">sync</div><div class="line">shutdown</div><div class="line">halt</div><div class="line">mail</div><div class="line">operator</div><div class="line">[root@centos7 ~]# awk -F: &apos;(NR&lt;=10&amp;&amp;NR&gt;=2)&#123;print $1&#125;&apos; /etc/passwd</div><div class="line">bin</div><div class="line">daemon</div><div class="line">adm</div><div class="line">lp</div><div class="line">sync</div><div class="line">shutdown</div><div class="line">halt</div><div class="line">mail</div><div class="line">operator</div></pre></td></tr></table></figure>
<p>（5）BEGIN/END模式：</p>
<p>BEGIN{}：仅在开始处理文件中的文本之前执行一次（可以打印表头）</p>
<p>END{}：仅在文本处理完成之后执行一次</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div></pre></td><td class="code"><pre><div class="line">[root@centos7 ~]# awk -F: &apos;BEGIN&#123;print &quot;username        uid      \n----------------------&quot;&#125; &#123;printf &quot;%-15s %s\n&quot;,$1,$3&#125; END&#123;print &quot;=======================&quot;&#125;&apos; /etc/passwd</div><div class="line">username        uid</div><div class="line">----------------------</div><div class="line">root            0</div><div class="line">bin             1</div><div class="line">daemon          2</div><div class="line">....</div><div class="line">hacker          1000</div><div class="line">maxie1          1001</div><div class="line">dhcpd           177</div><div class="line">=======================</div></pre></td></tr></table></figure>
<hr>
<div class="note info"><h3 id="awk中各控制语句的用法"><a href="#awk中各控制语句的用法" class="headerlink" title="awk中各控制语句的用法"></a>awk中各控制语句的用法</h3></div>
<h4 id="1、if-else-语句"><a href="#1、if-else-语句" class="headerlink" title="1、if-else 语句"></a>1、if-else 语句</h4><p>语法：</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">if(condition) statement  [else statement]</div></pre></td></tr></table></figure>
<p>如果有多个语句 则是 {statements}</p>
<p>实例：</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div></pre></td><td class="code"><pre><div class="line">[root@centos7 ~]# awk -F: &apos;&#123;if($3&gt;=1000) print $1,$3&#125;&apos; /etc/passwd</div><div class="line">nfsnobody 65534</div><div class="line">hacker 1000</div><div class="line">maxie1 1001</div><div class="line">[root@centos7 ~]# awk -F: &apos;&#123;if($3&gt;=1000) &#123;print $1,$3&#125; else &#123;print &quot;system user&quot;&#125;&#125;&apos; /etc/passwd</div><div class="line"></div><div class="line"></div><div class="line">对一行中字段数量大于6的，进行打印 print $0，也就是匹配的整行</div><div class="line"></div><div class="line">[root@centos7 ~]# awk &apos;&#123;if(NF&gt;6) print&#125;&apos; /etc/fstab</div><div class="line">#Created by anaconda on Sun Mar 19 02:00:07 2017</div><div class="line">#Accessible filesystems, by reference, are maintained under &apos;/dev/disk&apos;</div><div class="line">#See man pages fstab(5), findfs(8), mount(8) and/or blkid(8) for more info</div><div class="line"></div><div class="line">[root@centos7 ~]# df -h | awk -F&quot;%&quot; &apos;/^\/dev/&#123;print $1&#125;&apos; | awk &apos;BEGIN&#123; print &quot;Disk full\n------------&quot;&#125;&#123;if($NF&gt;=15) print $1&#125;&apos;</div><div class="line">Disk full</div><div class="line">------------</div><div class="line">/dev/sda3</div><div class="line">/dev/sda1</div></pre></td></tr></table></figure>
<p>先对设备进行取出，并以%为分隔符，取出$1的值；再对$NF,也就是最后一个字段的值进行判断</p>
<p>使用场景：对awk取得的整行或某个字段做条件判断</p>
<h4 id="2、while-循环"><a href="#2、while-循环" class="headerlink" title="2、while 循环"></a>2、while 循环</h4><p>语法：</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">while(condition) statement</div></pre></td></tr></table></figure>
<p>条件为真，进入循环<br>条件为假，退出循环</p>
<p>使用场景：对一行内的多个字段 逐一/类似 处理时使用； 对数组中的各元素逐一处理时使用</p>
<p>实例：</p>
<figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div></pre></td><td class="code"><pre><div class="line"><span class="string">'对每一行的每一个字段进行计算字段长度'</span></div><div class="line">[root@centos7 ~]<span class="comment"># awk '/^[[:space:]]*linux16/&#123;i=1;while(i&lt;=NF) &#123;print $i,length($i); i++&#125;&#125;' /etc/grub2.cfg</span></div><div class="line">linux16 7</div><div class="line">/vmlinuz-3.10.0-514.el7.x86_64 30</div><div class="line">root=UUID=ab341a4b<span class="_">-a</span>908-47c0-9553-bcf79b05ce43 46</div><div class="line">ro 2</div><div class="line">rhgb 4</div><div class="line">quiet 5</div></pre></td></tr></table></figure>
<figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div></pre></td><td class="code"><pre><div class="line"><span class="string">'只有当一个字段内字符长度大于7时，才打印'</span></div><div class="line">[root@centos7 ~]<span class="comment"># awk '/^[[:space:]]*linux16/&#123;i=1;while(i&lt;=NF) &#123;if(length($i)&gt;=7) &#123;print $i,length($i)&#125; i++&#125;&#125;' /etc/grub2.cfg</span></div><div class="line">linux16 7</div><div class="line">/vmlinuz-3.10.0-514.el7.x86_64 30</div><div class="line">root=UUID=ab341a4b<span class="_">-a</span>908-47c0-9553-bcf79b05ce43 46</div><div class="line">LANG=en_US.UTF-8 16</div></pre></td></tr></table></figure>
<h4 id="3、do-while-循环（至少会执行一次循环体）"><a href="#3、do-while-循环（至少会执行一次循环体）" class="headerlink" title="3、do while 循环（至少会执行一次循环体）"></a>3、do while 循环（至少会执行一次循环体）</h4><p>语法：</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">do statement while(condition)</div></pre></td></tr></table></figure>
<h4 id="4、for-循环"><a href="#4、for-循环" class="headerlink" title="4、for 循环"></a>4、for 循环</h4><p>语法：</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div></pre></td><td class="code"><pre><div class="line">for(expr1;expr2;expr3) statement</div><div class="line"></div><div class="line">expr1：控制变量初始化</div><div class="line">expr2：条件判断</div><div class="line">expr3：控制变量数值修正表达式</div></pre></td></tr></table></figure>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">for(variable assignment;condition;iteration process) &#123;for-body&#125;</div></pre></td></tr></table></figure>
<p>实例：</p>
<figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div></pre></td><td class="code"><pre><div class="line"><span class="string">'对每一行的每一个字段进行计算字段长度'</span></div><div class="line">[root@centos7 ~]<span class="comment"># awk '/^[[:space:]]*linux16/&#123;for(i=1;i&lt;=NF;i++) &#123;print $i,length($i)&#125;&#125;' /etc/grub2.cfg</span></div><div class="line">linux16 7</div><div class="line">/vmlinuz-3.10.0-514.el7.x86_64 30</div><div class="line">root=UUID=ab341a4b<span class="_">-a</span>908-47c0-9553-bcf79b05ce43 46</div><div class="line">ro 2</div><div class="line">rhgb 4</div><div class="line"></div><div class="line">[root@centos7 ~]<span class="comment"># awk '/^[[:space:]]*linux16/&#123;for(i=1;i&lt;=NF;i++) &#123;if(length($i)&gt;=7) &#123;print $i,length($i)&#125; &#125;&#125;' /etc/grub2.cfg</span></div><div class="line">linux16 7</div><div class="line">/vmlinuz-3.10.0-514.el7.x86_64 30</div><div class="line">root=UUID=ab341a4b<span class="_">-a</span>908-47c0-9553-bcf79b05ce43 46</div><div class="line">LANG=en_US.UTF-8 16</div></pre></td></tr></table></figure>
<p><strong>特殊用法：</strong></p>
<figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div></pre></td><td class="code"><pre><div class="line"><span class="string">'能够遍历数组中的元素'</span></div><div class="line"></div><div class="line">语法：</div><div class="line"><span class="keyword">for</span>(var <span class="keyword">in</span> array) &#123;<span class="keyword">for</span>-body&#125;</div><div class="line"></div><div class="line">若要遍历数组中的每个元素，要使用<span class="keyword">for</span>循环：</div><div class="line"><span class="keyword">for</span>(var <span class="keyword">in</span> array) &#123;<span class="keyword">for</span>-body&#125;</div><div class="line"></div><div class="line">[root@centos7 ~]<span class="comment"># awk 'BEGIN&#123;weekdays["mon"]="Monday";weekdays["tue"]="Tuesday";for(i in weekdays) &#123;print weekdays[i]&#125;&#125;'</span></div><div class="line">Tuesday</div><div class="line">Monday</div></pre></td></tr></table></figure>
<h4 id="5、array数组："><a href="#5、array数组：" class="headerlink" title="5、array数组："></a>5、array数组：</h4><p>关联数组：array[index-expression]</p>
<p>index-expression：</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line">(1)可使用任意字符串;字符串需要使用双引号</div><div class="line">(2)如果某数组元素不存在，在引用时，awk 会自动创建此 元素，并将其初始化为”空串“</div></pre></td></tr></table></figure>
<p>若要判断数组中是否存在某元素，要使用”index in array“格式进行：</p>
<p>weekdays[“mon”]=”Monday”</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div></pre></td><td class="code"><pre><div class="line">[root@centos7 ~]# awk &apos;BEGIN&#123;weekdays[&quot;mon&quot;]=&quot;Monday&quot;;weekdays[&quot;tue&quot;]=&quot;Tuesday&quot;;print weekdays[&quot;tue&quot;]&#125;&apos;</div><div class="line">Tuesday</div><div class="line">[root@centos7 ~]# awk &apos;BEGIN&#123;weekdays[&quot;mon&quot;]=&quot;Monday&quot;;weekdays[&quot;tue&quot;]=&quot;Tuesday&quot;;print weekdays[&quot;mon&quot;]&#125;&apos;</div><div class="line">Monday</div><div class="line">[root@centos7 ~]# awk &apos;BEGIN&#123;weekdays[0]=&quot;Monday&quot;;weekdays[1]=&quot;123&quot;;print weekdays[0]&#125;&apos;</div><div class="line">Monday</div><div class="line">[root@centos7 ~]# awk &apos;BEGIN&#123;weekdays[0]=&quot;Monday&quot;;weekdays[1]=&quot;123&quot;;print weekdays[1]&#125;&apos;</div><div class="line">123</div></pre></td></tr></table></figure>
<p>若要遍历数组中的每个元素，要使用for循环：<br>for(var in array) {for-body}</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line">[root@centos7 ~]# awk &apos;BEGIN&#123;weekdays[&quot;mon&quot;]=&quot;Monday&quot;;weekdays[&quot;tue&quot;]=&quot;Tuesday&quot;;for(i in weekdays) &#123;print weekdays[i]&#125;&#125;&apos;</div><div class="line">Tuesday</div><div class="line">Monday</div></pre></td></tr></table></figure>
<p>注意：var 会遍历 array 的每个索引，但顺序可能不同</p>
<p>实例：</p>
<figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div></pre></td><td class="code"><pre><div class="line"><span class="string">'1、统计 netstat -tnl 中state状态有几种，各出现了几次'</span></div><div class="line">[root@centos7 ~]<span class="comment"># netstat -tnl | awk '/^tcp\&gt;/&#123;state[$NF]++&#125;END&#123;for(i in state) &#123;print i,state[i]&#125;&#125;'</span></div><div class="line">LISTEN 4</div><div class="line"></div><div class="line"><span class="string">'2、统计 httpd 的 /var/log/httpd/access_log 文件中 ip地址的访问次数'</span></div><div class="line">[root@centos7 ~]<span class="comment"># awk '&#123;ip[$1]++&#125;END&#123;for(i in ip) print i,ip[i]&#125;' /var/log/httpd/access_log</span></div><div class="line">172.16.1.122</div><div class="line">172.16.1.11</div><div class="line">::1</div><div class="line"></div><div class="line"><span class="string">'3、netstat -tna 查看连接到本机IP地址和状态'</span></div><div class="line">[root@centos7 ~]<span class="comment"># netstat -tan | awk  -v FS='[[:space:]:]+' '$(NF-2)~/\.+/&#123;if (1!=NR) IpState[$6"  "$NF]++&#125;END&#123;for(i in IpState) &#123;print i,IpState[i]&#125;&#125;'</span></div><div class="line">172.16.1.11  ESTABLISHED 2</div></pre></td></tr></table></figure>
<hr>
<iframe frameborder="no" border="0" marginwidth="0" marginheight="0" width="330" height="86" src="//music.163.com/outchain/player?type=2&id=16532462&auto=1&height=66"></iframe>

<p>本文出自<a href="http://maxiecloud.com">Maxie’s Notes</a>博客，转载请务必保留此出处。</p>
<p><img src="https://ww1.sinaimg.cn/large/006tNbRwly1fdzc80odsuj30gn0ilq5m.jpg" alt=""></p>
]]></content>
    
    <summary type="html">
    
      &lt;blockquote class=&quot;blockquote-center&quot;&gt;awk是一个强大的文本分析工具。&lt;br&gt;它不仅是Liunx中，也是任何环境中现有功能最强大的数据处理引擎之一。&lt;br&gt;相对于“grep“的查找，”sed“的编译，awk在其对数据分析并生成报告时，显得尤为强大。&lt;br&gt;&lt;/blockquote&gt;

&lt;p&gt;当你第一次拿起双手在电脑上使用 awk 命令处理一个或者多个文件的时候，它会依次读取文件的每一行内容, 然后对其进行处理，awk 命令默认从 stdio 标准输入获取文件内容, awk 使用一对单引号来表示 一些可执行的脚本代码，在可执行脚本代码里面，使用一对花括号来表示一段可执行代码块，可以同时存在多个代码块。 awk 的每个花括号内同时又可以有多个指令，每一个指令用分号分隔，awk 其实就是一个脚本编程语言。&lt;/p&gt;
&lt;span itemprop=&quot;image&quot; itemscope itemtype=&quot;http://schema.org/ImageObject&quot;&gt;&lt;img itemprop=&quot;url image&quot; src=&quot;/images/Fallen-leaves.png&quot; class=&quot;full-image&quot; alt=&quot;jumpserver&quot; /&gt;&lt;meta itemprop=&quot;width&quot; content=&quot;auto&quot;&gt;&lt;meta itemprop=&quot;height&quot; content=&quot;auto&quot;&gt;&lt;/span&gt;
    
    </summary>
    
      <category term="linux进阶" scheme="http://maxiecloud.com/categories/linux%E8%BF%9B%E9%98%B6/"/>
    
    
      <category term="linux" scheme="http://maxiecloud.com/tags/linux/"/>
    
      <category term="command" scheme="http://maxiecloud.com/tags/command/"/>
    
      <category term="awk" scheme="http://maxiecloud.com/tags/awk/"/>
    
      <category term="editor" scheme="http://maxiecloud.com/tags/editor/"/>
    
  </entry>
  
  <entry>
    <title>Linux破坏性实验</title>
    <link href="http://maxiecloud.com/2017/05/13/kernel-experiment/"/>
    <id>http://maxiecloud.com/2017/05/13/kernel-experiment/</id>
    <published>2017-05-13T07:21:25.000Z</published>
    <updated>2017-05-13T11:25:11.000Z</updated>
    
    <content type="html"><![CDATA[<blockquote class="blockquote-center">在学习Linux的过程中，不免由于”手速”过快的原因，导致执行 “rm -rf”命令时，删除了我们不想删除的文件。<br>这时，身为小白的我们想到的第一个解决办法就是 “重装系统”，这也不失为一个好的解决办法；<br>但是如果里面有我们辛辛苦苦写了几个星期的一些脚本和笔记呢？<br>这时候就需要使用Linux自带的 “Rescue installed system(救援模式)” 来为我们恢复了！<br></blockquote>

<p>插入 <code>CentOS</code>系统光盘，或者挂载光盘到虚拟机中；</p>
<p>开机按 <code>F2</code> 或者 <code>ESC键</code> ，进入到<code>Boot Menu</code>；</p>
<p>选择<code>CD-ROM Drive</code>即可进入到光盘启动。</p>
<p>进入到光盘界面，使用上下箭头选择模式，这里我们要进入到 “Rescue installed system(救援模式)”，所以选择 <code>第三项</code></p>
<p><img src="http://ww3.sinaimg.cn/large/006tKfTcly1ffjrt1jp05j319k0y0th7.jpg" alt=""></p>
<a id="more"></a>
<p><strong>注意：</strong><br>此次实验的环境为：</p>
<figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line">内核版本：2.6.32-642.el6.x86_64</div><div class="line">系统版本：CentOS release 6.8 (Final)</div><div class="line">虚拟机版本：VMware Fusion 专业版 8.5.3 (4696910)</div></pre></td></tr></table></figure>
<div class="note primary"><h3 id="Liunx破坏性实验-easy-mode"><a href="#Liunx破坏性实验-easy-mode" class="headerlink" title="Liunx破坏性实验(easy mode)"></a>Liunx破坏性实验(easy mode)</h3></div>
<p>在这一章节，我们只做一些 一学就懂，一做就明白的实验。</p>
<h4 id="第一个实验：修改-etc-inittab文件中的runlevel修改成了6"><a href="#第一个实验：修改-etc-inittab文件中的runlevel修改成了6" class="headerlink" title="第一个实验：修改/etc/inittab文件中的runlevel修改成了6"></a>第一个实验：修改/etc/inittab文件中的runlevel修改成了6</h4><p><code>/etc/inittab</code>文件存放的是我们系统启动时的启动级别。</p>
<p>运行级别：为系统运行或维护等目的而设定；</p>
<p>0-6：7个级别</p>
<figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div></pre></td><td class="code"><pre><div class="line">0：关机</div><div class="line">1：单用户模式(root自动登录), single, 维护模式     无网络功能</div><div class="line">2: 多用户模式，启动网络功能，但不会启动NFS(默认所有模式都关闭)；维护模式</div><div class="line">3：多用户模式，正常模式；文本界面</div><div class="line">4：预留级别；可同3级别</div><div class="line">5：多用户模式，正常模式；图形界面</div><div class="line">6：重启</div></pre></td></tr></table></figure>
<p>这里我们设置成 <code>6</code> 就是无限重启</p>
<figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line">$ vim /etc/inittab</div><div class="line">id:6:initdefault:</div></pre></td></tr></table></figure>
<p><img src="http://ww1.sinaimg.cn/large/006tKfTcly1ffjtx4lx4xg30dw08oe8e.gif" alt=""></p>
<p><strong>解决方法：</strong></p>
<ol>
<li>在菜单界面，按a即可 进入grub启动选项界面；</li>
<li>在一串选项的后面，键入 数字3 或 数字5，都可以进入多用户模式，不同的是一个是字符界面，一个是图形界面</li>
<li>这样我们就能正常启动linux系统啦</li>
<li>但是，不要高兴得太早，现在我们只是手动的修改了启动选项，启动配置文件还没有修改。</li>
<li>进入系统后，修改 <code>/etc/inittab</code> 文件的runlevel等级为5即可。</li>
</ol>
<p><img src="http://ww4.sinaimg.cn/large/006tKfTcly1ffju507jp0j30zm0k6ndf.jpg" alt=""></p>
<p>注意最后面的 数字5</p>
<p>这里我们选择了 以图形化界面启动系统</p>
<hr>
<h4 id="第二个实验，忘记root（超级管理员）用户密码，如何破解？"><a href="#第二个实验，忘记root（超级管理员）用户密码，如何破解？" class="headerlink" title="第二个实验，忘记root（超级管理员）用户密码，如何破解？"></a>第二个实验，忘记root（超级管理员）用户密码，如何破解？</h4><ol>
<li>开机进入倒计时的时候，按下a键，进入到grub内核启动参数的编辑界面</li>
<li>直接在后面输入 <code>single</code> 或者 <code>S</code> 或者 <code>single s</code> 都可以进入到 <code>单用户模式</code></li>
<li>系统以单用户模式启动后，无需输入任何密码，就以 <code>root</code>用户的身份登录到了系统，这样我们就可以使用 <code>passwd</code> 命令修改 <code>root</code>用户的密码了！</li>
</ol>
<p><img src="http://ww2.sinaimg.cn/large/006tNc79ly1ffjuytqqcrj30zi0jsaq5.jpg" alt=""></p>
<p><img src="http://ww4.sinaimg.cn/large/006tNc79ly1ffjw76nq0xj318e0x2k0r.jpg" alt=""></p>
<hr>
<h4 id="第三个实验，删除-boot-vmlinuz-2-6-32-642-el6-x86-64文件，如何恢复？"><a href="#第三个实验，删除-boot-vmlinuz-2-6-32-642-el6-x86-64文件，如何恢复？" class="headerlink" title="第三个实验，删除/boot/vmlinuz-2.6.32-642.el6.x86_64文件，如何恢复？"></a>第三个实验，删除/boot/vmlinuz-2.6.32-642.el6.x86_64文件，如何恢复？</h4><p>1、 挂载系统光盘<br>2、 进入救援模式：</p>
<ul>
<li>在出现VMware的界面，快速按<code>ESC键</code>，进入<code>boot menu</code>，选择<code>CD-ROM</code>选项</li>
<li>进入到光盘引导之后，选择第三项，救援模式</li>
</ul>
<p>3、 进入到救援模式后，选择按照默认的选择一步一步的走到 <code>shell start shell</code>的界面时：<br>    回车进入一个<code>shell</code>终端内</p>
<p><img src="http://ww4.sinaimg.cn/large/006tNc79ly1ffjwucb5xgg30jg0c6e8a.gif" alt=""></p>
<p>4、回到了我们熟悉的命令行界面，现在我们开始正式的恢复之前删除的 <code>vmlinuz</code>文件</p>
<p><strong>步骤如下：</strong></p>
<figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div></pre></td><td class="code"><pre><div class="line">$ chroot /mnt/sysimage          <span class="comment">#切根到我们真正的系统根目录上</span></div><div class="line">$ mount /dev/sr0 /mnt           <span class="comment">#挂载系统光盘</span></div><div class="line">$ cp /mnt/isolinux/vmlinuz /boot/vmlinuz-`uname -r`  <span class="comment">#拷贝光盘内的内核文件到我们的/boot目录下</span></div><div class="line">$ sync</div><div class="line">$ <span class="built_in">exit</span></div><div class="line">$ reboot</div></pre></td></tr></table></figure>
<p><img src="http://ww1.sinaimg.cn/large/006tNc79ly1ffjx7q5m0eg30jg0c6u1d.gif" alt=""></p>
<p>这样就大功告成啦</p>
<div class="note success"><h3 id="Linux扇区破坏性实验-normal-mode"><a href="#Linux扇区破坏性实验-normal-mode" class="headerlink" title="Linux扇区破坏性实验(normal mode)"></a>Linux扇区破坏性实验(normal mode)</h3></div>
<p>现在开始的实验，非常危险!!!<br>请朋友们，在执行如下操作的时候，确保为<code>实验机</code>做了 <code>快照</code>、<code>备份</code>或者<code>镜像</code>等操作。</p>
<h4 id="第一个实验，破坏MBR前446个字节的信息，并恢复。"><a href="#第一个实验，破坏MBR前446个字节的信息，并恢复。" class="headerlink" title="第一个实验，破坏MBR前446个字节的信息，并恢复。"></a>第一个实验，破坏MBR前446个字节的信息，并恢复。</h4><p>1、先执行<code>dd</code>命令，破坏MBR的前446字节</p>
<figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line">$ dd <span class="keyword">if</span>=/dev/zero of=/dev/sda bs=1 count=446        <span class="comment">#把前446字节都重写为0</span></div><div class="line">$ hexdump -C -n 512 -v /dev/sda                     <span class="comment">#查看/dev/sda的前512字节，确认446字节都被重写为0</span></div><div class="line">$ reboot</div></pre></td></tr></table></figure>
<p>2、开始恢复：</p>
<ul>
<li>进入救援模式</li>
<li>切根</li>
</ul>
<figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">$ chroot /dev/sda</div></pre></td></tr></table></figure>
<ul>
<li>安装grub</li>
</ul>
<figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">$ grub-install /dev/sda</div></pre></td></tr></table></figure>
<ul>
<li>等待安装完毕，查看/dev/sda的信息</li>
</ul>
<figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">$ hexdump -C -n 512 /dev/sda</div></pre></td></tr></table></figure>
<ul>
<li>修复成功，重启即可</li>
</ul>
<figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line">$ sync</div><div class="line">$ <span class="built_in">exit</span> </div><div class="line">$ reboot</div></pre></td></tr></table></figure>
<hr>
<h4 id="第二个实验，破坏MBR后续的2048个字节，并恢复。-stage1-5阶段的破坏"><a href="#第二个实验，破坏MBR后续的2048个字节，并恢复。-stage1-5阶段的破坏" class="headerlink" title="第二个实验，破坏MBR后续的2048个字节，并恢复。(stage1.5阶段的破坏)"></a>第二个实验，破坏MBR后续的2048个字节，并恢复。(stage1.5阶段的破坏)</h4><p>1、先执行<code>dd</code>命令，进行破坏</p>
<figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line">$ dd <span class="keyword">if</span>=/dev/zero of=/dev/sda bs=1 count=2048 skip=512 seek=512       </div><div class="line">$ hexdump -C -n 2048 -v /dev/sda</div></pre></td></tr></table></figure>
<p>2、开始恢复</p>
<ul>
<li>进入救援模式</li>
<li>切根</li>
<li>进入grub命令行</li>
</ul>
<figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div></pre></td><td class="code"><pre><div class="line">$ grub</div><div class="line">grub&gt; root (hd0,0)          <span class="comment">#boot分区在硬盘上的分区位置</span></div><div class="line">grub&gt; setup (hd0)           <span class="comment">#boot分区在哪个硬盘上</span></div><div class="line">grub&gt; quit</div></pre></td></tr></table></figure>
<ul>
<li>重启，并退出救援模式</li>
</ul>
<figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line">$ <span class="built_in">exit</span></div><div class="line">$ reboot</div></pre></td></tr></table></figure>
<ul>
<li>修复成功！</li>
</ul>
<p><img src="http://ww2.sinaimg.cn/large/006tNc79ly1ffjxxi76mwg30jg0c67wt.gif" alt=""></p>
<hr>
<h4 id="第三个实验，删除-boot-grub-，并恢复"><a href="#第三个实验，删除-boot-grub-，并恢复" class="headerlink" title="第三个实验，删除/boot/grub/*，并恢复"></a>第三个实验，删除/boot/grub/*，并恢复</h4><p>1、执行删除操作</p>
<figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">$ rm -rf /boot/grub/*</div></pre></td></tr></table></figure>
<p>2、进入救援模式，开始恢复</p>
<ul>
<li>切根</li>
<li>安装grub</li>
</ul>
<figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">$ grub-install /dev/sda</div></pre></td></tr></table></figure>
<ul>
<li>由于<code>grub-install</code>命令并不会为我们产生 grub.conf 配置文件，所以需要我们手写</li>
</ul>
<figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div></pre></td><td class="code"><pre><div class="line">$ vim /boot/grub/grub.conf</div><div class="line">default 0</div><div class="line">timeout 5</div><div class="line">titile CentOS 6.8(Final)</div><div class="line">    kernel /vmlinuz-2.6.32-642.el6.x86_64 root=/dev/mapper/vg0-root selinux=0</div><div class="line">    initrd /initramfs-2.6.32-642.el6.x86_64.img</div></pre></td></tr></table></figure>
<ul>
<li>修复完成，退出救援模式，并重启</li>
</ul>
<figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line">$ sync</div><div class="line">$ <span class="built_in">exit</span></div><div class="line">$ reboot</div></pre></td></tr></table></figure>
<ul>
<li>修复完成啦！！！</li>
</ul>
<p><img src="http://ww4.sinaimg.cn/large/006tNc79ly1ffjyfficrbg30jg0c6e87.gif" alt=""></p>
<hr>
<p><strong>以上这些就是我在学习过程中总结的各种实验步骤，希望dalao们多多指点！</strong></p>
<hr>
<iframe frameborder="no" border="0" marginwidth="0" marginheight="0" width="330" height="86" src="//music.163.com/outchain/player?type=2&id=469535480&auto=1&height=66"></iframe> 

<p>本文出自<a href="http://maxiecloud.com">Maxie’s Notes</a>博客，转载请务必保留此出处。</p>
<p><img src="https://ww1.sinaimg.cn/large/006tNbRwly1fdzc80odsuj30gn0ilq5m.jpg" alt=""></p>
]]></content>
    
    <summary type="html">
    
      &lt;blockquote class=&quot;blockquote-center&quot;&gt;在学习Linux的过程中，不免由于”手速”过快的原因，导致执行 “rm -rf”命令时，删除了我们不想删除的文件。&lt;br&gt;这时，身为小白的我们想到的第一个解决办法就是 “重装系统”，这也不失为一个好的解决办法；&lt;br&gt;但是如果里面有我们辛辛苦苦写了几个星期的一些脚本和笔记呢？&lt;br&gt;这时候就需要使用Linux自带的 “Rescue installed system(救援模式)” 来为我们恢复了！&lt;br&gt;&lt;/blockquote&gt;

&lt;p&gt;插入 &lt;code&gt;CentOS&lt;/code&gt;系统光盘，或者挂载光盘到虚拟机中；&lt;/p&gt;
&lt;p&gt;开机按 &lt;code&gt;F2&lt;/code&gt; 或者 &lt;code&gt;ESC键&lt;/code&gt; ，进入到&lt;code&gt;Boot Menu&lt;/code&gt;；&lt;/p&gt;
&lt;p&gt;选择&lt;code&gt;CD-ROM Drive&lt;/code&gt;即可进入到光盘启动。&lt;/p&gt;
&lt;p&gt;进入到光盘界面，使用上下箭头选择模式，这里我们要进入到 “Rescue installed system(救援模式)”，所以选择 &lt;code&gt;第三项&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;http://ww3.sinaimg.cn/large/006tKfTcly1ffjrt1jp05j319k0y0th7.jpg&quot; alt=&quot;&quot;&gt;&lt;/p&gt;
    
    </summary>
    
      <category term="linux进阶" scheme="http://maxiecloud.com/categories/linux%E8%BF%9B%E9%98%B6/"/>
    
    
      <category term="linux" scheme="http://maxiecloud.com/tags/linux/"/>
    
      <category term="kernel" scheme="http://maxiecloud.com/tags/kernel/"/>
    
      <category term="damage" scheme="http://maxiecloud.com/tags/damage/"/>
    
      <category term="recover" scheme="http://maxiecloud.com/tags/recover/"/>
    
  </entry>
  
  <entry>
    <title>Linux网络接口配置-&quot;Bonding&quot;</title>
    <link href="http://maxiecloud.com/2017/05/06/Bonding-Configuration/"/>
    <id>http://maxiecloud.com/2017/05/06/Bonding-Configuration/</id>
    <published>2017-05-06T03:05:57.000Z</published>
    <updated>2017-05-06T05:05:25.000Z</updated>
    
    <content type="html"><![CDATA[<blockquote class="blockquote-center">“Bonding”就是将多块网卡绑定同一IP地址对外提供服务，可以实现高可用/负载均衡。<br><br>在企业以及电信Linux服务器环境上，网络配置都会使用Bonding技术做网口硬件层面的冗余，防止单个网络应用的单点故障。<br></blockquote>

<p>本文将介绍Linux下的<code>Bonding</code>技术，利用这种技术可以将多块网卡接口通过绑定虚拟成一块网卡，在用户看来这个聚合起来的设备好像是一个单独的以太网接口设备，通俗点讲就是多块网卡具有相同的IP地址而并行连接聚合成一个逻辑链路工作。</p>
<a id="more"></a>
<div class="note primary"><h3 id="Bond的几种工作模式"><a href="#Bond的几种工作模式" class="headerlink" title="Bond的几种工作模式"></a>Bond的几种工作模式</h3></div>
<h4 id="模式1：mode-0，（balance-rr）Round-robin（轮循策略）"><a href="#模式1：mode-0，（balance-rr）Round-robin（轮循策略）" class="headerlink" title="模式1：mode=0，（balance-rr）Round-robin（轮循策略）"></a>模式1：mode=0，（balance-rr）Round-robin（轮循策略）</h4><p><strong>特点：</strong><br>传输数据包顺序是依次传输（即：第一个包走eth0，下一包就走eth1…，一直这样循环下去，直到最后一个传输完毕），此模式提供负载平衡和容错能力；但是我们知道如果一个连接或者会话的数据包从不同的接口发出的话，中途再经过不同的链路，在客户端很有可能会出现数据包无序到达的问题，而无序到达的数据包需要重新要求被发送，这样网络的吞吐量就会下降。</p>
<h4 id="模式2：mode-1，即：（active-backup）Active-backup（主备策略）"><a href="#模式2：mode-1，即：（active-backup）Active-backup（主备策略）" class="headerlink" title="模式2：mode=1，即：（active-backup）Active-backup（主备策略）"></a>模式2：mode=1，即：（active-backup）Active-backup（主备策略）</h4><p><strong>特点：</strong><br>只有一个设备（slave）处于活动状态，当一个宕掉另一个马上由备份转为主设备。mac地址是外部可见的，从外面看来，<code>bond</code>的MAC地址是唯一的，以避免交换机（switch）发生混乱。<br>此模式只提供了容错能力；<br>由此可见此模式的优点是可以提供高可用的网络连接，但是它的资源利用率较低，只有一个接口处于工作状态，在有N个网络接口的情况下，资源利用率仅为1/N。</p>
<h4 id="模式3：mode-2，即：（balance-xor）XOR（平衡策略）"><a href="#模式3：mode-2，即：（balance-xor）XOR（平衡策略）" class="headerlink" title="模式3：mode=2，即：（balance-xor）XOR（平衡策略）"></a>模式3：mode=2，即：（balance-xor）XOR（平衡策略）</h4><p><strong>特点：</strong><br>基于指定的传输HASH策略传输数据包。缺省的策略是：（源MAC地址 XOR 目标MAC地址） % slave数量，其他的传输策略可以通过<code>xmit_hash_policy</code>选项指定，此模式提供负载平衡和容错能力。</p>
<h4 id="模式4：mode-3，即：broadcast-广播策略"><a href="#模式4：mode-3，即：broadcast-广播策略" class="headerlink" title="模式4：mode=3，即：broadcast 广播策略"></a>模式4：mode=3，即：broadcast 广播策略</h4><p><strong>特点：</strong><br>在每个slave接口上传输每个数据包，此模式提供了容错能力</p>
<h4 id="模式5：mode-4，即：（802-3ad）IEEE-802-3adDynamic-link-aggregation（IEEE-802-3ad-动态链接聚合）"><a href="#模式5：mode-4，即：（802-3ad）IEEE-802-3adDynamic-link-aggregation（IEEE-802-3ad-动态链接聚合）" class="headerlink" title="模式5：mode=4，即：（802.3ad）IEEE 802.3adDynamic link aggregation（IEEE 802.3ad 动态链接聚合）"></a>模式5：mode=4，即：（802.3ad）IEEE 802.3adDynamic link aggregation（IEEE 802.3ad 动态链接聚合）</h4><p><strong>特点：</strong><br>创建一个聚合组，它们共享同样的速率和双工设定。<br>根据<code>802.3ad</code>规范将多个slave工作在同一个激活的聚合体下。</p>
<p>外出流量的slave选举是基于传输hash策略，该策略可以通过<code>xmit_hash_policy</code>选项从缺省的XOR策略改变到其他策略。需要注意的是，并不是所有的传输策略都是<code>802.3ad</code>适应的，尤其考虑到在<code>802.3ad</code>标准提及的包乱序问题，不同的实现可能会有不同的适应性。</p>
<p><strong>必要条件：</strong></p>
<p>条件1：<code>ethtool</code>支持获取每个slave的速率和双工设定 </p>
<p>条件2：switch(交换机)支持<code>IEEE 802.3ad Dynamic link aggregation</code> </p>
<p>条件3：大多数switch(交换机)需要经过特定配置才能支持<code>802.3ad</code>模式</p>
<h4 id="模式6：mode-5，即：（balance-tlb）Adaptive-transmit-load-balancing（适配器传输负载均衡）"><a href="#模式6：mode-5，即：（balance-tlb）Adaptive-transmit-load-balancing（适配器传输负载均衡）" class="headerlink" title="模式6：mode=5，即：（balance-tlb）Adaptive transmit load balancing（适配器传输负载均衡）"></a>模式6：mode=5，即：（balance-tlb）Adaptive transmit load balancing（适配器传输负载均衡）</h4><p><strong>特点：</strong><br>不需要任何的特别交换机（switch）支持的通道bonding。在每个slave上根据当前的负载（根据速度计算）分配外出流量。如果正在接受数据的slave出故障了，另一个slave接管失败的slave的MAC地址。</p>
<p>该模式的必要条件：ethtool支持获取每个slave的速率。</p>
<h4 id="模式7：mode-6，即：（balance-alb）Adaptive-load-balancing（适配器适应性负载均衡）"><a href="#模式7：mode-6，即：（balance-alb）Adaptive-load-balancing（适配器适应性负载均衡）" class="headerlink" title="模式7：mode=6，即：（balance-alb）Adaptive load balancing（适配器适应性负载均衡）"></a>模式7：mode=6，即：（balance-alb）Adaptive load balancing（适配器适应性负载均衡）</h4><p><strong>特点：</strong><br>该模式包含了balance-tlb模式，同时加上针对IPV4流量的接收负载均衡(receive load balance, rlb)，而且不需要任何switch(交换机)的支持。接收负载均衡是通过ARP协商实现的。bonding驱动截获本机发送的ARP应答，并把源硬件地址改写为bond中某个slave的唯一硬件地址，从而使得不同的对端使用不同的硬件地址进行通信。</p>
<hr>
<div class="note success"><h3 id="常用模式详解"><a href="#常用模式详解" class="headerlink" title="常用模式详解"></a>常用模式详解</h3></div>
<p>Linux Bond有两种经典的模式：主备（mode=1）、负载均衡（mode=0）</p>
<p>下面，我们将对这两个模式进行详细的介绍以及在CentOS6和7上进行试验。</p>
<h4 id="原理图"><a href="#原理图" class="headerlink" title="原理图"></a>原理图</h4><p><strong>主备模式：</strong></p>
<p><img src="http://ww4.sinaimg.cn/large/006tNc79ly1ffbj1odk5bj30f20dvglz.jpg" alt=""></p>
<p><strong>负载均衡模式：</strong></p>
<p><img src="http://ww3.sinaimg.cn/large/006tNc79ly1ffbj1oj6s4j30f20dvwev.jpg" alt=""></p>
<hr>
<h4 id="主备模式、负载均衡模式详解"><a href="#主备模式、负载均衡模式详解" class="headerlink" title="主备模式、负载均衡模式详解"></a>主备模式、负载均衡模式详解</h4><p><strong>1. 我们先看主备模式</strong></p>
<p>主备模式下，Linux Bonding实现会将Bond的两个slave网口的MAC地址改为Bond的MAC地址，而Bond的MAC地址是Bond创建启动后，主用slave网口的MAC地址。</p>
<p>当住用网口故障后，Bond会切换到备用网口，切换过程中，上层的应用是无感知不受影响的，因为Bond在驱动层，会接管上层应用的数据包，缓存起来等备用网卡起来后再通过备用网卡发送出去。当然，前提是切换时间很短，否则缓冲区是会溢出的，溢出后就开始丢包了。具体的时间值本人还没有验证过。</p>
<p><strong>2. 再看负载均衡模式</strong></p>
<p>负载均衡模式下，Linux Bonding实现可以保持两个slave网口的MAC地址不变，Bond的MAC地址是其中一个网卡的，Bond MAC地址的选择是根据Bond自己实现的一个算法来的，具体如何选择还没有研究。</p>
<p>当然，这里要重点说明的是，Bond负载均衡模式下，要求交换机做配置，是的两个slave网口能够互通，否则的话，丢包会很厉害，基本没法使用。这个是因为Bond的负载均衡模式算法，会将包在两个网口之间传输以达到负载均衡。<br>由于负载均衡模式下，两个slave有独立的MAC地址，你可能会想，我能否给slave网口再绑定一个IP地址，用作其他用途。<br>这种方法是实现不了的。</p>
<p>负载均衡模式下，两个slave网口在操作性系统上看到是两个独立的MAC地址，但是当你指定一个MAC地址发送包的时候，实际上发生的现象，不是你期望的。你指定MAC地址1发包，这个数据包可能到MAC地址2出去了。<br>这个是因为Bond对这两个网口做了手脚，改了网口的驱动。看起来他们有独立的MAC地址，实际上他们的MAC地址不是独立的，只能给Bond使用。</p>
<h4 id="不足之处"><a href="#不足之处" class="headerlink" title="不足之处"></a>不足之处</h4><p><strong>从上面的介绍中，很容易看到Bond的一点不足：</strong></p>
<p>Bond更改了网口的驱动，其网口不能被用作其他用途。</p>
<p>Bond还有一点不足就是其故障监测上面：<br>Bond默认只能做网口MII监测不能做链路监测（链路是指本机到网关的路径），也就是只能监测网口是否连接（网口是否亮）；当然Bond也支持ARP协议的链路监测，但是ARP链路监测在一些场景下，太消耗资源，得不偿失。我们曾经在实际应用中使用过，效果确实不好。</p>
<hr>
<div class="note info"><h3 id="主备模式的实施（CentOS6-and-CentOS7）"><a href="#主备模式的实施（CentOS6-and-CentOS7）" class="headerlink" title="主备模式的实施（CentOS6 and CentOS7）"></a>主备模式的实施（CentOS6 and CentOS7）</h3></div>
<p><strong>实验环境：</strong></p>
<p>CentOS6：</p>
<figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line">操作系统（OS）：CentOS release 6.8 (Final)</div><div class="line">内核版本（Kernel）：2.6.32-642.el6.x86_64</div><div class="line">虚拟机环境：VMware Fusion 专业版 8.5.3 (4696910)</div></pre></td></tr></table></figure>
<p>CentOS7：</p>
<figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line">操作系统（OS）：CentOS Linux release 7.2.1511 (Core)</div><div class="line">内核版本（Kernel）：3.10.0-514.el7.x86_64</div><div class="line">虚拟机环境：VMware Fusion 专业版 8.5.3 (4696910)</div></pre></td></tr></table></figure>
<h4 id="Centos6实验步骤"><a href="#Centos6实验步骤" class="headerlink" title="Centos6实验步骤"></a>Centos6实验步骤</h4><h5 id="第一步，在VMware的控制台把需要绑定的网卡都设置在一个网段内（都设置成主机模式或者桥接，自定义都可以）"><a href="#第一步，在VMware的控制台把需要绑定的网卡都设置在一个网段内（都设置成主机模式或者桥接，自定义都可以）" class="headerlink" title="第一步，在VMware的控制台把需要绑定的网卡都设置在一个网段内（都设置成主机模式或者桥接，自定义都可以）"></a>第一步，在VMware的控制台把需要绑定的网卡都设置在一个网段内（都设置成主机模式或者桥接，自定义都可以）</h5><h5 id="第二步，在Terminal关闭NetworkManager服务，在-etc-sysconfig-network-scripts-目录下创建ifcfg-bond0配置文件"><a href="#第二步，在Terminal关闭NetworkManager服务，在-etc-sysconfig-network-scripts-目录下创建ifcfg-bond0配置文件" class="headerlink" title="第二步，在Terminal关闭NetworkManager服务，在/etc/sysconfig/network-scripts/目录下创建ifcfg-bond0配置文件"></a>第二步，在<code>Terminal</code>关闭<code>NetworkManager</code>服务，在<code>/etc/sysconfig/network-scripts/</code>目录下创建<code>ifcfg-bond0</code>配置文件</h5><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div></pre></td><td class="code"><pre><div class="line">$ service NetworkManager stop </div><div class="line">$ <span class="built_in">cd</span> /etc/sysconfig/network-scripts</div><div class="line">$ vim ifcfg-bond0</div><div class="line">	DEVICE=bond0</div><div class="line">	BONDING_OPTS=<span class="string">"miiimon=100 mode=1"</span></div><div class="line">	IPADDR=172.16.23.150</div><div class="line">	NETMASK=255.255.255.0</div><div class="line">	GATEWAY=172.16.23.1</div></pre></td></tr></table></figure>
<h5 id="第三步，修改两张物理网卡的配置信息"><a href="#第三步，修改两张物理网卡的配置信息" class="headerlink" title="第三步，修改两张物理网卡的配置信息"></a>第三步，修改两张物理网卡的配置信息</h5><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div></pre></td><td class="code"><pre><div class="line">$ vim ifcfg-eth0</div><div class="line">	DEVICE=<span class="string">"eth0"</span></div><div class="line">	MASTER=bond0</div><div class="line">	SLAVE=yes</div><div class="line"></div><div class="line">$ vim ifcfg-eth1</div><div class="line">	DEVICE=<span class="string">"eth1"</span></div><div class="line">	MASTER=bond0</div><div class="line">	SLAVE=yes</div></pre></td></tr></table></figure>
<h5 id="第四步，重启网络服务"><a href="#第四步，重启网络服务" class="headerlink" title="第四步，重启网络服务"></a>第四步，重启网络服务</h5><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">$ service network restart</div></pre></td></tr></table></figure>
<h5 id="第五步，查看bond0配置信息"><a href="#第五步，查看bond0配置信息" class="headerlink" title="第五步，查看bond0配置信息"></a>第五步，查看<code>bond0</code>配置信息</h5><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div></pre></td><td class="code"><pre><div class="line">$ cat /proc/net/bonding/bond0 </div><div class="line">	Ethernet Channel Bonding Driver: v3.7.1 (April 27, 2011)</div><div class="line">	Bonding Mode: fault-tolerance (active-backup)</div><div class="line">	Primary Slave: None</div><div class="line">	Currently Active Slave: eth0</div><div class="line">	MII Status: up</div><div class="line">	MII Polling Interval (ms): 100</div><div class="line">	Up Delay (ms): 0</div><div class="line">	Down Delay (ms): 0</div><div class="line"></div><div class="line">	Slave Interface: eth0</div><div class="line">	MII Status: up</div><div class="line">	Speed: 1000 Mbps</div><div class="line">	Duplex: full</div><div class="line">	Link Failure Count: 0</div><div class="line">	Permanent HW addr: 00:0c:29:26:8e:b1</div><div class="line">	Slave queue ID: 0</div><div class="line"></div><div class="line">	Slave Interface: eth1</div><div class="line">	MII Status: up</div><div class="line">	Speed: 1000 Mbps</div><div class="line">	Duplex: full</div><div class="line">	Link Failure Count: 0</div><div class="line">	Permanent HW addr: 00:0c:29:26:8e:bb</div><div class="line">	Slave queue ID: 0</div></pre></td></tr></table></figure>
<h5 id="第六步，手动在VM控制端，模拟网卡故障，-断掉eth0的连接，使用另一台在一个网段的主机一直ping-bond0-的IP地址，查看是否会自动切换网卡"><a href="#第六步，手动在VM控制端，模拟网卡故障，-断掉eth0的连接，使用另一台在一个网段的主机一直ping-bond0-的IP地址，查看是否会自动切换网卡" class="headerlink" title="第六步，手动在VM控制端，模拟网卡故障， 断掉eth0的连接，使用另一台在一个网段的主机一直ping bond0 的IP地址，查看是否会自动切换网卡"></a>第六步，手动在VM控制端，模拟网卡故障， 断掉eth0的连接，使用另一台在一个网段的主机一直<code>ping bond0</code> 的IP地址，查看是否会自动切换网卡</h5><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div></pre></td><td class="code"><pre><div class="line">$ ping 172.16.23.150</div><div class="line">	64 bytes from 172.16.23.150: icmp_seq=10 ttl=64 time=0.197 ms</div><div class="line">	Request timeout <span class="keyword">for</span> icmp_seq 11</div><div class="line">	Request timeout <span class="keyword">for</span> icmp_seq 12</div><div class="line">	64 bytes from 172.16.23.150: icmp_seq=13 ttl=64 time=0.223 ms</div><div class="line">	64 bytes from 172.16.23.150: icmp_seq=14 ttl=64 time=0.214 ms</div><div class="line"></div><div class="line">已经自动切换，并丢了2个包</div><div class="line">	</div><div class="line">查看bond0的信息，是否已经切换到eth1</div><div class="line"></div><div class="line">$ cat /proc/net/bonding/bond0 </div><div class="line">	Ethernet Channel Bonding Driver: v3.7.1 (April 27, 2011)</div><div class="line"></div><div class="line">	Bonding Mode: fault-tolerance (active-backup)</div><div class="line">	Primary Slave: None</div><div class="line">	Currently Active Slave: eth1</div><div class="line">	MII Status: up</div><div class="line">	MII Polling Interval (ms): 100</div><div class="line">	Up Delay (ms): 0</div><div class="line">	Down Delay (ms): 0</div><div class="line"></div><div class="line">	Slave Interface: eth0</div><div class="line">	MII Status: down</div><div class="line">	Speed: Unknown</div><div class="line">	Duplex: Unknown</div><div class="line">	Link Failure Count: 1</div><div class="line">	Permanent HW addr: 00:0c:29:26:8e:b1</div><div class="line">	Slave queue ID: 0</div><div class="line"></div><div class="line">	Slave Interface: eth1</div><div class="line">	MII Status: up</div><div class="line">	Speed: 1000 Mbps</div><div class="line">	Duplex: full</div><div class="line">	Link Failure Count: 0</div><div class="line">	Permanent HW addr: 00:0c:29:26:8e:bb</div></pre></td></tr></table></figure>
<h5 id="第七步，删除bond0"><a href="#第七步，删除bond0" class="headerlink" title="第七步，删除bond0"></a>第七步，删除bond0</h5><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div></pre></td><td class="code"><pre><div class="line">$ ifconfig bond0 down  <span class="comment">#down掉网卡</span></div><div class="line"></div><div class="line">$ rmmod bonding    <span class="comment">#卸载模块</span></div><div class="line"></div><div class="line">$ rm -rf /etc/sysconfig/network-scripts/ifcfg-bond0  <span class="comment">#删除配置文件</span></div><div class="line"></div><div class="line">$ vim ifcfg-eth0</div><div class="line">	BOOTPROTO=static</div><div class="line">	IPADDR=172.16.1.130</div><div class="line">	PREFIX=16</div><div class="line">	GATEWAY=172.16.0.1</div><div class="line"></div><div class="line">$ vim ifcfg-eth1</div><div class="line">	BOOTPROTO=dhcp </div><div class="line"></div><div class="line">$ service network restart <span class="comment">#重启网络</span></div></pre></td></tr></table></figure>
<h4 id="Centos7实验步骤"><a href="#Centos7实验步骤" class="headerlink" title="Centos7实验步骤"></a>Centos7实验步骤</h4><ul>
<li>因为使用的是<code>CentOS7.2</code>所以，网卡名非常的长，不便于实验，先修改网卡名</li>
</ul>
<figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div></pre></td><td class="code"><pre><div class="line">$ vim /boot/grub2/grub.cfg</div><div class="line">	修改此文件中的linux16一行的行尾添加 net.ifnames=0</div><div class="line">	</div><div class="line">$ vim /etc/sysconfig/network-scripts/ifcfg-eno.....</div><div class="line">	修改原配置文件中的DEVICE名字和NAME名字，以及配置文件的名字为更改后的名字eth0/1之类的</div><div class="line"></div><div class="line">$ reboot </div><div class="line">    即可生效</div></pre></td></tr></table></figure>
<ul>
<li><p>第一步，修改两张网卡都为仅主机模式</p>
</li>
<li><p>第二步，创建<code>bond0</code>设备以及其配置文件</p>
</li>
</ul>
<figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line">$ nmcli connection add con-name bond0 <span class="built_in">type</span> bond ifname bond0 mode active-backup</div><div class="line"></div><div class="line">$ nmcli connection modift bond0 ipv4.method manual ipv4.addresses 172.16.23.200 gw 172.16.23.1</div></pre></td></tr></table></figure>
<ul>
<li>第三步，将物理网卡添加到<code>bond0</code>中</li>
</ul>
<figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line">$ nmcli connection add <span class="built_in">type</span> bond-slave ifname eth0 master bond0 </div><div class="line"></div><div class="line">$ nmcli connection add <span class="built_in">type</span> bond-slave ifname eth1 master bond0</div></pre></td></tr></table></figure>
<ul>
<li>第四步，启动<code>bond-slave</code></li>
</ul>
<figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line">$ nmcli connection up bond-slave-eth1</div><div class="line"></div><div class="line">$ nmcli connection up bond-slave-eth0</div></pre></td></tr></table></figure>
<ul>
<li>第五步，启动<code>bond0</code></li>
</ul>
<figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">$ nmcli connection up bond0</div></pre></td></tr></table></figure>
<ul>
<li><p>第六步，容错测试，与CentOS6步骤相同</p>
</li>
<li><p>第七步，删除<code>bond0</code></p>
</li>
</ul>
<figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div></pre></td><td class="code"><pre><div class="line">$ nmcli connection down bond0 </div><div class="line"></div><div class="line">$ nmcli connection delete bond0 </div><div class="line"></div><div class="line">$ nmcli connection delete bond-slave-eth0</div><div class="line"></div><div class="line">$ nmcli connection delete bond-slave-eth1</div><div class="line"></div><div class="line">$ systemctl restart network</div></pre></td></tr></table></figure>
<hr>
<iframe frameborder="no" border="0" marginwidth="0" marginheight="0" width="330" height="86" src="//music.163.com/outchain/player?type=2&id=35283291&auto=0&height=66"></iframe>

<p>本文出自<a href="http://maxiecloud.com">Maxie’s Notes</a>博客，转载请务必保留此出处。</p>
<p><img src="https://ww1.sinaimg.cn/large/006tNbRwly1fdzc80odsuj30gn0ilq5m.jpg" alt=""></p>
]]></content>
    
    <summary type="html">
    
      &lt;blockquote class=&quot;blockquote-center&quot;&gt;“Bonding”就是将多块网卡绑定同一IP地址对外提供服务，可以实现高可用/负载均衡。&lt;br&gt;&lt;br&gt;在企业以及电信Linux服务器环境上，网络配置都会使用Bonding技术做网口硬件层面的冗余，防止单个网络应用的单点故障。&lt;br&gt;&lt;/blockquote&gt;

&lt;p&gt;本文将介绍Linux下的&lt;code&gt;Bonding&lt;/code&gt;技术，利用这种技术可以将多块网卡接口通过绑定虚拟成一块网卡，在用户看来这个聚合起来的设备好像是一个单独的以太网接口设备，通俗点讲就是多块网卡具有相同的IP地址而并行连接聚合成一个逻辑链路工作。&lt;/p&gt;
    
    </summary>
    
      <category term="linux网络配置" scheme="http://maxiecloud.com/categories/linux%E7%BD%91%E7%BB%9C%E9%85%8D%E7%BD%AE/"/>
    
    
      <category term="linux" scheme="http://maxiecloud.com/tags/linux/"/>
    
      <category term="network" scheme="http://maxiecloud.com/tags/network/"/>
    
      <category term="bonding" scheme="http://maxiecloud.com/tags/bonding/"/>
    
  </entry>
  
  <entry>
    <title>route命令详解</title>
    <link href="http://maxiecloud.com/2017/05/04/route-command/"/>
    <id>http://maxiecloud.com/2017/05/04/route-command/</id>
    <published>2017-05-04T11:47:48.000Z</published>
    <updated>2017-05-06T03:08:30.000Z</updated>
    
    <content type="html"><![CDATA[<blockquote class="blockquote-center">Linux系统的route命令用于显示和操作IP路由表<br><br>要实现两个不同的子网之间的通信，需要一台连接两个网络的路由器，或者同时位于两个网络的网关来实现。<br></blockquote>

<p><strong>在Linux系统中，设置路由通常是为了解决以下问题：</strong></p>
<p>该Linux系统在一个局域网中，局域网中有一个网关，能够让机器访问Internet，那么就需要将这台机器的IP地址设置为Linux机器的默认路由。</p>
<p>要注意的是，直接在命令行执行route命令来添加路由，不会永久保存，当网卡重启或者机器重启之后，该路由就失效了。</p>
<p>可以在<code>/etc/sysconfig/network-scripts/</code>目录下创建<code>route-IFACE</code>类似的配置文件。</p>
<p>其中<code>IFACE</code>的名字不是很重要，起一个能够辨识其功能的名字即可。</p>
<a id="more"></a>
<div class="note primary"><h3 id="路由的分类"><a href="#路由的分类" class="headerlink" title="路由的分类"></a>路由的分类</h3></div>
<p><strong>主机路由</strong></p>
<figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div></pre></td><td class="code"><pre><div class="line">针对特定的地址，非常精细</div><div class="line"></div><div class="line">route add -host 2.2.2.2 gw 1.1.1.1 dev eth0</div><div class="line">这条路由只指向2.2.2.2这个主机，不包括在其网络内的其他主机</div></pre></td></tr></table></figure>
<p><strong>网络路由</strong></p>
<figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div></pre></td><td class="code"><pre><div class="line">指明网段的路由，网络路由针对的是一个网段的路由，比主机路由精细度要低一些</div><div class="line"></div><div class="line">route add -net 2.2.2.0/24 gw 1.1.1.1 dev eth0</div><div class="line">这条路由指向的是2.2.2.0/24这个网络内的所有IP。</div></pre></td></tr></table></figure>
<p><strong>默认路由</strong></p>
<figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">默认路由就是0.0.0.0/0，意思是实在没有其他路由了，就走这个路由了。</div></pre></td></tr></table></figure>
<p>在路由表中的优先级：<br><strong>精度越高，优先级越高</strong></p>
<hr>
<div class="note success"><h3 id="路由表构成"><a href="#路由表构成" class="headerlink" title="路由表构成"></a>路由表构成</h3></div>
<ol>
<li><p>目标网络:<br> 网络ID和子网掩码组成（网络路由）<br> <code>192.168.0.0/24</code><br> 或者<br> 目标是一个IP地址，<code>192,168,1.100</code>（主机路由）</p>
</li>
<li><p>接口<br> 数据包到达目标网络从路由器的哪个接口出来，就是这个接口。</p>
</li>
<li><p>网关<br> 下一个路由器的临近接口的IP地址（下一跳的地址），与出口IP地址在同一个网段。</p>
</li>
</ol>
<hr>
<div class="note info"><h3 id="route命令详解"><a href="#route命令详解" class="headerlink" title="route命令详解"></a>route命令详解</h3></div>
<h4 id="命令语法格式"><a href="#命令语法格式" class="headerlink" title="命令语法格式"></a>命令语法格式</h4><p><code>route [-f] [-p] [Command [Destination] [mask Netmask] [Gateway] [metric Metric]] [if Interface]]</code></p>
<h4 id="命令功能"><a href="#命令功能" class="headerlink" title="命令功能"></a>命令功能</h4><p><code>route</code>命令是用于操作基于内核IP路由表，它的主要作用是创建一个静态路由由让指定一个主机或者一个网络通过一个网络接口，如<code>eth0</code>。</p>
<p>当使用<code>add</code>或者<code>del</code>参数时，路由表被修改，如果没有参数，则显示路由表当前的内容。</p>
<h4 id="命令参数"><a href="#命令参数" class="headerlink" title="命令参数"></a>命令参数</h4><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div></pre></td><td class="code"><pre><div class="line">-A          设置地址类型</div><div class="line">-C          打印将Linux核心的路由缓存 </div><div class="line">-v          详细信息模式</div><div class="line">-n          不执行DNS反向查找，直接显示数字形式的IP地址</div><div class="line"><span class="_">-e</span>          netstat格式显示路由表</div><div class="line">-net        到一个网络的路由表 </div><div class="line">-host       到一个主机的路由表</div><div class="line"></div><div class="line">Add：增加指定的路由记录</div><div class="line">Del：删除指定的路由记录</div><div class="line">Target：目的网络或目的主机</div><div class="line">gw：设置默认网关</div><div class="line">mss：设置TCP的最大区块长度（MSS），单位MB</div><div class="line">window：指定通过路由表的TCP连接的TCP窗口大小</div><div class="line">dev：路由记录所表示的网络接口</div></pre></td></tr></table></figure>
<h4 id="设置永久生效路由表"><a href="#设置永久生效路由表" class="headerlink" title="设置永久生效路由表"></a>设置永久生效路由表</h4><p>在<code>/etc/sysconfig/network-scripts/</code>目录下创建<code>route-IFACE</code>配置文件</p>
<figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div></pre></td><td class="code"><pre><div class="line">[root@maxie ~]<span class="comment"># vim /etc/sysconfig/network-scripts/route-eth0</span></div><div class="line">10.0.0.0/8 via 10.170.191.247 dev eth0</div><div class="line">100.64.0.0/10 via 10.170.191.247 dev eth0</div><div class="line">172.16.0.0/12 via 10.170.191.247 dev eth0</div></pre></td></tr></table></figure>
<h4 id="实例"><a href="#实例" class="headerlink" title="实例"></a>实例</h4><p><strong>1、显示当前路由</strong></p>
<figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div></pre></td><td class="code"><pre><div class="line">[root@maxie ~]<span class="comment"># route -n</span></div><div class="line">Kernel IP routing table</div><div class="line">Destination     Gateway         Genmask         Flags Metric Ref    Use Iface</div><div class="line">0.0.0.0         123.56.103.247  0.0.0.0         UG    0      0        0 eth1</div><div class="line">10.0.0.0        10.170.191.247  255.0.0.0       UG    0      0        0 eth0</div><div class="line">10.170.184.0    0.0.0.0         255.255.248.0   U     0      0        0 eth0</div><div class="line">100.64.0.0      10.170.191.247  255.192.0.0     UG    0      0        0 eth0</div><div class="line">123.56.100.0    0.0.0.0         255.255.252.0   U     0      0        0 eth1</div><div class="line">169.254.0.0     0.0.0.0         255.255.0.0     U     1002   0        0 eth0</div><div class="line">169.254.0.0     0.0.0.0         255.255.0.0     U     1003   0        0 eth1</div><div class="line">172.16.0.0      10.170.191.247  255.240.0.0     UG    0      0        0 eth0</div></pre></td></tr></table></figure>
<p>其中：</p>
<p>Destination：目标网络</p>
<p>Gateway：下一跳地址</p>
<p>Genmask：子网掩码</p>
<p>Flags：路由标志</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div></pre></td><td class="code"><pre><div class="line">U：表示此路由为启动状态</div><div class="line">H：表示此网关为一主机</div><div class="line">G：表示此网关为一路由器</div><div class="line">R：使用动态路由重新初始化的路由</div><div class="line">!：表示此路由当前为关闭状态</div></pre></td></tr></table></figure>
<p>2、添加一条路由</p>
<figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">[root@maxie ~]<span class="comment"># route add -net 192.168.1.0/24 gw 123.56.100.148</span></div></pre></td></tr></table></figure>
<p>3、屏蔽一条路由</p>
<figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div></pre></td><td class="code"><pre><div class="line">[root@maxie ~]<span class="comment"># route add -net 192.168.1.0/24 reject</span></div><div class="line">[root@maxie ~]<span class="comment"># route</span></div><div class="line">Kernel IP routing table</div><div class="line">Destination     Gateway         Genmask         Flags Metric Ref    Use Iface</div><div class="line">default         gateway         0.0.0.0         UG    0      0        0 eth1</div><div class="line">10.0.0.0        10.170.191.247  255.0.0.0       UG    0      0        0 eth0</div><div class="line">10.170.184.0    0.0.0.0         255.255.248.0   U     0      0        0 eth0</div><div class="line">100.64.0.0      10.170.191.247  255.192.0.0     UG    0      0        0 eth0</div><div class="line">123.56.100.0    0.0.0.0         255.255.252.0   U     0      0        0 eth1</div><div class="line">link-local      0.0.0.0         255.255.0.0     U     1002   0        0 eth0</div><div class="line">link-local      0.0.0.0         255.255.0.0     U     1003   0        0 eth1</div><div class="line">172.16.0.0      10.170.191.247  255.240.0.0     UG    0      0        0 eth0</div><div class="line">192.168.1.0     -               255.255.255.0   !     0      -        0 -</div><div class="line">192.168.1.0     maxie           255.255.255.0   UG    0      0        0 eth1</div></pre></td></tr></table></figure>
<p>4、删除一条路由记录</p>
<figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line">[root@maxie ~]<span class="comment"># route del -net 192.168.1.0/24</span></div><div class="line">[root@maxie ~]<span class="comment"># route del -net 192.168.1.0/24 reject</span></div></pre></td></tr></table></figure>
<hr>
<div class="note danger"><h3 id="实验：2台Linux主机通过3台路由器相同通信"><a href="#实验：2台Linux主机通过3台路由器相同通信" class="headerlink" title="实验：2台Linux主机通过3台路由器相同通信"></a>实验：2台Linux主机通过3台路由器相同通信</h3></div>
<p>现有2台Linux主机，以及3台路由器，要实现让两台Linux主机经过3台路由器后可以互相通信的功能。</p>
<h4 id="第一步，根据需求制作网络拓扑图"><a href="#第一步，根据需求制作网络拓扑图" class="headerlink" title="第一步，根据需求制作网络拓扑图"></a>第一步，根据需求制作网络拓扑图</h4><p><img src="http://ww2.sinaimg.cn/large/006tNc79ly1ff9msnpcm0j315k0kc3zi.jpg" alt=""></p>
<h4 id="第二步，配置两台Linux主机的IP以及关闭防火墙和其他环境配置"><a href="#第二步，配置两台Linux主机的IP以及关闭防火墙和其他环境配置" class="headerlink" title="第二步，配置两台Linux主机的IP以及关闭防火墙和其他环境配置"></a>第二步，配置两台Linux主机的IP以及关闭防火墙和其他环境配置</h4><p>这里Linux1和Linux2作为客户端（client）<br>Route1、2、3作为路由</p>
<p><strong>Linux1的配置：</strong></p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div></pre></td><td class="code"><pre><div class="line">1、配置网卡信息</div><div class="line">$ vim /etc/sysconfig/network-scripts/ifcfg-ens33</div><div class="line">	IPADDR=172.16.0.2</div><div class="line">	PREFIX=16</div><div class="line">	GATEWAY=172.16.0.3</div><div class="line">	</div><div class="line">2、清空并关闭防火墙，设置开机不自启</div><div class="line">$ iptables -F</div><div class="line">$ service iptables stop 或者 systemctl stop firewalld.service</div><div class="line">$ chkconfig iptables off 或者 systemctl disable firewalld.service</div><div class="line">	</div><div class="line">3、route -n 查看路由表信息</div><div class="line">	</div><div class="line">4、重启网络</div><div class="line">$ service network restart 或者 systemctl restart network</div></pre></td></tr></table></figure>
<p>Linux2因为硬件软件配置与1相同，所以除IP地址不同外，其他设置都相同1的网卡信息</p>
<p>所以Linux2的IP地址配置如下</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div></pre></td><td class="code"><pre><div class="line">$ vim /etc/sysconfig/network-scripts/ifcfg-eth0</div><div class="line">	IPADDR=10.0.0.2</div><div class="line">	PREFIX=8</div><div class="line">	GATEWAY=10.0.0.3</div></pre></td></tr></table></figure>
<h4 id="第四步，配置router的信息以及环境"><a href="#第四步，配置router的信息以及环境" class="headerlink" title="第四步，配置router的信息以及环境"></a>第四步，配置router的信息以及环境</h4><p><strong>route1：与Linux1机器、route2直连</strong></p>
<p>eth0网卡连接Linux1<br>eth1网卡连接route2</p>
<p>配置信息如下：</p>
<figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div></pre></td><td class="code"><pre><div class="line">1、配置网卡信息</div><div class="line">vim /etc/sysconfig/network-scripts/ifcfg-eth0</div><div class="line">	IPADDR=172.16.0.3</div><div class="line">	PREFIX=16</div><div class="line">	GATEWAY=172.16.0.3</div><div class="line">	</div><div class="line">vim /etc/sysconfig/network-scripts/ifcfg-eth1</div><div class="line">	IPADDR=192.168.1.3</div><div class="line">	PREFIX=24</div><div class="line">	</div><div class="line">	</div><div class="line">2、关闭防火墙</div><div class="line">iptables -F</div><div class="line">service iptables stop</div><div class="line">chkconfig iptables off</div><div class="line">	</div><div class="line">	</div><div class="line">3、重启网卡</div><div class="line">service network restart</div></pre></td></tr></table></figure>
<p><strong>route2：与route1和route3直连</strong></p>
<p>eth0连接Route1<br>eth1连接Route3</p>
<p>配置信息如下：</p>
<figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div></pre></td><td class="code"><pre><div class="line">1、配置网卡信息</div><div class="line">vim /etc/sysconfig/network-scripts/ifcfg-eth0</div><div class="line">	IPADDR=192.168.1.4</div><div class="line">	PREFIX=24</div><div class="line">	</div><div class="line">vim /etc/sysconfig/network-scripts/ifcfg-eth1</div><div class="line">	IPADDR=192.168.2.4</div><div class="line">	PREFIX=24</div><div class="line">	</div><div class="line">2、关闭防火墙</div><div class="line">iptables -F</div><div class="line">service iptables stop</div><div class="line">chkconfig iptables off</div><div class="line">	</div><div class="line">3、重启网卡</div><div class="line">service network restart</div></pre></td></tr></table></figure>
<p><strong>route3：与linux2机器、route3直连</strong></p>
<p>eth0连接Route3<br>eth1连接Linux2</p>
<p>配置信息如下：</p>
<figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div></pre></td><td class="code"><pre><div class="line">1、配置网卡信息</div><div class="line">vim /etc/sysconfig/network-scripts/ifcfg-eth0</div><div class="line">	IPADDR=192.168.2.2</div><div class="line">	PREFIX=24</div><div class="line">	</div><div class="line">vim /etc/sysconfig/network-scripts/ifcfg-eth1</div><div class="line">	IPADDR=10.0.0.3</div><div class="line">	PREFIX=8</div><div class="line">	GATEWAY=10.0.0.3	</div><div class="line">	</div><div class="line">2、关闭防火墙</div><div class="line">iptables -F</div><div class="line">service iptables stop</div><div class="line">chkconfig iptables off</div><div class="line">	</div><div class="line">	</div><div class="line">3、重启网卡</div><div class="line">service network restart</div></pre></td></tr></table></figure>
<h4 id="配置各router的路由表信息"><a href="#配置各router的路由表信息" class="headerlink" title="配置各router的路由表信息"></a>配置各router的路由表信息</h4><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div><div class="line">37</div><div class="line">38</div><div class="line">39</div><div class="line">40</div><div class="line">41</div><div class="line">42</div><div class="line">43</div><div class="line">44</div><div class="line">45</div><div class="line">46</div><div class="line">47</div><div class="line">48</div><div class="line">49</div><div class="line">50</div><div class="line">51</div><div class="line">52</div><div class="line">53</div><div class="line">54</div><div class="line">55</div><div class="line">56</div><div class="line">57</div><div class="line">58</div><div class="line">59</div><div class="line">60</div><div class="line">61</div><div class="line">62</div><div class="line">63</div><div class="line">64</div><div class="line">65</div><div class="line">66</div><div class="line">67</div><div class="line">68</div><div class="line">69</div><div class="line">70</div><div class="line">71</div><div class="line">72</div><div class="line">73</div><div class="line">74</div><div class="line">75</div><div class="line">76</div><div class="line">77</div><div class="line">78</div><div class="line">79</div><div class="line">80</div><div class="line">81</div><div class="line">82</div><div class="line">83</div><div class="line">84</div><div class="line">85</div><div class="line">86</div></pre></td><td class="code"><pre><div class="line">Route1：</div><div class="line">	</div><div class="line">不做路由的情况下可以访问172.16.0.0/16以及192.168.1.0/24这两个网络内的IP地址</div><div class="line">	</div><div class="line">所以我们需要做两个网络的路由，也就是192.168.2.0/24和10.0.0.0/8这两个网络的路由</div><div class="line">	</div><div class="line">所以Route1的路由表就是：</div><div class="line">	</div><div class="line">	192.168.2.0/24 gw 192.168.1.4 dev eth1</div><div class="line">	10.0.0.0/8 gw 192.168.1.4 dev eth1</div><div class="line">	</div><div class="line">配置之前需要开启路由转发功能：</div><div class="line">	cat /proc/sys/net/ipv4/ip_forward</div><div class="line">	<span class="built_in">echo</span> 1 &gt; /proc/sys/net/ipv4/ip_forward</div><div class="line">	</div><div class="line">使用route命令进行配置路由表：</div><div class="line">	route add -net 192.168.2.0/24 gw 192.168.1.4 dev eth1</div><div class="line">	route add -net 10.0.0.0/8 gw 192.168.1.4 dev eth1</div><div class="line">	</div><div class="line">查看是否配置成功：</div><div class="line">	route -n</div><div class="line">	</div><div class="line">测试ping：由于route2没有配置路由转发功能，目前我们只能ping通route2的192.168.2.4这张网卡的地址</div><div class="line">	</div><div class="line">	ping 192.168.2.4</div><div class="line">	</div><div class="line">	</div><div class="line">---------------------------------------</div><div class="line">	</div><div class="line">Route2：</div><div class="line">	</div><div class="line">不做路由的情况下可以访问192.168.2.0/24以及192.168.1.0/24这两个网络内的IP地址</div><div class="line">	</div><div class="line">所以我们需要做两个网络的路由，也就是172.16.0.0/16和10.0.0.0/8这两个网络的路由</div><div class="line">	</div><div class="line">所以Route2的路由表就是：</div><div class="line">	</div><div class="line">	172.16.0.0/16 gw 192.168.1.4 dev eth0</div><div class="line">	10.0.0.0/8 gw 192.168.2.4 dev eth1</div><div class="line">	</div><div class="line">配置之前需要开启路由转发功能：</div><div class="line">	cat /proc/sys/net/ipv4/ip_forward</div><div class="line">	<span class="built_in">echo</span> 1 &gt; /proc/sys/net/ipv4/ip_forward</div><div class="line">	</div><div class="line">使用route命令进行配置路由表：</div><div class="line">	route add -net 172.16.0.0/16 gw 192.168.1.3 dev eth0</div><div class="line">	route add -net 10.0.0.0/8 gw 192.168.2.2 dev eth1</div><div class="line">	</div><div class="line">查看是否配置成功：</div><div class="line">	route -n</div><div class="line">	</div><div class="line">测试ping：由于route3没有配置路由转发功能，目前我们只能ping通route3的10.0.0.3这张网卡的地址和route1的两张网卡地址以及Linux1的地址</div><div class="line">	</div><div class="line">	ping 10.0.0.3</div><div class="line">	ping 172.16.0.3</div><div class="line">	ping 172.16.0.2</div><div class="line">	</div><div class="line">	</div><div class="line">-----------------------------------------------</div><div class="line">	</div><div class="line">	</div><div class="line">	</div><div class="line">Route3：</div><div class="line">	</div><div class="line">不做路由的情况下可以访问10.0.0.0/8以及192.168.2.0/24这两个网络内的IP地址</div><div class="line">	</div><div class="line">所以我们需要做两个网络的路由，也就是192.168.1.0/24和172.16.0.0/16这两个网络的路由</div><div class="line">	</div><div class="line"></div><div class="line">所以Route3的路由表就是：</div><div class="line">	</div><div class="line">	192.168.1.0/24 gw 192.168.2.4 dev eth0</div><div class="line">	172.16.0.0/16 gw 192.168.2.4 dev eth0</div><div class="line">	</div><div class="line">配置之前需要开启路由转发功能：</div><div class="line">	cat /proc/sys/net/ipv4/ip_forward</div><div class="line">	<span class="built_in">echo</span> 1 &gt; /proc/sys/net/ipv4/ip_forward</div><div class="line">	</div><div class="line">使用route命令进行配置路由表：</div><div class="line">	route add -net 192.168.1.0/24 gw 192.168.2.4 dev eth0</div><div class="line">	route add -net 172.16.0.0/16 gw 192.168.2.4 dev eth0</div><div class="line">	</div><div class="line">查看是否配置成功：</div><div class="line">    route -n</div><div class="line">	</div><div class="line">测试ping：现在，Linux1到Linux2的所有路由都已配置完毕，所以我们可以ping通拓扑图内的所有IP地址</div></pre></td></tr></table></figure>
<hr>
<iframe frameborder="no" border="0" marginwidth="0" marginheight="0" width="330" height="86" src="//music.163.com/outchain/player?type=2&id=29550185&auto=1&height=66"></iframe>

<p>本文出自<a href="http://maxiecloud.com">Maxie’s Notes</a>博客，转载请务必保留此出处。</p>
<p><img src="https://ww1.sinaimg.cn/large/006tNbRwly1fdzc80odsuj30gn0ilq5m.jpg" alt=""></p>
]]></content>
    
    <summary type="html">
    
      &lt;blockquote class=&quot;blockquote-center&quot;&gt;Linux系统的route命令用于显示和操作IP路由表&lt;br&gt;&lt;br&gt;要实现两个不同的子网之间的通信，需要一台连接两个网络的路由器，或者同时位于两个网络的网关来实现。&lt;br&gt;&lt;/blockquote&gt;

&lt;p&gt;&lt;strong&gt;在Linux系统中，设置路由通常是为了解决以下问题：&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;该Linux系统在一个局域网中，局域网中有一个网关，能够让机器访问Internet，那么就需要将这台机器的IP地址设置为Linux机器的默认路由。&lt;/p&gt;
&lt;p&gt;要注意的是，直接在命令行执行route命令来添加路由，不会永久保存，当网卡重启或者机器重启之后，该路由就失效了。&lt;/p&gt;
&lt;p&gt;可以在&lt;code&gt;/etc/sysconfig/network-scripts/&lt;/code&gt;目录下创建&lt;code&gt;route-IFACE&lt;/code&gt;类似的配置文件。&lt;/p&gt;
&lt;p&gt;其中&lt;code&gt;IFACE&lt;/code&gt;的名字不是很重要，起一个能够辨识其功能的名字即可。&lt;/p&gt;
    
    </summary>
    
      <category term="linux网络配置" scheme="http://maxiecloud.com/categories/linux%E7%BD%91%E7%BB%9C%E9%85%8D%E7%BD%AE/"/>
    
    
      <category term="linux" scheme="http://maxiecloud.com/tags/linux/"/>
    
      <category term="command" scheme="http://maxiecloud.com/tags/command/"/>
    
      <category term="route" scheme="http://maxiecloud.com/tags/route/"/>
    
  </entry>
  
  <entry>
    <title>磁盘配额(Quota)详解</title>
    <link href="http://maxiecloud.com/2017/04/30/disk-quota/"/>
    <id>http://maxiecloud.com/2017/04/30/disk-quota/</id>
    <published>2017-04-30T05:00:59.000Z</published>
    <updated>2017-04-30T07:17:54.000Z</updated>
    
    <content type="html"><![CDATA[<blockquote class="blockquote-center">Quota这个配额，字面上的意思来看就是有多少“限额”的意思。<br>如果是在计算机主机的磁盘使用量上呢？<br>以Linux来说，就是有多少容量限制的意思。<br>我们可以使用quota来限制Linux中用户或者组对磁盘的使用。<br></blockquote>

<p><strong>Quota的一般用途</strong></p>
<p><code>quota</code> 比较常使用的几个情况是：</p>
<ul>
<li>针对 WWW server，例如对每个人的网页空间的容量限制</li>
<li>针对 mail server，例如对每个人的邮件空间限制。</li>
<li>针对 ftp server，例如对每个人的最大可用网络共享空间的限制。</li>
</ul>
<p>上面主要介绍了一些针对网络服务的设计。</p>
<p>下面是针对Linux系统主机上面的设置：</p>
<ul>
<li>限制某一群组所能使用的最大磁盘限额（使用grpquota）</li>
<li>限制某一使用者的最大磁盘限额（使用usrquota）</li>
<li>限制某一目录的最大磁盘配额：针对旧版CentOS来说，就是以挂载点的方式进行限制，<code>xfs</code>文件系统的限制方法使用project这种模式，不过在此文章内先不介绍。</li>
</ul>
<p><code>quota</code>的用途大概就是这些了。</p>
<a id="more"></a>
<div class="note primary"><h2 id="Quota的规范设置项目"><a href="#Quota的规范设置项目" class="headerlink" title="Quota的规范设置项目"></a>Quota的规范设置项目</h2></div>
<p><code>quota</code>针对文件系统的限制主要分为下面几个部分：</p>
<ul>
<li>容量限制或文件数量限制（block或inode）</li>
</ul>
<figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line">限制inode用量：可以管理使用者可创建的“文件数量”</div><div class="line">限制block数量：管理使用者磁盘容量的限制，大多时候使用这种方式</div></pre></td></tr></table></figure>
<ul>
<li>柔性劝导与硬性规定（soft/hard）</li>
</ul>
<p>既然是规范，当然就有限制值。不管是 inode/block ，限制值都有两个，分别是 soft 与 hard。 通常 hard 限制值要比 soft 还要高。举例来说，若限制项目为 block ，可以限制 hard 为 500MBytes 而 soft 为 400MBytes。这两个限值的意义为：</p>
<figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line">hard：表示使用者的用量绝对不会超过这个限制值，以上面的设置为例，使用者所能使用的磁盘容量绝对不会超过500MBytes，若超过这个值则系统会锁住该用户的磁盘使用权</div><div class="line">soft：表示使用者在低于 soft 限值时 （此例中为 400MBytes），可以正常使用磁盘，但若超过 soft 且低于 hard 的限值 （介于 400~500MBytes 之间时），每次使用者登陆系统时，系统会主动发出磁盘即将爆满的警告讯息， 且会给予一个宽限时间 （grace time）。</div></pre></td></tr></table></figure>
<ul>
<li>宽限时间（grace time）</li>
</ul>
<p>刚刚上面就谈到宽限时间了！这个宽限时间只有在使用者的磁盘用量介于 soft 到 hard 之间时，才会出现且会倒数的一个咚咚！ 由于达到 hard 限值时，使用者的磁盘使用权可能会被锁住。为了担心使用者没有注意到这个磁盘配额的问题， 因此设计了 soft 。当你的磁盘用量即将到达 hard 且超过 soft 时，系统会给予警告，但也会给一段时间让使用者自行管理磁盘。 一般默认的宽限时间为七天，如果七天内你都不进行任何磁盘管理，那么 soft 限制值会即刻取代 hard 限值来作为 quota 的限制。</p>
<p>以上面设置的例子来说，假设你的容量高达 450MBytes 了，那七天的宽限时间就会开始倒数， 若七天内你都不进行任何删除文件的动作来替你的磁盘用量瘦身， 那么七天后你的磁盘最大用量将变成 400MBytes （那个 soft 的限制值），此时你的磁盘使用权就会被锁住而无法新增文件了。</p>
<hr>
<div class="note success"><h2 id="一个EXT3文件系统的Quota实作范例"><a href="#一个EXT3文件系统的Quota实作范例" class="headerlink" title="一个EXT3文件系统的Quota实作范例"></a>一个EXT3文件系统的Quota实作范例</h2></div>
<p>坐而言不如起而行，所以这里我们使用一个范例来设计一下如何处理Quota的设置流程。</p>
<ol>
<li>目的与账号：限制我想要让3个用户在一个组中。这3个用户分别是：maxie1，maxie2，maxie3，三个用户的密码都是123456，同属于myquotagrp这个组。</li>
<li>账号的磁盘容量限制值：让3个用户都能够得到100MBytes的磁盘使用量（hard），文件数量不予限制。此外，只要容量超过80MBytes，就予以警告（soft）</li>
<li>群组的限制：让群组内的用户只能使用200MBytes的容量。也就是说，如果有2个用户都使用了80MBytes时，最后一个用户只能使用（200-80*2=40MBytes）的磁盘容量了。</li>
</ol>
<h3 id="第一步，先让我们将账号的相关属性、参数和其他环境搞定好再说吧！"><a href="#第一步，先让我们将账号的相关属性、参数和其他环境搞定好再说吧！" class="headerlink" title="第一步，先让我们将账号的相关属性、参数和其他环境搞定好再说吧！"></a>第一步，先让我们将账号的相关属性、参数和其他环境搞定好再说吧！</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div></pre></td><td class="code"><pre><div class="line"><span class="comment"># 由于需要设置的账号和环境较多，我们这里使用 script 来创建环境</span></div><div class="line"></div><div class="line">[root@centos7 ~]<span class="comment"># vim addcount.sh</span></div><div class="line"><span class="comment">#创建所需的组</span></div><div class="line">groupadd myquotagrp</div><div class="line"></div><div class="line"><span class="comment">#创建3个实验用户</span></div><div class="line"><span class="keyword">for</span> username <span class="keyword">in</span> maxie1 maxie2 maxie3</div><div class="line"><span class="keyword">do</span></div><div class="line">        useradd -g myquotagrp <span class="variable">$username</span></div><div class="line">        <span class="built_in">echo</span> <span class="string">"123456"</span> | passwd --stdin <span class="variable">$username</span></div><div class="line"><span class="keyword">done</span></div><div class="line"></div><div class="line">mkdir /mnt/myquota</div><div class="line"></div><div class="line">[root@centos7 ~]<span class="comment"># sh addcount.sh</span></div><div class="line"></div><div class="line">检查是否执行成功：</div><div class="line">root@centos7 ~]<span class="comment"># id maxie1</span></div><div class="line">uid=1001(maxie1) gid=1001(myquotagrp) 组=1001(myquotagrp)</div><div class="line">[root@centos7 ~]<span class="comment"># id maxie2</span></div><div class="line">uid=1002(maxie2) gid=1001(myquotagrp) 组=1001(myquotagrp)</div><div class="line">[root@centos7 ~]<span class="comment"># id maxie3</span></div><div class="line">uid=1003(maxie3) gid=1001(myquotagrp) 组=1001(myquotagrp)</div></pre></td></tr></table></figure>
<h3 id="第二步创建文件系统并挂载至-mnt-myquota"><a href="#第二步创建文件系统并挂载至-mnt-myquota" class="headerlink" title="第二步创建文件系统并挂载至/mnt/myquota"></a>第二步创建文件系统并挂载至/mnt/myquota</h3><p>先使用之前学过的<code>fdisk</code>命令创建一个分区</p>
<figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div><div class="line">37</div><div class="line">38</div><div class="line">39</div><div class="line">40</div><div class="line">41</div><div class="line">42</div><div class="line">43</div><div class="line">44</div><div class="line">45</div><div class="line">46</div><div class="line">47</div><div class="line">48</div><div class="line">49</div><div class="line">50</div><div class="line">51</div><div class="line">52</div><div class="line">53</div><div class="line">54</div></pre></td><td class="code"><pre><div class="line">[root@centos7 ~]<span class="comment"># fdisk /dev/sdb</span></div><div class="line">欢迎使用 fdisk (util-linux 2.23.2)。</div><div class="line"></div><div class="line">更改将停留在内存中，直到您决定将更改写入磁盘。</div><div class="line">使用写入命令前请三思。</div><div class="line"></div><div class="line">Device does not contain a recognized partition table</div><div class="line">使用磁盘标识符 0x38b1700d 创建新的 DOS 磁盘标签。</div><div class="line"></div><div class="line">The device presents a logical sector size that is smaller than</div><div class="line">the physical sector size. Aligning to a physical sector (or optimal</div><div class="line">I/O) size boundary is recommended, or performance may be impacted.</div><div class="line"></div><div class="line">命令(输入 m 获取帮助)：n</div><div class="line">Partition <span class="built_in">type</span>:</div><div class="line">   p   primary (0 primary, 0 extended, 4 free)</div><div class="line">   e   extended</div><div class="line">Select (default p): p</div><div class="line">分区号 (1-4，默认 1)：</div><div class="line">起始 扇区 (2048-209715199，默认为 2048)：</div><div class="line">将使用默认值 2048</div><div class="line">Last 扇区, +扇区 or +size&#123;K,M,G&#125; (2048-209715199，默认为 209715199)：+10G</div><div class="line">分区 1 已设置为 Linux 类型，大小设为 10 GiB</div><div class="line"></div><div class="line">命令(输入 m 获取帮助)：p</div><div class="line"></div><div class="line">磁盘 /dev/sdb：107.4 GB, 107374182400 字节，209715200 个扇区</div><div class="line">Units = 扇区 of 1 * 512 = 512 bytes</div><div class="line">扇区大小(逻辑/物理)：512 字节 / 4096 字节</div><div class="line">I/O 大小(最小/最佳)：4096 字节 / 4096 字节</div><div class="line">磁盘标签类型：dos</div><div class="line">磁盘标识符：0x38b1700d</div><div class="line"></div><div class="line">   设备 Boot      Start         End      Blocks   Id  System</div><div class="line">/dev/sdb1            2048    20973567    10485760   83  Linux</div><div class="line"></div><div class="line">命令(输入 m 获取帮助)：w</div><div class="line">The partition table has been altered!</div><div class="line"></div><div class="line">Calling ioctl() to re-read partition table.</div><div class="line">正在同步磁盘。</div><div class="line">[root@centos7 ~]<span class="comment"># lsblk</span></div><div class="line">NAME   MAJ:MIN RM  SIZE RO TYPE MOUNTPOINT</div><div class="line">sda      8:0    0  100G  0 disk</div><div class="line">├─sda1   8:1    0  500M  0 part /boot</div><div class="line">├─sda2   8:2    0   40G  0 part /</div><div class="line">├─sda3   8:3    0   20G  0 part /usr</div><div class="line">├─sda4   8:4    0    1K  0 part</div><div class="line">├─sda5   8:5    0    2G  0 part [SWAP]</div><div class="line">├─sda6   8:6    0    1M  0 part</div><div class="line">├─sda7   8:7    0    1G  0 part /data</div><div class="line">└─sda8   8:8    0   10G  0 part</div><div class="line">sdb      8:16   0  100G  0 disk</div><div class="line">└─sdb1   8:17   0   10G  0 part</div></pre></td></tr></table></figure>
<p>格式化分区，创建文件系统</p>
<figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div></pre></td><td class="code"><pre><div class="line">[root@centos7 ~]<span class="comment"># mkfs.ext4 /dev/sdb1</span></div><div class="line">mke2fs 1.42.9 (28-Dec-2013)</div><div class="line">Discarding device blocks: 完成</div><div class="line">文件系统标签=</div><div class="line">OS <span class="built_in">type</span>: Linux</div><div class="line">块大小=4096 (<span class="built_in">log</span>=2)</div><div class="line">分块大小=4096 (<span class="built_in">log</span>=2)</div><div class="line">Stride=0 blocks, Stripe width=0 blocks</div><div class="line">655360 inodes, 2621440 blocks</div><div class="line">131072 blocks (5.00%) reserved <span class="keyword">for</span> the super user</div><div class="line">第一个数据块=0</div><div class="line">Maximum filesystem blocks=2151677952</div><div class="line">80 block groups</div><div class="line">32768 blocks per group, 32768 fragments per group</div><div class="line">8192 inodes per group</div><div class="line">Superblock backups stored on blocks:</div><div class="line">	32768, 98304, 163840, 229376, 294912, 819200, 884736, 1605632</div><div class="line"></div><div class="line">Allocating group tables: 完成</div><div class="line">正在写入inode表: 完成</div><div class="line">Creating journal (32768 blocks): 完成</div><div class="line">Writing superblocks and filesystem accounting information: 完成</div></pre></td></tr></table></figure>
<p>挂载分区至/mnt/myquota下</p>
<figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div></pre></td><td class="code"><pre><div class="line">[root@centos7 ~]<span class="comment"># mount /dev/sdb1 /mnt/myquota/</span></div><div class="line">[root@centos7 ~]<span class="comment"># vim /etc/fstab</span></div><div class="line">UID=<span class="string">"485c4a7c-dd90-40c3-8fd4-164888a0ff67"</span> /mnt/myquota ext4 defaults,usrquota,grpquota 0 0</div><div class="line">[root@centos7 ~]<span class="comment"># mount -o remount /dev/sdb1</span></div></pre></td></tr></table></figure>
<h3 id="第三步开始配置磁盘配额"><a href="#第三步开始配置磁盘配额" class="headerlink" title="第三步开始配置磁盘配额"></a>第三步开始配置磁盘配额</h3><p>进入<code>/mnt/myquota</code>目录下开始设置磁盘配额：</p>
<figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div></pre></td><td class="code"><pre><div class="line">[root@centos7 ~]<span class="comment"># cd /mnt/myquota/</span></div><div class="line"></div><div class="line">禁用SElinux</div><div class="line">[root@centos7 myquota]<span class="comment"># setenforce 0</span></div><div class="line">[root@centos7 myquota]<span class="comment"># getenforce</span></div><div class="line">Disabled</div><div class="line"></div><div class="line">创建磁盘配额数据库</div><div class="line">[root@centos7 myquota]<span class="comment"># quotacheck -cug /mnt/myquota/</span></div><div class="line">[root@centos7 myquota]<span class="comment"># ll</span></div><div class="line">总用量 32</div><div class="line">-rw------- 1 root root  6144 4月  28 19:59 aquota.group</div><div class="line">-rw------- 1 root root  6144 4月  28 19:59 aquota.user</div><div class="line">drwx------ 2 root root 16384 4月  28 19:52 lost+found</div></pre></td></tr></table></figure>
<p>启动磁盘配额数据库:</p>
<figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div></pre></td><td class="code"><pre><div class="line">[root@centos7 myquota]<span class="comment"># quotaon /mnt/myquota/</span></div><div class="line">[root@centos7 myquota]<span class="comment"># quotaon -p /mnt/myquota/</span></div><div class="line">group quota on /mnt/myquota (/dev/sdb1) is on</div><div class="line">user quota on /mnt/myquota (/dev/sdb1) is on</div></pre></td></tr></table></figure>
<p>开始对之前创建的用户和组进行磁盘配额设置：</p>
<figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div></pre></td><td class="code"><pre><div class="line">[root@centos7 myquota]<span class="comment"># edquota maxie1</span></div><div class="line">Disk quotas <span class="keyword">for</span> user maxie1 (uid 1001):</div><div class="line">  Filesystem                   blocks       soft       hard     inodes     soft     hard</div><div class="line">  /dev/sdb1                         0      81920     102400          0        0        0</div><div class="line"></div><div class="line">通过-p选项，直接复制maxie1的配置信息，作为其他两个用户的磁盘配额配置信息：</div><div class="line">[root@centos7 myquota]<span class="comment"># edquota -p maxie1 maxie2</span></div><div class="line">[root@centos7 myquota]<span class="comment"># edquota -p maxie1 maxie3</span></div><div class="line"></div><div class="line">创建对组的磁盘配额：</div><div class="line">[root@centos7 myquota]<span class="comment"># edquota -g myquotagrp</span></div><div class="line">Disk quotas <span class="keyword">for</span> group myquotagrp (gid 1001):</div><div class="line">  Filesystem                   blocks       soft       hard     inodes     soft     hard</div><div class="line">  /dev/sdb1                         0          0     204800          0        0        0</div></pre></td></tr></table></figure>
<h3 id="第四步，测试磁盘配额"><a href="#第四步，测试磁盘配额" class="headerlink" title="第四步，测试磁盘配额"></a>第四步，测试磁盘配额</h3><p>修改/mnt/myquota目录的权限</p>
<figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">[root@centos7 mnt]<span class="comment"># chmod 777 myquota/</span></div></pre></td></tr></table></figure>
<ul>
<li>测试用户磁盘配额</li>
</ul>
<figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div></pre></td><td class="code"><pre><div class="line">maxie1@centos7 myquota]$ <span class="built_in">pwd</span></div><div class="line">/mnt/myquota</div><div class="line">[maxie1@centos7 myquota]$ dd <span class="keyword">if</span>=/dev/zero of=maxie1file bs=1M count=50</div><div class="line">记录了50+0 的读入</div><div class="line">记录了50+0 的写出</div><div class="line">52428800字节(52 MB)已复制，0.0307593 秒，1.7 GB/秒</div><div class="line">[maxie1@centos7 myquota]$ ll -h</div><div class="line">总用量 51M</div><div class="line">-rw------- 1 root   root       7.0K 4月  28 19:59 aquota.group</div><div class="line">-rw------- 1 root   root       7.0K 4月  28 19:59 aquota.user</div><div class="line">drwx------ 2 root   root        16K 4月  28 19:52 lost+found</div><div class="line">-rw-r--r-- 1 maxie1 myquotagrp  50M 4月  28 20:17 maxie1file</div><div class="line">[maxie1@centos7 myquota]$ dd <span class="keyword">if</span>=/dev/zero of=maxie1file bs=1M count=81</div><div class="line">sdb1: warning, user block quota exceeded.</div><div class="line">记录了81+0 的读入</div><div class="line">记录了81+0 的写出</div><div class="line">84934656字节(85 MB)已复制，0.0545585 秒，1.6 GB/秒</div><div class="line">[maxie1@centos7 myquota]$ dd <span class="keyword">if</span>=/dev/zero of=maxie1file bs=1M count=101</div><div class="line">sdb1: warning, user block quota exceeded.</div><div class="line">sdb1: write failed, user block <span class="built_in">limit</span> reached.</div><div class="line">dd: 写入<span class="string">"maxie1file"</span> 出错: 超出磁盘限额</div><div class="line">记录了101+0 的读入</div><div class="line">记录了100+0 的写出</div><div class="line">104857600字节(105 MB)已复制，0.0665764 秒，1.6 GB/秒</div><div class="line">[maxie1@centos7 myquota]$ ll -h</div><div class="line">总用量 101M</div><div class="line">-rw------- 1 root   root       7.0K 4月  28 19:59 aquota.group</div><div class="line">-rw------- 1 root   root       7.0K 4月  28 19:59 aquota.user</div><div class="line">drwx------ 2 root   root        16K 4月  28 19:52 lost+found</div><div class="line">-rw-r--r-- 1 maxie1 myquotagrp 100M 4月  28 20:17 maxie1file</div></pre></td></tr></table></figure>
<ul>
<li>测试组的磁盘配额：</li>
</ul>
<p>先使用maxie1和maxie2用户在目录中各创建一个80MBytes的文件，再切换到maxie3用户测试</p>
<figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div><div class="line">37</div><div class="line">38</div><div class="line">39</div><div class="line">40</div><div class="line">41</div><div class="line">42</div><div class="line">43</div><div class="line">44</div><div class="line">45</div><div class="line">46</div><div class="line">47</div><div class="line">48</div><div class="line">49</div><div class="line">50</div><div class="line">51</div><div class="line">52</div><div class="line">53</div><div class="line">54</div><div class="line">55</div><div class="line">56</div></pre></td><td class="code"><pre><div class="line">[maxie1@centos7 myquota]$ su maxie2</div><div class="line">密码：</div><div class="line">[maxie2@centos7 myquota]$ dd <span class="keyword">if</span>=/dev/zero of=maxie1file2 bs=1M count=80</div><div class="line">记录了80+0 的读入</div><div class="line">记录了80+0 的写出</div><div class="line">83886080字节(84 MB)已复制，0.0498647 秒，1.7 GB/秒</div><div class="line">[maxie2@centos7 myquota]$ ll -h</div><div class="line">总用量 161M</div><div class="line">-rw------- 1 root   root       7.0K 4月  28 19:59 aquota.group</div><div class="line">-rw------- 1 root   root       7.0K 4月  28 19:59 aquota.user</div><div class="line">drwx------ 2 root   root        16K 4月  28 19:52 lost+found</div><div class="line">-rw-r--r-- 1 maxie1 myquotagrp  80M 4月  28 20:19 maxie1file</div><div class="line">-rw-r--r-- 1 maxie2 myquotagrp  80M 4月  28 20:20 maxie1file2</div><div class="line"></div><div class="line"><span class="comment">#切换到maxie3，测试组的磁盘配额限制</span></div><div class="line">[maxie2@centos7 myquota]$ su maxie3</div><div class="line">密码：</div><div class="line">[maxie3@centos7 myquota]$ dd <span class="keyword">if</span>=/dev/zero of=filemaxie3 bs=1M count=30</div><div class="line">30+0 records <span class="keyword">in</span></div><div class="line">30+0 records out</div><div class="line">31457280 bytes (31 MB) copied, 0.0162361 s, 1.9 GB/s</div><div class="line"></div><div class="line">[maxie3@centos7 myquota]$ ll -h</div><div class="line">total 191M</div><div class="line">-rw------- 1 root   root       7.0K Apr 28 19:59 aquota.group</div><div class="line">-rw------- 1 root   root       7.0K Apr 28 19:59 aquota.user</div><div class="line">-rw-r--r-- 1 maxie3 myquotagrp  30M Apr 28 20:22 filemaxie3</div><div class="line">drwx------ 2 root   root        16K Apr 28 19:52 lost+found</div><div class="line">-rw-r--r-- 1 maxie1 myquotagrp  80M Apr 28 20:19 maxie1file</div><div class="line">-rw-r--r-- 1 maxie2 myquotagrp  80M Apr 28 20:20 maxie1file2</div><div class="line"></div><div class="line">[maxie3@centos7 myquota]$ du -sh .</div><div class="line">191M	.</div><div class="line"></div><div class="line">[maxie3@centos7 myquota]$ dd <span class="keyword">if</span>=/dev/zero of=filemaxie3 bs=1M count=40</div><div class="line">40+0 records <span class="keyword">in</span></div><div class="line">40+0 records out</div><div class="line">41943040 bytes (42 MB) copied, 0.0265194 s, 1.6 GB/s</div><div class="line"></div><div class="line">[maxie3@centos7 myquota]$ dd <span class="keyword">if</span>=/dev/zero of=filemaxie3 bs=1M count=50</div><div class="line">sdb1: write failed, group block <span class="built_in">limit</span> reached.</div><div class="line">dd: error writing ‘filemaxie3’: Disk quota exceeded</div><div class="line">41+0 records <span class="keyword">in</span></div><div class="line">40+0 records out</div><div class="line">41943040 bytes (42 MB) copied, 0.027217 s, 1.5 GB/s</div><div class="line"></div><div class="line">[maxie3@centos7 myquota]$ ll -h</div><div class="line">total 201M</div><div class="line">-rw------- 1 root   root       7.0K Apr 28 19:59 aquota.group</div><div class="line">-rw------- 1 root   root       7.0K Apr 28 19:59 aquota.user</div><div class="line">-rw-r--r-- 1 maxie3 myquotagrp  40M Apr 28 20:23 filemaxie3</div><div class="line">drwx------ 2 root   root        16K Apr 28 19:52 lost+found</div><div class="line">-rw-r--r-- 1 maxie1 myquotagrp  80M Apr 28 20:19 maxie1file</div><div class="line">-rw-r--r-- 1 maxie2 myquotagrp  80M Apr 28 20:20 maxie1file2</div><div class="line">[maxie3@centos7 myquota]$ du -sh .</div><div class="line">201M	.</div></pre></td></tr></table></figure>
<hr>
<iframe frameborder="no" border="0" marginwidth="0" marginheight="0" width="330" height="86" src="//music.163.com/outchain/player?type=2&id=16714264&auto=1&height=66"></iframe>

<p>本文出自<a href="http://maxiecloud.com">Maxie’s Notes</a>博客，转载请务必保留此出处。</p>
<p><img src="https://ww1.sinaimg.cn/large/006tNbRwly1fdzc80odsuj30gn0ilq5m.jpg" alt=""></p>
]]></content>
    
    <summary type="html">
    
      &lt;blockquote class=&quot;blockquote-center&quot;&gt;Quota这个配额，字面上的意思来看就是有多少“限额”的意思。&lt;br&gt;如果是在计算机主机的磁盘使用量上呢？&lt;br&gt;以Linux来说，就是有多少容量限制的意思。&lt;br&gt;我们可以使用quota来限制Linux中用户或者组对磁盘的使用。&lt;br&gt;&lt;/blockquote&gt;

&lt;p&gt;&lt;strong&gt;Quota的一般用途&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;&lt;code&gt;quota&lt;/code&gt; 比较常使用的几个情况是：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;针对 WWW server，例如对每个人的网页空间的容量限制&lt;/li&gt;
&lt;li&gt;针对 mail server，例如对每个人的邮件空间限制。&lt;/li&gt;
&lt;li&gt;针对 ftp server，例如对每个人的最大可用网络共享空间的限制。&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;上面主要介绍了一些针对网络服务的设计。&lt;/p&gt;
&lt;p&gt;下面是针对Linux系统主机上面的设置：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;限制某一群组所能使用的最大磁盘限额（使用grpquota）&lt;/li&gt;
&lt;li&gt;限制某一使用者的最大磁盘限额（使用usrquota）&lt;/li&gt;
&lt;li&gt;限制某一目录的最大磁盘配额：针对旧版CentOS来说，就是以挂载点的方式进行限制，&lt;code&gt;xfs&lt;/code&gt;文件系统的限制方法使用project这种模式，不过在此文章内先不介绍。&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;code&gt;quota&lt;/code&gt;的用途大概就是这些了。&lt;/p&gt;
    
    </summary>
    
      <category term="linux磁盘管理" scheme="http://maxiecloud.com/categories/linux%E7%A3%81%E7%9B%98%E7%AE%A1%E7%90%86/"/>
    
    
      <category term="linux" scheme="http://maxiecloud.com/tags/linux/"/>
    
      <category term="disk" scheme="http://maxiecloud.com/tags/disk/"/>
    
      <category term="quota" scheme="http://maxiecloud.com/tags/quota/"/>
    
  </entry>
  
  <entry>
    <title>dd命令详解</title>
    <link href="http://maxiecloud.com/2017/04/27/dd-command/"/>
    <id>http://maxiecloud.com/2017/04/27/dd-command/</id>
    <published>2017-04-27T07:15:28.000Z</published>
    <updated>2017-04-27T08:36:14.000Z</updated>
    
    <content type="html"><![CDATA[<blockquote class="blockquote-center">dd命令可从标准输入或文件中读取数据，根据指定的格式来转换数据，再输出到文件、设备或标准输出。<br>dd命令非常强大，让我们一起来学习吧！<br></blockquote>



<h2 id="dd命令"><a href="#dd命令" class="headerlink" title="dd命令"></a>dd命令</h2><div class="note primary"><h3 id="命令语法"><a href="#命令语法" class="headerlink" title="命令语法"></a>命令语法</h3></div>
<p>dd [OPERAND]…<br>dd OPTION</p>
<a id="more"></a>
<hr>
<div class="note success"><h3 id="命令选项"><a href="#命令选项" class="headerlink" title="命令选项"></a>命令选项</h3></div>
<figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">if</span>=文件名          输入文件名，缺省为标准输入。即指定源文件。</div><div class="line">of=文件名          输出文件名，缺省为标准输出。即指定目的文件。</div><div class="line">ibs=bytes         一次读入bytes个字节，即指定一个块大小为bytes个字节。</div><div class="line">obs=bytes         一次输出bytes个字节，即指定一个块大小为bytes个字节。</div><div class="line">bs=bytes          同时设置读入/输出的块大小为bytes个字节。</div><div class="line">cbs=bytes         一次转换bytes个字节，即指定转换缓冲区大小。</div><div class="line">skip=blocks       从输入文件开头跳过blocks个块后再开始复制。</div><div class="line">seek=blocks       从输出文件开头跳过blocks个块后再开始复制。</div><div class="line">count=blocks      仅拷贝blocks个块，块大小等于ibs指定的字节数。</div></pre></td></tr></table></figure>
<p><strong>其中的关键字用法：</strong></p>
<figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div></pre></td><td class="code"><pre><div class="line">conv=&lt;关键字&gt;，关键字可以有以下11种：</div><div class="line">conversion      用指定的参数转换文件。</div><div class="line">ascii           转换ebcdic为ascii</div><div class="line">ebcdic          转换ascii为ebcdic</div><div class="line">ibm             转换ascii为alternate ebcdic</div><div class="line">block           把每一行转换为长度为cbs，不足部分用空格填充</div><div class="line">unblock         使每一行的长度都为cbs，不足部分用空格填充</div><div class="line">lcase           把大写字符转换为小写字符</div><div class="line">ucase           把小写字符转换为大写字符</div><div class="line">swab            交换输入的每对字节</div><div class="line">noerror         出错时不停止</div><div class="line">notrunc         不截短输出文件</div><div class="line">sync            将每个输入块填充到ibs个字节，不足部分用空（NUL）字符补齐。</div><div class="line">--help          显示帮助信息</div><div class="line">--version       显示版本信息</div></pre></td></tr></table></figure>
<hr>
<div class="note info"><h3 id="dd命令提供的各种功能"><a href="#dd命令提供的各种功能" class="headerlink" title="dd命令提供的各种功能"></a>dd命令提供的各种功能</h3></div>
<p><strong>备份</strong></p>
<p>使用dd命令，可以将一个磁盘上的数据整个的备份到另一个磁盘上。</p>
<figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div></pre></td><td class="code"><pre><div class="line">dd <span class="keyword">if</span>=/dev/sdx of=/dev/sdy</div><div class="line">将本地的/dev/sdx整盘备份到/dev/sdy</div><div class="line"></div><div class="line">dd <span class="keyword">if</span>=/dev/sdx of=/path/to/image</div><div class="line">将/dev/sdx全盘数据备份到指定路径的image文件</div><div class="line"></div><div class="line">dd <span class="keyword">if</span>=/dev/sdx | gzip &gt;/path/to/image.gz</div><div class="line">备份/dev/sdx全盘数据，并利用gzip工具进行压缩，保存到指定路径</div></pre></td></tr></table></figure>
<p><strong>恢复</strong></p>
<figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div></pre></td><td class="code"><pre><div class="line">dd <span class="keyword">if</span>=/path/to/image of=/dev/sdx</div><div class="line">将备份文件恢复到指定盘</div><div class="line"></div><div class="line">gzip -dc /path/to/image.gz | dd of=/dev/sdx</div><div class="line">将压缩的备份文件恢复到指定盘</div></pre></td></tr></table></figure>
<p><strong>拷贝内存资料到硬盘</strong></p>
<figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line">dd <span class="keyword">if</span>=/dev/mem of=/root/mem.bin bs=1024</div><div class="line">将内存里的数据拷贝到root目录下的mem.bin文件</div></pre></td></tr></table></figure>
<p><strong>从光盘拷贝iso镜像</strong></p>
<figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line">dd <span class="keyword">if</span>=/dev/cdrom of=/root/cd.iso</div><div class="line">拷贝光盘数据到root文件夹下，并保存为cd.iso文件</div></pre></td></tr></table></figure>
<p><strong>销毁磁盘数据</strong></p>
<figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line">dd <span class="keyword">if</span>=/dev/urandom of=/dev/sda1</div><div class="line">利用随机的数据填充硬盘，在某些必要的场合可以用来销毁数据，执行此操作以后，/dev/sda1将无法挂载，创建和拷贝操作无法执行</div></pre></td></tr></table></figure>
<p><strong>测试硬盘读写速度</strong></p>
<figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line">dd <span class="keyword">if</span>=/dev/zero of=/root/1Gb.file bs=1024 count=1000000</div><div class="line">dd <span class="keyword">if</span>=/root/1Gb.file bs=64k | dd of=/dev/null</div><div class="line">通过上两个命令输出的执行时间，可以计算出测试硬盘的写/读／速度</div></pre></td></tr></table></figure>
<p><strong>修复硬盘</strong></p>
<figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line">dd <span class="keyword">if</span>=/dev/sda of=/dev/sda</div><div class="line">当硬盘较长时间（比如1,2年）放置不使用后，磁盘上会产生消磁点。当磁头读到这些区域时会遇到困难，并可能导致I/O错误。当这种情况影响到硬盘的第一个扇区时，可能导致硬盘报废。上边的命令有可能使这些数据起死回生,且这个过程是安全高效的</div></pre></td></tr></table></figure>
<hr>
<div class="note danger"><h3 id="使用dd命令制作USB启动盘"><a href="#使用dd命令制作USB启动盘" class="headerlink" title="使用dd命令制作USB启动盘"></a>使用dd命令制作USB启动盘</h3></div>
<ul>
<li>第一步，格式化U盘，为了格式化我们首先需要umount U盘：</li>
</ul>
<figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">$ sudo fdisk <span class="_">-l</span></div></pre></td></tr></table></figure>
<p><img src="http://ww3.sinaimg.cn/large/006tNc79ly1ff1bbawpirj30hw08vq4z.jpg" alt=""></p>
<p>使用上面命令我们可以查看到,<code>/dev/sdb</code>是我的U盘设备</p>
<p>下面让我们<code>umount</code> U盘，并格式化：</p>
<figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line">$ sudo umount /dev/sdb</div><div class="line">$ sudo mkfs.vfat /dev/sdb -I</div></pre></td></tr></table></figure>
<p>我们把U盘格式化成了<code>FAT</code>格式</p>
<ul>
<li>第二步，开始制作启动U盘：</li>
</ul>
<figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">$ sudo dd <span class="keyword">if</span>=~/home/maxie/CentOS7-Everything.iso of=/dev/sdb</div></pre></td></tr></table></figure>
<p>上面命令把<code>ISO</code>镜像写入到U盘，等待几分钟即可。</p>
<p><strong>在Mac上使用dd命令制作启动盘</strong></p>
<ul>
<li>第一步，查看存储设备：</li>
</ul>
<figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">$ diskutil list</div></pre></td></tr></table></figure>
<ul>
<li>第二步，使用dd命令拷贝ISO镜像到U盘：</li>
</ul>
<figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">$ sudo dd <span class="keyword">if</span>=CentOS7-Everything.iso of=/dev/disk2</div></pre></td></tr></table></figure>
<hr>
<div class="note warning"><h3 id="Mac下使用命令制作Linux启动USB盘"><a href="#Mac下使用命令制作Linux启动USB盘" class="headerlink" title="Mac下使用命令制作Linux启动USB盘"></a>Mac下使用命令制作Linux启动USB盘</h3></div>
<p>由于作者使用的是<code>Mac</code>本，而且<code>Mac</code>使用的是<code>bash</code>，所以研究了一下，怎么在<code>Mac</code>上制作USB启动盘。</p>
<p>下面就让我们开始制作启动盘吧！</p>
<ul>
<li>第一步，在终端下，将ISO镜像转换为DMG格式：</li>
</ul>
<figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div></pre></td><td class="code"><pre><div class="line">$ hdiutil convert -format UDRW -o ~/linux.dmg /tmp/linux.iso</div><div class="line"></div><div class="line">正在读取Master Boot Record（MBR：0）…</div><div class="line">正在读取Linux                       （Apple_ISO：1）…</div><div class="line">正在读取（Windows_NTFS_Hidden：2）…</div><div class="line">.......................................................................................................................</div><div class="line">经过时间：14.829s</div><div class="line">速度：145.1M 字节/秒</div><div class="line">节省：0.0%</div><div class="line">created: /tmp/linux.dmg</div></pre></td></tr></table></figure>
<ul>
<li>第二步，插入USB，然后在终端下，查找该设备的设备名：</li>
</ul>
<figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div></pre></td><td class="code"><pre><div class="line">$ diskutil list</div><div class="line">/dev/disk0</div><div class="line">   <span class="comment">#:                       TYPE NAME                    SIZE       IDENTIFIER</span></div><div class="line">   0:      GUID_partition_scheme                        *121.3 GB   disk0</div><div class="line">   1:                        EFI                         209.7 MB   disk0s1</div><div class="line">   2:                  Apple_HFS Macintosh HD            120.5 GB   disk0s2</div><div class="line">   3:                 Apple_Boot Recovery HD             650.0 MB   disk0s3</div><div class="line">/dev/disk1</div><div class="line">   <span class="comment">#:                       TYPE NAME                    SIZE       IDENTIFIER</span></div><div class="line">   0:     FDisk_partition_scheme                        *15.8 GB    disk1</div><div class="line">   1:               Windows_NTFS wxy-u3                  15.8 GB    disk1s1</div></pre></td></tr></table></figure>
<p>通过上面命令查看到U盘设备名是：/dev/disk1</p>
<ul>
<li>卸载USB盘，但是不要<code>推出</code>：</li>
</ul>
<figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line">$ diskutil umountDisk /dev/disk1</div><div class="line">Unmount of all volumes on disk1 was successful</div></pre></td></tr></table></figure>
<ul>
<li>第四步，镜像上面生成的DMG内容到USB盘：</li>
</ul>
<figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div></pre></td><td class="code"><pre><div class="line">$ sudo dd <span class="keyword">if</span>=linux.dmg of=/dev/rdisk1 bs=1m</div><div class="line">Password:</div><div class="line">2151+1 records <span class="keyword">in</span></div><div class="line">2151+1 records out</div><div class="line">2256076800 bytes transferred <span class="keyword">in</span> 90.277905 secs (24990354 bytes/sec)</div></pre></td></tr></table></figure>
<p>此处要千万注意，指定的of别写错了，否则悔之晚矣。另外，of参数指定的设备名，可以用上面找到的/dev/disk1，也可以用/dev/rdisk1，此处的“r”据说会写入较快。</p>
<p>另外，如果报错：“dd: Invalid number `1m’”，可能是使用的不同版本的dd，可以换为bs=1M试试。</p>
<p>如果报错：“dd: /dev/diskN: Resource busy”，可能是上面的步骤中没有完成卸载USB盘。</p>
<ul>
<li>第五步，推出USB盘。在上面复制之后，系统可能会报错，“此电脑不能读取能插入的磁盘”，不必理会，直接推出即可。</li>
</ul>
<figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">$ diskutil eject /dev/disk1</div></pre></td></tr></table></figure>
<hr>
<iframe frameborder="no" border="0" marginwidth="0" marginheight="0" width="330" height="86" src="//music.163.com/outchain/player?type=2&id=404783635&auto=0&height=66"></iframe>

<p>本文出自<a href="http://maxiecloud.com">Maxie’s Notes</a>博客，转载请务必保留此出处。</p>
<p><img src="https://ww1.sinaimg.cn/large/006tNbRwly1fdzc80odsuj30gn0ilq5m.jpg" alt=""></p>
]]></content>
    
    <summary type="html">
    
      &lt;blockquote class=&quot;blockquote-center&quot;&gt;dd命令可从标准输入或文件中读取数据，根据指定的格式来转换数据，再输出到文件、设备或标准输出。&lt;br&gt;dd命令非常强大，让我们一起来学习吧！&lt;br&gt;&lt;/blockquote&gt;



&lt;h2 id=&quot;dd命令&quot;&gt;&lt;a href=&quot;#dd命令&quot; class=&quot;headerlink&quot; title=&quot;dd命令&quot;&gt;&lt;/a&gt;dd命令&lt;/h2&gt;&lt;div class=&quot;note primary&quot;&gt;&lt;h3 id=&quot;命令语法&quot;&gt;&lt;a href=&quot;#命令语法&quot; class=&quot;headerlink&quot; title=&quot;命令语法&quot;&gt;&lt;/a&gt;命令语法&lt;/h3&gt;&lt;/div&gt;
&lt;p&gt;dd [OPERAND]…&lt;br&gt;dd OPTION&lt;/p&gt;
    
    </summary>
    
      <category term="linux基础知识" scheme="http://maxiecloud.com/categories/linux%E5%9F%BA%E7%A1%80%E7%9F%A5%E8%AF%86/"/>
    
    
      <category term="linux" scheme="http://maxiecloud.com/tags/linux/"/>
    
      <category term="command" scheme="http://maxiecloud.com/tags/command/"/>
    
      <category term="dd" scheme="http://maxiecloud.com/tags/dd/"/>
    
  </entry>
  
  <entry>
    <title>Linux中分区工具的使用详解</title>
    <link href="http://maxiecloud.com/2017/04/22/how-to-use-partition-tools/"/>
    <id>http://maxiecloud.com/2017/04/22/how-to-use-partition-tools/</id>
    <published>2017-04-22T09:16:04.000Z</published>
    <updated>2017-04-22T11:48:02.000Z</updated>
    
    <content type="html"><![CDATA[<blockquote class="blockquote-center">对磁盘磁盘分区有什么好处？<br>优化I/O性能<br>实现磁盘空间配额限制<br>提高修复速度<br>隔离系统和程序<br>安装多个OS<br>采用不同文件系统<br></blockquote>

<p><strong>Linux中必要有的分区：</strong></p>
<p><code>/</code>：根分区，是所有文件/目录的”父亲”。<br><code>/boot</code>：boot分区，系统启动引导的分区。<br><code>/app</code>：app分区，一般在生产环境中需要此分区，做到程序与系统隔离。<br><code>swap</code>：swap分区是一个特殊的分区，它是相当于内存的存在。</p>
<a id="more"></a>
<h2 id="分区策略"><a href="#分区策略" class="headerlink" title="分区策略"></a>分区策略</h2><div class="note primary"><h3 id="MBR分区表"><a href="#MBR分区表" class="headerlink" title="MBR分区表"></a>MBR分区表</h3></div>
<p>在MBR分区表的设置中，引导扇区是每个分区(partition)的第一扇区，而主引导扇区是硬盘的第一扇区。</p>
<p>主引导扇区由三个部分组成：</p>
<ol>
<li>主引导记录MBR</li>
<li>硬盘分区表DPT</li>
<li>硬盘有效标志</li>
</ol>
<p>在主引导扇区里MBR占用446bytes(字节)，分区表占用64bytes(字节)，硬盘有效标志占2bytes(字节)。</p>
<p>而MBR有一个特点就是：<br><strong>只有4个分区：3主分区+1扩展分区(N个逻辑分区)</strong></p>
<div class="note success"><h3 id="GPT分区表"><a href="#GPT分区表" class="headerlink" title="GPT分区表"></a>GPT分区表</h3></div>
<p>GPT的分区信息是在分区中，而不象MBR一样在主引导扇区，为保护GPT不受MBR类磁盘管理软件的危害，GPT在主引导扇区建立了一个保护分区（Protective MBR）的MBR分区表（此分区并不必要），这种分区的类型标识为0xEE，这个保护分区的大小在Windows下为128MB，Mac OS X下为200MB，在Window磁盘管理器里名为GPT保护分区，可让MBR类磁盘管理软件把GPT看成一个未知格式的分区，而不是错误地当成一个未分区的磁盘。</p>
<p>另外，为了保护分区表，GPT的分区信息使用128位UUID(Universally Unique Identifier) 表示磁盘和分区GPT分区表自动备份在头和尾两份，并有CRC校验位</p>
<hr>
<h2 id="管理分区"><a href="#管理分区" class="headerlink" title="管理分区"></a>管理分区</h2><p><strong>lsblk命令</strong>：<br>    列出Linux中块设备</p>
<pre><code>注意：这个命令只能列出内存中的块设备信息
</code></pre><div class="note info"><h3 id="分区表管理工具"><a href="#分区表管理工具" class="headerlink" title="分区表管理工具"></a>分区表管理工具</h3></div>
<p>创建分区表工具：</p>
<figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div></pre></td><td class="code"><pre><div class="line">fdisk       创建MBR分区</div><div class="line">gdisk       创建GPT分区</div><div class="line">parted      高级分区操作（创建，复制，调整大小等）</div><div class="line">partprobe   重新设置内存中的内核分区表版本(CentOS6不适用此命令)</div></pre></td></tr></table></figure>
<div class="note danger"><h3 id="fdisk-gdisk工具"><a href="#fdisk-gdisk工具" class="headerlink" title="fdisk/gdisk工具"></a>fdisk/gdisk工具</h3></div>
<p><strong>fdisk命令：</strong><br>用于观察硬盘实体使用情况，也可对硬盘分区。它采用传统的问答式界面，而非类似DOS fdisk的cfdisk互动式操作界面，因此在使用上较为不便，但功能却丝毫不打折扣。</p>
<figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div></pre></td><td class="code"><pre><div class="line">$ fdisk DEVICE</div><div class="line"></div><div class="line">各选项意义：</div><div class="line">-b &lt;分区大小&gt;       指定每个分区的大小</div><div class="line"><span class="_">-l</span>                 列出指定的设备的分区表状况</div><div class="line"><span class="_">-s</span> &lt;分区编号&gt;       将指定的分区大小输出到标准输出上，单位为区块</div><div class="line">-u                 搭配 <span class="_">-l</span> 参数列表，会用分区数目取代柱面数目，来表示每个分区的起始地址</div><div class="line">-v                 显示版本信息</div></pre></td></tr></table></figure>
<p><strong>fdisk的子命令</strong></p>
<figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div></pre></td><td class="code"><pre><div class="line">p           列出分区列表</div><div class="line">t           更改分区类型</div><div class="line">n           创建新分区</div><div class="line">d           删除分区</div><div class="line">w           保存并退出</div><div class="line">q           不保存并退出</div></pre></td></tr></table></figure>
<p>实例：</p>
<figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div></pre></td><td class="code"><pre><div class="line">[root@node /]<span class="comment"># fdisk  /dev/sdb</span></div><div class="line"></div><div class="line">WARNING: DOS-compatible mode is deprecated. Its strongly recommended to</div><div class="line">         switch off the mode (<span class="built_in">command</span> <span class="string">'c'</span>) and change display units to</div><div class="line">         sectors (<span class="built_in">command</span> <span class="string">'u'</span>).</div><div class="line"></div><div class="line">Command (m <span class="keyword">for</span> <span class="built_in">help</span>): p</div><div class="line"></div><div class="line">Disk /dev/sdb: 214.7 GB, 214748364800 bytes</div><div class="line">255 heads, 63 sectors/track, 26108 cylinders</div><div class="line">Units = cylinders of 16065 * 512 = 8225280 bytes</div><div class="line">Sector size (logical/physical): 512 bytes / 512 bytes</div><div class="line">I/O size (minimum/optimal): 512 bytes / 512 bytes</div><div class="line">Disk identifier: 0x45ef120e</div><div class="line"></div><div class="line">   Device Boot      Start         End      Blocks   Id  System</div><div class="line"></div><div class="line">Command (m <span class="keyword">for</span> <span class="built_in">help</span>): n</div><div class="line">Command action</div><div class="line">   e   extended</div><div class="line">   p   primary partition (1-4)</div><div class="line">p</div><div class="line">Partition number (1-4): 1</div><div class="line">First cylinder (1-26108, default 1):</div><div class="line">Using default value 1</div><div class="line">Last cylinder, +cylinders or +size&#123;K,M,G&#125; (1-26108, default 26108): +10G</div><div class="line"></div><div class="line">Command (m <span class="keyword">for</span> <span class="built_in">help</span>): w</div><div class="line">The partition table has been altered!</div><div class="line"></div><div class="line">Calling ioctl() to re-read partition table.</div><div class="line">Syncing disks.</div></pre></td></tr></table></figure>
<p><strong>gdisk命令</strong></p>
<p>gdisk命令使用方法与fdisk相似，只是gdisk 是为GPT分区创建的工具。</p>
<div class="note warning"><h3 id="同步分区表"><a href="#同步分区表" class="headerlink" title="同步分区表"></a>同步分区表</h3></div>
<p>在使用 <code>fdisk/gdisk</code>工具对硬盘进行分区之后，有时会提示<strong>硬盘分区表与内存中的分区表不同步</strong>，这是因为<strong>1.可能是硬盘是很旧之前挂载上来的；2.没有手动同步分区表</strong></p>
<p>那么如何同步分区表，让我们来看看吧！</p>
<p><strong>第一步</strong>：先查看是否内核已经识别到了新的分区：</p>
<figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div></pre></td><td class="code"><pre><div class="line">[root@node /]<span class="comment"># cat /proc/partitions</span></div><div class="line">major minor  <span class="comment">#blocks  name</span></div><div class="line"></div><div class="line">   8        0  209715200 sda</div><div class="line">   8        1     204800 sda1</div><div class="line">   8        2   62914560 sda2</div><div class="line">   8       16  209715200 sdb</div><div class="line">   8       17   10490413 sdb1</div><div class="line"> 253        0   20971520 dm-0</div><div class="line"> 253        1    2097152 dm-1</div><div class="line"> 253        2   10485760 dm-2</div><div class="line"> 253        3   20971520 dm-3</div><div class="line"> </div><div class="line">[root@node /]<span class="comment"># lsblk</span></div><div class="line">NAME                MAJ:MIN RM  SIZE RO TYPE MOUNTPOINT</div><div class="line">sda                   8:0    0  200G  0 disk</div><div class="line">├─sda1                8:1    0  200M  0 part /boot</div><div class="line">└─sda2                8:2    0   60G  0 part</div><div class="line">  ├─vg0-root (dm-0) 253:0    0   20G  0 lvm  /</div><div class="line">  ├─vg0-swap (dm-1) 253:1    0    2G  0 lvm  [SWAP]</div><div class="line">  ├─vg0-usr (dm-2)  253:2    0   10G  0 lvm  /usr</div><div class="line">  └─vg0-var (dm-3)  253:3    0   20G  0 lvm  /var</div><div class="line">sdb                   8:16   0  200G  0 disk</div><div class="line">└─sdb1                8:17   0   10G  0 part</div><div class="line">sr0                  11:0    1  2.1G  0 rom  /centos6-my</div></pre></td></tr></table></figure>
<p>上面这个两条命令：</p>
<ol>
<li>cat /proc/partiotion：查看内核是否已经识别新的分区</li>
<li>lsblk：这条命令我们在上面说过，也是查看分区的一个信息</li>
<li>只要是我们创建了分区之后，使用这两条命令都没有查看到我们创建的分区名，那我们就要执行接下来的操作了，就是手动同步分区表。</li>
</ol>
<p><strong>第二步</strong>：通知内核重新读取硬盘分区表</p>
<p>对于CentOS6：</p>
<figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div></pre></td><td class="code"><pre><div class="line">新增分区：</div><div class="line"> partx <span class="_">-a</span> /dev/DEVICE     一般执行3次，强制生效</div><div class="line"> kpartx <span class="_">-a</span> <span class="_">-f</span> /dev/DEVICE </div><div class="line">删除分区：</div><div class="line"> partx <span class="_">-d</span> --nr M-N /dev/DEVICE</div></pre></td></tr></table></figure>
<p>对于Centos5，7：</p>
<figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line">新增，删除分区：</div><div class="line"> partprobe [/dev/DEVICE]</div></pre></td></tr></table></figure>
<p>上面这条命令后如果不跟任何设备名，则表示更新所有设备的分区表信息。</p>
<hr>
<h3 id="制作脚本自动使用fdisk创建分区"><a href="#制作脚本自动使用fdisk创建分区" class="headerlink" title="制作脚本自动使用fdisk创建分区"></a>制作脚本自动使用fdisk创建分区</h3><p>此脚本目前只能实现简单的创建功能，希望<code>dalao</code> 多多指点</p>
<figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div><div class="line">37</div><div class="line">38</div><div class="line">39</div><div class="line">40</div><div class="line">41</div><div class="line">42</div><div class="line">43</div><div class="line">44</div><div class="line">45</div><div class="line">46</div><div class="line">47</div><div class="line">48</div><div class="line">49</div><div class="line">50</div><div class="line">51</div><div class="line">52</div><div class="line">53</div><div class="line">54</div><div class="line">55</div><div class="line">56</div><div class="line">57</div><div class="line">58</div><div class="line">59</div><div class="line">60</div><div class="line">61</div><div class="line">62</div><div class="line">63</div><div class="line">64</div><div class="line">65</div><div class="line">66</div><div class="line">67</div><div class="line">68</div><div class="line">69</div><div class="line">70</div><div class="line">71</div><div class="line">72</div><div class="line">73</div><div class="line">74</div><div class="line">75</div><div class="line">76</div><div class="line">77</div><div class="line">78</div><div class="line">79</div><div class="line">80</div><div class="line">81</div><div class="line">82</div><div class="line">83</div><div class="line">84</div><div class="line">85</div><div class="line">86</div><div class="line">87</div><div class="line">88</div><div class="line">89</div><div class="line">90</div><div class="line">91</div><div class="line">92</div><div class="line">93</div><div class="line">94</div><div class="line">95</div><div class="line">96</div><div class="line">97</div><div class="line">98</div><div class="line">99</div><div class="line">100</div><div class="line">101</div><div class="line">102</div><div class="line">103</div><div class="line">104</div><div class="line">105</div><div class="line">106</div><div class="line">107</div><div class="line">108</div><div class="line">109</div><div class="line">110</div><div class="line">111</div><div class="line">112</div><div class="line">113</div><div class="line">114</div><div class="line">115</div><div class="line">116</div><div class="line">117</div><div class="line">118</div><div class="line">119</div><div class="line">120</div></pre></td><td class="code"><pre><div class="line">[root@node ~]<span class="comment"># cat disk-make.sh</span></div><div class="line"><span class="meta">#!/bin/bash</span></div><div class="line"><span class="comment">#FileName: disk-make.sh</span></div><div class="line"><span class="comment">#Description: just auto make a disk partition use fidsk command.</span></div><div class="line"><span class="comment">#Author: Maxie</span></div><div class="line"><span class="comment">#Date: 2017-04-20</span></div><div class="line"><span class="comment">#Version: 1.0</span></div><div class="line"></div><div class="line"></div><div class="line">Hard=<span class="string">'/dev/sda'</span></div><div class="line"></div><div class="line"><span class="comment">#grep the extended partition exist or not.</span></div><div class="line">Exten=`fdisk <span class="_">-l</span> <span class="variable">$Hard</span>|grep Extended`</div><div class="line"></div><div class="line"><span class="comment">#grep the max number of the partition table</span></div><div class="line">Maxnum=`fdisk <span class="_">-l</span> <span class="variable">$Hard</span>|grep -o <span class="string">"^/dev/sda[1-9]\&gt;"</span>|tr <span class="_">-d</span> [[:punct:]]|tr <span class="_">-d</span> <span class="string">'A-Za-z'</span>|sort -n|tail -1`</div><div class="line"></div><div class="line"><span class="comment">#now judge the extended and maxnum.</span></div><div class="line"><span class="keyword">if</span> [[  -z <span class="variable">$Exten</span> ]];<span class="keyword">then</span></div><div class="line">        <span class="keyword">if</span> [[ <span class="variable">$Maxnum</span> -ge 4 ]];<span class="keyword">then</span></div><div class="line"><span class="comment">#if maxnum = 4,cant make major partition and extend partition.just exit.</span></div><div class="line">                <span class="built_in">echo</span> <span class="string">"Disk partitions error!..."</span></div><div class="line">                <span class="built_in">exit</span> 1</div><div class="line">        <span class="keyword">elif</span> [ <span class="variable">$Maxnum</span> <span class="_">-eq</span> 1 -o <span class="variable">$Maxnum</span> <span class="_">-eq</span> 2 ];<span class="keyword">then</span></div><div class="line"><span class="comment">#       echo "1---3"</span></div><div class="line"><span class="comment">#judge the max number in 1 and 3, and make partition of the number 3</span></div><div class="line">                cat &lt;&lt; EOF</div><div class="line">                e|E)use all free disk greate is Extended;</div><div class="line">                *)Quit;</div><div class="line">EOF</div><div class="line">                Sdanum=$((Maxnum+1))</div><div class="line">                <span class="built_in">read</span> Opt</div><div class="line">                <span class="keyword">case</span> <span class="variable">$Opt</span> <span class="keyword">in</span></div><div class="line">                e|E)</div><div class="line">fdisk <span class="variable">$Hard</span> &amp;&gt; /opt/fdisk.log &lt;&lt;EOF</div><div class="line">n</div><div class="line">e</div><div class="line"><span class="variable">$Sdanum</span></div><div class="line"></div><div class="line"></div><div class="line">w</div><div class="line"></div><div class="line">EOF</div><div class="line">                ;;</div><div class="line">                *)</div><div class="line">                <span class="built_in">echo</span> <span class="string">"None operating ,Exit"</span></div><div class="line">                <span class="built_in">exit</span> 2</div><div class="line">                ;;</div><div class="line">                <span class="keyword">esac</span></div><div class="line">        <span class="keyword">else</span></div><div class="line"><span class="comment">#make partition of the number 4,the last number of the partition.</span></div><div class="line">                cat &lt;&lt; EOF</div><div class="line">        e|E)use all free disk greate is Extended;</div><div class="line">        *)Quit;</div><div class="line">EOF</div><div class="line">                <span class="built_in">read</span> Opt</div><div class="line">                <span class="keyword">case</span> <span class="variable">$Opt</span> <span class="keyword">in</span></div><div class="line">                e|E)</div><div class="line">                fdisk <span class="variable">$Hard</span> &amp;&gt; /opt/fdisk.log &lt;&lt;EOF</div><div class="line">                n</div><div class="line">                e</div><div class="line"></div><div class="line"></div><div class="line">                w</div><div class="line">EOF</div><div class="line"></div><div class="line">                ;;</div><div class="line">                *)</div><div class="line">                <span class="built_in">echo</span> <span class="string">"None operating ,Exit"</span></div><div class="line">                <span class="built_in">exit</span> 2</div><div class="line">                ;;</div><div class="line">                <span class="keyword">esac</span></div><div class="line"></div><div class="line">        <span class="keyword">fi</span></div><div class="line"></div><div class="line"><span class="keyword">elif</span> [[ ! -z <span class="variable">$Exten</span> ]] &amp;&amp; [[ <span class="variable">$Maxnum</span> <span class="_">-eq</span> 3 ]]; <span class="keyword">then</span></div><div class="line">	<span class="built_in">echo</span> <span class="string">"Please input new partition szie(MB),Only number."</span></div><div class="line">	<span class="built_in">read</span> ESize</div><div class="line">	CK=`<span class="built_in">echo</span> <span class="string">"<span class="variable">$ESize</span>"</span> | grep <span class="string">"[[:punct:]]\+"</span>`</div><div class="line">		<span class="keyword">while</span> [[ <span class="variable">$ESize</span> -le 1 || -n <span class="variable">$CK</span> ]]</div><div class="line">		<span class="keyword">do</span></div><div class="line">			<span class="built_in">echo</span> <span class="string">"That wrong, Please try again"</span></div><div class="line"><span class="comment">#Variable initialization</span></div><div class="line">			ESize=</div><div class="line">			<span class="built_in">read</span> ESize</div><div class="line">			CK=`<span class="built_in">echo</span> <span class="string">"<span class="variable">$ESize</span>"</span> | grep <span class="string">"[[:punct:]]\+"</span>`</div><div class="line">		<span class="keyword">done</span></div><div class="line"><span class="comment">#Variable initialization, use :- just output 50 and clear Eanswer's value</span></div><div class="line">	Eanswer=<span class="variable">$&#123;ESize:-50&#125;</span></div><div class="line">	fdisk <span class="variable">$Hard</span> &amp;&gt; /opt/fdisk.log &lt;&lt;EOF</div><div class="line">	n</div><div class="line"></div><div class="line">	l</div><div class="line"></div><div class="line">	+<span class="variable">$&#123;ESize&#125;</span>M</div><div class="line"></div><div class="line">	w</div><div class="line"></div><div class="line">EOF</div><div class="line"></div><div class="line"><span class="keyword">else</span></div><div class="line">        <span class="built_in">echo</span> <span class="string">'Please input new partition size(MB),Only number.'</span></div><div class="line">        <span class="built_in">read</span> Size</div><div class="line">        Pun=`<span class="built_in">echo</span> <span class="string">"<span class="variable">$Size</span>"</span>|grep <span class="string">"[[:punct:]]\+"</span>`</div><div class="line">                <span class="keyword">while</span> [[ <span class="variable">$Size</span> -le 1 || -n <span class="variable">$Pun</span> ]]</div><div class="line">                <span class="keyword">do</span></div><div class="line">                        <span class="built_in">echo</span> <span class="string">"Wrong try again!"</span></div><div class="line">                        Size=</div><div class="line">                        <span class="built_in">read</span> Size</div><div class="line">                        Pun=`<span class="built_in">echo</span> <span class="string">"<span class="variable">$Size</span>"</span>|grep <span class="string">"[[:punct:]]\+"</span>`</div><div class="line">                <span class="keyword">done</span></div><div class="line">        answer=<span class="variable">$&#123;Size:-50&#125;</span></div><div class="line">        fdisk <span class="variable">$Hard</span> &amp;&gt; /opt/fdisk.log &lt;&lt;EOF</div><div class="line">        n</div><div class="line"></div><div class="line">        +<span class="variable">$&#123;Size&#125;</span>M</div><div class="line">        w</div><div class="line"></div><div class="line">EOF</div><div class="line"><span class="keyword">fi</span></div></pre></td></tr></table></figure>
<hr>
<iframe frameborder="no" border="0" marginwidth="0" marginheight="0" width="330" height="86" src="//music.163.com/outchain/player?type=2&id=406000222&auto=1&height=66"></iframe>

<p>本文出自<a href="http://maxiecloud.com">Maxie’s Notes</a>博客，转载请务必保留此出处。</p>
<p><img src="https://ww1.sinaimg.cn/large/006tNbRwly1fdzc80odsuj30gn0ilq5m.jpg" alt=""></p>
]]></content>
    
    <summary type="html">
    
      &lt;blockquote class=&quot;blockquote-center&quot;&gt;对磁盘磁盘分区有什么好处？&lt;br&gt;优化I/O性能&lt;br&gt;实现磁盘空间配额限制&lt;br&gt;提高修复速度&lt;br&gt;隔离系统和程序&lt;br&gt;安装多个OS&lt;br&gt;采用不同文件系统&lt;br&gt;&lt;/blockquote&gt;

&lt;p&gt;&lt;strong&gt;Linux中必要有的分区：&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;&lt;code&gt;/&lt;/code&gt;：根分区，是所有文件/目录的”父亲”。&lt;br&gt;&lt;code&gt;/boot&lt;/code&gt;：boot分区，系统启动引导的分区。&lt;br&gt;&lt;code&gt;/app&lt;/code&gt;：app分区，一般在生产环境中需要此分区，做到程序与系统隔离。&lt;br&gt;&lt;code&gt;swap&lt;/code&gt;：swap分区是一个特殊的分区，它是相当于内存的存在。&lt;/p&gt;
    
    </summary>
    
      <category term="linux磁盘管理" scheme="http://maxiecloud.com/categories/linux%E7%A3%81%E7%9B%98%E7%AE%A1%E7%90%86/"/>
    
    
      <category term="linux" scheme="http://maxiecloud.com/tags/linux/"/>
    
      <category term="command" scheme="http://maxiecloud.com/tags/command/"/>
    
      <category term="fdisk" scheme="http://maxiecloud.com/tags/fdisk/"/>
    
      <category term="partition" scheme="http://maxiecloud.com/tags/partition/"/>
    
  </entry>
  
  <entry>
    <title>rpm命令使用详解</title>
    <link href="http://maxiecloud.com/2017/04/17/rpm-is-package-manager/"/>
    <id>http://maxiecloud.com/2017/04/17/rpm-is-package-manager/</id>
    <published>2017-04-17T14:59:49.000Z</published>
    <updated>2017-04-18T03:08:15.000Z</updated>
    
    <content type="html"><![CDATA[<blockquote class="blockquote-center">rpm是Red Hat公司在1995年引入的Linux包管理器<br>在后来被其他Linux发行版所广泛引用，所以rpm也被称为RPM is Package Manager.<br></blockquote>

<p>rpm命令选项分为三组：</p>
<ul>
<li>用于查询和检查包</li>
<li>用于安装、升级和删除包</li>
<li>用于执行其他功能</li>
</ul>
<p>还应该注意 <code>rpm</code> 是操作 <code>RPM</code> 的主要命令，而 <code>.rpm</code> 是 <code>RPM</code> 文件使用的扩展名。所以 “一个rpm” 或 “某某rpm” 一般是指 RPM文件，而 <code>rpm</code> 通常指命令。</p>
<a id="more"></a>
<div class="note primary"><h2 id="本次的实验环境"><a href="#本次的实验环境" class="headerlink" title="本次的实验环境"></a>本次的实验环境</h2></div>
<p><img src="http://ww3.sinaimg.cn/large/006tNc79ly1feqk0g4j0dj31ac07mq5j.jpg" alt=""></p>
<h2 id="程序包管理器"><a href="#程序包管理器" class="headerlink" title="程序包管理器"></a>程序包管理器</h2><p>不同的发行版，也有不同的包管理器，虽然RedHat发行的 <code>rpm</code>包管理器是公认的包管理器，但是也不全是所有发行版都使用的是其包管理器。</p>
<blockquote>
<p>Debian发行版： <code>dpkg</code>包管理器，<code>.deb</code>文件<br>RedHat发行版： <code>rpm</code>包管理器, <code>.rpm</code>文件<br>S.u.S.E发行版： <code>rpm</code>包管理器, <code>.rpm</code>文件<br>Genntoo发行版： <code>ports</code>包管理器</p>
</blockquote>
<h2 id="包概念简介"><a href="#包概念简介" class="headerlink" title="包概念简介"></a>包概念简介</h2><h3 id="rpm包命名方式"><a href="#rpm包命名方式" class="headerlink" title="rpm包命名方式"></a>rpm包命名方式</h3><p><code>rpm</code>的包一般都是以 <code>Name-Version-release.arch.rpm</code> 的格式呈现在目录中的。</p>
<figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div></pre></td><td class="code"><pre><div class="line">Name            --包名</div><div class="line">VERSION         --版本号,一般是 major.minor.release的格式</div><div class="line">release         --编译版本号</div><div class="line">arch            --CPU架构,常见的有 i386,i686,x86_64</div></pre></td></tr></table></figure>
<p>我们可以使用一条命令查看 <code>CentOS</code>系统光盘自带的<code>Packages</code>中有几种类型的<code>rpm</code>包。</p>
<figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div></pre></td><td class="code"><pre><div class="line">$ grep -o <span class="string">"\&lt;[^.]\+\&gt;.rpm$"</span> | cut <span class="_">-d</span><span class="string">"."</span> <span class="_">-f</span>1  | sort | uniq -c</div><div class="line">   2072 i686</div><div class="line">   3044 noarch</div><div class="line">   4247 x86_64</div></pre></td></tr></table></figure>
<p>其中：</p>
<ul>
<li>i686：32位CPU架构</li>
<li>x86_64：64位CPU架构</li>
<li>noarch：无关硬件架构，任何架构的CPU都可以安装</li>
</ul>
<p>在这些包中还有主包和子包的区分：</p>
<figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div></pre></td><td class="code"><pre><div class="line">Application-VERSION-ARCH.rpm        --主包</div><div class="line">Application-devle-VERSION-ARCH.rpm  --开发子包</div><div class="line">Application-utils-VERSION-ARCH.rpm  --工具子包</div><div class="line">Application-libs-VERSION-ARCH.rpm   --依赖库子包</div></pre></td></tr></table></figure>
<p>需要注意的一点是：</p>
<ul>
<li><code>rpm</code>包与包可能存在依赖关系，甚至循环依赖，处理好这些依赖关系是学好<code>rpm</code>命令的重点。</li>
</ul>
<hr>
<h3 id="包管理器"><a href="#包管理器" class="headerlink" title="包管理器"></a>包管理器</h3><p>程序包管理器的功能：</p>
<pre><code>将编译好的应用程序的各组成文件打包成一个或几个程序包文件，从而方便快捷的实现程序包的安装、卸载、升级和校验等管理操作。
</code></pre><p><code>rpm</code>包文件的组成：</p>
<figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line">RPM包内的文件</div><div class="line">RPM的元数据、名称、版本、依赖性、描述等</div><div class="line">安装rpm包时运行的脚本</div></pre></td></tr></table></figure>
<p><code>rpm</code>数据库：</p>
<p>一般存放在/var/lib/rpm目录下</p>
<p>存放以下这些文件：<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div></pre></td><td class="code"><pre><div class="line">程序包名称以及版本</div><div class="line">依赖关系</div><div class="line">功能说明</div><div class="line">包安装后生成的各文件路径以及校验码信息</div></pre></td></tr></table></figure></p>
<hr>
<h3 id="程序包的来源"><a href="#程序包的来源" class="headerlink" title="程序包的来源"></a>程序包的来源</h3><p>获取程序包的途径：</p>
<ol>
<li><p>系统发行版的光盘或官方的服务器<br><a href="https://www.centos.org/download" target="_blank" rel="external">https://www.centos.org/download</a><br><a href="http://mirrors.aliyun.com" target="_blank" rel="external">http://mirrors.aliyun.com</a><br><a href="http://mirrors.163.com" target="_blank" rel="external">http://mirrors.163.com</a></p>
</li>
<li><p>项目的官方站点<br><a href="http://httpd.apache.org/download.cgi#apache24" target="_blank" rel="external">http://httpd.apache.org/download.cgi#apache24</a><br><a href="http://nginx.org/en/download.html" target="_blank" rel="external">http://nginx.org/en/download.html</a></p>
</li>
<li><p>第三方组织：Fedora-EPEL<br><a href="https://dl.fedoraproject.org/pub/epel/" target="_blank" rel="external">https://dl.fedoraproject.org/pub/epel/</a></p>
</li>
</ol>
<p>RPMforge：RHEL推荐使用</p>
<p>或者使用专用搜索引擎<br><a href="http://pkgs.org" target="_blank" rel="external">http://pkgs.org</a><br><a href="http://rpmfind.net" target="_blank" rel="external">http://rpmfind.net</a><br><a href="http://rpm.pbone.net" target="_blank" rel="external">http://rpm.pbone.net</a><br><a href="http://sourceforge.net" target="_blank" rel="external">http://sourceforge.net</a></p>
<p><em>注意：</em>第三方包建议要检查其合法性（来源合法性以及程序包的完整性）</p>
<hr>
<h2 id="rpm包管理"><a href="#rpm包管理" class="headerlink" title="rpm包管理"></a>rpm包管理</h2><p>我们可以使用 <code>rpm</code>命令对包进行安装、升级、卸载、查询、校验以及数据库维护等操作。</p>
<div class="note success"><h3 id="安装rpm包"><a href="#安装rpm包" class="headerlink" title="安装rpm包"></a>安装rpm包</h3></div>
<p><code>rpm {-i|--install} [install-options] PACKAGE_FILE …</code></p>
<p>安装时常用的选项：</p>
<figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line">-v          verbose，显示安装时的详细信息</div><div class="line">-h          <span class="built_in">hash</span>，以50个<span class="built_in">hash</span>标记，也就是<span class="comment">#号的形式显示安装程序包的执行进度条</span></div></pre></td></tr></table></figure>
<p>常用格式为：<br><code>rpm -ivh PACKAGE_FILE</code></p>
<p>注意这里是<code>PACKAGE_FILE</code>，是需要包的全名，例如<code>tree-1.6.0-10.el7.x86_64.rpm</code></p>
<p>常用长选项有：</p>
<figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div></pre></td><td class="code"><pre><div class="line">--test              测试安装，但不真正执行安装，即dry run模式</div><div class="line">--nodeps            忽略依赖关系</div><div class="line">--replacepkgs | replacefiles（只覆盖某个重复的文件）</div><div class="line">--nosignature       不检查来源合法性</div><div class="line">--nodigest          不检查包完整性</div><div class="line">--noscripts         不执行程序包脚本</div><div class="line">	%pre：安装前脚本；--nopre 不执行安装前的脚本</div><div class="line">	%post：安装后脚本；--nopost</div><div class="line">	%preun：卸载前脚本；--nopreun</div><div class="line">	%postun：卸载后脚本；--nopostun</div></pre></td></tr></table></figure>
<p>实例：</p>
<p><img src="http://ww2.sinaimg.cn/large/006tNc79ly1feql1v03u5j318k06m40z.jpg" alt=""></p>
<div class="note info"><h3 id="升级rpm包"><a href="#升级rpm包" class="headerlink" title="升级rpm包"></a>升级rpm包</h3></div>
<figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line">rpm &#123;-U|--upgrade&#125; [install-options] PACKAGE_FILE ...</div><div class="line">rpm &#123;-F|--freshen&#125; [install-options] PACKAGE_FILE …</div></pre></td></tr></table></figure>
<p>其中<code>U</code>选项表示：<br>    upgrade：安装时，如果有旧版程序包，则“升级”；如果不存在旧版程序包，则“安装”</p>
<p>其中<code>F</code>选项表示：<br>    fresh：安装时，如果有旧版程序包，则“升级”；如果不存在旧版程序包，则“不执行任何操作”</p>
<p>常用格式：</p>
<figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line">rpm -Uvh PACKAGE_FILE…</div><div class="line">rpm -Fvh PACKAGE_FILE…</div></pre></td></tr></table></figure>
<p>长选项：</p>
<figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line">--oldpackage        降级安装</div><div class="line">--force             强制安装</div></pre></td></tr></table></figure>
<p>对内核升级：<br>内核的升级比较特殊，因为在生产环境中基本不会对内核升级。而Linux提供了一个很方便的东西，那就是允许多内核并存。<br>这样我们无需”真正的升级”，而是安装另一个新的内核即可。</p>
<figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">rpm -ivh kernel-3.10.0-514.el7.x86_64.rpm</div></pre></td></tr></table></figure>
<p>实例：</p>
<p><img src="http://ww4.sinaimg.cn/large/006tNc79ly1feqlmvvbjjj318g07k410.jpg" alt=""></p>
<p>这个实例是在<code>centos7.2</code>上强制完成的，升级内核的操作十分危险，建议没有特殊需求，不要对内核进行升级！！！</p>
<div class="note danger"><h3 id="查询rpm包"><a href="#查询rpm包" class="headerlink" title="查询rpm包"></a>查询rpm包</h3></div>
<p>使用查询命令，我们可以知道某个<code>rpm</code>包中有什么信息，以及可以查看我们已经安装了那些<code>rpm</code>包</p>
<p><code>rpm {-q|--query} [select-options] [query-options]</code></p>
<p>常用选项：</p>
<figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div></pre></td><td class="code"><pre><div class="line"><span class="_">-a</span>                  所有包</div><div class="line"><span class="_">-f</span>                  查看指定的文件由哪个程序包安装生成</div><div class="line">-p PACKAGE_FILE     针对尚未安装的程序包文件做查询操作；配合 <span class="_">-l</span> 选项一起使用</div><div class="line"><span class="_">-l</span>                  查看已安装的包包含哪些文件；</div><div class="line">--changelog         查询rpm包的修改日志</div><div class="line">-c                  查询程序的配置文件</div><div class="line"><span class="_">-d</span>                  查询程序的文档</div><div class="line">-i                  查询程序的信息information（已安装的程序包）</div><div class="line">--provides          列出指定程序包所提供的CAPBILITY</div><div class="line">--whatprovides CAPBILITY    查询指定的CAPBILITY由那个包提供</div><div class="line">--whatrequires CAPBILITY    查询指定的CAPBILITY被哪个包所依赖</div><div class="line">--scripts           程序包自带的脚本</div><div class="line">-R                  查询指定的程序包所依赖的CAPBILITY</div></pre></td></tr></table></figure>
<p><em>注意：</em></p>
<p>当删除了一个程序的/usr/bin/下的执行文件之后，还是可以通过 <code>rpm -qf</code> 查询到，这是因为在安装这个包时，会在<code>rpm</code>数据中保存信息。</p>
<p><strong>实例：</strong></p>
<p><img src="http://ww2.sinaimg.cn/large/006tNc79ly1feqm5y3auij319e0u0tgx.jpg" alt=""></p>
<div class="note warning"><h3 id="校验rpm包"><a href="#校验rpm包" class="headerlink" title="校验rpm包"></a>校验rpm包</h3></div>
<p><code>rpm {-V|--verify} [select-options] [verify-options]</code></p>
<p>校验时是，比对<code>rpm</code>数据库中的信息与当前的信息是否一致<br>如果被修改过，不管是否再修改回去，都是会提示的。</p>
<p>提示信息详解：</p>
<figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div></pre></td><td class="code"><pre><div class="line">S file Size differs                     文件大小被修改</div><div class="line">M Mode differs (includes permissions and file <span class="built_in">type</span>)         权限被修改</div><div class="line">5 digest (formerly MD5 sum) differs     MD5被修改，内容改变（内容被修改，就会提示）</div><div class="line">D Device major/minor number mismatch    主次设备号不匹配</div><div class="line">L <span class="built_in">read</span>Link(2) path mismatch：           readlink路径不匹配</div><div class="line">U User ownership differs                属主修改</div><div class="line">G Group ownership differs               属组修改</div><div class="line">T mTime differs                         时间戳修改（最近修改时间）</div><div class="line">P caPabilities differ                   caPabilitie被修改</div></pre></td></tr></table></figure>
<p>常用选项：</p>
<figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div></pre></td><td class="code"><pre><div class="line">-V          检查已安装的软件名称</div><div class="line">-K          手动检测完整性，以及Key的信息</div><div class="line">--nofiles   不检查</div><div class="line">-Va         检查所有包</div><div class="line"><span class="_">-f</span>          检查某个文件的完整性</div><div class="line">-p          检查某个rpm文件的档名</div></pre></td></tr></table></figure>
<p><strong>包来源合法性验证以及完整性验证</strong>：<br>    完整性验证：SHA256<br>    来源合法性验证：RSA</p>
<p><img src="http://ww4.sinaimg.cn/large/006tNc79ly1feqnex09ckj30jj0dj77r.jpg" alt="RPM包制作数字签名过程"></p>
<p><img src="http://ww4.sinaimg.cn/large/006tNc79ly1feqnexswksj30to0kwq5q.jpg" alt="RPM包数字签名验证过程"></p>
<p><strong>公钥加密</strong>：<br>    对称加密：加密、解密使用同一密钥<br>    非对称加密：密钥是对儿的<br>        public key：公钥，公开给所有人<br>        secret key：私钥，不能公开</p>
<p><strong>导入所需要的公钥</strong>：</p>
<figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line">$ rpm --import /etc/pki/rpm-gpg/RPM-GPG-KEY-CentOS-7</div><div class="line">$ rpm -qa <span class="string">"gpg-pubkey*"</span></div><div class="line">gpg-pubkey<span class="_">-f</span>4a80eb5-53a7ff4b</div></pre></td></tr></table></figure>
<p>导入key后，我们再安装包时就不会提示警告没有key的信息啦！</p>
<p><strong>卸载key</strong></p>
<figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line">$ rpm -qa <span class="string">"gpg-pubkey*"</span></div><div class="line">gpg-pubkey<span class="_">-f</span>4a80eb5-53a7ff4b</div><div class="line">$ rpm <span class="_">-e</span> gpg-pubkey<span class="_">-f</span>4a80eb5-53a7ff4b</div></pre></td></tr></table></figure>
<p><strong>实例：</strong></p>
<p><img src="http://ww1.sinaimg.cn/large/006tNc79ly1feqn8dae1yj318i09kmzn.jpg" alt=""></p>
<p>我们在README文件中添加一个空行，导致文件被修改。</p>
<div class="note default"><h3 id="卸载rpm包"><a href="#卸载rpm包" class="headerlink" title="卸载rpm包"></a>卸载rpm包</h3></div>
<p><code>rpm {-e|--erase} [--allmatches] [--nodeps] [--noscripts] [--test] PACKAGE_NAME ...</code></p>
<p>常用选项：</p>
<figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line">--allmatch      卸载所有匹配指定名称的程序包的各版本</div><div class="line">--nodeps        忽略依赖关系</div><div class="line">--test          卸载测试，dry run模式</div></pre></td></tr></table></figure>
<p><strong>实例：</strong></p>
<p><img src="http://ww3.sinaimg.cn/large/006tNc79ly1feqncs4b5ij318g03cwf5.jpg" alt=""></p>
<div class="note primary"><h3 id="RPM数据库"><a href="#RPM数据库" class="headerlink" title="RPM数据库"></a>RPM数据库</h3></div>
<p><code>rpm</code>数据库的位置一般在：<code>/var/lib/rpm/</code>目录下</p>
<p><code>rpm {--initdb | --rebuilddb}</code></p>
<p>–initdb：初始化数据库<br>    如果事先不存在数据库，则新建之<br>    否则，不执行任何操作</p>
<p>–rebuilddb：重新构建，通过读取当前系统上所有已经安装过的程序包进行创建</p>
<p>–dbpath：指定初始化数据库的位置, –dbpath=/PATH/TO/</p>
<p>恢复 RPM Database 前，一定先将原有数据进行备份，然后再使用恢复命令！<br>通常，恢复方法有下面三种：</p>
<ol>
<li>只移除 <code>/var/lib/rpm/__db*</code> 文件，然后执行 <code>rpm --rebuilddb</code>命令</li>
<li>当上面的方法没能恢复数据库时，转移 <code>/var/lib/rpm</code> 文件夹，然后执行 <code>rpm --rebuilddb</code>命令</li>
<li>当前面两个方法都没奏效时，则表示情况比较严重，需要重新创建 RPM 数据库，再进行重建数据库操作。首先，选择一个目录创建新的数据库，执行 <code>rpm --initdb --dbpath new_db_path</code>然后，执行重构数据库命令：<code>rpm --rebuilddb</code></li>
</ol>
<p>查看数据库文件：</p>
<p><img src="http://ww3.sinaimg.cn/large/006tNc79ly1feqnls5z6sj318g0i2aj6.jpg" alt=""></p>
<hr>
<iframe frameborder="no" border="0" marginwidth="0" marginheight="0" width="330" height="86" src="//music.163.com/outchain/player?type=2&id=433018366&auto=0&height=66"></iframe>

<p><img src="https://ww1.sinaimg.cn/large/006tNbRwly1fdzc80odsuj30gn0ilq5m.jpg" alt=""></p>
<p>本文出自<a href="http://maxiecloud.com">Maxie’s Notes</a>博客，转载请务必保留此出处。</p>
]]></content>
    
    <summary type="html">
    
      &lt;blockquote class=&quot;blockquote-center&quot;&gt;rpm是Red Hat公司在1995年引入的Linux包管理器&lt;br&gt;在后来被其他Linux发行版所广泛引用，所以rpm也被称为RPM is Package Manager.&lt;br&gt;&lt;/blockquote&gt;

&lt;p&gt;rpm命令选项分为三组：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;用于查询和检查包&lt;/li&gt;
&lt;li&gt;用于安装、升级和删除包&lt;/li&gt;
&lt;li&gt;用于执行其他功能&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;还应该注意 &lt;code&gt;rpm&lt;/code&gt; 是操作 &lt;code&gt;RPM&lt;/code&gt; 的主要命令，而 &lt;code&gt;.rpm&lt;/code&gt; 是 &lt;code&gt;RPM&lt;/code&gt; 文件使用的扩展名。所以 “一个rpm” 或 “某某rpm” 一般是指 RPM文件，而 &lt;code&gt;rpm&lt;/code&gt; 通常指命令。&lt;/p&gt;
    
    </summary>
    
      <category term="Linux包管理" scheme="http://maxiecloud.com/categories/Linux%E5%8C%85%E7%AE%A1%E7%90%86/"/>
    
    
      <category term="linux" scheme="http://maxiecloud.com/tags/linux/"/>
    
      <category term="command" scheme="http://maxiecloud.com/tags/command/"/>
    
      <category term="rpm" scheme="http://maxiecloud.com/tags/rpm/"/>
    
      <category term="package" scheme="http://maxiecloud.com/tags/package/"/>
    
  </entry>
  
</feed>
