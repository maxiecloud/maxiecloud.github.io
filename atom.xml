<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>Maxie&#39;s Notes</title>
  <subtitle>No one can escape</subtitle>
  <link href="/atom.xml" rel="self"/>
  
  <link href="http://maxiecloud.com/"/>
  <updated>2017-06-24T12:29:34.000Z</updated>
  <id>http://maxiecloud.com/</id>
  
  <author>
    <name>阿蓝</name>
    
  </author>
  
  <generator uri="http://hexo.io/">Hexo</generator>
  
  <entry>
    <title>Linux各概念图解</title>
    <link href="http://maxiecloud.com/2020/04/09/mind-mapping/"/>
    <id>http://maxiecloud.com/2020/04/09/mind-mapping/</id>
    <published>2020-04-09T09:47:17.000Z</published>
    <updated>2017-06-24T12:29:34.000Z</updated>
    
    <content type="html"><![CDATA[<div class="group-picture"><div class="group-picture-container"><div class="group-picture-row"><div class="group-picture-column" style="width: 100%;"><img src="https://ws2.sinaimg.cn/large/006tKfTcly1fgwkar71t8j30ku0afafv.jpg" alt=""></div></div><div class="group-picture-row"><div class="group-picture-column" style="width: 33.333333333333336%;"><img src="https://ws2.sinaimg.cn/large/006tKfTcly1fgwkay9e5rj30xc0go4qp.jpg" alt=""></div><div class="group-picture-column" style="width: 33.333333333333336%;"><img src="https://ws2.sinaimg.cn/large/006tKfTcly1fgwkamqiubj30xc0go7wh.jpg" alt=""></div><div class="group-picture-column" style="width: 33.333333333333336%;"><img src="https://ws1.sinaimg.cn/large/006tKfTcly1fgwkahupw2j31hc0s7wm7.jpg" alt=""></div></div><div class="group-picture-row"></div></div></div>
]]></content>
    
    <summary type="html">
    
      &lt;div class=&quot;group-picture&quot;&gt;&lt;div class=&quot;group-picture-container&quot;&gt;&lt;div class=&quot;group-picture-row&quot;&gt;&lt;div class=&quot;group-picture-column&quot; style=&quot;widt
    
    </summary>
    
      <category term="图片" scheme="http://maxiecloud.com/categories/%E5%9B%BE%E7%89%87/"/>
    
    
      <category term="linux" scheme="http://maxiecloud.com/tags/linux/"/>
    
      <category term="picture" scheme="http://maxiecloud.com/tags/picture/"/>
    
  </entry>
  
  <entry>
    <title>MySQL备份工具mysqldump以及Xtrabackup详解</title>
    <link href="http://maxiecloud.com/2017/07/14/mysql-backup/"/>
    <id>http://maxiecloud.com/2017/07/14/mysql-backup/</id>
    <published>2017-07-14T01:52:41.000Z</published>
    <updated>2017-07-14T06:37:35.000Z</updated>
    
    <content type="html"><![CDATA[<p><img src="https://ws4.sinaimg.cn/large/006tKfTcly1fhgv8l75tkj308204u745.jpg" alt=""></p>
<blockquote class="blockquote-center">对于公司来说，数据库本身可能并不重要，重要的是数据库中存储的数据。<br>对于备份来说，备份不是我们最终的目的，而是使备份能够实现还原的目的，才是我们最终的追求。<br>所以，一个可恢复的数据库备份是非常重要的。<br></blockquote>

<p><code>为什么备份?</code></p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div></pre></td><td class="code"><pre><div class="line">实现灾难恢复：硬件故障(冗余)、软件故障(BUG)、自然灾害、黑客攻击、误操作、...</div><div class="line">测试恢复备份时，可能出现将数据库测试崩溃掉的情况</div><div class="line"></div><div class="line">这里最可能出现的情况是：误操作</div><div class="line">所以说，在操作数据库时，一定要慎之又慎</div></pre></td></tr></table></figure>
<h3 id="备份时需要注意的事项"><a href="#备份时需要注意的事项" class="headerlink" title=" 备份时需要注意的事项"></a><font szie="4" color="#32CD99"> 备份时需要注意的事项</font></h3><ul>
<li>注意事项</li>
</ul>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div></pre></td><td class="code"><pre><div class="line">能容忍最多丢失多少数据；</div><div class="line">恢复数据需要在多长时间内完成；</div><div class="line">需要恢复哪些数据；</div><div class="line"></div><div class="line">做恢复演练：</div><div class="line">    测试备份的可用性；</div><div class="line">    增强恢复操作效率；</div></pre></td></tr></table></figure>
<p><br></p>
<ul>
<li>备份需要考虑的因素</li>
</ul>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div></pre></td><td class="code"><pre><div class="line">锁定资源多长时间？</div><div class="line">备份过程的时长？</div><div class="line">备份时的服务器负载？</div><div class="line">恢复过程的时长？</div></pre></td></tr></table></figure>
<p><br></p>
<ul>
<li>备份什么?</li>
</ul>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div></pre></td><td class="code"><pre><div class="line">数据</div><div class="line">二进制日志、InnoDB的事务日志；</div><div class="line">代码（存储过程、存储函数、触发器、事件调度器）</div><div class="line">服务器的配置文件 --&gt; 配置系统中的配置文件 --&gt; 存放在 Git 、svn 上</div></pre></td></tr></table></figure>
<p><em>注意：二进制日志、InnoDB事务日志 与数据要分别存放在不同的硬盘中</em></p>
<p><br></p>
<ul>
<li>备份策略</li>
</ul>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div></pre></td><td class="code"><pre><div class="line">全量+差异 + binlogs</div><div class="line">全量+增量 + binlogs </div><div class="line"></div><div class="line">备份手段：物理、逻辑</div></pre></td></tr></table></figure>
<hr>
<a id="more"></a>
<div class="note primary"><h3 id="备份类型"><a href="#备份类型" class="headerlink" title="备份类型"></a>备份类型</h3></div>
<h3 id="备份的数据的范围"><a href="#备份的数据的范围" class="headerlink" title=" 备份的数据的范围"></a><font szie="4" color="#007FFF"> 备份的数据的范围</font></h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line">完全备份和部分备份</div><div class="line">	完全备份：整个数据集；</div><div class="line">	部分备份：数据集的一部分，比如部分表；</div></pre></td></tr></table></figure>
<h3 id="全量备份、增量备份、差异备份"><a href="#全量备份、增量备份、差异备份" class="headerlink" title=" 全量备份、增量备份、差异备份"></a><font szie="4" color="#007FFF"> 全量备份、增量备份、差异备份</font></h3><ul>
<li>全量备份</li>
</ul>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">备份整个数据库的所有数据</div></pre></td></tr></table></figure>
<p><br></p>
<ul>
<li>增量备份</li>
</ul>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">仅备份自上一次完全备份或 增量备份以来变量的那部数据</div></pre></td></tr></table></figure>
<p><br></p>
<ul>
<li>差异备份</li>
</ul>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">仅备份自上一次完全备份以来变量的那部数据；(浪费空间，还原效果比增量快)</div></pre></td></tr></table></figure>
<ul>
<li>通过备份恢复数据库</li>
</ul>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line">完全+增量： 完全+每一次增量 		+ 二进制日志(根据时间点恢复)</div><div class="line">完全+差异： 完全+最后一次差异备份 + 二进制日志(根据时间点恢复)</div></pre></td></tr></table></figure>
<h3 id="物理备份、逻辑备份"><a href="#物理备份、逻辑备份" class="headerlink" title=" 物理备份、逻辑备份"></a><font szie="4" color="#007FFF"> 物理备份、逻辑备份</font></h3><ul>
<li>物理备份</li>
</ul>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">直接复制数据文件进行的备份</div></pre></td></tr></table></figure>
<p><br></p>
<ul>
<li>逻辑备份(mysqldump)</li>
</ul>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line">通过mysql，从数据库导出数据另存在一个或多个文件中</div><div class="line">通过一个大的SELECT 语句，转成一个 INSERT 语句 进行备份</div></pre></td></tr></table></figure>
<h3 id="热备、温备、冷备"><a href="#热备、温备、冷备" class="headerlink" title=" 热备、温备、冷备"></a><font szie="4" color="#007FFF"> 热备、温备、冷备</font></h3><ul>
<li>热备</li>
</ul>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">读写操作均可进行的状态下所做的备份 --&gt; 导致备份的数据时间点可能不一致，恢复后的数据时间点不一致 --&gt;  导致MySQL拒绝恢复</div></pre></td></tr></table></figure>
<p><br></p>
<ul>
<li>温备</li>
</ul>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">可读但不可写状态下进行的备份</div></pre></td></tr></table></figure>
<p><br></p>
<ul>
<li>冷备</li>
</ul>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">读写操作均不可进行的状态下所做的备份</div></pre></td></tr></table></figure>
<hr>
<div class="note success"><h3 id="mysqldump备份工具使用详解"><a href="#mysqldump备份工具使用详解" class="headerlink" title="mysqldump备份工具使用详解"></a>mysqldump备份工具使用详解</h3></div>
<p><code>备份策略</code>：</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">全量备份 + binlogs</div></pre></td></tr></table></figure>
<h4 id="命令详解"><a href="#命令详解" class="headerlink" title="命令详解"></a><font size="4" color="#32CD99">命令详解</font></h4><ul>
<li>语法格式：</li>
</ul>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line">mysqldump [OPTIONS] database [tables]</div><div class="line">OR     mysqldump [OPTIONS] --databases [OPTIONS] DB1 [DB2 DB3...]</div><div class="line">OR     mysqldump [OPTIONS] --all-databases [OPTIONS]</div></pre></td></tr></table></figure>
<p>实例详解：</p>
<figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div></pre></td><td class="code"><pre><div class="line"><span class="comment"># 表级别备份；不会自动创建数据库</span></div><div class="line">$ mysqldump mydb</div><div class="line"></div><div class="line"><span class="comment"># 库级别备份，自动创建数据库 </span></div><div class="line">$ mysqldump --databases mydb</div></pre></td></tr></table></figure>
<p><br></p>
<ul>
<li>选项详解</li>
</ul>
<figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div></pre></td><td class="code"><pre><div class="line">-x, --lock-all-tables       锁定<span class="string">'所有库的所有表'</span>，读锁；</div><div class="line"><span class="_">-l</span>, --lock-tables           锁定<span class="string">'指定库所有表'</span>；</div><div class="line">-R, --routines              备份存储过程和存储函数；</div><div class="line">-E, --events                备份事件调度器</div><div class="line">-F，--flush-logs             锁定表完成后，即进行日志刷新操作，让日志滚动；</div><div class="line">--triggers                  备份触发器</div><div class="line"></div><div class="line">--master-data[=<span class="comment">#] ：记录备份开始时 binlog中</span></div><div class="line"> 1：记录为CHANGE MASTER TO语句，此语句不被注释；</div><div class="line"> 2：记录为CHANGE MASTER TO语句，此语句被注释；</div><div class="line"> </div><div class="line"><span class="string">'InnoDB存储引擎：支持温备和热备；'</span></div><div class="line">	--single-transaction：<span class="string">'创建一个事务，基于此快照执行备份'</span>；</div></pre></td></tr></table></figure>
<p><br></p>
<h4 id="全量备份一次整个数据库"><a href="#全量备份一次整个数据库" class="headerlink" title="全量备份一次整个数据库"></a><font size="4" color="#32CD99">全量备份一次整个数据库</font></h4><ul>
<li>开启二进制日志</li>
</ul>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div></pre></td><td class="code"><pre><div class="line">$ vim /etc/my.cnf.d/server.conf</div><div class="line">[server]</div><div class="line">log_bin=mysql-bin</div><div class="line">$ systemctl restart mariadb.service</div></pre></td></tr></table></figure>
<ul>
<li>开始备份数据库</li>
</ul>
<figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div></pre></td><td class="code"><pre><div class="line"><span class="comment"># 使用mysqldump备份整个mysql数据库</span></div><div class="line">$ mysqldump -E -R --triggers --master-data=2 -F <span class="_">-l</span> --single-transaction --all-databases &gt; /tmp/all-fullback-$(date +%F).sql</div><div class="line"></div><div class="line"><span class="comment"># 登陆至MySQL修改一些数据</span></div><div class="line">$ mysql </div><div class="line">&gt; SHOW MASTER LOGS;</div><div class="line">+------------------+-----------+</div><div class="line">| Log_name         | File_size |</div><div class="line">+------------------+-----------+</div><div class="line">| mysql-bin.000001 |     30352 |</div><div class="line">| mysql-bin.000002 |   1038814 |</div><div class="line">| mysql-bin.000003 |      9235 |</div><div class="line">| mysql-bin.000004 |       696 |</div><div class="line">| mysql-bin.000005 |       245 |</div><div class="line">+------------------+-----------+</div><div class="line">&gt; use hellodb;</div><div class="line">&gt; DELETE FROM students WHERE StuID=1;</div><div class="line">&gt; DELETE FROM students WHERE StuID=5;</div><div class="line">&gt; DELETE FROM students WHERE StuID=10;</div><div class="line">&gt; DELETE FROM students WHERE StuID=15;</div><div class="line">&gt; DELETE FROM students WHERE StuID=20;</div><div class="line"></div><div class="line"><span class="comment"># 拷贝全量备份后，未备份的二进制日志至/tmp目录中</span></div><div class="line">$ cp /var/lib/mysql/mysql-bin.000005 /tmp/</div><div class="line"></div><div class="line"><span class="comment"># 模拟数据库崩溃情况，删除数据库数据目录下的所有文件</span></div><div class="line">$ rm -rf /var/lib/mysql/*</div></pre></td></tr></table></figure>
<p><br></p>
<h4 id="使用备份恢复数据库"><a href="#使用备份恢复数据库" class="headerlink" title="使用备份恢复数据库"></a><font size="4" color="#32CD99">使用备份恢复数据库</font></h4><ul>
<li>重启数据库</li>
</ul>
<figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line">$ systemctl stop mariadb.service</div><div class="line">$ systemctl start mariadb.service</div></pre></td></tr></table></figure>
<ul>
<li>登陆数据库进行恢复</li>
</ul>
<figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div></pre></td><td class="code"><pre><div class="line">$ mysql</div><div class="line"><span class="comment"># 关闭会话级别的二进制日志，因为我们需要执行恢复sql脚本，不希望二进制记录此信息</span></div><div class="line">&gt; SET @@session.sql_log_bin=OFF;</div><div class="line"> </div><div class="line"><span class="comment"># 在MySQL中执行SQL脚本</span></div><div class="line">&gt; \. /tmp/alldb_fullbackup-2017-06-20.sql</div></pre></td></tr></table></figure>
<ul>
<li>使用二进制日志恢复未备份的信息</li>
</ul>
<figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line">$ <span class="built_in">cd</span> /tmp</div><div class="line">$ mysqlbinlog mysql-bin.000005 | mysql</div></pre></td></tr></table></figure>
<ul>
<li>开启二进制日志记录</li>
</ul>
<figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">&gt; SET @@session.sql_log_bin=ON;</div></pre></td></tr></table></figure>
<p><strong>至此，一次删库到恢复就完成了</strong>，不过要注意的是，在恢复完成后，如果业务不是很着急需要上线，这时还要做一次全量备份。如果业务必须立即上线，我们也可以在当天晚上进行备份数据库。</p>
<h4 id="使用备份脚本备份数据库"><a href="#使用备份脚本备份数据库" class="headerlink" title="使用备份脚本备份数据库"></a><font size="4" color="#32CD99">使用备份脚本备份数据库</font></h4><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div><div class="line">37</div><div class="line">38</div><div class="line">39</div><div class="line">40</div><div class="line">41</div><div class="line">42</div><div class="line">43</div><div class="line">44</div><div class="line">45</div><div class="line">46</div><div class="line">47</div><div class="line">48</div><div class="line">49</div><div class="line">50</div><div class="line">51</div><div class="line">52</div><div class="line">53</div><div class="line">54</div><div class="line">55</div><div class="line">56</div><div class="line">57</div><div class="line">58</div><div class="line">59</div><div class="line">60</div><div class="line">61</div><div class="line">62</div><div class="line">63</div><div class="line">64</div></pre></td><td class="code"><pre><div class="line">$ vim mysql-backup.sh</div><div class="line"><span class="meta">#!/bin/bash</span></div><div class="line"><span class="comment"># MYSQLDBUSERNAME是MySQL数据库的用户名，可自定义</span></div><div class="line">MYSQLDBUSERNAME=root</div><div class="line"></div><div class="line"><span class="comment"># MYSQLDBPASSWORD是MySQL数据库的密码，可自定义</span></div><div class="line">MYSQLDBPASSWORD=<span class="string">"root@123"</span></div><div class="line"></div><div class="line"><span class="comment"># MYSQBASEDIR是MySQL数据库的安装目录，--prefix=$MYSQBASEDIR，可自定义</span></div><div class="line">MYSQBASEDIR=/usr</div><div class="line"></div><div class="line"><span class="comment"># MYSQL是mysql命令的绝对路径，可自定义</span></div><div class="line">MYSQL=<span class="variable">$MYSQBASEDIR</span>/bin/mysql</div><div class="line"></div><div class="line"><span class="comment"># MYSQLDUMP是mysqldump命令的绝对路径，可自定义</span></div><div class="line">MYSQLDUMP=<span class="variable">$MYSQBASEDIR</span>/bin/mysqldump</div><div class="line"></div><div class="line"><span class="comment"># BACKDIR是数据库备份的存放地址，可以自定义修改成远程地址</span></div><div class="line">BACKDIR=/var/backup/mysqldb</div><div class="line"></div><div class="line"><span class="comment"># 获取当前时间，格式为：年-月-日，用于生成以这种时间格式的目录名称</span></div><div class="line">DATEFORMATTYPE1=$(date +%Y-%m-%d)</div><div class="line"></div><div class="line"><span class="comment"># 获取当前时间，格式为：年月日时分秒，用于生成以这种时间格式的文件名称</span></div><div class="line">DATEFORMATTYPE2=$(date +%Y%m%d%H%M%S)</div><div class="line"></div><div class="line"><span class="comment"># 数据库数据目录</span></div><div class="line">MYSQDATADIR=/var/lib/mysql</div><div class="line"></div><div class="line"><span class="comment"># 如果mysql命令存在并可执行，则继续，否则将MYSQL设定为mysql，默认路径下的mysql</span></div><div class="line">[ -x <span class="variable">$MYSQL</span> ] || MYSQL=mysql</div><div class="line"></div><div class="line"><span class="comment"># 如果mysqldump命令存在并可执行，则继续，否则将MYSQLDUMP设定为mysqldump，默认路径下的mysqldump</span></div><div class="line">[ -x <span class="variable">$MYSQLDUMP</span> ] || MYSQLDUMP=mysqldump</div><div class="line"></div><div class="line"><span class="comment"># 如果不存在备份目录则创建这个目录</span></div><div class="line">[ <span class="_">-d</span> <span class="variable">$&#123;BACKDIR&#125;</span> ] || mkdir -p <span class="variable">$&#123;BACKDIR&#125;</span></div><div class="line">[ <span class="_">-d</span> <span class="variable">$&#123;BACKDIR&#125;</span>/<span class="variable">$&#123;DATEFORMATTYPE1&#125;</span> ] || mkdir <span class="variable">$&#123;BACKDIR&#125;</span>/<span class="variable">$&#123;DATEFORMATTYPE1&#125;</span></div><div class="line"></div><div class="line"><span class="comment"># 获取MySQL中有哪些数据库，根据mysqldatadir下的目录名字来确认，此处可以自定义，TODO</span></div><div class="line">DBLIST=`ls -p <span class="variable">$MYSQDATADIR</span> | grep / |tr <span class="_">-d</span> /`</div><div class="line"></div><div class="line"><span class="comment"># 从数据库列表中循环取出数据库名称，执行备份操作</span></div><div class="line"><span class="keyword">for</span> DBNAME <span class="keyword">in</span> <span class="variable">$DBLIST</span></div><div class="line">    <span class="comment"># mysqldump skip one table</span></div><div class="line">    <span class="comment"># -- Warning: Skipping the data of table mysql.event. Specify the --events option explicitly.</span></div><div class="line">    <span class="comment"># mysqldump --ignore-table=mysql.event</span></div><div class="line">    <span class="comment"># http://serverfault.com/questions/376904/mysqldump-skip-one-table</span></div><div class="line">    <span class="comment"># --routines，备份存储过程和函数</span></div><div class="line">    <span class="comment"># --events，跳过mysql.event表</span></div><div class="line">    <span class="comment"># --triggers，备份触发器</span></div><div class="line">    <span class="comment"># --single-transaction，针对InnoDB，在单次事务中通过转储所有数据库表创建一个一致性的快照，此选项会导致自动锁表，因此不需要--lock-all-tables</span></div><div class="line">    <span class="comment"># --flush-logs，在dump转储前刷新日志</span></div><div class="line">    <span class="comment"># --ignore-table，忽略某个表，--ignore-table=database.table</span></div><div class="line">    <span class="comment"># --master-data=2 ，如果启用MySQL复制功能，则可以添加这个选项</span></div><div class="line">    <span class="comment"># 将dump出的sql语句用gzip压缩到一个以时间命名的文件</span></div><div class="line">    <span class="keyword">do</span> <span class="variable">$&#123;MYSQLDUMP&#125;</span> --user=<span class="variable">$&#123;MYSQLDBUSERNAME&#125;</span> --password=<span class="variable">$&#123;MYSQLDBPASSWORD&#125;</span> --routines --events --triggers --single-transaction --flush-logs --ignore-table=mysql.event --databases <span class="variable">$&#123;DBNAME&#125;</span> | gzip &gt; <span class="variable">$&#123;BACKDIR&#125;</span>/<span class="variable">$&#123;DATEFORMATTYPE1&#125;</span>/<span class="variable">$&#123;DBNAME&#125;</span>-backup-<span class="variable">$&#123;DATEFORMATTYPE2&#125;</span>.sql.gz</div><div class="line"></div><div class="line">    <span class="comment"># 检查执行结果，如果错误代码为0则输出成功，否则输出失败</span></div><div class="line">    [ $? <span class="_">-eq</span> 0 ] &amp;&amp; <span class="built_in">echo</span> <span class="string">"<span class="variable">$&#123;DBNAME&#125;</span> has been backuped successful"</span> || <span class="built_in">echo</span> <span class="string">"<span class="variable">$&#123;DBNAME&#125;</span> has been backuped failed"</span></div><div class="line"></div><div class="line">    <span class="comment"># 等待5s，可自定义</span></div><div class="line">    /bin/sleep 5</div><div class="line"><span class="keyword">done</span></div></pre></td></tr></table></figure>
<hr>
<div class="note info"><h3 id="xtrabackupex备份工具使用详解"><a href="#xtrabackupex备份工具使用详解" class="headerlink" title="xtrabackupex备份工具使用详解"></a>xtrabackupex备份工具使用详解</h3></div>
<h4 id="安装xtrabackupex"><a href="#安装xtrabackupex" class="headerlink" title="安装xtrabackupex"></a><font size="4" color="#007FFF">安装xtrabackupex</font></h4><p>官方下载地址：<a href="https://www.percona.com/downloads/XtraBackup/LATEST/" target="_blank" rel="external">XtraBackup</a></p>
<p>安装<code>XtraBackup</code></p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line">$ ntpdate 172.16.0.1</div><div class="line">$ wget ftp://172.16.0.1/pub/Sources/7.x86_64/percona/percona-xtrabackup-24-2.4.7-2.el7.x86_64.rpm</div><div class="line">$ yum install -y ./percona-xtrabackup-24-2.4.7-2.el7.x86_64.rpm</div></pre></td></tr></table></figure>
<h4 id="进行一次全库备份"><a href="#进行一次全库备份" class="headerlink" title="进行一次全库备份"></a><font size="4" color="#007FFF">进行一次全库备份</font></h4><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div></pre></td><td class="code"><pre><div class="line">$ vim /etc/my.cnf.d/server.conf</div><div class="line">[server]</div><div class="line">skip_name_resolve=ON</div><div class="line">innodb_file_per_table=ON</div><div class="line"><span class="built_in">log</span>-bin=mysql_bin</div><div class="line"></div><div class="line">$ systemctl start mariadb.service</div><div class="line"></div><div class="line"><span class="comment"># 全库备份时，无需指定数据库即可备份。指定库备份使用 --databases DATABASE_NAME</span></div><div class="line">$ innobackupex --user root /data/backup/</div><div class="line">$ ll /data/backup/2017-07-13_20-05-42/</div></pre></td></tr></table></figure>
<h4 id="通过备份恢复数据库"><a href="#通过备份恢复数据库" class="headerlink" title="通过备份恢复数据库"></a><font size="4" color="#007FFF">通过备份恢复数据库</font></h4><ul>
<li>恢复之前的准备</li>
</ul>
<figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line"><span class="comment"># 默认数据库损坏，被删库</span></div><div class="line">$ cp /var/lib/mysql/mysql_bin.00000* /data/backup</div><div class="line">$ rm -rf /var/lib/mysql/*</div></pre></td></tr></table></figure>
<ul>
<li>执行Preparing操作</li>
</ul>
<figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">$ innobackupex --apply-log /data/backup/2017-07-13_20-05-42/</div></pre></td></tr></table></figure>
<ul>
<li>恢复数据库</li>
</ul>
<figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line">$ innobackupex --copy-back 2017-07-13_20-05-42/</div><div class="line">$ <span class="built_in">cd</span> /var/lib/mysql</div><div class="line">$ chown -R mysql.mysql ./*</div></pre></td></tr></table></figure>
<p><img src="https://ws3.sinaimg.cn/large/006tNc79ly1fhje4qhtw8j31kw0u4kjn.jpg" alt=""></p>
<p><br></p>
<ul>
<li>启动数据库</li>
</ul>
<figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line">$ systemctl start mariadb.service</div><div class="line">$ mysql</div></pre></td></tr></table></figure>
<ul>
<li>备份后生成的一些文件</li>
</ul>
<p><img src="https://ws1.sinaimg.cn/large/006tNc79ly1fhje6hs102j31kw0f64nv.jpg" alt=""></p>
<p><img src="https://ws2.sinaimg.cn/large/006tNc79ly1fhje6h4a43j31kw0f6kdx.jpg" alt=""></p>
<p><img src="https://ws1.sinaimg.cn/large/006tNc79ly1fhje5oqw16j31dk08sdpy.jpg" alt=""></p>
<p><img src="https://ws4.sinaimg.cn/large/006tNc79ly1fhje5ohh5ij31kw0f64ou.jpg" alt=""></p>
<h4 id="增量备份-数据库-全库"><a href="#增量备份-数据库-全库" class="headerlink" title="增量备份 数据库(全库)"></a><font size="4" color="#007FFF">增量备份 数据库(全库)</font></h4><p>增量备份：仅备份自上一次<code>完全备份</code>或<code>增量备份</code>以来变量的那些数据</p>
<ul>
<li>先做一次全量备份</li>
</ul>
<figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">$ innobackupex --user root /data/backup</div></pre></td></tr></table></figure>
<ul>
<li>连接到数据库中，删除/增加一些数据，为一会做增量备份打下基础</li>
</ul>
<figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div></pre></td><td class="code"><pre><div class="line">$ mysql</div><div class="line">&gt; use hellodb;</div><div class="line">&gt; DELETE FROM students WHERE StuID=21;</div><div class="line">&gt; INSERT INTO students (Name,Age,Gender,ClassID,TeacherID) VALUES(<span class="string">'Zhu Ba Jie'</span>,120,<span class="string">'M'</span>,2,3);</div><div class="line">&gt; <span class="built_in">exit</span>;</div></pre></td></tr></table></figure>
<ul>
<li>第一次增量备份</li>
</ul>
<figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">$ innobackupex --incremental -u root /data/backup --incremental-basedir=/data/backup/2017-07-13_20-38-20/</div></pre></td></tr></table></figure>
<p><img src="https://ws1.sinaimg.cn/large/006tNc79ly1fhje42cakwj31kw0u84qr.jpg" alt=""></p>
<p><img src="https://ws3.sinaimg.cn/large/006tNc79ly1fhje7gtxwpj31kw0f6b29.jpg" alt=""></p>
<p><br></p>
<ul>
<li>再次连接到数据库，删除修改一些数据，再做<code>第二次增量备份</code></li>
</ul>
<figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div></pre></td><td class="code"><pre><div class="line">$ mysql </div><div class="line">&gt; use hellodb;</div><div class="line">&gt; DELETE FROM students WHERE StuID=1;</div><div class="line">&gt; EXIT;</div></pre></td></tr></table></figure>
<ul>
<li><code>第二次</code>增量备份</li>
</ul>
<figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div></pre></td><td class="code"><pre><div class="line"><span class="comment"># 这里--incremental-basedir 为上一次增量备份的目录，而非全量备份的目录</span></div><div class="line">$ innobackupex -u root --incremental /data/backup --incremental-basedir=/data/backup/2017-07-13_20-47-49</div><div class="line"><span class="comment"># 第二次增量的checkpoints</span></div><div class="line">$ cat 2017-07-13_20-56-20/xtrabackup_checkpoints</div><div class="line">backup_type = incremental</div><div class="line">from_lsn = 1638999</div><div class="line">to_lsn = 1640148</div><div class="line">last_lsn = 1640148</div><div class="line">compact = 0</div><div class="line">recover_binlog_info = 0</div><div class="line"></div><div class="line"><span class="comment"># 第一次增量的checkpoints</span></div><div class="line">$ cat 2017-07-13_20-47-49/xtrabackup_checkpoints</div><div class="line">backup_type = incremental</div><div class="line">from_lsn = 1636913</div><div class="line">to_lsn = 1638999</div><div class="line">last_lsn = 1638999</div><div class="line">compact = 0</div><div class="line">recover_binlog_info = 0</div></pre></td></tr></table></figure>
<p><br></p>
<ul>
<li>通过两次增量备份 + 全量备份 进行恢复数据库的操作</li>
</ul>
<figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div><div class="line">37</div><div class="line">38</div><div class="line">39</div><div class="line">40</div></pre></td><td class="code"><pre><div class="line"><span class="comment"># 删库</span></div><div class="line">$ cp /var/lib/mysql/mysql_bin.* /data/backup/binlogs</div><div class="line">$ rm -rf /var/lib/mysql/*</div><div class="line"></div><div class="line"></div><div class="line">1.合并增量备份(只提交不回滚)</div><div class="line"><span class="comment"># 只提交不回滚 全量备份</span></div><div class="line">$ innobackupex --apply-log --redo-only 2017-07-13_20-38-20/</div><div class="line"><span class="comment"># 只提交不回滚 第一次增量+全量</span></div><div class="line">$ innobackupex --apply-log --redo-only 2017-07-13_20-38-20 --incremental-dir=2017-07-13_20-47-49</div><div class="line"><span class="comment"># 只提交不回滚 第二增量+全量(第一次增量+全量)</span></div><div class="line">$ innobackupex --apply-log --redo-only 2017-07-13_20-38-20 --incremental-dir=2017-07-13_20-56-20</div><div class="line"></div><div class="line"></div><div class="line">2.开始提交并回滚</div><div class="line">$ innobackupex --apply-log 2017-07-13_20-38-20/</div><div class="line"></div><div class="line"></div><div class="line">3.拿着提交并回滚后的全量，进行恢复</div><div class="line">$ innobackupex --copy-back 2017-07-13_20-38-20/</div><div class="line"></div><div class="line"></div><div class="line">4.查看恢复后的数据目录</div><div class="line">$ ll /var/lib/mysql </div><div class="line">total 40988</div><div class="line">drwxr-x--- 2 root root     4096 Jul 13 21:17 2017-07-13_20-27-08</div><div class="line">drwxr-x--- 2 root root     4096 Jul 13 21:17 hellodb</div><div class="line">-rw-r----- 1 root root 18874368 Jul 13 21:17 ibdata1</div><div class="line">-rw-r----- 1 root root  5242880 Jul 13 21:17 ib_logfile0</div><div class="line">-rw-r----- 1 root root  5242880 Jul 13 21:17 ib_logfile1</div><div class="line">-rw-r----- 1 root root 12582912 Jul 13 21:17 ibtmp1</div><div class="line">drwxr-x--- 2 root root     4096 Jul 13 21:17 mysql</div><div class="line">drwxr-x--- 2 root root     4096 Jul 13 21:17 performance_schema</div><div class="line">drwxr-x--- 2 root root     4096 Jul 13 21:17 <span class="built_in">test</span></div><div class="line">-rw-r----- 1 root root       23 Jul 13 21:17 xtrabackup_binlog_pos_innodb</div><div class="line">-rw-r----- 1 root root      532 Jul 13 21:17 xtrabackup_info</div><div class="line"></div><div class="line"></div><div class="line">5.修改目录权限</div><div class="line">$ chown -R mysql.mysql /var/lib/mysql/*</div></pre></td></tr></table></figure>
<hr>
<iframe frameborder="no" border="0" marginwidth="0" marginheight="0" width="330" height="86" src="//music.163.com/outchain/player?type=2&id=1285604&auto=1&height=66"></iframe>

<p>本文出自<a href="http://maxiecloud.com">Maxie’s Notes</a>博客，转载请务必保留此出处。</p>
<p><img src="https://ww1.sinaimg.cn/large/006tNbRwly1fdzc80odsuj30gn0ilq5m.jpg" alt=""></p>
]]></content>
    
    <summary type="html">
    
      &lt;p&gt;&lt;img src=&quot;https://ws4.sinaimg.cn/large/006tKfTcly1fhgv8l75tkj308204u745.jpg&quot; alt=&quot;&quot;&gt;&lt;/p&gt;
&lt;blockquote class=&quot;blockquote-center&quot;&gt;对于公司来说，数据库本身可能并不重要，重要的是数据库中存储的数据。&lt;br&gt;对于备份来说，备份不是我们最终的目的，而是使备份能够实现还原的目的，才是我们最终的追求。&lt;br&gt;所以，一个可恢复的数据库备份是非常重要的。&lt;br&gt;&lt;/blockquote&gt;

&lt;p&gt;&lt;code&gt;为什么备份?&lt;/code&gt;&lt;/p&gt;
&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;1&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;2&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;3&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;4&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;5&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;实现灾难恢复：硬件故障(冗余)、软件故障(BUG)、自然灾害、黑客攻击、误操作、...&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;测试恢复备份时，可能出现将数据库测试崩溃掉的情况&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;这里最可能出现的情况是：误操作&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;所以说，在操作数据库时，一定要慎之又慎&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;h3 id=&quot;备份时需要注意的事项&quot;&gt;&lt;a href=&quot;#备份时需要注意的事项&quot; class=&quot;headerlink&quot; title=&quot; 备份时需要注意的事项&quot;&gt;&lt;/a&gt;&lt;font szie=4 color=&quot;#32CD99&quot;&gt; 备份时需要注意的事项&lt;/font&gt;&lt;/h3&gt;&lt;ul&gt;
&lt;li&gt;注意事项&lt;/li&gt;
&lt;/ul&gt;
&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;1&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;2&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;3&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;4&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;5&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;6&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;7&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;能容忍最多丢失多少数据；&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;恢复数据需要在多长时间内完成；&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;需要恢复哪些数据；&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;做恢复演练：&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;    测试备份的可用性；&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;    增强恢复操作效率；&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;&lt;br&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;备份需要考虑的因素&lt;/li&gt;
&lt;/ul&gt;
&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;1&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;2&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;3&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;4&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;锁定资源多长时间？&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;备份过程的时长？&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;备份时的服务器负载？&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;恢复过程的时长？&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;&lt;br&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;备份什么?&lt;/li&gt;
&lt;/ul&gt;
&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;1&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;2&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;3&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;4&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;数据&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;二进制日志、InnoDB的事务日志；&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;代码（存储过程、存储函数、触发器、事件调度器）&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;服务器的配置文件 --&amp;gt; 配置系统中的配置文件 --&amp;gt; 存放在 Git 、svn 上&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;&lt;em&gt;注意：二进制日志、InnoDB事务日志 与数据要分别存放在不同的硬盘中&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;&lt;br&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;备份策略&lt;/li&gt;
&lt;/ul&gt;
&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;1&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;2&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;3&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;4&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;全量+差异 + binlogs&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;全量+增量 + binlogs &lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;备份手段：物理、逻辑&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;hr&gt;
    
    </summary>
    
      <category term="linux进阶" scheme="http://maxiecloud.com/categories/linux%E8%BF%9B%E9%98%B6/"/>
    
      <category term="MySQL" scheme="http://maxiecloud.com/categories/linux%E8%BF%9B%E9%98%B6/MySQL/"/>
    
    
      <category term="linux" scheme="http://maxiecloud.com/tags/linux/"/>
    
      <category term="mysql" scheme="http://maxiecloud.com/tags/mysql/"/>
    
      <category term="backup" scheme="http://maxiecloud.com/tags/backup/"/>
    
      <category term="mysqldump" scheme="http://maxiecloud.com/tags/mysqldump/"/>
    
      <category term="xtrabackup" scheme="http://maxiecloud.com/tags/xtrabackup/"/>
    
  </entry>
  
  <entry>
    <title>HAProxy+Varnish动静分离WordPress配置详解 version2.0</title>
    <link href="http://maxiecloud.com/2017/07/12/mid-term-test/"/>
    <id>http://maxiecloud.com/2017/07/12/mid-term-test/</id>
    <published>2017-07-12T13:37:50.000Z</published>
    <updated>2017-07-13T13:44:04.000Z</updated>
    
    <content type="html"><![CDATA[<blockquote class="blockquote-center">本次的实验拓扑图如下，这次主要是在上一篇的基础上精简一些，找出一些常见的错误，少走一些弯路<br>如果大佬们有更好的配置，请在留言区留言，或者加本人微信: mcy958623<br>请大佬们多多鞭策！！！<br></blockquote>

<p><img src="https://ws1.sinaimg.cn/large/006tKfTcly1fhhftqrdc8j30uo1kwagt.jpg" alt=""></p>
<h3 id="此次的实验目标"><a href="#此次的实验目标" class="headerlink" title="此次的实验目标"></a><font szie="4" color="##3299CC">此次的实验目标</font></h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div></pre></td><td class="code"><pre><div class="line">(1) 动静分离部署wordpress，动静都要能实现负载均衡，要注意会话的问题</div><div class="line">(2) 在haproxy和后端主机之间添加varnish进行缓存</div><div class="line">    只缓存静态，对于动态直接调度至后端主机</div><div class="line">(3) haproxy的设定要求：</div><div class="line">	(a) stats page，要求仅能通过本地访问使用管理接口；</div><div class="line">	(b) 动静分离</div><div class="line">	(c) 分别考虑不同的服务器组的调度算法</div><div class="line">(4) haproxy高可用(Keepalived)</div></pre></td></tr></table></figure>
<a id="more"></a>
<hr>
<div class="note primary"><h3 id="实验之前所需做的准备"><a href="#实验之前所需做的准备" class="headerlink" title="实验之前所需做的准备"></a>实验之前所需做的准备</h3></div>
<h4 id="IP地址划分"><a href="#IP地址划分" class="headerlink" title="IP地址划分"></a><font size="4" color="#38B0DE">IP地址划分</font></h4><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div></pre></td><td class="code"><pre><div class="line"><span class="string">'调度器：'</span></div><div class="line">	Master：172.16.1.10/16		内网：192.168.1.10/24</div><div class="line">	Backup：172.16.1.20/16		内网：192.168.1.20/24</div><div class="line">	VIP：172.16.1.200/16 www.maxie.com</div><div class="line"></div><div class="line"><span class="string">'varnish：'</span></div><div class="line">	Master：192.168.1.30/24</div><div class="line">	Backup：192.168.1.40/24</div><div class="line"></div><div class="line"><span class="string">'静态WEB：'</span></div><div class="line">	A：192.168.1.50/24</div><div class="line">	B：192.168.1.60/24</div><div class="line"></div><div class="line"><span class="string">'动态AP站点：'</span></div><div class="line">	A：192.168.1.70/24</div><div class="line">	B：192.168.1.80/24</div><div class="line"></div><div class="line"><span class="string">'MySQL：'</span></div><div class="line">	192.168.1.90/24</div><div class="line"></div><div class="line"><span class="string">'NFS：'</span></div><div class="line">	192.168.1.100/24</div></pre></td></tr></table></figure>
<h4 id="初始化脚本编写"><a href="#初始化脚本编写" class="headerlink" title="初始化脚本编写"></a><font size="4" color="#38B0DE">初始化脚本编写</font></h4><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div><div class="line">37</div><div class="line">38</div><div class="line">39</div><div class="line">40</div><div class="line">41</div><div class="line">42</div><div class="line">43</div><div class="line">44</div><div class="line">45</div><div class="line">46</div><div class="line">47</div><div class="line">48</div><div class="line">49</div><div class="line">50</div><div class="line">51</div><div class="line">52</div><div class="line">53</div><div class="line">54</div><div class="line">55</div><div class="line">56</div><div class="line">57</div><div class="line">58</div><div class="line">59</div><div class="line">60</div><div class="line">61</div><div class="line">62</div><div class="line">63</div><div class="line">64</div><div class="line">65</div><div class="line">66</div><div class="line">67</div><div class="line">68</div><div class="line">69</div><div class="line">70</div><div class="line">71</div><div class="line">72</div><div class="line">73</div><div class="line">74</div><div class="line">75</div><div class="line">76</div><div class="line">77</div><div class="line">78</div><div class="line">79</div><div class="line">80</div><div class="line">81</div><div class="line">82</div><div class="line">83</div><div class="line">84</div><div class="line">85</div></pre></td><td class="code"><pre><div class="line"><span class="meta">#!/bin/bash</span></div><div class="line"><span class="comment">#</span></div><div class="line"></div><div class="line"><span class="comment">#hostname</span></div><div class="line">hname=<span class="variable">$1</span></div><div class="line">hostnamectl <span class="built_in">set</span>-hostname <span class="variable">$&#123;hname&#125;</span></div><div class="line"></div><div class="line"><span class="comment">#yum software</span></div><div class="line"></div><div class="line">ver=<span class="variable">$2</span></div><div class="line"></div><div class="line"><span class="keyword">if</span> [ <span class="string">"<span class="variable">$ver</span>"</span> == haproxy ];<span class="keyword">then</span></div><div class="line">    iptables -F</div><div class="line">    setenforce 0</div><div class="line">    yum install -y -q ntp</div><div class="line">    ntpdate 172.16.0.1</div><div class="line">    yum install -y -q nginx keepalived haproxy</div><div class="line">    [ $? <span class="_">-eq</span> 0 ]  &amp;&amp; <span class="built_in">echo</span> <span class="string">"yum success"</span> || <span class="built_in">echo</span> <span class="string">"failed"</span></div><div class="line"></div><div class="line"><span class="keyword">elif</span> [ <span class="string">"<span class="variable">$ver</span>"</span> == http ];<span class="keyword">then</span></div><div class="line">    yum install -y httpd</div><div class="line">    yum install -y -q nfs-utils</div><div class="line">    iptables -F</div><div class="line">    setenforce 0</div><div class="line">    scp root@192.168.1.10:/etc/hosts /etc/</div><div class="line">    <span class="built_in">echo</span> <span class="string">"<span class="variable">$hname</span> Static Server"</span> &gt; /var/www/html/index.html</div><div class="line">    mkdir -pv /var/www/html/&#123;wordpress,discuzx&#125;</div><div class="line">    mount -t nfs 192.168.1.100:/data/my_wordpress /var/www/html/wordpress</div><div class="line">    mount -t nfs 192.168.1.100:/data/my_discuzx /var/www/html/discuzx</div><div class="line">    systemctl start httpd</div><div class="line"></div><div class="line"><span class="keyword">elif</span> [ <span class="string">"<span class="variable">$ver</span>"</span> == ap ];<span class="keyword">then</span></div><div class="line">    yum install -y -q nfs-utils</div><div class="line">    yum install -y -q httpd php php-mysql php-mbstring php-mcrypt</div><div class="line">    iptables -F</div><div class="line">    setenforce 0</div><div class="line">    scp root@192.168.1.10:/etc/hosts /etc/</div><div class="line">    mkdir -pv /var/www/html/&#123;wordpress,discuzx&#125;</div><div class="line">    mount -t nfs 192.168.1.100:/data/my_wordpress /var/www/html/wordpress</div><div class="line">    mount -t nfs 192.168.1.100:/data/my_discuzx /var/www/html/discuzx</div><div class="line">    cat &gt; /var/www/html/index.php&lt;&lt;EOF</div><div class="line"><span class="variable">$&#123;hname&#125;</span></div><div class="line">&lt;?php</div><div class="line">  phpinfo();</div><div class="line">?&gt;</div><div class="line">EOF</div><div class="line">    systemctl start httpd</div><div class="line"></div><div class="line"></div><div class="line"><span class="keyword">elif</span> [ <span class="string">"<span class="variable">$ver</span>"</span> == nfs ];<span class="keyword">then</span></div><div class="line">    iptables -F</div><div class="line">    setenforce 0</div><div class="line">    yum install -y -q nfs-utils rpcbind</div><div class="line">    scp root@192.168.1.10:/etc/hosts /etc/</div><div class="line">    cat &gt; /etc/exports&lt;&lt;EOF</div><div class="line">/data/my_wordpress      192.168.1.50(rw,no_root_squash) 192.168.1.60(rw,no_root_squash) 192.168.1.70(rw,no_root_squash) 192.168.1.80(rw,no_root_squash)</div><div class="line">/data/my_discuzx        192.168.1.50(rw,no_root_squash) 192.168.1.60(rw,no_root_squash) 192.168.1.70(rw,no_root_squash) 192.168.1.80(rw,no_root_squash)</div><div class="line">EOF</div><div class="line">    mkdir -pv /data/my_wordpress</div><div class="line">    mkdir -pv /data/my_discuzx</div><div class="line">    scp maxie@192.168.1.1:/Users/machiyuan/Downloads/LinuxPackages/wordpress-4.7.4-zh_CN.tar.gz /data/</div><div class="line">    scp maxie@192.168.1.1:/Users/machiyuan/Downloads/LinuxPackages/Discuz_X3.3_SC_UTF8.zip /data/</div><div class="line">    tar -xf /data/wordpress-3.7.4-zh_CN.tar.gz -C /data</div><div class="line">    mv /data/wordpress/* /data/my_wordpress</div><div class="line">    unzip /data/Discuz_X3.3_SC_UTF8.zip <span class="_">-d</span> /data/</div><div class="line">    mv /data/upload/* /data/my_discuzx</div><div class="line">    useradd -u 48 apache</div><div class="line">    chown -R apache.apache /data</div><div class="line">    systemctl restart nfs</div><div class="line">    [ $? <span class="_">-eq</span> 0 ] &amp;&amp; <span class="built_in">echo</span> <span class="string">"nfs deploy success"</span> || <span class="built_in">echo</span> <span class="string">"failed"</span></div><div class="line"></div><div class="line"></div><div class="line"><span class="keyword">elif</span> [ <span class="string">"<span class="variable">$ver</span>"</span> == mysql ];<span class="keyword">then</span></div><div class="line">    iptables -F</div><div class="line">    setenforce 0</div><div class="line">    scp root@192.168.1.10:/etc/hosts /etc/</div><div class="line">    scp root@192.168.1.10:/root/server.conf /etc/my.cnf.d/</div><div class="line">    scp root@192.168.1.10:/root/init.sql /root/</div><div class="line">    systemctl start mariadb.service</div><div class="line">    mysql &lt; /root/init.sql</div><div class="line"></div><div class="line"><span class="keyword">else</span></div><div class="line">    <span class="built_in">echo</span> <span class="string">"Usage: arg1 is hostname u want set var"</span></div><div class="line">    <span class="built_in">echo</span> <span class="string">"Usage: arg2 is (nginx|varnish|http|ap|nfs|mysql)"</span></div><div class="line"><span class="keyword">fi</span></div></pre></td></tr></table></figure>
<h4 id="检测网络是否通畅"><a href="#检测网络是否通畅" class="headerlink" title="检测网络是否通畅"></a><font size="4" color="#38B0DE">检测网络是否通畅</font></h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line">$ ping 172.16.0.1</div><div class="line">$ ping 192.168.1.1</div></pre></td></tr></table></figure>
<hr>
<div class="note success"><h3 id="配置后端的动静节点以及-NFS、MySQL节点"><a href="#配置后端的动静节点以及-NFS、MySQL节点" class="headerlink" title="配置后端的动静节点以及 NFS、MySQL节点"></a>配置后端的动静节点以及 NFS、MySQL节点</h3></div>
<h4 id="配置NFS以及MySQL"><a href="#配置NFS以及MySQL" class="headerlink" title="配置NFS以及MySQL"></a><font size="4" color="#32CD99">配置NFS以及MySQL</font></h4><ul>
<li>配置MySQL</li>
</ul>
<figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div></pre></td><td class="code"><pre><div class="line">$ yum install -y mariadb-server</div><div class="line"></div><div class="line">$ vim /etc/my.cnf.d/server.conf</div><div class="line">[server]</div><div class="line">skip_name_resolve=ON</div><div class="line">innodb_file_per_table=ON</div><div class="line"><span class="built_in">log</span>-bin=mysql_bin</div><div class="line"></div><div class="line">$ systemctl start mariadb.service </div><div class="line">$ mysql </div><div class="line">&gt; CREATE DATABASE wordpress_db;</div><div class="line"></div><div class="line">&gt; GRANT ALL PRIVILEGES ON wordpress_db.* TO <span class="string">'wordpress'</span>@<span class="string">'192.168.1.50'</span> IDENTIFIED BY <span class="string">'root@123'</span>;</div><div class="line">&gt; GRANT ALL PRIVILEGES ON wordpress_db.* TO <span class="string">'wordpress'</span>@<span class="string">'192.168.1.60'</span> IDENTIFIED BY <span class="string">'root@123'</span>;</div><div class="line">&gt; GRANT ALL PRIVILEGES ON wordpress_db.* TO <span class="string">'wordpress'</span>@<span class="string">'192.168.1.70'</span> IDENTIFIED BY <span class="string">'root@123'</span>;</div><div class="line">&gt; GRANT ALL PRIVILEGES ON wordpress_db.* TO <span class="string">'wordpress'</span>@<span class="string">'192.168.1.80'</span> IDENTIFIED BY <span class="string">'root@123'</span>;</div><div class="line">&gt; GRANT ALL PRIVILEGES ON wordpress_db.* TO <span class="string">'wordpress'</span>@<span class="string">'192.168.1.100'</span> IDENTIFIED BY <span class="string">'root@123'</span>;</div><div class="line">&gt; FLUSH PRIVILEGES;</div><div class="line">&gt; <span class="built_in">exit</span>;</div></pre></td></tr></table></figure>
<ul>
<li>配置NFS</li>
</ul>
<figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div></pre></td><td class="code"><pre><div class="line"><span class="comment"># 执行初始化脚本</span></div><div class="line">$ bash -x init.sh nfs-server nfs</div><div class="line"></div><div class="line"><span class="comment"># 查看NFS是否运行并监听在2049端口上</span></div><div class="line">$ ss -tnl | grep 2049</div></pre></td></tr></table></figure>
<h4 id="配置动静节点"><a href="#配置动静节点" class="headerlink" title="配置动静节点"></a><font size="4" color="#32CD99">配置动静节点</font></h4><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div></pre></td><td class="code"><pre><div class="line"><span class="comment"># 只需检测httpd服务是否正常运行、可访问即可</span></div><div class="line">$ ss -tnl </div><div class="line"></div><div class="line">$ curl http://192.168.1.50/index.html</div><div class="line">$ curl http://192.168.1.60/index.html</div><div class="line"></div><div class="line">$ curl http://192.168.1.70/index.php</div><div class="line">$ curl http://192.168.1.80/index.php</div></pre></td></tr></table></figure>
<hr>
<div class="note info"><h3 id="配置调度器-HAProxy-KeepAlived"><a href="#配置调度器-HAProxy-KeepAlived" class="headerlink" title="配置调度器 HAProxy + KeepAlived"></a>配置调度器 HAProxy + KeepAlived</h3></div>
<h4 id="配置HAProxy"><a href="#配置HAProxy" class="headerlink" title="配置HAProxy"></a><font size="4" color="#007FFF">配置HAProxy</font></h4><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div><div class="line">37</div><div class="line">38</div><div class="line">39</div><div class="line">40</div><div class="line">41</div><div class="line">42</div><div class="line">43</div><div class="line">44</div><div class="line">45</div><div class="line">46</div><div class="line">47</div><div class="line">48</div><div class="line">49</div><div class="line">50</div><div class="line">51</div><div class="line">52</div><div class="line">53</div><div class="line">54</div><div class="line">55</div><div class="line">56</div><div class="line">57</div><div class="line">58</div><div class="line">59</div><div class="line">60</div><div class="line">61</div><div class="line">62</div><div class="line">63</div><div class="line">64</div><div class="line">65</div><div class="line">66</div><div class="line">67</div><div class="line">68</div><div class="line">69</div><div class="line">70</div><div class="line">71</div><div class="line">72</div><div class="line">73</div></pre></td><td class="code"><pre><div class="line"><span class="comment"># 执行初始化脚本</span></div><div class="line">$ bash -x init.sh master haproxy</div><div class="line"></div><div class="line">$ <span class="built_in">cd</span> /etc/haproxy</div><div class="line">$ vim haproxy.cfg</div><div class="line"><span class="comment">#---------------------------------------------------------------------</span></div><div class="line"><span class="comment"># main frontend which proxys to the backends</span></div><div class="line"><span class="comment">#---------------------------------------------------------------------</span></div><div class="line">frontend  main</div><div class="line">	<span class="comment"># 监听在80端口</span></div><div class="line">    <span class="built_in">bind</span>	*:80</div><div class="line">    <span class="comment"># 增加自定义头部</span></div><div class="line">    rspadd          X-Via:\ HAProxy-1</div><div class="line">    <span class="comment"># 删除头部</span></div><div class="line">    rspidel         Server.*</div><div class="line">    <span class="comment"># ACL规则</span></div><div class="line">    acl static      path_end -i .html .css .js</div><div class="line">    acl static      path_end -i .jpg .jpeg .gif .png</div><div class="line">    acl static      path_beg -i /images /static</div><div class="line">    <span class="comment"># 如果满足定义的static ACL规则，则调度至此后端</span></div><div class="line">    use_backend     websrvs <span class="keyword">if</span> static</div><div class="line">    <span class="comment"># 默认后端</span></div><div class="line">    default_backend appsrvs</div><div class="line"></div><div class="line"><span class="comment">#---------------------------------------------------------------------</span></div><div class="line"><span class="comment"># Admin Stats</span></div><div class="line"><span class="comment">#---------------------------------------------------------------------</span></div><div class="line"><span class="comment"># 管理页面配置</span></div><div class="line">listen status</div><div class="line">	<span class="comment"># 管理页面监听端口</span></div><div class="line">    <span class="built_in">bind</span> *:9909</div><div class="line">    <span class="comment"># ACL规则</span></div><div class="line">    acl auth_admin  src 172.16.250.15 172.16.1.11</div><div class="line">    <span class="comment"># 开启状态页</span></div><div class="line">    stats           <span class="built_in">enable</span></div><div class="line">    <span class="comment"># 状态页URI</span></div><div class="line">    stats uri       /myha?stats</div><div class="line">    <span class="comment"># 状态页提示信息</span></div><div class="line">    stats realm     HAProxy\ Admin\ Area</div><div class="line">    <span class="comment"># 认证用户：密码</span></div><div class="line">    stats auth      root:root@123</div><div class="line">    <span class="comment"># 如果满足 auth_admin条件则允许访问状态页</span></div><div class="line">    stats admin     <span class="keyword">if</span> auth_admin</div><div class="line"></div><div class="line"><span class="comment">#---------------------------------------------------------------------</span></div><div class="line"><span class="comment"># WEB static backend</span></div><div class="line"><span class="comment">#---------------------------------------------------------------------</span></div><div class="line"><span class="comment"># 后端静态(varnish) Websrvs</span></div><div class="line">backend websrvs</div><div class="line">	<span class="comment"># 添加头部，日志中可以使用</span></div><div class="line">    option      forwardfor header X-Client</div><div class="line">    <span class="comment"># 负载均衡调度算法为 URI</span></div><div class="line">    balance     uri</div><div class="line">    <span class="comment"># 后端服务器，健康检查、权重、自定义cookie</span></div><div class="line">    server      web1    192.168.1.30:80 check weight 1 cookie web1</div><div class="line">    server      web2    192.168.1.40:80 check weight 1 cookie web2</div><div class="line">    <span class="comment"># 一致性HASH</span></div><div class="line">    <span class="built_in">hash</span>-type   consistent</div><div class="line"></div><div class="line"><span class="comment">#---------------------------------------------------------------------</span></div><div class="line"><span class="comment"># ap backend</span></div><div class="line"><span class="comment">#---------------------------------------------------------------------</span></div><div class="line"><span class="comment"># 后端动态节点 appsrvs</span></div><div class="line">backend appsrvs</div><div class="line">    option      forwardfor header X-Client</div><div class="line">    balance     uri</div><div class="line">    <span class="comment">#balance     roundrobin</span></div><div class="line">    server      app1    192.168.1.70:80 cookie app1 check weight 1</div><div class="line">    server      app2    192.168.1.80:80 cookie app2 check weight 1</div><div class="line">    <span class="built_in">hash</span>-type   consistent</div><div class="line"></div><div class="line">$ systemctl start haproxy</div><div class="line">$ ss -tnl | grep 80</div></pre></td></tr></table></figure>
<h4 id="配置keepalived"><a href="#配置keepalived" class="headerlink" title="配置keepalived"></a><font size="4" color="#007FFF">配置keepalived</font></h4><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div><div class="line">37</div><div class="line">38</div><div class="line">39</div><div class="line">40</div><div class="line">41</div><div class="line">42</div><div class="line">43</div><div class="line">44</div><div class="line">45</div><div class="line">46</div><div class="line">47</div><div class="line">48</div><div class="line">49</div><div class="line">50</div><div class="line">51</div><div class="line">52</div><div class="line">53</div><div class="line">54</div><div class="line">55</div><div class="line">56</div><div class="line">57</div><div class="line">58</div><div class="line">59</div><div class="line">60</div><div class="line">61</div><div class="line">62</div><div class="line">63</div><div class="line">64</div><div class="line">65</div><div class="line">66</div><div class="line">67</div><div class="line">68</div><div class="line">69</div><div class="line">70</div><div class="line">71</div><div class="line">72</div><div class="line">73</div><div class="line">74</div><div class="line">75</div><div class="line">76</div><div class="line">77</div><div class="line">78</div><div class="line">79</div><div class="line">80</div><div class="line">81</div><div class="line">82</div><div class="line">83</div><div class="line">84</div><div class="line">85</div><div class="line">86</div><div class="line">87</div><div class="line">88</div><div class="line">89</div><div class="line">90</div><div class="line">91</div><div class="line">92</div><div class="line">93</div><div class="line">94</div><div class="line">95</div><div class="line">96</div><div class="line">97</div><div class="line">98</div><div class="line">99</div><div class="line">100</div><div class="line">101</div><div class="line">102</div><div class="line">103</div><div class="line">104</div></pre></td><td class="code"><pre><div class="line">$ <span class="built_in">cd</span> /etc/keepalived</div><div class="line">$ vim keepalived.conf</div><div class="line"><span class="comment"># MASTER节点</span></div><div class="line">! Configuration File <span class="keyword">for</span> keepalived</div><div class="line"></div><div class="line">global_defs &#123;</div><div class="line">   notification_email &#123;</div><div class="line">     root@localhost</div><div class="line">   &#125;</div><div class="line">   notification_email_from KA@localhost</div><div class="line">   smtp_server 127.0.0.1</div><div class="line">   smtp_connect_timeout 30</div><div class="line">   router_id vs1</div><div class="line">   vrrp_mcast_group4 224.16.3.100</div><div class="line">&#125;</div><div class="line"></div><div class="line">vrrp_instance VI_1 &#123;</div><div class="line">    state MASTER</div><div class="line">    interface eno16777736</div><div class="line">    virtual_router_id 51</div><div class="line">    priority 100</div><div class="line">    advert_int 2</div><div class="line">    authentication &#123;</div><div class="line">        auth_type PASS</div><div class="line">        auth_pass maxie95</div><div class="line">    &#125;</div><div class="line">    virtual_ipaddress &#123;</div><div class="line">    172.16.1.200/16 dev eno16777736 label eno16777736:0</div><div class="line">    &#125;</div><div class="line"></div><div class="line">    notify_master <span class="string">"/etc/keepalived/notify.sh master"</span></div><div class="line">    notify_backup <span class="string">"/etc/keepalived/notify.sh backup"</span></div><div class="line">    notify_fault <span class="string">"/etc/keepalived/notify.sh fault"</span></div><div class="line">&#125;</div><div class="line"></div><div class="line"></div><div class="line"><span class="comment"># BACKUP节点</span></div><div class="line">! Configuration File <span class="keyword">for</span> keepalived</div><div class="line"></div><div class="line">global_defs &#123;</div><div class="line">   notification_email &#123;</div><div class="line">     root@localhost</div><div class="line">   &#125;</div><div class="line">   notification_email_from KA@localhost</div><div class="line">   smtp_server 127.0.0.1</div><div class="line">   smtp_connect_timeout 30</div><div class="line">   router_id vs2</div><div class="line">   vrrp_mcast_group4 224.16.3.100</div><div class="line">&#125;</div><div class="line"></div><div class="line">vrrp_instance VI_1 &#123;</div><div class="line">    state BACKUP</div><div class="line">    interface eno16777736</div><div class="line">    virtual_router_id 51</div><div class="line">    priority 95</div><div class="line">    advert_int 2</div><div class="line">    authentication &#123;</div><div class="line">        auth_type PASS</div><div class="line">        auth_pass maxie95</div><div class="line">    &#125;</div><div class="line">    virtual_ipaddress &#123;</div><div class="line">    172.16.1.200/16 dev eno16777736 label eno16777736:0</div><div class="line">    &#125;</div><div class="line"></div><div class="line">    notify_master <span class="string">"/etc/keepalived/notify.sh master"</span></div><div class="line">    notify_backup <span class="string">"/etc/keepalived/notify.sh backup"</span></div><div class="line">    notify_fault <span class="string">"/etc/keepalived/notify.sh fault"</span></div><div class="line">&#125;</div><div class="line"></div><div class="line"></div><div class="line"><span class="comment"># notify.sh脚本</span></div><div class="line">$ vim notify.sh</div><div class="line"><span class="meta">#!/bin/bash</span></div><div class="line"><span class="comment">#</span></div><div class="line">contact=<span class="string">"root@localhost"</span></div><div class="line"></div><div class="line"><span class="function"><span class="title">notify</span></span>() &#123;</div><div class="line">        <span class="built_in">local</span> mailsubject=<span class="string">"<span class="variable">$(hostname)</span> to be <span class="variable">$1</span>, VIP is folating"</span></div><div class="line">        <span class="built_in">local</span> mailbody=<span class="string">"<span class="variable">$(date + '$F $T')</span>: vrrp transition, <span class="variable">$(hostname)</span> changed to be <span class="variable">$1</span>"</span></div><div class="line">        <span class="built_in">echo</span> <span class="string">"<span class="variable">$mailbody</span>"</span> | mail <span class="_">-s</span> <span class="string">"<span class="variable">$mailsubject</span>"</span> <span class="variable">$contact</span></div><div class="line">&#125;</div><div class="line"></div><div class="line"><span class="keyword">case</span> <span class="variable">$1</span> <span class="keyword">in</span></div><div class="line">master)</div><div class="line">        systemctl start nginx</div><div class="line">        notify master</div><div class="line">        ;;</div><div class="line">backup)</div><div class="line">        systemctl start nginx</div><div class="line">        notify backup</div><div class="line">        ;;</div><div class="line">fault)</div><div class="line">        notify fault</div><div class="line">        ;;</div><div class="line">*)</div><div class="line">        <span class="built_in">echo</span> <span class="string">"Usage: <span class="variable">$(basename $0)</span> &#123;master|backup|fault&#125;"</span></div><div class="line">        <span class="built_in">exit</span> 1</div><div class="line">        ;;</div><div class="line"><span class="keyword">esac</span></div><div class="line"></div><div class="line">$ systemctl start keepalived</div><div class="line"></div><div class="line"><span class="comment"># 查看vip是否在MASTER节点上</span></div><div class="line">$ ifconfig</div></pre></td></tr></table></figure>
<hr>
<div class="note warning"><h3 id="配置varnish"><a href="#配置varnish" class="headerlink" title="配置varnish"></a>配置varnish</h3></div>
<h4 id="安装"><a href="#安装" class="headerlink" title="安装"></a><font size="4" color="#CFB53B">安装</font></h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">$ yum install varnish</div></pre></td></tr></table></figure>
<h4 id="配置varnish-params"><a href="#配置varnish-params" class="headerlink" title="配置varnish.params"></a><font size="4" color="#CFB53B">配置varnish.params</font></h4><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div></pre></td><td class="code"><pre><div class="line">$ <span class="built_in">cd</span> /etc/varnish</div><div class="line">$ vim varnish.params</div><div class="line"><span class="comment"># 修改监听端口为 80</span></div><div class="line">VARNISH_LISTEN_PORT=80</div><div class="line"></div><div class="line"><span class="comment"># 管理IP地址以及端口</span></div><div class="line">VARNISH_ADMIN_LISTEN_ADDRESS=127.0.0.1</div><div class="line">VARNISH_ADMIN_LISTEN_PORT=6082</div><div class="line"></div><div class="line"><span class="comment"># 共享密钥文件</span></div><div class="line">VARNISH_SECRET_FILE=/etc/varnish/secret</div><div class="line"></div><div class="line"></div><div class="line"><span class="comment"># 缓存类型，可以是磁盘，也可以是内存。这里为内存</span></div><div class="line">VARNISH_STORAGE=<span class="string">"malloc,512M"</span></div><div class="line"></div><div class="line"><span class="comment"># 运行varnish的用户以及组</span></div><div class="line">VARNISH_USER=varnish</div><div class="line">VARNISH_GROUP=varnish</div><div class="line"></div><div class="line"><span class="comment"># 其他自定义设置</span></div><div class="line">DAEMON_OPTS=<span class="string">"-p thread_pool_min=50 -p thread_pool_max=2000 -p thread_pool_timeout=300"</span></div></pre></td></tr></table></figure>
<h4 id="配置default-vcl"><a href="#配置default-vcl" class="headerlink" title="配置default.vcl"></a><font size="4" color="#CFB53B">配置default.vcl</font></h4><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div><div class="line">37</div><div class="line">38</div><div class="line">39</div><div class="line">40</div><div class="line">41</div><div class="line">42</div><div class="line">43</div><div class="line">44</div><div class="line">45</div><div class="line">46</div><div class="line">47</div><div class="line">48</div><div class="line">49</div><div class="line">50</div><div class="line">51</div><div class="line">52</div><div class="line">53</div><div class="line">54</div><div class="line">55</div><div class="line">56</div><div class="line">57</div><div class="line">58</div><div class="line">59</div><div class="line">60</div><div class="line">61</div><div class="line">62</div><div class="line">63</div><div class="line">64</div><div class="line">65</div><div class="line">66</div><div class="line">67</div><div class="line">68</div><div class="line">69</div><div class="line">70</div><div class="line">71</div><div class="line">72</div><div class="line">73</div><div class="line">74</div><div class="line">75</div><div class="line">76</div><div class="line">77</div><div class="line">78</div><div class="line">79</div><div class="line">80</div><div class="line">81</div><div class="line">82</div><div class="line">83</div><div class="line">84</div><div class="line">85</div><div class="line">86</div><div class="line">87</div><div class="line">88</div><div class="line">89</div><div class="line">90</div><div class="line">91</div><div class="line">92</div><div class="line">93</div><div class="line">94</div><div class="line">95</div><div class="line">96</div><div class="line">97</div><div class="line">98</div><div class="line">99</div><div class="line">100</div><div class="line">101</div><div class="line">102</div><div class="line">103</div><div class="line">104</div><div class="line">105</div><div class="line">106</div><div class="line">107</div><div class="line">108</div><div class="line">109</div><div class="line">110</div><div class="line">111</div><div class="line">112</div><div class="line">113</div><div class="line">114</div><div class="line">115</div><div class="line">116</div><div class="line">117</div><div class="line">118</div><div class="line">119</div><div class="line">120</div><div class="line">121</div><div class="line">122</div><div class="line">123</div><div class="line">124</div><div class="line">125</div></pre></td><td class="code"><pre><div class="line">$ vim default.vcl </div><div class="line"><span class="comment"># new 4.0 format.</span></div><div class="line">vcl 4.0;</div><div class="line"><span class="comment"># 导入负载均衡模块</span></div><div class="line">import directors;</div><div class="line"></div><div class="line"><span class="comment"># Default backend definition. Set this to point to your content server.</span></div><div class="line">backend default &#123;</div><div class="line">    .host = <span class="string">"127.0.0.1"</span>;</div><div class="line">    .port = <span class="string">"8080"</span>;</div><div class="line">&#125;</div><div class="line"></div><div class="line"><span class="comment"># 配置后端主机</span></div><div class="line">backend web1 &#123;</div><div class="line">    .host = <span class="string">"192.168.1.50"</span>;</div><div class="line">    .port = <span class="string">"80"</span>;</div><div class="line">    <span class="comment"># 配置健康状态检查</span></div><div class="line">    .probe = &#123;</div><div class="line">    	<span class="comment"># 检查状态检查的URL</span></div><div class="line">		.url = <span class="string">"/index.html"</span>;</div><div class="line">		<span class="comment"># 一共检查的次数</span></div><div class="line">		.window= 8;</div><div class="line">		<span class="comment"># 如果大于4次则为健康</span></div><div class="line">		.threshold = 4;</div><div class="line">		<span class="comment"># 每3秒检查一次</span></div><div class="line">		.interval = 3s;</div><div class="line">		<span class="comment"># 超时时间</span></div><div class="line">		.timeout = 10s;</div><div class="line">    &#125;</div><div class="line">&#125;</div><div class="line"></div><div class="line"><span class="comment"># 配置后端主机</span></div><div class="line">backend web2 &#123;</div><div class="line">    .host = <span class="string">"192.168.1.60"</span>;</div><div class="line">    .port = <span class="string">"80"</span>;</div><div class="line">    .probe = &#123;</div><div class="line">	.url = <span class="string">"/index.html"</span>;</div><div class="line">	.window= 8;</div><div class="line">	.threshold = 4;</div><div class="line">	.interval = 3s;</div><div class="line">	.timeout = 10s;</div><div class="line">    &#125;</div><div class="line">&#125;</div><div class="line"></div><div class="line"><span class="comment"># 初始化负载均衡</span></div><div class="line">sub vcl_init &#123;</div><div class="line">	<span class="comment"># 定义负载均衡组的名字以及调度算法</span></div><div class="line">    new websrv = directors.round_robin();</div><div class="line">    websrv.add_backend(web1);</div><div class="line">    websrv.add_backend(web2);</div><div class="line">&#125;</div><div class="line"></div><div class="line"><span class="comment"># 定义裁剪缓存的提示信息</span></div><div class="line">sub vcl_purge &#123;</div><div class="line">    <span class="built_in">return</span> (synth(200,<span class="string">"Pruge Fishished"</span>));</div><div class="line">&#125;</div><div class="line"></div><div class="line"><span class="comment"># 定义裁剪的ACL</span></div><div class="line">acl purges &#123;</div><div class="line">    <span class="string">"172.16.1.11"</span>;</div><div class="line">    <span class="string">"172.16.250.15"</span>;</div><div class="line">    <span class="string">"127.0.0.0"</span>/8;</div><div class="line">&#125;</div><div class="line"></div><div class="line"><span class="comment"># 定义接收段</span></div><div class="line">sub vcl_recv &#123;</div><div class="line">	<span class="comment"># 如果请求方法是PURGE，也就是裁剪缓存</span></div><div class="line">    <span class="keyword">if</span> (req.method == <span class="string">"PURGE"</span>) &#123;</div><div class="line">    	<span class="comment"># 如果客户端IP不在我们之前定义的ACL for purges中，提示如下信息</span></div><div class="line">   		<span class="keyword">if</span> (client.ip !~ purges) &#123;</div><div class="line">        	<span class="built_in">return</span>(synth(403,<span class="string">"Purging not allowed for"</span> + client.ip));</div><div class="line">    	&#125;</div><div class="line">    	<span class="comment"># 反之，执行裁剪缓存</span></div><div class="line">        <span class="built_in">return</span>(purge);</div><div class="line">    &#125;</div><div class="line"></div><div class="line">    <span class="comment"># 如果请求的URL中包括以下信息，则调度至我们的后端主机</span></div><div class="line">    <span class="keyword">if</span> (req.url ~ <span class="string">"(?i)\.(html|css|js|jpg|jpeg|png|gif)$"</span>) &#123;</div><div class="line">        <span class="built_in">set</span> req.backend_hint = websrv.backend();</div><div class="line">    &#125; </div><div class="line"></div><div class="line">    <span class="comment"># 自定义头部</span></div><div class="line">    <span class="keyword">if</span> (req.restarts == 0) &#123;</div><div class="line">    	<span class="keyword">if</span> (req.http.X-Forwarded-For) &#123;</div><div class="line">        	<span class="built_in">set</span> req.http.X-Forwarded-For = req.http.X-Forwarded-For + <span class="string">","</span> + client.ip;</div><div class="line">    	&#125; <span class="keyword">else</span> &#123;</div><div class="line">        	<span class="built_in">set</span> req.http.X-Forwarded-For = client.ip;</div><div class="line">    	&#125;</div><div class="line">    &#125;</div><div class="line">&#125;</div><div class="line"></div><div class="line">sub vcl_backend_response &#123;</div><div class="line">	<span class="comment"># 清除响应头部</span></div><div class="line">    <span class="built_in">unset</span> beresp.http.X-Powered-By;</div><div class="line"></div><div class="line">    <span class="comment"># 如果向后端请求URL中包含以下字段，则清除cookie</span></div><div class="line">    <span class="keyword">if</span> (bereq.url ~ <span class="string">"\.(css|js|png|gif|jp(e?)g|swf|ico|txt|eot|svg|woff)"</span>) &#123;</div><div class="line">    	<span class="built_in">unset</span> beresp.http.cookie;</div><div class="line">    	<span class="built_in">set</span> beresp.http.cache-control = <span class="string">"public, max-age=3600"</span>;</div><div class="line">    &#125;</div><div class="line"></div><div class="line">    <span class="comment"># 如果相应的状态码不是200或者404，则不缓存</span></div><div class="line">    <span class="keyword">if</span> ( beresp.status != 200 &amp;&amp; beresp.status != 404 ) &#123;</div><div class="line">    	<span class="built_in">set</span> beresp.uncacheable = <span class="literal">true</span>;</div><div class="line">    	<span class="built_in">set</span> beresp.ttl = 120s;</div><div class="line">    	<span class="built_in">return</span> (deliver);</div><div class="line">    &#125;</div><div class="line"></div><div class="line">    <span class="comment"># 设置默认ttl缓存为 1小时</span></div><div class="line">    <span class="built_in">set</span> beresp.ttl = 1h;</div><div class="line"></div><div class="line">    <span class="comment"># 意思在30s 内复制旧的请求结果给客户端</span></div><div class="line">    <span class="built_in">set</span> beresp.grace = 30s;</div><div class="line"></div><div class="line">    <span class="built_in">return</span> (deliver);</div><div class="line">&#125;</div><div class="line"></div><div class="line">sub vcl_deliver &#123;</div><div class="line">	<span class="comment"># 如果命中了则返回自定义头部，未命中则返回另一个自定义头部</span></div><div class="line">    <span class="keyword">if</span> (obj.hits&gt;0) &#123;</div><div class="line">        <span class="built_in">set</span> resp.http.X-Cache = <span class="string">"Hit Via "</span> + server.ip;</div><div class="line">    &#125; <span class="keyword">else</span> &#123;</div><div class="line">        <span class="built_in">set</span> resp.http.X-Cache = <span class="string">"Miss from "</span> + server.ip;</div><div class="line">    &#125;</div><div class="line">&#125;</div></pre></td></tr></table></figure>
<h4 id="传送配置文件至另一台varnish"><a href="#传送配置文件至另一台varnish" class="headerlink" title="传送配置文件至另一台varnish"></a><font size="4" color="#CFB53B">传送配置文件至另一台varnish</font></h4><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div></pre></td><td class="code"><pre><div class="line">$ scp -r /etc/varnish  root@192.168.1.40:/etc</div><div class="line"></div><div class="line">$ systemctl start varnish</div><div class="line">$ ss -tnl | grep 80</div></pre></td></tr></table></figure>
<hr>
<div class="note danger"><h3 id="配置varnish"><a href="#配置varnish" class="headerlink" title="配置varnish"></a>配置varnish</h3></div>
<h4 id="客户端配置hosts文件"><a href="#客户端配置hosts文件" class="headerlink" title="客户端配置hosts文件"></a><font size="4" color="#FF2400">客户端配置hosts文件</font></h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line">$ sudo vim /etc/hosts</div><div class="line">172.16.1.200 www.maxie.com</div></pre></td></tr></table></figure>
<h4 id="打开浏览器验证"><a href="#打开浏览器验证" class="headerlink" title="打开浏览器验证"></a><font size="4" color="#FF2400">打开浏览器验证</font></h4><ul>
<li>验证主页</li>
</ul>
<p><img src="https://ws4.sinaimg.cn/large/006tKfTcly1fhhgmo2fu9j30qo0uu4bz.jpg" alt=""></p>
<p><br></p>
<ul>
<li>验证WordPress</li>
</ul>
<p><img src="https://ws3.sinaimg.cn/large/006tKfTcly1fhhgo2sifgg30qo0usx6v.gif" alt=""></p>
<p><br></p>
<ul>
<li>验证是否可以会话保持</li>
</ul>
<p><img src="https://ws4.sinaimg.cn/large/006tKfTcly1fhhh24vi0ig30qo0uskjp.gif" alt=""></p>
<p><br></p>
<ul>
<li>验证是否可以上传图片</li>
</ul>
<p><img src="https://ws3.sinaimg.cn/large/006tKfTcly1fhhh47p7vzg30qo0usnpr.gif" alt=""></p>
<p><br></p>
<ul>
<li>验证静态资源是否命中缓存</li>
</ul>
<p><img src="https://ws4.sinaimg.cn/large/006tKfTcly1fhhgvrye2yg30qo0usb2j.gif" alt=""></p>
<hr>
<h3 id="配置完毕"><a href="#配置完毕" class="headerlink" title="配置完毕"></a>配置完毕</h3><p>至此已经全部配置完毕了，如果想使用<code>nginx</code>作为调度器，只需将<code>haproxy</code>服务停掉即可</p>
<ul>
<li>nginx配置文件</li>
</ul>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div><div class="line">37</div><div class="line">38</div><div class="line">39</div><div class="line">40</div><div class="line">41</div><div class="line">42</div><div class="line">43</div></pre></td><td class="code"><pre><div class="line">   upstream varnishsrv &#123;</div><div class="line">       server 192.168.1.30:80;</div><div class="line">       server 192.168.1.40:80;</div><div class="line">   &#125;</div><div class="line"></div><div class="line">   upstream appsrv &#123;</div><div class="line">ip_hash;</div><div class="line">server 192.168.1.70:8080;</div><div class="line">server 192.168.1.80:8080;</div><div class="line">   &#125;</div><div class="line"></div><div class="line">   server &#123;</div><div class="line">       listen       80 default_server;</div><div class="line">       listen       [::]:80 default_server;</div><div class="line">       server_name  _;</div><div class="line">       root         /usr/share/nginx/html;</div><div class="line">index		index.php;</div><div class="line"></div><div class="line">       # Load configuration files for the default server block.</div><div class="line">       include /etc/nginx/default.d/*.conf;</div><div class="line"></div><div class="line">       location / &#123;</div><div class="line">	proxy_pass	http://varnishsrv/;</div><div class="line">       &#125;</div><div class="line"></div><div class="line">location /wordpress &#123;</div><div class="line">	proxy_pass	http://varnishsrv;</div><div class="line">&#125;</div><div class="line"></div><div class="line">location ~* /.*\.php$ &#123;</div><div class="line">	index		index.php;</div><div class="line">	proxy_pass	http://appsrv;</div><div class="line">&#125;</div><div class="line"></div><div class="line"></div><div class="line">       error_page 404 /404.html;</div><div class="line">           location = /40x.html &#123;</div><div class="line">       &#125;</div><div class="line"></div><div class="line">       error_page 500 502 503 504 /50x.html;</div><div class="line">           location = /50x.html &#123;</div><div class="line">       &#125;</div><div class="line">   &#125;</div></pre></td></tr></table></figure>
<p>不过，我这里只实现了调度，并没有实现缓存静态资源。</p>
<ul>
<li>也可以将AP替换成AT，也就是Apache+Tomcat，而且可以通过memcached实现session server。不过这个实现，我们下次在实现吧。</li>
</ul>
<hr>
<iframe frameborder="no" border="0" marginwidth="0" marginheight="0" width="330" height="86" src="//music.163.com/outchain/player?type=2&id=483156425&auto=1&height=66"></iframe>

<p>本文出自<a href="http://maxiecloud.com">Maxie’s Notes</a>博客，转载请务必保留此出处。</p>
<p><img src="https://ww1.sinaimg.cn/large/006tNbRwly1fdzc80odsuj30gn0ilq5m.jpg" alt=""></p>
]]></content>
    
    <summary type="html">
    
      &lt;blockquote class=&quot;blockquote-center&quot;&gt;本次的实验拓扑图如下，这次主要是在上一篇的基础上精简一些，找出一些常见的错误，少走一些弯路&lt;br&gt;如果大佬们有更好的配置，请在留言区留言，或者加本人微信: mcy958623&lt;br&gt;请大佬们多多鞭策！！！&lt;br&gt;&lt;/blockquote&gt;

&lt;p&gt;&lt;img src=&quot;https://ws1.sinaimg.cn/large/006tKfTcly1fhhftqrdc8j30uo1kwagt.jpg&quot; alt=&quot;&quot;&gt;&lt;/p&gt;
&lt;h3 id=&quot;此次的实验目标&quot;&gt;&lt;a href=&quot;#此次的实验目标&quot; class=&quot;headerlink&quot; title=&quot;此次的实验目标&quot;&gt;&lt;/a&gt;&lt;font szie=4 color=&quot;##3299CC&quot;&gt;此次的实验目标&lt;/font&gt;&lt;/h3&gt;&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;1&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;2&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;3&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;4&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;5&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;6&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;7&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;8&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;(1) 动静分离部署wordpress，动静都要能实现负载均衡，要注意会话的问题&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;(2) 在haproxy和后端主机之间添加varnish进行缓存&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;    只缓存静态，对于动态直接调度至后端主机&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;(3) haproxy的设定要求：&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;	(a) stats page，要求仅能通过本地访问使用管理接口；&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;	(b) 动静分离&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;	(c) 分别考虑不同的服务器组的调度算法&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;(4) haproxy高可用(Keepalived)&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
    
    </summary>
    
      <category term="linux进阶" scheme="http://maxiecloud.com/categories/linux%E8%BF%9B%E9%98%B6/"/>
    
      <category term="HAProxy" scheme="http://maxiecloud.com/categories/linux%E8%BF%9B%E9%98%B6/HAProxy/"/>
    
      <category term="Varnish" scheme="http://maxiecloud.com/categories/linux%E8%BF%9B%E9%98%B6/HAProxy/Varnish/"/>
    
    
      <category term="linux" scheme="http://maxiecloud.com/tags/linux/"/>
    
      <category term="HAProxy" scheme="http://maxiecloud.com/tags/HAProxy/"/>
    
      <category term="httpd" scheme="http://maxiecloud.com/tags/httpd/"/>
    
      <category term="varnish" scheme="http://maxiecloud.com/tags/varnish/"/>
    
      <category term="wordpress" scheme="http://maxiecloud.com/tags/wordpress/"/>
    
  </entry>
  
  <entry>
    <title>Ansible自动化运维工具的基本使用以及部署</title>
    <link href="http://maxiecloud.com/2017/07/07/ansible/"/>
    <id>http://maxiecloud.com/2017/07/07/ansible/</id>
    <published>2017-07-07T12:15:55.000Z</published>
    <updated>2017-07-14T06:36:35.000Z</updated>
    
    <content type="html"><![CDATA[<p><img src="https://ws1.sinaimg.cn/large/006tNbRwly1fhbl91dv81j30bj03djr7.jpg" alt=""></p>
<blockquote class="blockquote-center">Ansible在我们运维工作中的主要工作就是帮助我们批量自动化部署一些生产上的需求。<br>由于Ansible是用Python开发的，是一款非常轻量级的自动化部署工具。<br>而且Ansible是通过SSH协议来进行管理其他机器的，我们只需要在安装Ansible的主机上编写一个SSH无密钥登陆的脚本，即可实现批量管理机器的工作。<br></blockquote>

<p>其实自动化运维工具还有很多，比如<code>puppet</code>、<code>saltstack</code>、<code>chef</code>、<code>cfengine</code>，这些都可以说是<code>Ansible</code>的<strong>前辈</strong>了。但是为什么现在大多数运维岗位的在职人员都使用的是<code>Ansible</code>这款工具呢？<br>下面就来说一说它的优点：</p>
<figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div></pre></td><td class="code"><pre><div class="line">1. Agentless：去中心化。也就是使用Ansible无需安装服务端和客户端，只需使用SSH即可。只要一台机器安装了Ansible程序，都是一台强大的管理端。</div><div class="line">2. Stupied Simple：<span class="string">"傻瓜般的简单"</span>。意味着上手非常简单，学习曲线平滑</div><div class="line">3. SSH By Default：默认通过SSH连接通信，非常安全。无需安装客户端</div><div class="line">4. YAML No Code：使用YAML语言定制剧本 --&gt; playbook</div><div class="line">5. sudo：支持sudo</div><div class="line">6. 模块化：调用特定模块，完成特定任务，支持自定义模块</div><div class="line">7. 幂等性：同一个命令/文件 可以被执行多次</div></pre></td></tr></table></figure>
<hr>
<a id="more"></a>
<p>安装epel之前需要配置epel yum源，可以使用阿里云的 <code>http://mirrors.aliyun.com/epel/7/x86_64/</code></p>
<p><strong>拓扑图：</strong></p>
<p><img src="https://ws1.sinaimg.cn/large/006tNbRwly1fhbmg4t2tgj30ge0e6wex.jpg" alt=""></p>
<div class="note primary"><h3 id="Ansible的安装与配置"><a href="#Ansible的安装与配置" class="headerlink" title="Ansible的安装与配置"></a>Ansible的安装与配置</h3></div>
<p>Ansible 1.9和2.0的区别：</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line">（1） 最大区别是2.0的API调用方式发生变化，1.9原有的api调用方式在2.0不再支持</div><div class="line">（2） 2.0增加了重要的功能： ansible-console</div><div class="line">（3） Ansible 2.0的模块数量增加很多，500+个模块数量</div></pre></td></tr></table></figure>
<h4 id="安装"><a href="#安装" class="headerlink" title="安装"></a><font size="3" color="#38B0DE">安装</font></h4><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div></pre></td><td class="code"><pre><div class="line">$ yum install -y ansible</div><div class="line">$ ssh-keygen                        <span class="comment"># 生成公钥和私钥</span></div><div class="line">$ ssh-copy-id root@172.16.1.100     <span class="comment"># 传送密钥至远程主机以及本机，实现ssh免密钥登陆</span></div><div class="line">$ ssh-copy-id root@172.16.1.70</div><div class="line">$ ssh-copy-id root@172.16.1.20</div></pre></td></tr></table></figure>
<p><br></p>
<h4 id="Ansible配置文件"><a href="#Ansible配置文件" class="headerlink" title="Ansible配置文件"></a><font size="3" color="#38B0DE">Ansible配置文件</font></h4><p>配置文件路径：</p>
<figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div></pre></td><td class="code"><pre><div class="line">/etc/ansible                所有的配置文件都在此目录下</div><div class="line">/etc/ansible/ansible.cfg    主配置文件</div><div class="line">/etc/ansible/hosts          仓库文件</div><div class="line">/etc/ansible/roles          剧本文件</div></pre></td></tr></table></figure>
<p>主配置文件：</p>
<figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div></pre></td><td class="code"><pre><div class="line">$ vim /etc/ansible/ansible.cfg</div><div class="line">[defaults]</div><div class="line"><span class="comment">#inventory      = /etc/ansible/hosts        # 主机列表配置文件</span></div><div class="line"><span class="comment">#library        = /usr/share/my_modules/    # 库文件存放目录 </span></div><div class="line"><span class="comment">#remote_tmp     = $HOME/.ansible/tmp        # 生成的临时py命令文件存放在远程主机的目录</span></div><div class="line"><span class="comment">#local_tmp      = $HOME/.ansible/tmp        # 本机的临时命令执行目录</span></div><div class="line"><span class="comment">#forks          = 5                         # 默认并发数</span></div><div class="line"><span class="comment">#poll_interval  = 15                        # 默认的线程池</span></div><div class="line"><span class="comment">#sudo_user      = root                      # 默认sudo 用户</span></div><div class="line"><span class="comment">#ask_sudo_pass = True                       </span></div><div class="line"><span class="comment">#ask_pass      = True</span></div><div class="line"><span class="comment">#transport      = smart</span></div><div class="line"><span class="comment">#remote_port    = 22                        # 远程ssh端口号</span></div><div class="line"><span class="comment">#module_lang    = C</span></div><div class="line"><span class="comment">#module_set_locale = False</span></div><div class="line"></div><div class="line">roles_path	   = /etc/ansible/roles          <span class="comment"># 默认从ansible-galaxy下载路径</span></div><div class="line"></div><div class="line">host_key_checking = False                   <span class="comment"># 检查对应服务器的host_key</span></div><div class="line"></div><div class="line">[privilege_escalation]</div><div class="line">[paramiko_connection]</div><div class="line">[ssh_connection]</div><div class="line">[accelerate]</div><div class="line">[selinux]</div><div class="line">[colors]                                    <span class="comment"># 执行命令后输出的颜色</span></div></pre></td></tr></table></figure>
<p><br></p>
<h4 id="Ansible命令集"><a href="#Ansible命令集" class="headerlink" title="Ansible命令集"></a><font size="3" color="#38B0DE">Ansible命令集</font></h4><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div></pre></td><td class="code"><pre><div class="line">/usr/bin/ansible                    <span class="comment"># Ansible AD-Hoc 临时命令执行工具，常用于临时命令的执行</span></div><div class="line">/usr/bin/ansible-doc                <span class="comment"># Ansible 模块功能查看工具，类似于Linux中的man文档</span></div><div class="line">/usr/bin/ansible-galaxy             <span class="comment"># 从galaxy.ansible.com网站下载/上传优秀代码或者 Roles模块，基于网络；有可能需要使用到科学上网</span></div><div class="line">/usr/bin/ansible-playbook           <span class="comment"># Ansible 定制自动化的任务集编排工具</span></div><div class="line">/usr/bin/ansible-pull               <span class="comment"># Ansible 远程执行命令的工具(使用较少，海量机器时使用，对运维的架构能力要求较高)</span></div><div class="line">/usr/bin/ansible-vault              <span class="comment"># Ansible 文件加密工具</span></div><div class="line">/usr/bin/ansible-console            <span class="comment"># Ansible 基于Linux Consoble界面可与用户交互的命令执行工具</span></div><div class="line">/usr/share/ansible_plugins          <span class="comment"># Ansible 高级自定义插件目录(需要Python基础)</span></div><div class="line">    action  （(可能使用较多)）</div><div class="line">    callback (可能使用较多)</div><div class="line">    connection</div><div class="line">    filter</div><div class="line">    lookup</div><div class="line">    vars</div></pre></td></tr></table></figure>
<p><br></p>
<h4 id="Ansible命令使用说明"><a href="#Ansible命令使用说明" class="headerlink" title="Ansible命令使用说明"></a><font size="3" color="#38B0DE">Ansible命令使用说明</font></h4><p>先看一个最简单的命令：</p>
<figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div></pre></td><td class="code"><pre><div class="line"><span class="comment"># 调用ping模块检测 web组内的所有主机是否存活</span></div><div class="line">$ vim /etc/ansible/hosts </div><div class="line">[web]</div><div class="line">172.16.1.100</div><div class="line">172.16.1.70</div><div class="line">172.16.1.20</div><div class="line">172.16.4.10</div><div class="line"></div><div class="line">$ ansible web -m ping</div><div class="line">172.16.1.21 | SUCCESS =&gt; &#123;</div><div class="line">    <span class="string">"changed"</span>: <span class="literal">false</span>,</div><div class="line">    <span class="string">"ping"</span>: <span class="string">"pong"</span></div><div class="line">&#125;</div><div class="line">172.16.1.70 | SUCCESS =&gt; &#123;</div><div class="line">    <span class="string">"changed"</span>: <span class="literal">false</span>,</div><div class="line">    <span class="string">"ping"</span>: <span class="string">"pong"</span></div><div class="line">&#125;</div><div class="line">172.16.1.100 | SUCCESS =&gt; &#123;</div><div class="line">    <span class="string">"changed"</span>: <span class="literal">false</span>,</div><div class="line">    <span class="string">"ping"</span>: <span class="string">"pong"</span></div><div class="line">&#125;</div></pre></td></tr></table></figure>
<p><br></p>
<p><strong>Ansible命令使用详解：</strong></p>
<figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div><div class="line">37</div><div class="line">38</div><div class="line">39</div><div class="line">40</div><div class="line">41</div><div class="line">42</div><div class="line">43</div><div class="line">44</div><div class="line">45</div><div class="line">46</div><div class="line">47</div><div class="line">48</div><div class="line">49</div><div class="line">50</div><div class="line">51</div><div class="line">52</div><div class="line">53</div><div class="line">54</div><div class="line">55</div><div class="line">56</div><div class="line">57</div><div class="line">58</div><div class="line">59</div><div class="line">60</div><div class="line">61</div><div class="line">62</div><div class="line">63</div><div class="line">64</div><div class="line">65</div><div class="line">66</div><div class="line">67</div><div class="line">68</div><div class="line">69</div><div class="line">70</div><div class="line">71</div><div class="line">72</div><div class="line">73</div><div class="line">74</div><div class="line">75</div><div class="line">76</div><div class="line">77</div><div class="line">78</div><div class="line">79</div><div class="line">80</div><div class="line">81</div><div class="line">82</div><div class="line">83</div><div class="line">84</div><div class="line">85</div></pre></td><td class="code"><pre><div class="line">$ ansible -h</div><div class="line">Usage: ansible &lt;host-pattern&gt; [options]</div><div class="line"></div><div class="line">Options:</div><div class="line">  <span class="_">-a</span> MODULE_ARGS, --args=MODULE_ARGS                            <span class="comment">#模块的参数,如果执行默认COMMAND的模块，即是命令参数,如：“date”,"pwd"等等</span></div><div class="line">                        module arguments                        <span class="comment">#模块参数</span></div><div class="line"></div><div class="line">  --ask-become-pass     ask <span class="keyword">for</span> privilege escalation password   <span class="comment"># Ansible su切换用户的时候使用该参数输入密码</span></div><div class="line"></div><div class="line">  -k, --ask-pass        ask <span class="keyword">for</span> SSH password                    <span class="comment">#登录密码，提示输入SSH密码而不是假设基于密钥的验证</span></div><div class="line"></div><div class="line">  --ask-su-pass         ask <span class="keyword">for</span> su password                     <span class="comment">#su切换密码</span></div><div class="line"></div><div class="line">  -K, --ask-sudo-pass   ask <span class="keyword">for</span> sudo password                   <span class="comment">#提示密码使用sudo,sudo表示提权操作</span></div><div class="line"></div><div class="line">  --ask-vault-pass      ask <span class="keyword">for</span> vault password                  <span class="comment"># ansible-valut 加密文件</span></div><div class="line"></div><div class="line">  -B SECONDS, --background=SECONDS                              <span class="comment">#后台运行超时时间</span></div><div class="line">                        run asynchronously, failing after X seconds</div><div class="line">                        (default=N/A)</div><div class="line"></div><div class="line">  -C, --check           don<span class="string">'t make any changes; instead, try to predict some    #只是测试一下会改变什么内容，不会真正去执行;相反,试图预测一些可能发生的变化</span></div><div class="line">                        of the changes that may occur</div><div class="line"></div><div class="line">  -c CONNECTION, --connection=CONNECTION                        # 连接类型使用。可能的选项是paramiko(SSH),SSH和地方。当地主要是用于crontab或启动。</div><div class="line">                        connection type to use (default=smart)</div><div class="line"></div><div class="line">  -e EXTRA_VARS, --extra-vars=EXTRA_VARS                        # 调用外部变量</div><div class="line"></div><div class="line">  -f FORKS, --forks=FORKS                                       # Ansible一次命令执行并发的线程数,默认是5</div><div class="line">                        specify number of parallel processes to use</div><div class="line">                        (default=5)</div><div class="line"></div><div class="line">  -h, --help            show this help message and exit         #打开帮助文档API</div><div class="line"></div><div class="line">  -i INVENTORY, --inventory-file=INVENTORY                      #指定库存主机文件的路径,默认为/etc/ansible/hosts</div><div class="line">                        specify inventory host file</div><div class="line">                        (default=/etc/ansible/hosts)</div><div class="line"></div><div class="line">  -l SUBSET, --limit=SUBSET                                     #进一步限制所选主机/组模式  --limit=192.168.91.135 只对这个ip执行</div><div class="line">                        further limit selected hosts to an additional pattern</div><div class="line"></div><div class="line">  --list-hosts          outputs a list of matching hosts; does not execute</div><div class="line">                        anything else</div><div class="line"></div><div class="line">  -m MODULE_NAME, --module-name=MODULE_NAME                     #执行模块的名字，默认使用 command 模块，所以如果是只执行单一命令可以不用 -m参数</div><div class="line">                        module name to execute (default=command)</div><div class="line"></div><div class="line">  -M MODULE_PATH, --module-path=MODULE_PATH                     #要执行的模块的路径，默认为/usr/share/ansible/</div><div class="line">                        specify path(s) to module library</div><div class="line">                        (default=/usr/share/ansible/)</div><div class="line"></div><div class="line">  -o, --one-line        condense output                         #压缩输出，摘要输出.尝试一切都在一行上输出。</div><div class="line"></div><div class="line">  -P POLL_INTERVAL, --poll=POLL_INTERVAL                        #调查背景工作每隔数秒。需要- b</div><div class="line">                        set the poll interval if using -B (default=15)</div><div class="line"></div><div class="line">  --private-key=PRIVATE_KEY_FILE                                #私钥路径，使用这个文件来验证连接</div><div class="line">                        use this file to authenticate the connection</div><div class="line"></div><div class="line">  -S, --su              run operations with su    用 su 命令</div><div class="line"></div><div class="line">  -R SU_USER, --su-user=SU_USER                                 #指定SU的用户，默认是root用户</div><div class="line">                        run operations with su as this user (default=root)</div><div class="line"></div><div class="line">  -s, --sudo            run operations with sudo (nopasswd)    </div><div class="line"></div><div class="line">  -U SUDO_USER, --sudo-user=SUDO_USER                           #sudo到哪个用户，默认为 root  </div><div class="line">                        desired sudo user (default=root)</div><div class="line"></div><div class="line">  -T TIMEOUT, --timeout=TIMEOUT                                 #指定SSH默认超时时间，  默认是10S</div><div class="line">                        override the SSH timeout in seconds (default=10)</div><div class="line"></div><div class="line">  -t TREE, --tree=TREE  log output to this directory            #将日志内容保存在该输出目录,结果保存在一个文件中在每台主机上。</div><div class="line"></div><div class="line">  -u REMOTE_USER, --user=REMOTE_USER                            #远程用户， 默认是root用户</div><div class="line">                        connect as this user (default=root)</div><div class="line"></div><div class="line">  --vault-password-file=VAULT_PASSWORD_FILE  </div><div class="line">                        vault password file</div><div class="line"></div><div class="line">  -v, --verbose         verbose mode (-vvv for more, -vvvv to enable    #详细信息</div><div class="line">                        connection debugging)</div><div class="line"></div><div class="line">  --version             show program's version number and <span class="built_in">exit</span>  <span class="comment">#输出ansible的版本</span></div></pre></td></tr></table></figure>
<p><strong>主要组成部分：</strong></p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div></pre></td><td class="code"><pre><div class="line">1. ANSIBLE PLAYBOOKS ：任务剧本（任务集），编排定义 Ansible 任务集的配置文件，由 Ansible 顺序依次执行，通常是 JSON 格式的 YML 文件；</div><div class="line">2. INVENTORY ： Ansible 管理主机的清单；</div><div class="line">3. MODULES ： Ansible 执行命令的功能模块，多数为内置的核心模块，也可自定义；</div><div class="line">4. PLUGINS ：模块功能的补充，如连接类型插件、循环插件、变量插件、过滤插件等，该功能不常用。</div><div class="line">5. API ：供第三方程序调用的应用程序编程接口</div><div class="line">6. ANSIBLE ：该部分图中表示的不明显，组合 INVENTORY 、API 、 MODULES 、 PLUGINS 的绿框大家可以理解为是ansible 命令工具，其为核心执行工具；</div></pre></td></tr></table></figure>
<p><br></p>
<h4 id="Ansible主机清单配置"><a href="#Ansible主机清单配置" class="headerlink" title="Ansible主机清单配置"></a><font size="3" color="#38B0DE">Ansible主机清单配置</font></h4><p>路径：<code>/etc/ansible/hosts</code></p>
<p>使用方法：</p>
<figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div></pre></td><td class="code"><pre><div class="line"><span class="comment"># 定义一个主机组</span></div><div class="line">[web]</div><div class="line">172.16.1.100</div><div class="line">172.16.1.70</div><div class="line">172.16.1.20</div><div class="line">172.16.4.10</div></pre></td></tr></table></figure>
<hr>
<div class="note info"><h3 id="Ansible中模块的使用"><a href="#Ansible中模块的使用" class="headerlink" title="Ansible中模块的使用"></a>Ansible中模块的使用</h3></div>
<h4 id="Ansible模块"><a href="#Ansible模块" class="headerlink" title="Ansible模块"></a><font size="4" color="#32CD99">Ansible模块</font></h4><ul>
<li>command模块：使用ansible自带模块执行命令 如果要用 &gt; &lt; | &amp; ‘ ‘ 使用shell模块</li>
</ul>
<figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div></pre></td><td class="code"><pre><div class="line">$ ansible web -m <span class="built_in">command</span> <span class="_">-a</span> <span class="string">'ls -l /root'</span></div><div class="line">172.16.1.70 | SUCCESS | rc=0 &gt;&gt;</div><div class="line">total 16</div><div class="line">-rw-r--r--  1 root root   29 Jun 20 23:11 1.log</div><div class="line">-rw-------. 1 root root 2642 May 25 23:19 anaconda-ks.cfg</div><div class="line">-rw-r--r--  1 root root  171 May 25 17:34 local.repo</div><div class="line">-rw-r--r--  1 root root   58 Jun 20 23:10 run.sh.log</div><div class="line"></div><div class="line">172.16.1.21 | SUCCESS | rc=0 &gt;&gt;</div><div class="line">total 12</div><div class="line">-rw-------. 1 root root 2640 May 27 19:26 anaconda-ks.cfg</div><div class="line">-rw-r--r--  1 root root  171 May 27 11:30 local.repo</div><div class="line">-rw-r--r--  1 root root   58 Jun 20 23:09 run.sh.log</div><div class="line"></div><div class="line">172.16.1.100 | SUCCESS | rc=0 &gt;&gt;</div><div class="line">total 32</div><div class="line">-rw-------. 1 root root 2640 May 26 15:00 anaconda-ks.cfg</div><div class="line">drwxr-xr-x  2 root root 4096 Jun 21 03:27 ansible-yml</div><div class="line">-rw-------  1 root root  419 Jun 20 14:43 crypt.yml</div><div class="line"></div><div class="line"><span class="comment"># 相关选项如下：</span></div><div class="line">creates：一个文件名，当该文件存在，则该命令不执行</div><div class="line">free_form：要执行的linux指令</div><div class="line"><span class="built_in">chdir</span>：在执行指令之前，先切换到该目录</div><div class="line">removes：一个文件名，当该文件不存在，则该选项不执行</div><div class="line">executable：切换shell来执行指令，该执行路径必须是一个绝对路径</div></pre></td></tr></table></figure>
<p><br></p>
<ul>
<li>shell模块：调用bash执行命令</li>
</ul>
<figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div></pre></td><td class="code"><pre><div class="line">$ ansible web -m shell <span class="_">-a</span> <span class="string">'useradd maxieuser &amp;&amp; echo root@123 | passwd --stdin maxieuser'</span></div><div class="line">172.16.1.70 | SUCCESS | rc=0 &gt;&gt;</div><div class="line">Changing password <span class="keyword">for</span> user maxieuser.</div><div class="line">passwd: all authentication tokens updated successfully.</div><div class="line"></div><div class="line">172.16.1.21 | SUCCESS | rc=0 &gt;&gt;</div><div class="line">Changing password <span class="keyword">for</span> user maxieuser.</div><div class="line">passwd: all authentication tokens updated successfully.</div><div class="line"></div><div class="line">172.16.1.100 | SUCCESS | rc=0 &gt;&gt;</div><div class="line">Changing password <span class="keyword">for</span> user maxieuser.</div><div class="line">passwd: all authentication tokens updated successfully.</div></pre></td></tr></table></figure>
<p><br></p>
<ul>
<li>copy模块：复制本地文件至远程服务器，并能够修改其属性</li>
</ul>
<p>源文件复制：<br><img src="https://ws1.sinaimg.cn/large/006tNbRwly1fhbnqixyt9j31hy1fae81.jpg" alt=""></p>
<figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div></pre></td><td class="code"><pre><div class="line"><span class="comment"># 相关的选项</span></div><div class="line">backup：在覆盖之前，将源文件备份，备份文件包含时间信息。有两个选项：yes|no</div><div class="line">content：用于替代“src”，可以直接设定指定文件的值</div><div class="line">dest：必选项。要将源文件复制到的远程主机的绝对路径，如果源文件是一个目录，那么该路径也必须是个目录</div><div class="line">directory_mode：递归设定目录的权限，默认为系统默认权限</div><div class="line">force：如果目标主机包含该文件，但内容不同，如果设置为yes，则强制覆盖，如果为no，则只有当目标主机的目标位置不存在该文件时，才复制。默认为yes</div><div class="line">others：所有的file模块里的选项都可以在这里使用</div><div class="line">src：被复制到远程主机的本地文件，可以是绝对路径，也可以是相对路径。如果路径是一个目录，它将递归复制。在这种情况下，如果路径使用“/”来结尾，则只复制目录里的内容，如果没有使用“/”来结尾，则包含目录在内的整个内容全部复制，类似于rsync。</div></pre></td></tr></table></figure>
<p><br></p>
<ul>
<li>file模块：设置文件属性</li>
</ul>
<figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div></pre></td><td class="code"><pre><div class="line">$ ansible web -m file <span class="_">-a</span> <span class="string">'path=/tmp/df.txt mode="0600" owner="maxie" group="root"'</span></div><div class="line">172.16.4.10 | SUCCESS =&gt; &#123;</div><div class="line">    <span class="string">"changed"</span>: <span class="literal">true</span>,</div><div class="line">    <span class="string">"gid"</span>: 0,</div><div class="line">    <span class="string">"group"</span>: <span class="string">"root"</span>,</div><div class="line">    <span class="string">"mode"</span>: <span class="string">"0600"</span>,</div><div class="line">    <span class="string">"owner"</span>: <span class="string">"maxie"</span>,</div><div class="line">    <span class="string">"path"</span>: <span class="string">"/tmp/df.txt"</span>,</div><div class="line">    <span class="string">"size"</span>: 370,</div><div class="line">    <span class="string">"state"</span>: <span class="string">"file"</span>,</div><div class="line">    <span class="string">"uid"</span>: 500</div><div class="line">&#125;</div><div class="line">$ ansible web -m shell <span class="_">-a</span> <span class="string">'ls -l /tmp/df*'</span></div><div class="line">172.16.4.10 | SUCCESS | rc=0 &gt;&gt;</div><div class="line">-rw------- 1 maxie root 370 Apr 24 14:40 /tmp/df.txt</div><div class="line"></div><div class="line"></div><div class="line"><span class="comment"># 相关选项</span></div><div class="line">force：需要在两种情况下强制创建软链接，一种是源文件不存在，但之后会建立的情况下；另一种是目标软链接已存在，需要先取消之前的软链，然后创建新的软链，有两个选项：yes|no</div><div class="line">group：定义文件/目录的属组</div><div class="line">mode：定义文件/目录的权限</div><div class="line">owner：定义文件/目录的属主</div><div class="line">path：必选项，定义文件/目录的路径</div><div class="line">recurse：递归设置文件的属性，只对目录有效</div><div class="line">src：被链接的源文件路径，只应用于state=link的情况</div><div class="line">dest：被链接到的路径，只应用于state=link的情况</div><div class="line">state：</div><div class="line">       directory：如果目录不存在，就创建目录</div><div class="line">       file：即使文件不存在，也不会被创建</div><div class="line">       link：创建软链接</div><div class="line">       hard：创建硬链接</div><div class="line">       touch：如果文件不存在，则会创建一个新的文件，如果文件或目录已存在，则更新其最后修改时间</div><div class="line">       absent：删除目录、文件或者取消链接文件</div></pre></td></tr></table></figure>
<p><br></p>
<ul>
<li>fetch模块：从远程服务器拉取文件至本机；只能fetch文件，不能fetch目录；如果需要拉目录，先打包，再拉到本机。</li>
</ul>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div></pre></td><td class="code"><pre><div class="line">$ ansible web -m fetch -a &apos;src=/tmp/df.txt dest=/tmp&apos;</div><div class="line">172.16.4.10 | SUCCESS =&gt; &#123;</div><div class="line">    &quot;changed&quot;: true,</div><div class="line">    &quot;checksum&quot;: &quot;d77170b4ae2eb1b70d7a3787ceba087639c1ee4d&quot;,</div><div class="line">    &quot;dest&quot;: &quot;/tmp/172.16.4.10/tmp/df.txt&quot;,</div><div class="line">    &quot;md5sum&quot;: &quot;9a83dbdbebebe174cbdc65ef39a0d905&quot;,</div><div class="line">    &quot;remote_checksum&quot;: &quot;d77170b4ae2eb1b70d7a3787ceba087639c1ee4d&quot;,</div><div class="line">    &quot;remote_md5sum&quot;: null</div><div class="line">&#125;</div></pre></td></tr></table></figure>
<p><br></p>
<ul>
<li>cron模块：定时执行任务的模块</li>
</ul>
<figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div><div class="line">37</div><div class="line">38</div><div class="line">39</div><div class="line">40</div><div class="line">41</div><div class="line">42</div><div class="line">43</div><div class="line">44</div><div class="line">45</div><div class="line">46</div><div class="line">47</div><div class="line">48</div><div class="line">49</div><div class="line">50</div><div class="line">51</div><div class="line">52</div><div class="line">53</div><div class="line">54</div><div class="line">55</div><div class="line">56</div><div class="line">57</div><div class="line">58</div><div class="line">59</div><div class="line">60</div><div class="line">61</div><div class="line">62</div><div class="line">63</div><div class="line">64</div></pre></td><td class="code"><pre><div class="line">$ ansible web -m cron <span class="_">-a</span> <span class="string">'name="disk check" minute="15" hour="3" job="df -lh &gt;&gt; df.log" weekday=0'</span></div><div class="line">172.16.1.70 | SUCCESS =&gt; &#123;</div><div class="line">    <span class="string">"changed"</span>: <span class="literal">true</span>,</div><div class="line">    <span class="string">"envs"</span>: [],</div><div class="line">    <span class="string">"jobs"</span>: [</div><div class="line">        <span class="string">"disk check"</span></div><div class="line">    ]</div><div class="line">&#125;</div><div class="line">172.16.1.20 | SUCCESS =&gt; &#123;</div><div class="line">    <span class="string">"changed"</span>: <span class="literal">true</span>,</div><div class="line">    <span class="string">"envs"</span>: [],</div><div class="line">    <span class="string">"jobs"</span>: [</div><div class="line">        <span class="string">"disk check"</span></div><div class="line">    ]</div><div class="line">&#125;</div><div class="line">172.16.1.100 | SUCCESS =&gt; &#123;</div><div class="line">    <span class="string">"changed"</span>: <span class="literal">true</span>,</div><div class="line">    <span class="string">"envs"</span>: [],</div><div class="line">    <span class="string">"jobs"</span>: [</div><div class="line">        <span class="string">"disk check"</span></div><div class="line">    ]</div><div class="line">&#125;</div><div class="line">$ crontab <span class="_">-l</span></div><div class="line"><span class="comment">#Ansible: disk check</span></div><div class="line">15 3 * * 0 df -lh &gt;&gt; df.log</div><div class="line"></div><div class="line"></div><div class="line"><span class="string">'删除计划任务：'</span></div><div class="line">$ ansible web -m cron <span class="_">-a</span> <span class="string">'state=absent name="disk check"'</span></div><div class="line">172.16.1.70 | SUCCESS =&gt; &#123;</div><div class="line">    <span class="string">"changed"</span>: <span class="literal">true</span>,</div><div class="line">    <span class="string">"envs"</span>: [],</div><div class="line">    <span class="string">"jobs"</span>: []</div><div class="line">&#125;</div><div class="line">172.16.1.20 | SUCCESS =&gt; &#123;</div><div class="line">    <span class="string">"changed"</span>: <span class="literal">true</span>,</div><div class="line">    <span class="string">"envs"</span>: [],</div><div class="line">    <span class="string">"jobs"</span>: []</div><div class="line">&#125;</div><div class="line">172.16.1.100 | SUCCESS =&gt; &#123;</div><div class="line">    <span class="string">"changed"</span>: <span class="literal">true</span>,</div><div class="line">    <span class="string">"envs"</span>: [],</div><div class="line">    <span class="string">"jobs"</span>: []</div><div class="line">&#125;</div><div class="line">[root@<span class="built_in">test</span>-1 ~]<span class="comment"># crontab -l</span></div><div class="line"></div><div class="line"><span class="comment"># 相关的选项</span></div><div class="line">- a <span class="string">""</span>: 设置管理节点生成定时任务</div><div class="line">action: cron</div><div class="line">backup=    <span class="comment"># 如果设置，创建一个crontab备份</span></div><div class="line">cron_file=          <span class="comment">#如果指定, 使用这个文件cron.d，而不是单个用户crontab</span></div><div class="line">day=       <span class="comment"># 日应该运行的工作( 1-31, *, */2, etc )</span></div><div class="line">hour=      <span class="comment"># 小时 ( 0-23, *, */2, etc )</span></div><div class="line">job=       <span class="comment">#指明运行的命令是什么</span></div><div class="line">minute=    <span class="comment">#分钟( 0-59, *, */2, etc )</span></div><div class="line">month=     <span class="comment"># 月( 1-12, *, */2, etc )</span></div><div class="line">name=     <span class="comment">#定时任务描述</span></div><div class="line">reboot    <span class="comment"># 任务在重启时运行，不建议使用，建议使用special_time</span></div><div class="line">special_time       <span class="comment"># 特殊的时间范围，参数：reboot（重启时）,annually（每年）,monthly（每月）,weekly（每周）,daily（每天）,hourly（每小时）</span></div><div class="line"></div><div class="line">state        <span class="comment">#指定状态，prsent表示添加定时任务，也是默认设置，absent表示删除定时任务</span></div><div class="line"></div><div class="line">user         <span class="comment"># 以哪个用户的身份执行</span></div><div class="line">weekday      <span class="comment"># 周 ( 0-6 for Sunday-Saturday, *, etc )</span></div></pre></td></tr></table></figure>
<p><br></p>
<ul>
<li>yum模块：yum安装软件</li>
</ul>
<figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div></pre></td><td class="code"><pre><div class="line">$ ansible mageduweb -m yum <span class="_">-a</span> <span class="string">'name=httpd state=latest'</span>  //安装httpd包</div><div class="line"></div><div class="line"><span class="comment"># 相关选项</span></div><div class="line">conf_file           <span class="comment">#设定远程yum安装时所依赖的配置文件。如配置文件没有在默认的位置。</span></div><div class="line">disable_gpg_check   <span class="comment">#是否禁止GPG checking，只用于`present' or `latest'。</span></div><div class="line">disablerepo         <span class="comment">#临时禁止使用yum库。 只用于安装或更新时。</span></div><div class="line">enablerepo          <span class="comment">#临时使用的yum库。只用于安装或更新时。</span></div><div class="line">name=               <span class="comment">#所安装的包的名称</span></div><div class="line">state               <span class="comment">#present安装， latest安装最新的, absent 卸载软件。</span></div><div class="line">update_cache        <span class="comment">#强制更新yum的缓存。</span></div></pre></td></tr></table></figure>
<p><br></p>
<ul>
<li>service模块：服务程序管理</li>
</ul>
<figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div></pre></td><td class="code"><pre><div class="line">$ ansible web -m service <span class="_">-a</span> <span class="string">'name=httpd state=started'</span></div><div class="line"></div><div class="line"><span class="comment"># 相关选项</span></div><div class="line">arguments           <span class="comment">#命令行提供额外的参数</span></div><div class="line">enabled             <span class="comment">#设置开机启动。</span></div><div class="line">name=               <span class="comment">#服务名称</span></div><div class="line">runlevel            <span class="comment">#开机启动的级别，一般不用指定。</span></div><div class="line">sleep               <span class="comment">#在重启服务的过程中，是否等待。如在服务关闭以后等待2秒再启动。</span></div><div class="line">state               <span class="comment">#started启动服务， stopped停止服务， restarted重启服务， reloaded重载配置</span></div></pre></td></tr></table></figure>
<p><br></p>
<ul>
<li>user模块：用户管理</li>
</ul>
<figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div></pre></td><td class="code"><pre><div class="line">$ ansible web -m user <span class="_">-a</span> <span class="string">'name=tom comment="tom user" shell=/bin/bash uid=1007 groups=maxie home=/home/tomhome'</span></div><div class="line"></div><div class="line"><span class="comment"># 相关选项</span></div><div class="line">comment         <span class="comment"># 用户的描述信息</span></div><div class="line">createhom       <span class="comment"># 是否创建家目录</span></div><div class="line">force           <span class="comment"># 在使用`state=absent'是, 行为与`userdel --force'一致.</span></div><div class="line">group           <span class="comment"># 指定基本组</span></div><div class="line">groups          <span class="comment"># 指定附加组，如果指定为('groups=')表示删除所有组</span></div><div class="line">home            <span class="comment"># 指定用户家目录</span></div><div class="line">login_class     <span class="comment">#可以设置用户的登录类 FreeBSD, OpenBSD and NetBSD系统.</span></div><div class="line">move_home       <span class="comment"># 如果设置为`home='时, 试图将用户主目录移动到指定的目录</span></div><div class="line">name=           <span class="comment"># 指定用户名</span></div><div class="line">non_unique      <span class="comment"># 该选项允许改变非唯一的用户ID值</span></div><div class="line">password        <span class="comment"># 指定用户密码</span></div><div class="line">remove          <span class="comment"># 在使用 `state=absent'时, 行为是与 `userdel --remove'一致.</span></div><div class="line">shell           <span class="comment"># 指定默认shell</span></div><div class="line">state           <span class="comment">#设置帐号状态，不指定为创建，指定值为absent表示删除</span></div><div class="line">system          <span class="comment"># 当创建一个用户，设置这个用户是系统用户。这个设置不能更改现有用户。</span></div><div class="line">uid             <span class="comment">#指定用户的uid</span></div><div class="line">update_password <span class="comment"># 更新用户密码</span></div><div class="line">expires         <span class="comment">#指明密码的过期时间</span></div></pre></td></tr></table></figure>
<p><br></p>
<ul>
<li>group模块：组管理</li>
</ul>
<figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div></pre></td><td class="code"><pre><div class="line">$ ansible web -m group <span class="_">-a</span> <span class="string">'name=test gid=1001'</span></div><div class="line"></div><div class="line"><span class="comment"># 相关选项</span></div><div class="line">gid       <span class="comment"># 设置组的GID号</span></div><div class="line">name=     <span class="comment"># 管理组的名称</span></div><div class="line">state     <span class="comment"># 指定组状态，默认为创建，设置值为absent为删除</span></div><div class="line">system    <span class="comment"># 设置值为yes，表示为创建系统组</span></div></pre></td></tr></table></figure>
<p><br></p>
<ul>
<li>ping模块：检测主机是否存活</li>
</ul>
<p><br></p>
<ul>
<li>setup模块：获取指定主机的facts<br>facts就是变量，内建变量 。每个主机的各种信息，cpu颗数、内存大小等。会存在facts中的某个变量中。调用后返回很多对应主机的信息，在后面的操作中可以根据不同的信息来做不同的操作</li>
</ul>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">$ ansible web -m setup</div></pre></td></tr></table></figure>
<p><br></p>
<ul>
<li>selinux模块：管理selinux</li>
</ul>
<figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div></pre></td><td class="code"><pre><div class="line">$ ansible web -m selinux <span class="_">-a</span> <span class="string">'state=disabled'</span></div><div class="line"></div><div class="line"><span class="comment"># 相关选项</span></div><div class="line">conf                                    <span class="comment">#指定应用selinux的配置文件。</span></div><div class="line">state=enforcing|permissive|disabled     <span class="comment">#对应于selinux配置文件的SELINUX。</span></div><div class="line">policy=targeted|minimum|mls             <span class="comment">#对应于selinux配置文件的SELINUXTYPE</span></div></pre></td></tr></table></figure>
<p><br></p>
<ul>
<li>script脚本模块：将本地的脚本复制到远程主机并在远程主机执行</li>
</ul>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">$ ansible web -m script -a &apos;/root/run.sh&apos;</div></pre></td></tr></table></figure>
<p><br></p>
<ul>
<li>hostname模块：与系统命令无关，直接修改  比如centos6和centos7</li>
</ul>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div></pre></td><td class="code"><pre><div class="line">$ ansible 172.16.1.100 -m hostname -a &apos;name=master&apos;</div><div class="line">172.16.1.100 | SUCCESS =&gt; &#123;</div><div class="line">    &quot;ansible_facts&quot;: &#123;</div><div class="line">        &quot;ansible_domain&quot;: &quot;&quot;,</div><div class="line">        &quot;ansible_fqdn&quot;: &quot;master&quot;,</div><div class="line">        &quot;ansible_hostname&quot;: &quot;master&quot;,</div><div class="line">        &quot;ansible_nodename&quot;: &quot;master&quot;</div><div class="line">    &#125;,</div><div class="line">    &quot;changed&quot;: true,</div><div class="line">    &quot;name&quot;: &quot;master&quot;</div><div class="line">&#125;</div></pre></td></tr></table></figure>
<hr>
<div class="note success"><h3 id="Ansible实践练习题"><a href="#Ansible实践练习题" class="headerlink" title="Ansible实践练习题"></a>Ansible实践练习题</h3></div>
<h4 id="使用yml配置文件，执行拷贝文件的功能"><a href="#使用yml配置文件，执行拷贝文件的功能" class="headerlink" title="使用yml配置文件，执行拷贝文件的功能"></a><font size="4" color="#32CD99">使用yml配置文件，执行拷贝文件的功能</font></h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div><div class="line">37</div><div class="line">38</div><div class="line">39</div><div class="line">40</div><div class="line">41</div><div class="line">42</div><div class="line">43</div><div class="line">44</div></pre></td><td class="code"><pre><div class="line">$ vim copy.yml</div><div class="line">---</div><div class="line"></div><div class="line">- hosts: web</div><div class="line">  remote_user: root</div><div class="line"></div><div class="line">  tasks:</div><div class="line">    - name: coyp file</div><div class="line">      copy: src=/etc/issue dest=/tmp/my.txt owner=maxiecloud backup=yes mode=0660</div><div class="line"></div><div class="line">$ ansible-playbook nginx.yml</div><div class="line"></div><div class="line">PLAY [web] *********************************************************************</div><div class="line"></div><div class="line">TASK [setup] *******************************************************************</div><div class="line">ok: [172.16.4.10]</div><div class="line">ok: [172.16.1.70]</div><div class="line">ok: [172.16.1.20]</div><div class="line">ok: [172.16.1.100]</div><div class="line"></div><div class="line">TASK [coyp file] ***************************************************************</div><div class="line">changed: [172.16.4.10]</div><div class="line">changed: [172.16.1.70]</div><div class="line">changed: [172.16.1.20]</div><div class="line">changed: [172.16.1.100]</div><div class="line"></div><div class="line">PLAY RECAP *********************************************************************</div><div class="line">172.16.1.100               : ok=2    changed=1    unreachable=0    failed=0</div><div class="line">172.16.1.20                : ok=2    changed=1    unreachable=0    failed=0</div><div class="line">172.16.1.70                : ok=2    changed=1    unreachable=0    failed=0</div><div class="line">172.16.4.10                : ok=2    changed=1    unreachable=0    failed=0</div><div class="line"></div><div class="line">$ ansible web -m shell -a &apos;ls -l /tmp/*.txt&apos;</div><div class="line">172.16.4.10 | SUCCESS | rc=0 &gt;&gt;</div><div class="line">-rw-rw---- 1 maxiecloud root 79 Apr 24 19:51 /tmp/my.txt</div><div class="line"></div><div class="line">172.16.1.20 | SUCCESS | rc=0 &gt;&gt;</div><div class="line">-rw-rw---- 1 maxiecloud root 79 Jun 21 02:21 /tmp/my.txt</div><div class="line"></div><div class="line">172.16.1.70 | SUCCESS | rc=0 &gt;&gt;</div><div class="line">-rw-rw---- 1 maxiecloud root 79 Jun 21 02:22 /tmp/my.txt</div><div class="line"></div><div class="line">172.16.1.100 | SUCCESS | rc=0 &gt;&gt;</div><div class="line">-rw-rw---- 1 maxiecloud root 79 Jun 20 17:50 /tmp/my.txt</div></pre></td></tr></table></figure>
<h4 id="使用yml配置文件，启动-amp-安装HTTPD"><a href="#使用yml配置文件，启动-amp-安装HTTPD" class="headerlink" title="使用yml配置文件，启动&amp;安装HTTPD"></a><font size="4" color="#32CD99">使用yml配置文件，启动&amp;安装HTTPD</font></h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div></pre></td><td class="code"><pre><div class="line">$ vim httpd.yml</div><div class="line">---</div><div class="line"></div><div class="line">- hosts: web</div><div class="line">  remote_user: root</div><div class="line">  tasks:</div><div class="line">  - name: &quot;remove appache&quot;</div><div class="line">    command: yum remove -y -q httpd httpd-devel</div><div class="line">  - name: &quot;install apache&quot;</div><div class="line">    command: yum install -y -q httpd httpd-devel</div><div class="line">  - name: &quot;stop nginx&quot;</div><div class="line">    service: name=nginx state=stopped</div><div class="line">  - name: &quot;restart httpd&quot;</div><div class="line">    service: name=httpd state=restarted</div><div class="line"></div><div class="line">$ ansible-playbook  httpd.yml</div></pre></td></tr></table></figure>
<h4 id="使用yml，创建用户，并配置其属性"><a href="#使用yml，创建用户，并配置其属性" class="headerlink" title="使用yml，创建用户，并配置其属性"></a><font size="4" color="#32CD99">使用yml，创建用户，并配置其属性</font></h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div></pre></td><td class="code"><pre><div class="line">$ vim adduser.yml</div><div class="line">---</div><div class="line">- hosts: web</div><div class="line">  remote_user: root</div><div class="line"></div><div class="line">  tasks:</div><div class="line">    - name: useradd maxie1</div><div class="line">      user: name=maxie1 home=/home/maxie1 shell=/bin/bash uid=1200</div><div class="line">    - name: useradd maxie2</div><div class="line">      user: name=maxie2 home=/home/maxie2 shell=/bin/bash uid=1201</div><div class="line"></div><div class="line">$ ansible-playbook adduser.yml</div></pre></td></tr></table></figure>
<h4 id="使用YML配置文件，使用变量-m-setup，并在yml中引用变量"><a href="#使用YML配置文件，使用变量-m-setup，并在yml中引用变量" class="headerlink" title="使用YML配置文件，使用变量 -m setup，并在yml中引用变量"></a><font size="4" color="#32CD99">使用YML配置文件，使用变量 -m setup，并在yml中引用变量</font></h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div></pre></td><td class="code"><pre><div class="line">$ vim nginx.yml</div><div class="line">---</div><div class="line"></div><div class="line">- hosts: web</div><div class="line">  remote_user: root</div><div class="line"></div><div class="line">  tasks:</div><div class="line">    - name: install nginx</div><div class="line">      command: yum install -y -q nginx</div><div class="line">    - name: install httpd</div><div class="line">      command: yum install -y -q httpd</div><div class="line">    - name: nginx processor</div><div class="line">      template: src=/root/ansible-yml/nginx.conf.j2 dest=/etc/nginx/nginx.conf</div><div class="line">    - name: stop httpd</div><div class="line">      service: name=httpd state=stopped</div><div class="line">    - name: start nginx</div><div class="line">      service: name=nginx state=started</div><div class="line">    - name: grep nginx</div><div class="line">      shell: ss -tnlp | grep nginx</div><div class="line"></div><div class="line">$ ansible web -m setup  | grep processor_vcpus</div></pre></td></tr></table></figure>
<h4 id="使用变量配置nginx中虚拟主机的监听端口号"><a href="#使用变量配置nginx中虚拟主机的监听端口号" class="headerlink" title="使用变量配置nginx中虚拟主机的监听端口号"></a><font size="4" color="#32CD99">使用变量配置nginx中虚拟主机的监听端口号</font></h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div></pre></td><td class="code"><pre><div class="line">$ vim /etc/ansible/hosts</div><div class="line">[web]</div><div class="line">172.16.1.100 webport=8080 server_name=www1.maxie.com</div><div class="line">172.16.1.70 webport=8081 server_name=www2.maxie.com</div><div class="line">172.16.1.20 webport=8082 server_name=www3.maxie.com</div><div class="line"></div><div class="line">$ vim ansible-yml/maxie.conf.j2</div><div class="line">server &#123;</div><div class="line">        listen &#123;&#123; webport &#125;&#125;;</div><div class="line">        server_name &#123;&#123; server_name &#125;&#125;;</div><div class="line">        root    /data/web/;</div><div class="line">        location / &#123;</div><div class="line">                root    /data/web/;</div><div class="line">                index   index.html;</div><div class="line">        &#125;</div><div class="line">&#125;</div><div class="line"></div><div class="line">$ vim nginx.yml</div><div class="line">---</div><div class="line"></div><div class="line">- hosts: web</div><div class="line">  remote_user: root</div><div class="line"></div><div class="line">  tasks:</div><div class="line">    - name: install nginx</div><div class="line">      command: yum install -y -q nginx</div><div class="line">    - name: install httpd</div><div class="line">      command: yum install -y -q httpd</div><div class="line">    - name: nginx processor</div><div class="line">      template: src=/root/ansible-yml/nginx.conf.j2 dest=/etc/nginx/nginx.conf</div><div class="line">    - name: stop httpd</div><div class="line">      service: name=httpd state=stopped</div><div class="line">    - name: start nginx</div><div class="line">      service: name=nginx state=started</div><div class="line">    - name: grep nginx</div><div class="line">      shell: ss -tnlp | grep nginx</div></pre></td></tr></table></figure>
<h4 id="roles实验"><a href="#roles实验" class="headerlink" title="roles实验"></a><font size="4" color="#32CD99">roles实验</font></h4><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div><div class="line">37</div><div class="line">38</div><div class="line">39</div><div class="line">40</div><div class="line">41</div><div class="line">42</div><div class="line">43</div><div class="line">44</div><div class="line">45</div><div class="line">46</div><div class="line">47</div><div class="line">48</div><div class="line">49</div><div class="line">50</div><div class="line">51</div><div class="line">52</div><div class="line">53</div><div class="line">54</div><div class="line">55</div><div class="line">56</div><div class="line">57</div><div class="line">58</div><div class="line">59</div><div class="line">60</div><div class="line">61</div><div class="line">62</div><div class="line">63</div><div class="line">64</div><div class="line">65</div><div class="line">66</div><div class="line">67</div><div class="line">68</div><div class="line">69</div><div class="line">70</div><div class="line">71</div><div class="line">72</div><div class="line">73</div><div class="line">74</div><div class="line">75</div><div class="line">76</div><div class="line">77</div><div class="line">78</div><div class="line">79</div><div class="line">80</div><div class="line">81</div><div class="line">82</div><div class="line">83</div><div class="line">84</div><div class="line">85</div><div class="line">86</div><div class="line">87</div><div class="line">88</div><div class="line">89</div><div class="line">90</div><div class="line">91</div><div class="line">92</div><div class="line">93</div><div class="line">94</div><div class="line">95</div><div class="line">96</div><div class="line">97</div><div class="line">98</div><div class="line">99</div><div class="line">100</div><div class="line">101</div><div class="line">102</div><div class="line">103</div></pre></td><td class="code"><pre><div class="line"><span class="comment"># 1、在/etc/ansible/roles目录下创建：</span></div><div class="line">	$ mkdir nginx/&#123;tasks,files,vars,templates,handlers&#125;</div><div class="line"></div><div class="line"></div><div class="line"><span class="comment"># 2、在tasks目录下创建各个任务yml文件：</span></div><div class="line">	$ vim nginx/tasks/init.yml </div><div class="line">	---</div><div class="line">	 - name: init nginx</div><div class="line">	   copy: src=README dest=/etc/nginx/conf.d</div><div class="line"></div><div class="line">	 - name: init nginx.conf</div><div class="line">	   template: src=maxie.conf.j2 dest=/etc/nginx/conf.d/maxie.conf</div><div class="line">	   notify: restart nginx</div><div class="line"></div><div class="line">	$ vim nginx/tasks/install.yml</div><div class="line">	---</div><div class="line">	  - name: install nginx</div><div class="line">	    yum: name=nginx state=installed</div><div class="line"></div><div class="line"></div><div class="line"><span class="comment"># 3、在files和template目录下 创建我们之前设置要拷贝的文件：</span></div><div class="line">	$ vim nginx/files/README</div><div class="line">	Just For ReadMe</div><div class="line"></div><div class="line">	$ vim nginx/templates/maxie.conf.j2</div><div class="line">	server &#123;</div><div class="line">	        listen &#123;&#123; webport &#125;&#125;;</div><div class="line">	        server_name &#123;&#123; server_name &#125;&#125;;</div><div class="line">	        root    /data/web/;</div><div class="line">	        location / &#123;</div><div class="line">	                root    /data/web/;</div><div class="line">	                index   index.html;</div><div class="line">	        &#125;</div><div class="line">	&#125;</div><div class="line"></div><div class="line"></div><div class="line"><span class="comment"># 4、在handler下创建main.yml </span></div><div class="line">	$ vim nginx/handlers/main.yml</div><div class="line">	---</div><div class="line"></div><div class="line">	- name: restart nginx</div><div class="line">	  service: name=nginx state=restarted</div><div class="line"></div><div class="line"></div><div class="line"><span class="comment"># 5、创建变量的mail.yml</span></div><div class="line">	$ vim nginx/vars/mail.yml </div><div class="line">	server_name: www.maxie.com</div><div class="line">	webport: 8080</div><div class="line"></div><div class="line"></div><div class="line"><span class="comment"># 6、创建tasks的main.yml </span></div><div class="line">	$ vim nginx/tasks/main.yml </div><div class="line">	---</div><div class="line"></div><div class="line">	- include: install.yml</div><div class="line">	- include: init.yml</div><div class="line"></div><div class="line"></div><div class="line"><span class="comment"># 7、创建主yml</span></div><div class="line">	$ <span class="built_in">cd</span> /etc/ansible</div><div class="line">	$ vim nginx.yml </div><div class="line">	---</div><div class="line"></div><div class="line">	- hosts: web</div><div class="line">	  remote_user: root</div><div class="line">	  roles:</div><div class="line">	  - nginx</div><div class="line"></div><div class="line"></div><div class="line"><span class="comment"># 8、测试</span></div><div class="line">	$ ansible-playbook nginx.yml</div><div class="line"></div><div class="line">	PLAY [web] *********************************************************************</div><div class="line"></div><div class="line">	TASK [setup] *******************************************************************</div><div class="line">	ok: [172.16.1.70]</div><div class="line">	ok: [172.16.1.21]</div><div class="line">	ok: [172.16.1.100]</div><div class="line"></div><div class="line">	TASK [nginx : install nginx] ***************************************************</div><div class="line">	ok: [172.16.1.21]</div><div class="line">	ok: [172.16.1.70]</div><div class="line">	ok: [172.16.1.100]</div><div class="line"></div><div class="line">	TASK [nginx : init nginx] ******************************************************</div><div class="line">	ok: [172.16.1.21]</div><div class="line">	ok: [172.16.1.70]</div><div class="line">	ok: [172.16.1.100]</div><div class="line"></div><div class="line">	TASK [nginx : init nginx.conf] *************************************************</div><div class="line">	changed: [172.16.1.70]</div><div class="line">	changed: [172.16.1.21]</div><div class="line">	changed: [172.16.1.100]</div><div class="line"></div><div class="line">	RUNNING HANDLER [nginx : restart nginx] ****************************************</div><div class="line">	changed: [172.16.1.70]</div><div class="line">	changed: [172.16.1.21]</div><div class="line">	changed: [172.16.1.100]</div><div class="line"></div><div class="line">	PLAY RECAP *********************************************************************</div><div class="line">	172.16.1.100               : ok=5    changed=2    unreachable=0    failed=0</div><div class="line">	172.16.1.21                : ok=5    changed=2    unreachable=0    failed=0</div><div class="line">	172.16.1.70                : ok=5    changed=2    unreachable=0    failed=0</div></pre></td></tr></table></figure>
<hr>
<p>本文出自<a href="http://maxiecloud.com">Maxie’s Notes</a>博客，转载请务必保留此出处。</p>
<p><img src="https://ww1.sinaimg.cn/large/006tNbRwly1fdzc80odsuj30gn0ilq5m.jpg" alt=""></p>
]]></content>
    
    <summary type="html">
    
      &lt;p&gt;&lt;img src=&quot;https://ws1.sinaimg.cn/large/006tNbRwly1fhbl91dv81j30bj03djr7.jpg&quot; alt=&quot;&quot;&gt;&lt;/p&gt;
&lt;blockquote class=&quot;blockquote-center&quot;&gt;Ansible在我们运维工作中的主要工作就是帮助我们批量自动化部署一些生产上的需求。&lt;br&gt;由于Ansible是用Python开发的，是一款非常轻量级的自动化部署工具。&lt;br&gt;而且Ansible是通过SSH协议来进行管理其他机器的，我们只需要在安装Ansible的主机上编写一个SSH无密钥登陆的脚本，即可实现批量管理机器的工作。&lt;br&gt;&lt;/blockquote&gt;

&lt;p&gt;其实自动化运维工具还有很多，比如&lt;code&gt;puppet&lt;/code&gt;、&lt;code&gt;saltstack&lt;/code&gt;、&lt;code&gt;chef&lt;/code&gt;、&lt;code&gt;cfengine&lt;/code&gt;，这些都可以说是&lt;code&gt;Ansible&lt;/code&gt;的&lt;strong&gt;前辈&lt;/strong&gt;了。但是为什么现在大多数运维岗位的在职人员都使用的是&lt;code&gt;Ansible&lt;/code&gt;这款工具呢？&lt;br&gt;下面就来说一说它的优点：&lt;/p&gt;
&lt;figure class=&quot;highlight bash&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;1&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;2&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;3&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;4&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;5&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;6&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;7&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;1. Agentless：去中心化。也就是使用Ansible无需安装服务端和客户端，只需使用SSH即可。只要一台机器安装了Ansible程序，都是一台强大的管理端。&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;2. Stupied Simple：&lt;span class=&quot;string&quot;&gt;&quot;傻瓜般的简单&quot;&lt;/span&gt;。意味着上手非常简单，学习曲线平滑&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;3. SSH By Default：默认通过SSH连接通信，非常安全。无需安装客户端&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;4. YAML No Code：使用YAML语言定制剧本 --&amp;gt; playbook&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;5. sudo：支持sudo&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;6. 模块化：调用特定模块，完成特定任务，支持自定义模块&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;7. 幂等性：同一个命令/文件 可以被执行多次&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;hr&gt;
    
    </summary>
    
      <category term="linux进阶" scheme="http://maxiecloud.com/categories/linux%E8%BF%9B%E9%98%B6/"/>
    
      <category term="ansible" scheme="http://maxiecloud.com/categories/linux%E8%BF%9B%E9%98%B6/ansible/"/>
    
    
      <category term="linux" scheme="http://maxiecloud.com/tags/linux/"/>
    
      <category term="ansible" scheme="http://maxiecloud.com/tags/ansible/"/>
    
      <category term="automation" scheme="http://maxiecloud.com/tags/automation/"/>
    
  </entry>
  
  <entry>
    <title>MySQL练习题</title>
    <link href="http://maxiecloud.com/2017/07/05/mysql-test-SQL/"/>
    <id>http://maxiecloud.com/2017/07/05/mysql-test-SQL/</id>
    <published>2017-07-05T03:22:05.000Z</published>
    <updated>2017-07-05T08:54:00.000Z</updated>
    
    <content type="html"><![CDATA[<p><img src="https://ws2.sinaimg.cn/large/006tNbRwly1fh8z1osd1aj309t03zt8o.jpg" alt=""></p>
<blockquote class="blockquote-center">这章节，我们对之前所学的MySQL进行一些练习，使用的模板是网络上使用的hellodb.sql<br></blockquote>

<p><a href="https://www.dropbox.com/s/spcnov3w3q29yhk/hellodb.sql?dl=0" target="_blank" rel="external">hellodb.sql下载地址</a></p>
<p>不过需要注意的是，这个模板过于老旧，现在我们使用的<code>MySQL/MariaDB</code>的默认存储引擎都是<code>InnoDB</code>存储引擎，而模板中使用的则是<code>MyISAM</code>，所以我们需要手动进行修改：</p>
<figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">$ sed -i <span class="string">'s@ENGINE=MyISAM@ENGINE=InnoDB@g'</span> hellodb.sql</div></pre></td></tr></table></figure>
<h3 id="实验环境："><a href="#实验环境：" class="headerlink" title="实验环境："></a><font size="4" color="#38B0DE">实验环境：</font></h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div></pre></td><td class="code"><pre><div class="line">$ yum info mariadb</div><div class="line">Loaded plugins: fastestmirror, langpacks</div><div class="line">Loading mirror speeds from cached hostfile</div><div class="line">Installed Packages</div><div class="line">Name        : mariadb</div><div class="line">Arch        : x86_64</div><div class="line">Epoch       : 1</div><div class="line">Version     : 5.5.44</div><div class="line">Release     : 2.el7.centos</div><div class="line">Size        : 48 M</div><div class="line">Repo        : installed</div><div class="line">From repo   : anaconda</div><div class="line">Summary     : A community developed branch of MySQL</div><div class="line">URL         : http://mariadb.org</div><div class="line">License     : GPLv2 with exceptions and LGPLv2 and BSD</div><div class="line">Description : MariaDB is a community developed branch of MySQL.</div><div class="line">            : MariaDB is a multi-user, multi-threaded SQL database server.</div><div class="line">            : It is a client/server implementation consisting of a server daemon</div><div class="line">            : (mysqld) and many different client programs and libraries. The</div><div class="line">            : base package contains the standard MariaDB/MySQL client programs</div><div class="line">            : and generic MySQL files.</div></pre></td></tr></table></figure>
<p>这次我们使用的是<code>MariaDB 5.5.44</code></p>
<p><strong>将hellodb.sql导入至数据库中：</strong></p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">$ mysql -proot@123 &lt; hellodb.sql</div></pre></td></tr></table></figure>
<hr>
<a id="more"></a>
<h3 id="查看各需要操作的表的表结构"><a href="#查看各需要操作的表的表结构" class="headerlink" title="查看各需要操作的表的表结构"></a><font size="4" color="#3299CC">查看各需要操作的表的表结构</font></h3><ul>
<li>students表</li>
</ul>
<figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div></pre></td><td class="code"><pre><div class="line">&gt; desc students;</div><div class="line">+-----------+---------------------+------+-----+---------+----------------+</div><div class="line">| Field     | Type                | Null | Key | Default | Extra          |</div><div class="line">+-----------+---------------------+------+-----+---------+----------------+</div><div class="line">| StuID     | int(10) unsigned    | NO   | PRI | NULL    | auto_increment |</div><div class="line">| Name      | varchar(50)         | NO   |     | NULL    |                |</div><div class="line">| Age       | tinyint(3) unsigned | NO   |     | NULL    |                |</div><div class="line">| Gender    | enum(<span class="string">'F'</span>,<span class="string">'M'</span>)       | NO   |     | NULL    |                |</div><div class="line">| ClassID   | tinyint(3) unsigned | YES  |     | NULL    |                |</div><div class="line">| TeacherID | int(10) unsigned    | YES  |     | NULL    |                |</div><div class="line">+-----------+---------------------+------+-----+---------+----------------+</div><div class="line">6 rows <span class="keyword">in</span> <span class="built_in">set</span> (0.00 sec)</div></pre></td></tr></table></figure>
<p><br></p>
<ul>
<li>classes表</li>
</ul>
<figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div></pre></td><td class="code"><pre><div class="line">&gt; desc classes;</div><div class="line">+----------+----------------------+------+-----+---------+----------------+</div><div class="line">| Field    | Type                 | Null | Key | Default | Extra          |</div><div class="line">+----------+----------------------+------+-----+---------+----------------+</div><div class="line">| ClassID  | tinyint(3) unsigned  | NO   | PRI | NULL    | auto_increment |</div><div class="line">| Class    | varchar(100)         | YES  |     | NULL    |                |</div><div class="line">| NumOfStu | smallint(5) unsigned | YES  |     | NULL    |                |</div><div class="line">+----------+----------------------+------+-----+---------+----------------+</div><div class="line">3 rows <span class="keyword">in</span> <span class="built_in">set</span> (0.00 sec)</div></pre></td></tr></table></figure>
<p><br></p>
<ul>
<li>teachers表</li>
</ul>
<figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div></pre></td><td class="code"><pre><div class="line">&gt; desc teachers;</div><div class="line">+--------+----------------------+------+-----+---------+----------------+</div><div class="line">| Field  | Type                 | Null | Key | Default | Extra          |</div><div class="line">+--------+----------------------+------+-----+---------+----------------+</div><div class="line">| TID    | smallint(5) unsigned | NO   | PRI | NULL    | auto_increment |</div><div class="line">| Name   | varchar(100)         | NO   |     | NULL    |                |</div><div class="line">| Age    | tinyint(3) unsigned  | NO   |     | NULL    |                |</div><div class="line">| Gender | enum(<span class="string">'F'</span>,<span class="string">'M'</span>)        | YES  |     | NULL    |                |</div><div class="line">+--------+----------------------+------+-----+---------+----------------+</div><div class="line">4 rows <span class="keyword">in</span> <span class="built_in">set</span> (0.00 sec)</div></pre></td></tr></table></figure>
<p><br></p>
<ul>
<li>scores表</li>
</ul>
<figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div></pre></td><td class="code"><pre><div class="line">&gt; desc scores;</div><div class="line">+----------+----------------------+------+-----+---------+----------------+</div><div class="line">| Field    | Type                 | Null | Key | Default | Extra          |</div><div class="line">+----------+----------------------+------+-----+---------+----------------+</div><div class="line">| ID       | int(10) unsigned     | NO   | PRI | NULL    | auto_increment |</div><div class="line">| StuID    | int(10) unsigned     | NO   |     | NULL    |                |</div><div class="line">| CourseID | smallint(5) unsigned | NO   |     | NULL    |                |</div><div class="line">| Score    | tinyint(3) unsigned  | YES  |     | NULL    |                |</div><div class="line">+----------+----------------------+------+-----+---------+----------------+</div><div class="line">4 rows <span class="keyword">in</span> <span class="built_in">set</span> (0.00 sec)</div></pre></td></tr></table></figure>
<p><br></p>
<ul>
<li>courese表</li>
</ul>
<figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div></pre></td><td class="code"><pre><div class="line">&gt; desc courses;</div><div class="line">+----------+----------------------+------+-----+---------+----------------+</div><div class="line">| Field    | Type                 | Null | Key | Default | Extra          |</div><div class="line">+----------+----------------------+------+-----+---------+----------------+</div><div class="line">| CourseID | smallint(5) unsigned | NO   | PRI | NULL    | auto_increment |</div><div class="line">| Course   | varchar(100)         | NO   |     | NULL    |                |</div><div class="line">+----------+----------------------+------+-----+---------+----------------+</div><div class="line">2 rows <span class="keyword">in</span> <span class="built_in">set</span> (0.00 sec)</div></pre></td></tr></table></figure>
<h3 id="初阶练习题"><a href="#初阶练习题" class="headerlink" title="初阶练习题"></a><font size="4" color="#32CD99">初阶练习题</font></h3><ul>
<li>在students表中，查询年龄大于25岁，且为男性的同学的名字和年龄</li>
</ul>
<figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div></pre></td><td class="code"><pre><div class="line">&gt; SELECT Name,Age FROM students WHERE age &gt; 25 AND Gender=<span class="string">'M'</span>;</div><div class="line">+--------------+-----+</div><div class="line">| Name         | Age |</div><div class="line">+--------------+-----+</div><div class="line">| Xie Yanke    |  53 |</div><div class="line">| Ding Dian    |  32 |</div><div class="line">| Yu Yutong    |  26 |</div><div class="line">| Shi Qing     |  46 |</div><div class="line">| Tian Boguang |  33 |</div><div class="line">| Xu Xian      |  27 |</div><div class="line">| Sun Dasheng  | 100 |</div><div class="line">+--------------+-----+</div><div class="line">7 rows <span class="keyword">in</span> <span class="built_in">set</span> (0.00 sec)</div></pre></td></tr></table></figure>
<p><br></p>
<ul>
<li>以ClassID为分组依据，显示每组的平均年龄</li>
</ul>
<figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div></pre></td><td class="code"><pre><div class="line">&gt; SELECT ClassID,avg(age) FROM students GROUP BY ClassID;</div><div class="line">+---------+----------+</div><div class="line">| ClassID | avg(age) |</div><div class="line">+---------+----------+</div><div class="line">|    NULL |  63.5000 |</div><div class="line">|       1 |  20.5000 |</div><div class="line">|       2 |  36.0000 |</div><div class="line">|       3 |  20.2500 |</div><div class="line">|       4 |  24.7500 |</div><div class="line">|       5 |  46.0000 |</div><div class="line">|       6 |  20.7500 |</div><div class="line">|       7 |  19.6667 |</div><div class="line">+---------+----------+</div><div class="line">8 rows <span class="keyword">in</span> <span class="built_in">set</span> (0.00 sec)</div></pre></td></tr></table></figure>
<p><br></p>
<ul>
<li>显示第2题中平均年龄大于30的分组及平均年龄；</li>
</ul>
<figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div></pre></td><td class="code"><pre><div class="line">&gt; SELECT ClassID,avg(age) AS AGE FROM students GROUP BY ClassID HAVING  AGE &gt; 30;</div><div class="line">+---------+---------+</div><div class="line">| ClassID | AGE     |</div><div class="line">+---------+---------+</div><div class="line">|    NULL | 63.5000 |</div><div class="line">|       2 | 36.0000 |</div><div class="line">|       5 | 46.0000 |</div><div class="line">+---------+---------+</div><div class="line">3 rows <span class="keyword">in</span> <span class="built_in">set</span> (0.00 sec)</div></pre></td></tr></table></figure>
<p><br></p>
<ul>
<li>显示以L开头的名字的同学的信息；</li>
</ul>
<figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div></pre></td><td class="code"><pre><div class="line">&gt; SELECT * FROM students WHERE Name RLIKE <span class="string">'^L.*'</span>;</div><div class="line">+-------+-------------+-----+--------+---------+-----------+</div><div class="line">| StuID | Name        | Age | Gender | ClassID | TeacherID |</div><div class="line">+-------+-------------+-----+--------+---------+-----------+</div><div class="line">|     8 | L<span class="keyword">in</span> Daiyu   |  17 | F      |       7 |      NULL |</div><div class="line">|    14 | Lu Wushuang |  17 | F      |       3 |      NULL |</div><div class="line">|    17 | L<span class="keyword">in</span> Chong   |  25 | M      |       4 |      NULL |</div><div class="line">+-------+-------------+-----+--------+---------+-----------+</div><div class="line">3 rows <span class="keyword">in</span> <span class="built_in">set</span> (0.00 sec)</div></pre></td></tr></table></figure>
<p><br></p>
<ul>
<li>显示TeacherID非空的同学的相关信息；</li>
</ul>
<figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div></pre></td><td class="code"><pre><div class="line">&gt; SELECT * FROM students WHERE TeacherID is not null;</div><div class="line">+-------+-------------+-----+--------+---------+-----------+</div><div class="line">| StuID | Name        | Age | Gender | ClassID | TeacherID |</div><div class="line">+-------+-------------+-----+--------+---------+-----------+</div><div class="line">|     1 | Shi Zhongyu |  22 | M      |       2 |         3 |</div><div class="line">|     2 | Shi Potian  |  22 | M      |       1 |         7 |</div><div class="line">|     3 | Xie Yanke   |  53 | M      |       2 |        16 |</div><div class="line">|     4 | Ding Dian   |  32 | M      |       4 |         4 |</div><div class="line">|     5 | Yu Yutong   |  26 | M      |       3 |         1 |</div><div class="line">+-------+-------------+-----+--------+---------+-----------+</div><div class="line">5 rows <span class="keyword">in</span> <span class="built_in">set</span> (0.00 sec)</div></pre></td></tr></table></figure>
<p><br></p>
<ul>
<li>以年龄排序后，显示年龄最大的前10位同学的信息；</li>
</ul>
<figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div></pre></td><td class="code"><pre><div class="line">&gt; SELECT * FROM students ORDER BY  age DESC LIMIT 10;</div><div class="line">+-------+--------------+-----+--------+---------+-----------+</div><div class="line">| StuID | Name         | Age | Gender | ClassID | TeacherID |</div><div class="line">+-------+--------------+-----+--------+---------+-----------+</div><div class="line">|    25 | Sun Dasheng  | 100 | M      |    NULL |      NULL |</div><div class="line">|     3 | Xie Yanke    |  53 | M      |       2 |        16 |</div><div class="line">|     6 | Shi Qing     |  46 | M      |       5 |      NULL |</div><div class="line">|    13 | Tian Boguang |  33 | M      |       2 |      NULL |</div><div class="line">|     4 | Ding Dian    |  32 | M      |       4 |         4 |</div><div class="line">|    24 | Xu Xian      |  27 | M      |    NULL |      NULL |</div><div class="line">|     5 | Yu Yutong    |  26 | M      |       3 |         1 |</div><div class="line">|    17 | L<span class="keyword">in</span> Chong    |  25 | M      |       4 |      NULL |</div><div class="line">|    23 | Ma Chao      |  23 | M      |       4 |      NULL |</div><div class="line">|    18 | Hua Rong     |  23 | M      |       7 |      NULL |</div><div class="line">+-------+--------------+-----+--------+---------+-----------+</div><div class="line">10 rows <span class="keyword">in</span> <span class="built_in">set</span> (0.00 sec)</div></pre></td></tr></table></figure>
<p><br></p>
<ul>
<li>查询年龄大于等于20岁，小于等于25岁的同学的信息；用三种方法；</li>
</ul>
<figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div></pre></td><td class="code"><pre><div class="line">&gt; SELECT * FROM students WHERE age&gt;=20 and age&lt;=25;</div><div class="line"></div><div class="line">&gt; SELECT * FROM students WHERE age BETWEEN 20 AND 25;</div><div class="line"></div><div class="line">&gt; SELECT * FROM (SELECT * FROM students WHERE age&gt;=20) AS a  WHERE a.age &lt;= 25;</div><div class="line"></div><div class="line">+-------+---------------+-----+--------+---------+-----------+</div><div class="line">| StuID | Name          | Age | Gender | ClassID | TeacherID |</div><div class="line">+-------+---------------+-----+--------+---------+-----------+</div><div class="line">|     1 | Shi Zhongyu   |  22 | M      |       2 |         3 |</div><div class="line">|     2 | Shi Potian    |  22 | M      |       1 |         7 |</div><div class="line">|     9 | Ren Yingying  |  20 | F      |       6 |      NULL |</div><div class="line">|    11 | Yuan Chengzhi |  23 | M      |       6 |      NULL |</div><div class="line">|    16 | Xu Zhu        |  21 | M      |       1 |      NULL |</div><div class="line">|    17 | L<span class="keyword">in</span> Chong     |  25 | M      |       4 |      NULL |</div><div class="line">|    18 | Hua Rong      |  23 | M      |       7 |      NULL |</div><div class="line">|    21 | Huang Yueying |  22 | F      |       6 |      NULL |</div><div class="line">|    22 | Xiao Qiao     |  20 | F      |       1 |      NULL |</div><div class="line">|    23 | Ma Chao       |  23 | M      |       4 |      NULL |</div><div class="line">+-------+---------------+-----+--------+---------+-----------+</div><div class="line">10 rows <span class="keyword">in</span> <span class="built_in">set</span> (0.00 sec)</div></pre></td></tr></table></figure>
<p><br></p>
<h3 id="中阶练习题"><a href="#中阶练习题" class="headerlink" title="中阶练习题"></a><font size="4" color="#007FFF">中阶练习题</font></h3><ul>
<li>以ClassID分组，显示每班的同学的人数</li>
</ul>
<figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div></pre></td><td class="code"><pre><div class="line">&gt; SELECT Classid,count(Name) FROM students GROUP BY ClassID;</div><div class="line">+---------+-------------+</div><div class="line">| Classid | count(Name) |</div><div class="line">+---------+-------------+</div><div class="line">|    NULL |           2 |</div><div class="line">|       1 |           4 |</div><div class="line">|       2 |           3 |</div><div class="line">|       3 |           4 |</div><div class="line">|       4 |           4 |</div><div class="line">|       5 |           1 |</div><div class="line">|       6 |           4 |</div><div class="line">|       7 |           3 |</div><div class="line">+---------+-------------+</div><div class="line">8 rows <span class="keyword">in</span> <span class="built_in">set</span> (0.00 sec)</div></pre></td></tr></table></figure>
<p><br></p>
<ul>
<li>以Gender分组，显示其年龄之和</li>
</ul>
<figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div></pre></td><td class="code"><pre><div class="line">&gt; SELECT Gender,sum(Age) FROM students GROUP BY Gender; </div><div class="line">+--------+----------+</div><div class="line">| Gender | sum(Age) |</div><div class="line">+--------+----------+</div><div class="line">| F      |      190 |</div><div class="line">| M      |      495 |</div><div class="line">+--------+----------+</div><div class="line">2 rows <span class="keyword">in</span> <span class="built_in">set</span> (0.00 sec)</div></pre></td></tr></table></figure>
<p><br></p>
<ul>
<li>以ClassID分组，显示其平均年龄大于25的班级</li>
</ul>
<figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div></pre></td><td class="code"><pre><div class="line">&gt; SELECT ClassID,avg(age) AS AGE FROM students GROUP BY Gender HAVING AGE &gt; 25; </div><div class="line">+---------+---------+</div><div class="line">| ClassID | AGE     |</div><div class="line">+---------+---------+</div><div class="line">|       2 | 33.0000 |</div><div class="line">+---------+---------+</div><div class="line">1 row <span class="keyword">in</span> <span class="built_in">set</span> (0.00 sec)</div></pre></td></tr></table></figure>
<p><br></p>
<ul>
<li>以Gender分组，显示各组中年龄大于25的学员的年龄之和</li>
</ul>
<figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div></pre></td><td class="code"><pre><div class="line">&gt; SELECT Gender,sum(age) FROM (SELECT Age,Gender FROM students WHERE age &gt; 25 ) as t GROUP BY Gender;</div><div class="line">+--------+----------+</div><div class="line">| Gender | sum(age) |</div><div class="line">+--------+----------+</div><div class="line">| M      |      317 |</div><div class="line">+--------+----------+</div><div class="line">1 row <span class="keyword">in</span> <span class="built_in">set</span> (0.00 sec)</div></pre></td></tr></table></figure>
<p><br></p>
<ul>
<li>显示前5位同学的姓名、课程及成绩</li>
</ul>
<figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div></pre></td><td class="code"><pre><div class="line">&gt; SELECT Name,Course,Score FROM (SELECT * FROM students LIMIT 5) AS T1,courses AS C1,scores AS S1 WHERE T1.StuID = S1.StuID AND S1.CourseID = C1.CourseID;</div><div class="line">+-------------+----------------+-------+</div><div class="line">| Name        | Course         | Score |</div><div class="line">+-------------+----------------+-------+</div><div class="line">| Shi Zhongyu | Kuihua Baodian |    77 |</div><div class="line">| Shi Zhongyu | Weituo Zhang   |    93 |</div><div class="line">| Shi Potian  | Kuihua Baodian |    47 |</div><div class="line">| Shi Potian  | Daiyu Zanghua  |    97 |</div><div class="line">| Xie Yanke   | Kuihua Baodian |    88 |</div><div class="line">| Xie Yanke   | Weituo Zhang   |    75 |</div><div class="line">| Ding Dian   | Daiyu Zanghua  |    71 |</div><div class="line">| Ding Dian   | Kuihua Baodian |    89 |</div><div class="line">| Yu Yutong   | Hamo Gong      |    39 |</div><div class="line">| Yu Yutong   | Dagou Bangfa   |    63 |</div><div class="line">+-------------+----------------+-------+</div><div class="line">10 rows <span class="keyword">in</span> <span class="built_in">set</span> (0.00 sec)</div></pre></td></tr></table></figure>
<p><br> </p>
<ul>
<li>显示其成绩高于80的同学的名称及课程</li>
</ul>
<figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div></pre></td><td class="code"><pre><div class="line">&gt; SELECT Name,Course,Score FROM students AS T1,courses AS C1,(SELECT * FROM scores WHERE Score &gt; 80) AS S1 WHERE T1.StuID = S1.StuID AND S1.CourseID = C1.CourseID;</div><div class="line">+-------------+----------------+-------+</div><div class="line">| Name        | Course         | Score |</div><div class="line">+-------------+----------------+-------+</div><div class="line">| Shi Zhongyu | Weituo Zhang   |    93 |</div><div class="line">| Shi Potian  | Daiyu Zanghua  |    97 |</div><div class="line">| Xie Yanke   | Kuihua Baodian |    88 |</div><div class="line">| Ding Dian   | Kuihua Baodian |    89 |</div><div class="line">| Shi Qing    | Hamo Gong      |    96 |</div><div class="line">| Xi Ren      | Hamo Gong      |    86 |</div><div class="line">| Xi Ren      | Dagou Bangfa   |    83 |</div><div class="line">| L<span class="keyword">in</span> Daiyu   | Jinshe Jianfa  |    93 |</div><div class="line">+-------------+----------------+-------+</div><div class="line">8 rows <span class="keyword">in</span> <span class="built_in">set</span> (0.00 sec)</div></pre></td></tr></table></figure>
<p><br></p>
<ul>
<li>求前8位同学每位同学自己两门课的平均成绩，并按降序排列</li>
</ul>
<figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div></pre></td><td class="code"><pre><div class="line">&gt; SELECT Name,AVG_SCORE FROM (SELECT * FROM students LIMIT 8) AS T1,(SELECT StuID,avg(score) AS AVG_SCORE FROM scores GROUP BY StuID) AS S1 WHERE T1.StuID = S1.StuID ORDER BY AVG_SCORE desc;</div><div class="line">+-------------+-----------+</div><div class="line">| Name        | AVG_SCORE |</div><div class="line">+-------------+-----------+</div><div class="line">| Shi Qing    |   96.0000 |</div><div class="line">| Shi Zhongyu |   85.0000 |</div><div class="line">| Xi Ren      |   84.5000 |</div><div class="line">| Xie Yanke   |   81.5000 |</div><div class="line">| Ding Dian   |   80.0000 |</div><div class="line">| L<span class="keyword">in</span> Daiyu   |   75.0000 |</div><div class="line">| Shi Potian  |   72.0000 |</div><div class="line">| Yu Yutong   |   51.0000 |</div><div class="line">+-------------+-----------+</div><div class="line">8 rows <span class="keyword">in</span> <span class="built_in">set</span> (0.00 sec)</div></pre></td></tr></table></figure>
<p><br></p>
<ul>
<li>显示每门课程课程名称及学习了这门课的同学的个数</li>
</ul>
<figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div></pre></td><td class="code"><pre><div class="line">&gt; SELECT course,count(name) FROM (SELECT Name,Course FROM students,courses,scores WHERE students.StuID = scores.StuID AND scores.CourseID = courses.CourseID) as A GROUP BY course;</div><div class="line">+----------------+-------------+</div><div class="line">| Course         | count(name) |</div><div class="line">+----------------+-------------+</div><div class="line">| Dagou Bangfa   |           2 |</div><div class="line">| Daiyu Zanghua  |           2 |</div><div class="line">| Hamo Gong      |           3 |</div><div class="line">| Jinshe Jianfa  |           1 |</div><div class="line">| Kuihua Baodian |           4 |</div><div class="line">| Taiji Quan     |           1 |</div><div class="line">| Weituo Zhang   |           2 |</div><div class="line">+----------------+-------------+</div><div class="line">7 rows <span class="keyword">in</span> <span class="built_in">set</span> (0.00 sec)</div><div class="line"></div><div class="line">&gt; SELECT courses.Course,count(StuID) FROM scores LEFT JOIN courses ON scores.CourseID = courses.CourseID GROUP BY scores.CourseID;</div><div class="line">+----------------+--------------+</div><div class="line">| Course         | count(StuID) |</div><div class="line">+----------------+--------------+</div><div class="line">| Hamo Gong      |            3 |</div><div class="line">| Kuihua Baodian |            4 |</div><div class="line">| Jinshe Jianfa  |            1 |</div><div class="line">| Taiji Quan     |            1 |</div><div class="line">| Daiyu Zanghua  |            2 |</div><div class="line">| Weituo Zhang   |            2 |</div><div class="line">| Dagou Bangfa   |            2 |</div><div class="line">+----------------+--------------+</div><div class="line">7 rows <span class="keyword">in</span> <span class="built_in">set</span> (0.00 sec)</div></pre></td></tr></table></figure>
<p><br></p>
<h3 id="高阶练习题"><a href="#高阶练习题" class="headerlink" title="高阶练习题"></a><font size="4" color="#38B0DE">高阶练习题</font></h3><ul>
<li>如何显示其年龄大于平均年龄的同学的名字？</li>
</ul>
<figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div></pre></td><td class="code"><pre><div class="line">&gt; SELECT Name,Age FROM students WHERE age &gt; (SELECT avg(Age) From students);</div><div class="line">+--------------+-----+</div><div class="line">| Name         | Age |</div><div class="line">+--------------+-----+</div><div class="line">| Xie Yanke    |  53 |</div><div class="line">| Ding Dian    |  32 |</div><div class="line">| Shi Qing     |  46 |</div><div class="line">| Tian Boguang |  33 |</div><div class="line">| Sun Dasheng  | 100 |</div><div class="line">+--------------+-----+</div><div class="line">5 rows <span class="keyword">in</span> <span class="built_in">set</span> (0.00 sec)</div></pre></td></tr></table></figure>
<p><br></p>
<ul>
<li>如何显示其学习的课程为第1、2，4或第7门课的同学的名字？</li>
</ul>
<figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div></pre></td><td class="code"><pre><div class="line">&gt; SELECT Name FROM students,(select DISTINCT StuID  FROM scores WHERE CourseID IN (1,2,4,7)) as s WHERE students.StuID = s.StuID;</div><div class="line">+-------------+</div><div class="line">| Name        |</div><div class="line">+-------------+</div><div class="line">| Shi Zhongyu |</div><div class="line">| Shi Potian  |</div><div class="line">| Xie Yanke   |</div><div class="line">| Ding Dian   |</div><div class="line">| Yu Yutong   |</div><div class="line">| Shi Qing    |</div><div class="line">| Xi Ren      |</div><div class="line">| L<span class="keyword">in</span> Daiyu   |</div><div class="line">+-------------+</div><div class="line">8 rows <span class="keyword">in</span> <span class="built_in">set</span> (0.00 sec)</div></pre></td></tr></table></figure>
<p><br></p>
<ul>
<li>如何显示其成员数最少为3个的班级的同学中年龄大于同班同学平均年龄的同学？</li>
</ul>
<figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div></pre></td><td class="code"><pre><div class="line"><span class="comment"># 等值连接</span></div><div class="line">&gt; select student.name,student.age,student.classid,class.avg_age from  (select students.name as name ,students.age as age,students.classid as classid from students,(select count(name) as num,classid as classid from students group by classid having num&gt;=3) as first WHERE first.classid=students.classid) as student,(select avg(age) as avg_age,classid as classid from students group by classid) AS class WHERE student.age &gt; class.avg_age AND student.ClassID = class.ClassID;</div><div class="line">+---------------+-----+---------+---------+</div><div class="line">| name          | age | classid | avg_age |</div><div class="line">+---------------+-----+---------+---------+</div><div class="line">| Shi Potian    |  22 |       1 | 20.5000 |</div><div class="line">| Xie Yanke     |  53 |       2 | 36.0000 |</div><div class="line">| Ding Dian     |  32 |       4 | 24.7500 |</div><div class="line">| Yu Yutong     |  26 |       3 | 20.2500 |</div><div class="line">| Yuan Chengzhi |  23 |       6 | 20.7500 |</div><div class="line">| Xu Zhu        |  21 |       1 | 20.5000 |</div><div class="line">| L<span class="keyword">in</span> Chong     |  25 |       4 | 24.7500 |</div><div class="line">| Hua Rong      |  23 |       7 | 19.6667 |</div><div class="line">| Huang Yueying |  22 |       6 | 20.7500 |</div><div class="line">+---------------+-----+---------+---------+</div><div class="line">9 rows <span class="keyword">in</span> <span class="built_in">set</span> (0.00 sec)</div><div class="line"></div><div class="line"><span class="comment"># 右外连接</span></div><div class="line">&gt; select student.name,student.age,student.classid,class.avg_age from  (select students.name as name ,students.age as age,students.classid as classid from students right join (select count(name) as num,classid as classid from students group by classid having num&gt;=3) as first on first.classid=students.classid) as student,(select avg(age) as avg_age,classid as classid from students group by classid) AS class WHERE student.age &gt;= class.avg_age AND student.ClassID = class.ClassID;</div><div class="line">+---------------+-----+---------+---------+</div><div class="line">| name          | age | classid | avg_age |</div><div class="line">+---------------+-----+---------+---------+</div><div class="line">| Shi Potian    |  22 |       1 | 20.5000 |</div><div class="line">| Xie Yanke     |  53 |       2 | 36.0000 |</div><div class="line">| Ding Dian     |  32 |       4 | 24.7500 |</div><div class="line">| Yu Yutong     |  26 |       3 | 20.2500 |</div><div class="line">| Yuan Chengzhi |  23 |       6 | 20.7500 |</div><div class="line">| Xu Zhu        |  21 |       1 | 20.5000 |</div><div class="line">| L<span class="keyword">in</span> Chong     |  25 |       4 | 24.7500 |</div><div class="line">| Hua Rong      |  23 |       7 | 19.6667 |</div><div class="line">| Huang Yueying |  22 |       6 | 20.7500 |</div><div class="line">+---------------+-----+---------+---------+</div><div class="line">9 rows <span class="keyword">in</span> <span class="built_in">set</span> (0.00 sec)</div></pre></td></tr></table></figure>
<p><br></p>
<ul>
<li>统计各班级中年龄大于全校同学平均年龄的同学</li>
</ul>
<figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div></pre></td><td class="code"><pre><div class="line">&gt; SELECT Name,Age,ClassID FROM students WHERE age &gt; (SELECT avg(age) as avg_age  FROM students);</div><div class="line">+--------------+-----+---------+</div><div class="line">| Name         | Age | ClassID |</div><div class="line">+--------------+-----+---------+</div><div class="line">| Xie Yanke    |  53 |       2 |</div><div class="line">| Ding Dian    |  32 |       4 |</div><div class="line">| Shi Qing     |  46 |       5 |</div><div class="line">| Tian Boguang |  33 |       2 |</div><div class="line">| Sun Dasheng  | 100 |    NULL |</div><div class="line">+--------------+-----+---------+</div><div class="line">5 rows <span class="keyword">in</span> <span class="built_in">set</span> (0.00 sec)</div></pre></td></tr></table></figure>
<hr>
<iframe frameborder="no" border="0" marginwidth="0" marginheight="0" width="330" height="86" src="//music.163.com/outchain/player?type=2&id=29816874&auto=1&height=66"></iframe>


<p>本文出自<a href="http://maxiecloud.com">Maxie’s Notes</a>博客，转载请务必保留此出处。</p>
<p><img src="https://ww1.sinaimg.cn/large/006tNbRwly1fdzc80odsuj30gn0ilq5m.jpg" alt=""></p>
]]></content>
    
    <summary type="html">
    
      &lt;p&gt;&lt;img src=&quot;https://ws2.sinaimg.cn/large/006tNbRwly1fh8z1osd1aj309t03zt8o.jpg&quot; alt=&quot;&quot;&gt;&lt;/p&gt;
&lt;blockquote class=&quot;blockquote-center&quot;&gt;这章节，我们对之前所学的MySQL进行一些练习，使用的模板是网络上使用的hellodb.sql&lt;br&gt;&lt;/blockquote&gt;

&lt;p&gt;&lt;a href=&quot;https://www.dropbox.com/s/spcnov3w3q29yhk/hellodb.sql?dl=0&quot;&gt;hellodb.sql下载地址&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;不过需要注意的是，这个模板过于老旧，现在我们使用的&lt;code&gt;MySQL/MariaDB&lt;/code&gt;的默认存储引擎都是&lt;code&gt;InnoDB&lt;/code&gt;存储引擎，而模板中使用的则是&lt;code&gt;MyISAM&lt;/code&gt;，所以我们需要手动进行修改：&lt;/p&gt;
&lt;figure class=&quot;highlight bash&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;1&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;$ sed -i &lt;span class=&quot;string&quot;&gt;&#39;s@ENGINE=MyISAM@ENGINE=InnoDB@g&#39;&lt;/span&gt; hellodb.sql&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;h3 id=&quot;实验环境：&quot;&gt;&lt;a href=&quot;#实验环境：&quot; class=&quot;headerlink&quot; title=&quot;实验环境：&quot;&gt;&lt;/a&gt;&lt;font size=4 color=&quot;#38B0DE&quot;&gt;实验环境：&lt;/font&gt;&lt;/h3&gt;&lt;figure class=&quot;highlight bash&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;1&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;2&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;3&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;4&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;5&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;6&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;7&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;8&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;9&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;10&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;11&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;12&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;13&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;14&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;15&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;16&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;17&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;18&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;19&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;20&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;21&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;$ yum info mariadb&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;Loaded plugins: fastestmirror, langpacks&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;Loading mirror speeds from cached hostfile&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;Installed Packages&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;Name        : mariadb&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;Arch        : x86_64&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;Epoch       : 1&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;Version     : 5.5.44&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;Release     : 2.el7.centos&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;Size        : 48 M&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;Repo        : installed&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;From repo   : anaconda&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;Summary     : A community developed branch of MySQL&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;URL         : http://mariadb.org&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;License     : GPLv2 with exceptions and LGPLv2 and BSD&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;Description : MariaDB is a community developed branch of MySQL.&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;            : MariaDB is a multi-user, multi-threaded SQL database server.&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;            : It is a client/server implementation consisting of a server daemon&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;            : (mysqld) and many different client programs and libraries. The&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;            : base package contains the standard MariaDB/MySQL client programs&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;            : and generic MySQL files.&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;这次我们使用的是&lt;code&gt;MariaDB 5.5.44&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;将hellodb.sql导入至数据库中：&lt;/strong&gt;&lt;/p&gt;
&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;1&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;$ mysql -proot@123 &amp;lt; hellodb.sql&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;hr&gt;
    
    </summary>
    
      <category term="linux进阶" scheme="http://maxiecloud.com/categories/linux%E8%BF%9B%E9%98%B6/"/>
    
      <category term="mysql" scheme="http://maxiecloud.com/categories/linux%E8%BF%9B%E9%98%B6/mysql/"/>
    
    
      <category term="linux" scheme="http://maxiecloud.com/tags/linux/"/>
    
      <category term="mysql" scheme="http://maxiecloud.com/tags/mysql/"/>
    
  </entry>
  
  <entry>
    <title>HAProxy+Varnish动静分离部署WordPress</title>
    <link href="http://maxiecloud.com/2017/07/03/haproxy-static-and-dynamic-separation/"/>
    <id>http://maxiecloud.com/2017/07/03/haproxy-static-and-dynamic-separation/</id>
    <published>2017-07-03T02:53:15.000Z</published>
    <updated>2017-07-03T06:25:36.000Z</updated>
    
    <content type="html"><![CDATA[<blockquote class="blockquote-center">这章节，我们继续介绍HAProxy<br>不过这次我们将介绍如何使用HAProxy+Varnish实现WordPress的动静分离<br></blockquote>

<p><img src="https://ws4.sinaimg.cn/large/006tKfTcly1fh6icrq0f1j30ra0zn77t.jpg" alt=""></p>
<p><strong>由于实验的宿主机内存有限，这里我们就不按照拓扑图上的双varnish和图片服务器</strong></p>
<hr>
<a id="more"></a>
<h3 id="实验目标"><a href="#实验目标" class="headerlink" title="实验目标"></a><font szie="4" color="#5F9F9F">实验目标</font></h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div></pre></td><td class="code"><pre><div class="line">(1) 动静分离部署wordpress，动静都要能实现负载均衡，要注意会话的问题</div><div class="line">(2) 在haproxy和后端主机之间添加varnish进行缓存</div><div class="line">(3) haproxy的设定要求：</div><div class="line">	(a) stats page，要求仅能通过本地访问使用管理接口；</div><div class="line">	(b) 动静分离</div><div class="line">	(c) 分别考虑不同的服务器组的调度算法</div><div class="line">(4) haproxy高可用(Keepalived)</div></pre></td></tr></table></figure>
<div class="note primary"><h3 id="HAProxy对后端动静服务实现负载均衡调度"><a href="#HAProxy对后端动静服务实现负载均衡调度" class="headerlink" title="HAProxy对后端动静服务实现负载均衡调度"></a>HAProxy对后端动静服务实现负载均衡调度</h3></div>
<p><em>注意：如果没有特别说明，以下操作都是需要在另一台对应的静态/动态服务器操作</em></p>
<h4 id="配置安装-静态与动态服务器"><a href="#配置安装-静态与动态服务器" class="headerlink" title="配置安装 静态与动态服务器 "></a><font size="4" color="#38B0DE">配置安装 静态与动态服务器 </font></h4><ul>
<li>静态WEB</li>
</ul>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div></pre></td><td class="code"><pre><div class="line">$ yum install httpd</div><div class="line">$ echo &quot;First Static Server PAGE&quot; &gt; /var/www/html/index.html</div><div class="line">$ echo &quot;Second Static Server PAGE&quot; &gt; /var/www/html/index.html</div><div class="line">$ systemctl start httpd</div></pre></td></tr></table></figure>
<ul>
<li>动态AP站点</li>
</ul>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div></pre></td><td class="code"><pre><div class="line">$ yum install httpd php php-mysql php-mbstring php-mcrypt</div><div class="line">$ vim /var/www/html/index.php </div><div class="line">Dynamic Server 1         # 另一台：Dynamic Server 2</div><div class="line">&lt;?php </div><div class="line">	phpinfo();</div><div class="line">?&gt;</div><div class="line">$ systemctl start httpd</div></pre></td></tr></table></figure>
<p><br></p>
<h4 id="配置安装-HAProxy"><a href="#配置安装-HAProxy" class="headerlink" title="配置安装 HAProxy "></a><font size="4" color="#38B0DE">配置安装 HAProxy </font></h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div><div class="line">37</div><div class="line">38</div><div class="line">39</div><div class="line">40</div><div class="line">41</div><div class="line">42</div><div class="line">43</div><div class="line">44</div><div class="line">45</div><div class="line">46</div><div class="line">47</div><div class="line">48</div><div class="line">49</div><div class="line">50</div><div class="line">51</div><div class="line">52</div><div class="line">53</div><div class="line">54</div></pre></td><td class="code"><pre><div class="line">$ yum install -y haproxy </div><div class="line">$ cd /etc/haproxy/</div><div class="line">$ vim haproxy.cfg</div><div class="line">#---------------------------------------------------------------------</div><div class="line"># main frontend which proxys to the backends</div><div class="line">#---------------------------------------------------------------------</div><div class="line">frontend websrvs</div><div class="line">    bind            *:80</div><div class="line">    rspadd          X-Via:\ HAProxy-1</div><div class="line">    rspidel         Server.*</div><div class="line">    acl static      path_end -i .html .css .js</div><div class="line">    acl static      path_beg -i /images /static</div><div class="line">    use_backend     websrvs if static</div><div class="line">    default_backend appsrvs</div><div class="line">    acl badgay      hdr_sub(User-Agent) -i curl</div><div class="line">    block           if badgay</div><div class="line"></div><div class="line">#---------------------------------------------------------------------</div><div class="line"># Admin Stats</div><div class="line">#---------------------------------------------------------------------</div><div class="line">listen status</div><div class="line">    bind *:9909</div><div class="line">    acl auth_admin  src 172.16.250.15 172.16.1.11</div><div class="line">    stats           enable</div><div class="line">    stats uri       /myha?stats</div><div class="line">    stats realm     HAProxy\ Admin\ Area</div><div class="line">    stats auth      root:root@123</div><div class="line">    stats admin     if auth_admin</div><div class="line"></div><div class="line">#---------------------------------------------------------------------</div><div class="line"># WEB static backend</div><div class="line">#---------------------------------------------------------------------</div><div class="line">backend websrvs</div><div class="line">    option      httpchk /index.html</div><div class="line">    option      forwardfor header X-Client</div><div class="line">    balance     roundrobin</div><div class="line">    server      web1    192.168.1.50:80 check weight 2</div><div class="line">    server      web2    192.168.1.60:80 check weight 1</div><div class="line">    hash-type   consistent</div><div class="line">    #option      httpchk /index.html</div><div class="line"></div><div class="line">#---------------------------------------------------------------------</div><div class="line"># ap backend</div><div class="line">#---------------------------------------------------------------------</div><div class="line"></div><div class="line">backend appsrvs</div><div class="line">    option      httpchk /index.php</div><div class="line">    option      forwardfor header X-Client</div><div class="line">    balance     roundrobin</div><div class="line">    server      app1    192.168.1.70:80 check weight 1</div><div class="line">    server      app2    192.168.1.80:80 check weight 1</div><div class="line">    hash-type   consistent</div><div class="line"></div><div class="line">$ systemctl restart haproxy</div></pre></td></tr></table></figure>
<p><strong>到这步，已经实现了通过HAProxy负载均衡调度后端动态和静态资源</strong></p>
<hr>
<div class="note success"><h3 id="HAProxy-Varnish对后端WordPress实现负载均衡调度以及缓存加速功能"><a href="#HAProxy-Varnish对后端WordPress实现负载均衡调度以及缓存加速功能" class="headerlink" title="HAProxy+Varnish对后端WordPress实现负载均衡调度以及缓存加速功能"></a>HAProxy+Varnish对后端WordPress实现负载均衡调度以及缓存加速功能</h3></div>
<h4 id="配置NFS以及MySQL"><a href="#配置NFS以及MySQL" class="headerlink" title="配置NFS以及MySQL"></a><font size="4" color="#32CD99">配置NFS以及MySQL</font></h4><ul>
<li>配置MySQL</li>
</ul>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div></pre></td><td class="code"><pre><div class="line">$ vim /etc/my.cnf.d/server.conf </div><div class="line">[mysqld]</div><div class="line">skip_name_resolve=ON</div><div class="line">innodb_file_per_table=ON</div><div class="line">log-bin=mysql_bin</div><div class="line"></div><div class="line">$ systemctl start mariadb.service </div><div class="line">$ mysql</div><div class="line">&gt; CREATE DATABASE wordpress_db;</div><div class="line">&gt; CREATE DATABASE discuzx;</div><div class="line">&gt; GRANT ALL PRIVILEGES ON wordpress_db.* TO &apos;wordpress&apos;@&apos;192.168.1.50&apos; IDENTIFIED BY &apos;root@123&apos;;</div><div class="line">&gt; GRANT ALL PRIVILEGES ON wordpress_db.* TO &apos;wordpress&apos;@&apos;192.168.1.60&apos; IDENTIFIED BY &apos;root@123&apos;;</div><div class="line">&gt; GRANT ALL PRIVILEGES ON wordpress_db.* TO &apos;wordpress&apos;@&apos;192.168.1.70&apos; IDENTIFIED BY &apos;root@123&apos;;</div><div class="line">&gt; GRANT ALL PRIVILEGES ON wordpress_db.* TO &apos;wordpress&apos;@&apos;192.168.1.80&apos; IDENTIFIED BY &apos;root@123&apos;;</div><div class="line">&gt; GRANT ALL PRIVILEGES ON wordpress_db.* TO &apos;wordpress&apos;@&apos;192.168.1.90&apos; IDENTIFIED BY &apos;root@123&apos;;</div><div class="line"></div><div class="line">&gt; GRANT ALL PRIVILEGES ON discuzx.* TO &apos;discuzx&apos;@&apos;192.168.1.50&apos; IDENTIFIED BY &apos;root@123&apos;;</div><div class="line">&gt; GRANT ALL PRIVILEGES ON discuzx.* TO &apos;discuzx&apos;@&apos;192.168.1.60&apos; IDENTIFIED BY &apos;root@123&apos;;</div><div class="line">&gt; GRANT ALL PRIVILEGES ON discuzx.* TO &apos;discuzx&apos;@&apos;192.168.1.70&apos; IDENTIFIED BY &apos;root@123&apos;;</div><div class="line">&gt; GRANT ALL PRIVILEGES ON discuzx.* TO &apos;discuzx&apos;@&apos;192.168.1.80&apos; IDENTIFIED BY &apos;root@123&apos;;</div><div class="line">&gt; GRANT ALL PRIVILEGES ON discuzx.* TO &apos;discuzx&apos;@&apos;192.168.1.90&apos; IDENTIFIED BY &apos;root@123&apos;;</div><div class="line"></div><div class="line">&gt; FLUSH PRIVILEGES;</div></pre></td></tr></table></figure>
<p><br></p>
<ul>
<li>配置NFS</li>
</ul>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div></pre></td><td class="code"><pre><div class="line">$ vim /etc/exports</div><div class="line">/data/my_wordpress      192.168.1.50(rw,no_root_squash) 192.168.1.60(rw,no_root_squash) 192.168.1.70(rw,no_root_squash) 192.168.1.80(rw,no_root_squash)</div><div class="line">/data/my_discuzx        192.168.1.50(rw,no_root_squash) 192.168.1.60(rw,no_root_squash) 192.168.1.70(rw,no_root_squash) 192.168.1.80(rw,no_root_squash)</div><div class="line">$ mkdir -pv /data/my_wordpress</div><div class="line">$ mkdir -pv /data/my_discuzx</div><div class="line">$ tar -xf wordpress-4.7.4-zh_CN.tar.gz -C /data/</div><div class="line">$ mv /data/wordpress/* /data/my_wordpress</div><div class="line"></div><div class="line">$ unzip Discuz_X3.3_SC_UTF8.zip -C /data/</div><div class="line">$ mv /data/upload/* /data/my_discuzx</div><div class="line"></div><div class="line">$ useradd -u 48 -r apache </div><div class="line">$ chown -R apache.apache /data/</div><div class="line"></div><div class="line">$ systemctl start nfs.service</div></pre></td></tr></table></figure>
<p><br></p>
<h4 id="动静的4台服务器同时挂载wordpress以及discuzx"><a href="#动静的4台服务器同时挂载wordpress以及discuzx" class="headerlink" title="动静的4台服务器同时挂载wordpress以及discuzx"></a><font size="4" color="#32CD99">动静的4台服务器同时挂载wordpress以及discuzx</font></h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div></pre></td><td class="code"><pre><div class="line">$ mkdir -pv /var/www/html/wordpress</div><div class="line">$ mkdir -pv /var/www/html/wordpress</div><div class="line">$ cd /var/www/html</div><div class="line">$ mount -t nfs 192.168.1.90:/data/my_wordpress /wordpress</div><div class="line">$ mount -t nfs 192.168.1.90:/data/my_discuzx /discuzx</div></pre></td></tr></table></figure>
<p><br></p>
<h4 id="测试WordPress"><a href="#测试WordPress" class="headerlink" title="测试WordPress"></a><font size="4" color="#32CD99">测试WordPress</font></h4><p>在客户端本机的hosts文件添加：</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div></pre></td><td class="code"><pre><div class="line">$ sudo vim /etc/hosts</div><div class="line">172.16.3.10 www.maxie.com           # 调度器地址</div><div class="line">172.16.3.20 www.maxie.com           # 备用调度器</div><div class="line">172.16.3.200 www.maxie.com          # VIP地址</div></pre></td></tr></table></figure>
<p>在浏览器输入： <a href="http://www.maxie.com/wordpress" target="_blank" rel="external">http://www.maxie.com/wordpress</a> 即可</p>
<hr>
<iframe frameborder="no" border="0" marginwidth="0" marginheight="0" width="330" height="86" src="//music.163.com/outchain/player?type=2&id=31704059&auto=1&height=66"></iframe>

<p>本文出自<a href="http://maxiecloud.com">Maxie’s Notes</a>博客，转载请务必保留此出处。</p>
<p><img src="https://ww1.sinaimg.cn/large/006tNbRwly1fdzc80odsuj30gn0ilq5m.jpg" alt=""></p>
]]></content>
    
    <summary type="html">
    
      &lt;blockquote class=&quot;blockquote-center&quot;&gt;这章节，我们继续介绍HAProxy&lt;br&gt;不过这次我们将介绍如何使用HAProxy+Varnish实现WordPress的动静分离&lt;br&gt;&lt;/blockquote&gt;

&lt;p&gt;&lt;img src=&quot;https://ws4.sinaimg.cn/large/006tKfTcly1fh6icrq0f1j30ra0zn77t.jpg&quot; alt=&quot;&quot;&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;由于实验的宿主机内存有限，这里我们就不按照拓扑图上的双varnish和图片服务器&lt;/strong&gt;&lt;/p&gt;
&lt;hr&gt;
    
    </summary>
    
      <category term="linux进阶" scheme="http://maxiecloud.com/categories/linux%E8%BF%9B%E9%98%B6/"/>
    
      <category term="HAProxy" scheme="http://maxiecloud.com/categories/linux%E8%BF%9B%E9%98%B6/HAProxy/"/>
    
      <category term="Varnish" scheme="http://maxiecloud.com/categories/linux%E8%BF%9B%E9%98%B6/HAProxy/Varnish/"/>
    
    
      <category term="linux" scheme="http://maxiecloud.com/tags/linux/"/>
    
      <category term="HAProxy" scheme="http://maxiecloud.com/tags/HAProxy/"/>
    
      <category term="httpd" scheme="http://maxiecloud.com/tags/httpd/"/>
    
      <category term="varnish" scheme="http://maxiecloud.com/tags/varnish/"/>
    
      <category term="wordpress" scheme="http://maxiecloud.com/tags/wordpress/"/>
    
  </entry>
  
  <entry>
    <title>Tomcat实现会话保持功能</title>
    <link href="http://maxiecloud.com/2017/07/03/tomcat-session-remains/"/>
    <id>http://maxiecloud.com/2017/07/03/tomcat-session-remains/</id>
    <published>2017-07-03T00:48:12.000Z</published>
    <updated>2017-07-03T02:50:39.000Z</updated>
    
    <content type="html"><![CDATA[<p><img src="https://ws3.sinaimg.cn/large/006tKfTcly1fh6f3kqbjcj30xc0m8q4w.jpg" alt=""></p>
<blockquote>
<p>上一节我们简单的介绍了如何使用Tomcat作为动态Web服务器<br>以及使用nginx/httpd服务器反向代理Tomcat和负载均衡Tomcat</p>
<p>在这一章节，我们将介绍如何使用Tomcat自带的Clustering/Session Replication实现会话保持功能<br>以及使用memcached对Tomcat实现session server功能</p>
</blockquote>
<h3 id="实验之前的准备"><a href="#实验之前的准备" class="headerlink" title="实验之前的准备"></a>实验之前的准备</h3><h4 id="准备虚拟机"><a href="#准备虚拟机" class="headerlink" title="准备虚拟机"></a>准备虚拟机</h4><p>为了能正常的实现我们这里准备的3个实验，计划准备五台虚拟机</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div></pre></td><td class="code"><pre><div class="line">Director        172.16.3.10/16</div><div class="line">Tomcat-1        172.16.3.20/16</div><div class="line">Tomcat-2        172.16.3.50/16</div><div class="line">Memcached-1     172.16.3.60/16</div><div class="line">Memcached-2     172.16.3.70/16</div></pre></td></tr></table></figure>
<p>建议每台Tomcat的内存分配的尽可能大一些，建议4GB</p>
<h4 id="同步时间"><a href="#同步时间" class="headerlink" title="同步时间"></a>同步时间</h4><p>在操作多台机器实现一个功能/目标时，需要将其时间同步</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">$ ntpdate 172.16.0.1</div></pre></td></tr></table></figure>
<h4 id="制作网络拓扑图"><a href="#制作网络拓扑图" class="headerlink" title="制作网络拓扑图"></a>制作网络拓扑图</h4><hr>
<a id="more"></a>
<div class="note info"><h3 id="使用nginx-httpd负载均衡Tomcat并实现会话保持"><a href="#使用nginx-httpd负载均衡Tomcat并实现会话保持" class="headerlink" title="使用nginx/httpd负载均衡Tomcat并实现会话保持"></a>使用nginx/httpd负载均衡Tomcat并实现会话保持</h3></div>
<h4 id="配置nginx-Tomcat集群以实现会话保持"><a href="#配置nginx-Tomcat集群以实现会话保持" class="headerlink" title="配置nginx+Tomcat集群以实现会话保持"></a><font size="4" color="#38B0DE">配置nginx+Tomcat集群以实现会话保持</font></h4><ul>
<li>安装nginx并配置虚拟主机</li>
</ul>
<figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div></pre></td><td class="code"><pre><div class="line">$ yum -y install nginx </div><div class="line">$ <span class="built_in">cd</span> /etc/nginx/</div><div class="line">$ vim conf.d/maxie.conf</div><div class="line">upstream tomcatsrv &#123;</div><div class="line">    ip_hash;                        <span class="comment">#这里还可以设置成： hash $requset_uri consistent; 或者 hash $cookie_name consistent;</span></div><div class="line">    server  172.16.3.20:80;</div><div class="line">    server  172.16.3.50:80;</div><div class="line">&#125;</div><div class="line">server &#123;</div><div class="line">    listen 80;</div><div class="line">    server_name www1.maxie.com;</div><div class="line">    location / &#123;</div><div class="line">        proxy_pass  http://www1.maxie.com;</div><div class="line">    &#125;</div><div class="line">&#125;</div></pre></td></tr></table></figure>
<p><br></p>
<ul>
<li>配置Tomcat主机</li>
</ul>
<figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div><div class="line">37</div><div class="line">38</div><div class="line">39</div><div class="line">40</div><div class="line">41</div><div class="line">42</div><div class="line">43</div><div class="line">44</div><div class="line">45</div><div class="line">46</div><div class="line">47</div><div class="line">48</div><div class="line">49</div><div class="line">50</div><div class="line">51</div><div class="line">52</div><div class="line">53</div><div class="line">54</div><div class="line">55</div><div class="line">56</div><div class="line">57</div><div class="line">58</div><div class="line">59</div><div class="line">60</div><div class="line">61</div><div class="line">62</div><div class="line">63</div><div class="line">64</div><div class="line">65</div><div class="line">66</div><div class="line">67</div><div class="line">68</div><div class="line">69</div><div class="line">70</div><div class="line">71</div><div class="line">72</div><div class="line">73</div><div class="line">74</div><div class="line">75</div><div class="line">76</div><div class="line">77</div><div class="line">78</div><div class="line">79</div><div class="line">80</div></pre></td><td class="code"><pre><div class="line">$ yum install -y java-1.8.0-openjdk-devel tomcat tomcat-webapps tomcat-admin-webapps tomcat-docs-webapp</div><div class="line">$ vim /etc/tomcat/tomcat.users.xml</div><div class="line">&lt;role rolename=<span class="string">"admin-gui"</span>/&gt;</div><div class="line">&lt;user username=<span class="string">"tomcat"</span> password=<span class="string">"tomcat"</span> roles=<span class="string">"admin-gui"</span>/&gt;</div><div class="line">&lt;role rolename=<span class="string">"manager-gui"</span>/&gt;</div><div class="line">&lt;user username=<span class="string">"maxie"</span> password=<span class="string">"maxie"</span> roles=<span class="string">"manager-gui"</span>/&gt;</div><div class="line"></div><div class="line"><span class="comment"># 创建测试页</span></div><div class="line">$ mkdir /usr/share/tomcat/webapps/<span class="built_in">test</span>/&#123;classes,META-INF,WEB-INF&#125;</div><div class="line">$ vim /usr/share/tomcat/webapps/<span class="built_in">test</span>/index.jsp</div><div class="line">&lt;%@ page language=<span class="string">"java"</span> %&gt;</div><div class="line">&lt;%@ page import=<span class="string">"java.util.*"</span> %&gt;</div><div class="line">&lt;html&gt;</div><div class="line">    &lt;head&gt;</div><div class="line">        &lt;title&gt;Server One&lt;/title&gt;</div><div class="line">    &lt;/head&gt;</div><div class="line">    &lt;body&gt;</div><div class="line">        &lt;font size=10 color=<span class="string">"#38B0DE"</span> &gt; Tomcat First Server  &lt;/font&gt;</div><div class="line">        &lt;table align=<span class="string">"centre"</span> border=<span class="string">"1"</span>&gt;</div><div class="line">        &lt;tr&gt;</div><div class="line">                &lt;td&gt;Session ID&lt;/td&gt;</div><div class="line">                &lt;% session.setAttribute(<span class="string">"maxie.com"</span>,<span class="string">"maxie.com"</span>); %&gt;</div><div class="line">                &lt;td&gt;&lt;%= session.getId() %&gt;&lt;/td&gt;</div><div class="line">        &lt;/tr&gt;</div><div class="line">        &lt;tr&gt;</div><div class="line">                &lt;td&gt;Created on&lt;/td&gt;</div><div class="line">                        &lt;td&gt;&lt;%= session.getCreationTime() %&gt;&lt;/td&gt;</div><div class="line">                &lt;/tr&gt;</div><div class="line">        &lt;/table&gt;</div><div class="line">        &lt;br&gt;</div><div class="line">        &lt;% out.println(<span class="string">"hello world"</span>);</div><div class="line">        %&gt;</div><div class="line">    &lt;/body&gt;</div><div class="line">&lt;/html&gt;</div><div class="line"></div><div class="line"><span class="comment"># 将/etc/tomcat/tomcat.users.xml与/usr/share/tomcat/webapps/test发送至另一台Tomcat主机</span></div><div class="line">$ scp /etc/tomcat/tomcat.users.xml root@172.16.3.50:/etc/tomcat/</div><div class="line">$ scp -rp /usr/share/tomcat/webapps/<span class="built_in">test</span> root@172.16.3.50:/usr/share/tomcat/webapps/</div><div class="line"></div><div class="line"><span class="comment"># 在第二台上修改之前拷贝过来的文件内容</span></div><div class="line">$ vim /usr/share/tomcat/webapps/<span class="built_in">test</span>/index.jsp</div><div class="line">&lt;%@ page language=<span class="string">"java"</span> %&gt;</div><div class="line">&lt;%@ page import=<span class="string">"java.util.*"</span> %&gt;</div><div class="line">&lt;html&gt;</div><div class="line">    &lt;head&gt;</div><div class="line">        &lt;title&gt;Server Two&lt;/title&gt;</div><div class="line">    &lt;/head&gt;</div><div class="line">    &lt;body&gt;</div><div class="line">        &lt;font size=10 color=<span class="string">"#32CD99"</span> &gt; Tomcat Second Server  &lt;/font&gt;</div><div class="line">        &lt;table align=<span class="string">"centre"</span> border=<span class="string">"1"</span>&gt;</div><div class="line">        &lt;tr&gt;</div><div class="line">                &lt;td&gt;Session ID&lt;/td&gt;</div><div class="line">                &lt;% session.setAttribute(<span class="string">"maxie.com"</span>,<span class="string">"maxie.com"</span>); %&gt;</div><div class="line">                &lt;td&gt;&lt;%= session.getId() %&gt;&lt;/td&gt;</div><div class="line">        &lt;/tr&gt;</div><div class="line">        &lt;tr&gt;</div><div class="line">                &lt;td&gt;Created on&lt;/td&gt;</div><div class="line">                        &lt;td&gt;&lt;%= session.getCreationTime() %&gt;&lt;/td&gt;</div><div class="line">                &lt;/tr&gt;</div><div class="line">        &lt;/table&gt;</div><div class="line">        &lt;br&gt;</div><div class="line">        &lt;% out.println(<span class="string">"hello world"</span>);</div><div class="line">        %&gt;</div><div class="line">    &lt;/body&gt;</div><div class="line">&lt;/html&gt;</div><div class="line"></div><div class="line"><span class="comment"># 启动两台Tomcat服务</span></div><div class="line">$ systemctl start tomcat</div><div class="line">$ ss -tnl</div><div class="line">State       Recv-Q Send-Q Local Address:Port               Peer Address:Port</div><div class="line">LISTEN      0      50              *:3306                        *:*</div><div class="line">LISTEN      0      128             *:22                          *:*</div><div class="line">LISTEN      0      128     127.0.0.1:631                         *:*</div><div class="line">LISTEN      0      100     127.0.0.1:25                          *:*</div><div class="line">LISTEN      0      100            :::8009                       :::*</div><div class="line">LISTEN      0      100            :::8080                       :::*</div><div class="line">LISTEN      0      128            :::22                         :::*</div><div class="line">LISTEN      0      128           ::1:631                        :::*</div><div class="line">LISTEN      0      100           ::1:25                         :::*</div><div class="line">LISTEN      0      1        ::ffff:127.0.0.1:8005                       :::*</div></pre></td></tr></table></figure>
<p><br></p>
<ul>
<li>打开浏览器验证即可</li>
</ul>
<p>最终效果应为：通过调度器分配了一台Tomcat服务器之后，除非IP变动，否则将一直调度在这台Tomcat服务器上。</p>
<p><br></p>
<h4 id="配置httpd-Tomcat集群以实现会话保持"><a href="#配置httpd-Tomcat集群以实现会话保持" class="headerlink" title="配置httpd+Tomcat集群以实现会话保持"></a><font size="4" color="#38B0DE">配置httpd+Tomcat集群以实现会话保持</font></h4><ul>
<li>安装并配置httpd</li>
</ul>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div></pre></td><td class="code"><pre><div class="line">$ yum install -y httpd</div><div class="line">$ vim /etc/httpd/conf.d/maxie.conf</div><div class="line">Header add Set-Cookie &quot;ROUTEID=.%&#123;BALANCER_WORKER_ROUTE&#125;e; path=/&quot; env=BALANCER_ROUTE_CHANGED</div><div class="line"></div><div class="line">&lt;proxy balancer://tcsrvs&gt;</div><div class="line">	BalancerMember http://172.16.3.20:8080 route=TomcatA loadfactor=1 </div><div class="line">	BalancerMember http://172.16.3.50:8080 route=TomcatB loadfactor=2			</div><div class="line">	ProxySet lbmethod=byrequests</div><div class="line">	ProxySet stickysession=ROUTEID</div><div class="line">&lt;/Proxy&gt;</div><div class="line"></div><div class="line">&lt;VirtualHost *:80&gt;</div><div class="line">	ServerName www1.maxie.com</div><div class="line">	ProxyVia On</div><div class="line">	ProxyRequests Off</div><div class="line">	ProxyPreserveHost On</div><div class="line">	&lt;Proxy *&gt;</div><div class="line">		Require all granted</div><div class="line">	&lt;/Proxy&gt;</div><div class="line">	ProxyPass / balancer://tcsrvs/</div><div class="line">	ProxyPassReverse / balancer://tcsrvs/</div><div class="line">	&lt;Location /&gt;</div><div class="line">		Require all granted</div><div class="line">	&lt;/Location&gt;</div><div class="line">&lt;/VirtualHost&gt;</div></pre></td></tr></table></figure>
<ul>
<li>Tomcat主机无需修改配置，直接打开浏览器验证即可</li>
</ul>
<hr>
<div class="note success"><h3 id="Tomcat-Session-Replication-Cluster"><a href="#Tomcat-Session-Replication-Cluster" class="headerlink" title="Tomcat Session Replication Cluster"></a>Tomcat Session Replication Cluster</h3></div>
<p>实验之前，将nginx/httpd的会话保持的配置段删除，只保留调度功能</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div></pre></td><td class="code"><pre><div class="line">upstream tomcatsrv &#123;</div><div class="line">	server	172.16.3.20:8080;</div><div class="line">	server	172.16.3.50:8080;</div><div class="line">&#125;</div><div class="line">server &#123;</div><div class="line">	listen	80;</div><div class="line">	server_name	www1.maxie.com;</div><div class="line">	location / &#123;</div><div class="line">		proxy_pass	http://tomcatsrv;</div><div class="line">	&#125;</div><div class="line">&#125;</div></pre></td></tr></table></figure>
<h4 id="配置Tomcat内建的Clustering-Session-Replication"><a href="#配置Tomcat内建的Clustering-Session-Replication" class="headerlink" title="配置Tomcat内建的Clustering/Session Replication"></a><font size="4" color="#32CD99">配置Tomcat内建的Clustering/Session Replication</font></h4><ul>
<li>修改Tomcat的server.xml配置</li>
</ul>
<figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div><div class="line">37</div><div class="line">38</div><div class="line">39</div><div class="line">40</div><div class="line">41</div><div class="line">42</div><div class="line">43</div></pre></td><td class="code"><pre><div class="line">$ vim /etc/tomcat/server.xml</div><div class="line">在&lt;Host&gt;段中添加如下信息：</div><div class="line"></div><div class="line">&lt;Cluster className=<span class="string">"org.apache.catalina.ha.tcp.SimpleTcpCluster"</span></div><div class="line">		channelSendOptions=<span class="string">"8"</span>&gt;</div><div class="line"></div><div class="line">	&lt;Manager className=<span class="string">"org.apache.catalina.ha.session.DeltaManager"</span></div><div class="line">		expireSessionsOnShutdown=<span class="string">"false"</span></div><div class="line">		notifyListenersOnReplication=<span class="string">"true"</span>/&gt;</div><div class="line"></div><div class="line">	&lt;Channel className=<span class="string">"org.apache.catalina.tribes.group.GroupChannel"</span>&gt;</div><div class="line">	&lt;Membership className=<span class="string">"org.apache.catalina.tribes.membership.McastService"</span></div><div class="line">	       address=<span class="string">"228.16.3.10"</span></div><div class="line">	       port=<span class="string">"45564"</span></div><div class="line">	       frequency=<span class="string">"500"</span></div><div class="line">	       dropTime=<span class="string">"3000"</span>/&gt;</div><div class="line">	&lt;Receiver className=<span class="string">"org.apache.catalina.tribes.transport.nio.NioReceiver"</span></div><div class="line">	    address=<span class="string">"172.16.3.20"</span>			<span class="comment">#另一台Tomcat为 172.16.3.50</span></div><div class="line">            port=<span class="string">"4000"</span></div><div class="line">            autoBind=<span class="string">"100"</span></div><div class="line">            selectorTimeout=<span class="string">"5000"</span></div><div class="line">            maxThreads=<span class="string">"6"</span>/&gt;</div><div class="line"></div><div class="line">	&lt;Sender className=<span class="string">"org.apache.catalina.tribes.transport.ReplicationTransmitter"</span>&gt;</div><div class="line">	&lt;Transport className=<span class="string">"org.apache.catalina.tribes.transport.nio.PooledParallelSender"</span>/&gt;</div><div class="line">	&lt;/Sender&gt;</div><div class="line">	&lt;Interceptor className=<span class="string">"org.apache.catalina.tribes.group.interceptors.TcpFailureDetector"</span>/&gt;</div><div class="line">	&lt;Interceptor className=<span class="string">"org.apache.catalina.tribes.group.interceptors.MessageDispatch15Interceptor"</span>/&gt;</div><div class="line">	&lt;/Channel&gt;</div><div class="line"></div><div class="line">	&lt;Valve className=<span class="string">"org.apache.catalina.ha.tcp.ReplicationValve"</span></div><div class="line">		filter=<span class="string">""</span>/&gt;</div><div class="line">	&lt;Valve className=<span class="string">"org.apache.catalina.ha.session.JvmRouteBinderValve"</span>/&gt;</div><div class="line"></div><div class="line">	&lt;Deployer className=<span class="string">"org.apache.catalina.ha.deploy.FarmWarDeployer"</span></div><div class="line">		tempDir=<span class="string">"/tmp/war-temp/"</span></div><div class="line">		deployDir=<span class="string">"/tmp/war-deploy/"</span></div><div class="line">		watchDir=<span class="string">"/tmp/war-listen/"</span></div><div class="line">		watchEnabled=<span class="string">"false"</span>/&gt;</div><div class="line"></div><div class="line">	&lt;ClusterListener className=<span class="string">"org.apache.catalina.ha.session.JvmRouteSessionIDBinderListener"</span>/&gt;</div><div class="line">	&lt;ClusterListener className=<span class="string">"org.apache.catalina.ha.session.ClusterSessionListener"</span>/&gt;</div><div class="line">&lt;/Cluster&gt;</div></pre></td></tr></table></figure>
<p><br></p>
<ul>
<li>优化Tomcat</li>
</ul>
<figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line">$ vim /etc/sysconfig/tomcat</div><div class="line"><span class="comment"># 增加栈空间大小</span></div><div class="line">JAVA_OPTS=<span class="string">"-server -Xms1g -Xmx1g"</span></div></pre></td></tr></table></figure>
<p><img src="https://ws1.sinaimg.cn/large/006tKfTcly1fh6h3og6n7j31gc160kjl.jpg" alt=""></p>
<p><br></p>
<ul>
<li>创建测试页的web.xml配置文件，使其支持session replication功能</li>
</ul>
<figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div></pre></td><td class="code"><pre><div class="line">$ cp /etc/tomcat/web.xml /usr/share/tomcat/webapps/<span class="built_in">test</span>/WEB-INF/</div><div class="line">$ vim /usr/share/tomcat/webapps/<span class="built_in">test</span>/WEB-INF/web.xml</div><div class="line">在&lt;servlet&gt;段上面添加一条：</div><div class="line">&lt;distributable/&gt;</div><div class="line"></div><div class="line">$ systemctl restart tomcat</div></pre></td></tr></table></figure>
<p><br></p>
<ul>
<li>拷贝修改的配置至另一台Tomcat服务器之上</li>
</ul>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line">$ scp /etc/tomcat/server.xml  root@172.16.3.50:/etc/tomcat/</div><div class="line">$ scp /etc/sysconfig/tomcat root@172.16.3.50:/etc/sysconfig/</div><div class="line">$ scp /usr/share/tomcat/webapps/test/WEB-INF/web.xml root@172.16.3.50:/usr/share/tomcat/webapps/test/WEB-INF/</div></pre></td></tr></table></figure>
<ul>
<li><p>两台Tomcat重启服务</p>
</li>
<li><p>打开浏览器输入 <a href="http://www1.maxie.com" target="_blank" rel="external">http://www1.maxie.com</a> 检查效果</p>
</li>
</ul>
<p><img src="https://ws2.sinaimg.cn/large/006tKfTcly1fh6gjasbdng30qo0ushdx.gif" alt=""></p>
<hr>
<div class="note info"><h3 id="Tomcat-Memcached-实现session-server"><a href="#Tomcat-Memcached-实现session-server" class="headerlink" title="Tomcat + Memcached 实现session server"></a>Tomcat + Memcached 实现session server</h3></div>
<p>实验之前需要将上一个实验中的 server.xml中的 session replication的配置段删除</p>
<p>memcached连接器下载地址：<a href="连接器下载地址：http://repo1.maven.org/maven2/de/javakaffee/msm/">下载地址</a></p>
<h4 id="安装并配置memcached"><a href="#安装并配置memcached" class="headerlink" title="安装并配置memcached"></a><font size="3" color="#38B0DE">安装并配置memcached</font></h4><ul>
<li>安装memcached</li>
</ul>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">$ yum install -y memcached</div></pre></td></tr></table></figure>
<ul>
<li>查看memcached配置文件，并修改</li>
</ul>
<figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div></pre></td><td class="code"><pre><div class="line">$ vim /etc/sysconfig/memcached</div><div class="line">PORT=<span class="string">"11211"</span>                <span class="comment"># 监听端口</span></div><div class="line">USER=<span class="string">"memcached"</span>            <span class="comment"># 运行时的用户</span></div><div class="line">MAXCONN=<span class="string">"2048"</span>              <span class="comment"># 最大连接数，默认为1024</span></div><div class="line">CACHESIZE=<span class="string">"1024"</span>            <span class="comment"># 缓存内存大小，默认为64M</span></div><div class="line">OPTIONS=<span class="string">""</span></div></pre></td></tr></table></figure>
<ul>
<li>启动服务</li>
</ul>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line">$ systemctl start memcached</div><div class="line">$ ss -tnl</div></pre></td></tr></table></figure>
<p><br></p>
<h4 id="配置Tomcat"><a href="#配置Tomcat" class="headerlink" title="配置Tomcat"></a><font size="3" color="#38B0DE">配置Tomcat</font></h4><ul>
<li>修改server.xml配置文件</li>
</ul>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div></pre></td><td class="code"><pre><div class="line">$ vim /etc/tomcat/server.xml</div><div class="line">在&lt;Host&gt;段添加如下信息：</div><div class="line">&lt;Context path=&quot;/test&quot; docBase=&quot;test&quot; reloadable=&quot;true&quot; &gt;</div><div class="line">	&lt;Manager className=&quot;de.javakaffee.web.msm.MemcachedBackupSessionManager&quot;</div><div class="line">	    memcachedNodes=&quot;mem1:172.16.3.60:11211,mem2:172.16.3.70:11211&quot;</div><div class="line">	    failoverNodes=&quot;mem2&quot;</div><div class="line">	    requestUriIgnorePattern=&quot;.*\.(ico|png|gif|jpg|css|js)$&quot;</div><div class="line">	    transcoderFactoryClass=&quot;de.javakaffee.web.msm.serializer.javolution.JavolutionTranscoderFactory&quot;</div><div class="line">	/&gt;</div><div class="line">&lt;/Context&gt;</div><div class="line"></div><div class="line"># 将配置文件发送到另一台Tomcat服务器</div><div class="line">$ scp /etc/tomcat/server.xml root@172.16.3.50:/etc/tomcat/</div></pre></td></tr></table></figure>
<ul>
<li>下载所需的jar包</li>
</ul>
<p><a href="http://repo1.maven.org/maven2/net/spy/spymemcached/2.11.1/spymemcached-2.11.1.jar" target="_blank" rel="external">spymemcached-2.11.1</a><br><a href="http://repo1.maven.org/maven2/de/javakaffee/msm/memcached-session-manager/2.1.1/" target="_blank" rel="external">memcached-session-manager-2.1.1</a><br><a href="http://repo1.maven.org/maven2/de/javakaffee/msm/memcached-session-manager-tc7/2.1.1/" target="_blank" rel="external">memcached-session-manager-tc7-2.1.1</a><br><a href="http://repo1.maven.org/maven2/de/javakaffee/msm/msm-javolution-serializer/2.1.1/" target="_blank" rel="external">msm-javolution-serializer-2.1.1</a><br><a href="http://www.manyjar.com/download?storeName=j/javolution/javolution-5.4.3.1.jar.zip" target="_blank" rel="external">javolution-5.4.3.1</a></p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div></pre></td><td class="code"><pre><div class="line">$ cd /usr/share/java/tomcat</div><div class="line">$ wget ftp://172.16.0.1/pub/Sources/7.x86_64/msm/*</div><div class="line">$ rm -f memcached-session-manager-tc8-1.8.3.jar</div><div class="line"></div><div class="line"># 传送jar包到另一台Tomcat</div><div class="line">$ scp javolution-5.4.3.1.jar memcached-session-manager-* spymemcached-2.11.1.jar msm-javolution-serializer-1.8.3.jar root@172.16.3.50:/usr/share/java/tomcat/</div></pre></td></tr></table></figure>
<ul>
<li>重新启动两台Tomcat服务，并打开网页进行测试</li>
</ul>
<p><img src="https://ws1.sinaimg.cn/large/006tKfTcly1fh6hlav63fg30qo0ushdx.gif" alt=""></p>
<hr>
<div class="note warning"><h3 id="JVM常用的分析工具"><a href="#JVM常用的分析工具" class="headerlink" title="JVM常用的分析工具"></a>JVM常用的分析工具</h3></div>
<h4 id="安装oracle-JDK"><a href="#安装oracle-JDK" class="headerlink" title="安装oracle JDK"></a>安装oracle JDK</h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div></pre></td><td class="code"><pre><div class="line">$ lft 172.16.0.1/pub/Sources</div><div class="line">&gt; get 7.x86_64/jdk/jdk-8u25-linux-x64.rpm</div><div class="line">$ yum install ./jdk-8u25-linux-x64.rpm </div><div class="line">$ vim /etc/profile.d/java.sh</div><div class="line">export JAVA_HOME=/usr/java/latest</div><div class="line">export PATH=$JAVA_HOME/bin:$PATH</div><div class="line">$ . /etc/profile.d/java.sh</div></pre></td></tr></table></figure>
<h4 id="安装Tomcat"><a href="#安装Tomcat" class="headerlink" title="安装Tomcat"></a>安装Tomcat</h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div></pre></td><td class="code"><pre><div class="line">$ lftp 172.16.0.1/pub/Sources</div><div class="line">$ tar -xf apache-tomcat-8.0.23.tar.gz -C /usr/local/</div><div class="line">$ cd /usr/local/</div><div class="line">$ ln -sv apache-tomcat-8.0.23/ tomcat</div><div class="line">$ useradd -r tomcat</div><div class="line">$ chown -R tomcat.tomcat tomcat/</div><div class="line">$ vim /etc/profile.d/</div><div class="line">export CATALINA_BASE=/usr/local/tomcat </div><div class="line">export PATH=$CATALINA_BASE/bin:$PATH</div></pre></td></tr></table></figure>
<h4 id="启动Tomcat"><a href="#启动Tomcat" class="headerlink" title="启动Tomcat"></a>启动Tomcat</h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line">$ useradd -r tomcat </div><div class="line">$ su - tomcat -c &apos;/usr/local/tomcat/catalina.sh start&apos;</div><div class="line">$ ss -tnl</div></pre></td></tr></table></figure>
<h4 id="使用自带工具进行检测"><a href="#使用自带工具进行检测" class="headerlink" title="使用自带工具进行检测"></a>使用自带工具进行检测</h4><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div></pre></td><td class="code"><pre><div class="line">jps             用来查看运行的所有jvm进程</div><div class="line">jinfo           查看进程的运行环境参数，主要是jvm命令行参数</div><div class="line">jstat           对jvm应用程序的资源和性能进行实时监控</div><div class="line">jstack          查看所有线程的运行状态</div><div class="line">jmap            查看jvm占用物理内存的状态</div><div class="line">jconsole        图形化管理工具</div><div class="line">jvisualvm       oracle JDK提供的图形化监测工具</div></pre></td></tr></table></figure>
<ul>
<li>jps</li>
</ul>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line">$ jps</div><div class="line">32474 Jps</div><div class="line">2508 Bootstrap</div></pre></td></tr></table></figure>
<p><br></p>
<ul>
<li>jinfo</li>
</ul>
<p><img src="https://ws4.sinaimg.cn/large/006tKfTcly1fh6i33rx1uj31ho3o0u12.jpg" alt=""></p>
<p><br></p>
<ul>
<li>jstat</li>
</ul>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line">$ jstat -gc 2508</div><div class="line"> S0C    S1C    S0U    S1U      EC       EU        OC         OU       MC     MU    CCSC   CCSU   YGC     YGCT    FGC    FGCT     GCT</div><div class="line">832.0  832.0   0.0    26.7   7168.0   5669.3   17552.0    13746.6   15616.0 14968.1 1792.0 1631.2     19    0.383   1      0.021    0.404</div></pre></td></tr></table></figure>
<p><br></p>
<ul>
<li>jmap</li>
</ul>
<p><img src="https://ws1.sinaimg.cn/large/006tKfTcly1fh6i5y3a67j31iq0s4x6p.jpg" alt=""></p>
<p><br></p>
<ul>
<li>jconsole</li>
</ul>
<p><img src="https://ws2.sinaimg.cn/large/006tKfTcly1fh6i6mr2nbj30p20l3wf6.jpg" alt=""></p>
<p><img src="https://ws1.sinaimg.cn/large/006tKfTcly1fh6i6mlatrj30p20l30tc.jpg" alt=""></p>
<p><br></p>
<ul>
<li>jvisualvm</li>
</ul>
<p><img src="https://ws1.sinaimg.cn/large/006tKfTcly1fh6i6zc6vyj30x10m2q3i.jpg" alt=""></p>
<p><img src="https://ws3.sinaimg.cn/large/006tKfTcly1fh6i6z6rmyj30x10m2t9e.jpg" alt=""></p>
<hr>
<iframe frameborder="no" border="0" marginwidth="0" marginheight="0" width="330" height="86" src="//music.163.com/outchain/player?type=2&id=26092806&auto=1&height=66"></iframe>

<p>本文出自<a href="http://maxiecloud.com">Maxie’s Notes</a>博客，转载请务必保留此出处。</p>
<p><img src="https://ww1.sinaimg.cn/large/006tNbRwly1fdzc80odsuj30gn0ilq5m.jpg" alt=""></p>
]]></content>
    
    <summary type="html">
    
      &lt;p&gt;&lt;img src=&quot;https://ws3.sinaimg.cn/large/006tKfTcly1fh6f3kqbjcj30xc0m8q4w.jpg&quot; alt=&quot;&quot;&gt;&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;上一节我们简单的介绍了如何使用Tomcat作为动态Web服务器&lt;br&gt;以及使用nginx/httpd服务器反向代理Tomcat和负载均衡Tomcat&lt;/p&gt;
&lt;p&gt;在这一章节，我们将介绍如何使用Tomcat自带的Clustering/Session Replication实现会话保持功能&lt;br&gt;以及使用memcached对Tomcat实现session server功能&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h3 id=&quot;实验之前的准备&quot;&gt;&lt;a href=&quot;#实验之前的准备&quot; class=&quot;headerlink&quot; title=&quot;实验之前的准备&quot;&gt;&lt;/a&gt;实验之前的准备&lt;/h3&gt;&lt;h4 id=&quot;准备虚拟机&quot;&gt;&lt;a href=&quot;#准备虚拟机&quot; class=&quot;headerlink&quot; title=&quot;准备虚拟机&quot;&gt;&lt;/a&gt;准备虚拟机&lt;/h4&gt;&lt;p&gt;为了能正常的实现我们这里准备的3个实验，计划准备五台虚拟机&lt;/p&gt;
&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;1&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;2&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;3&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;4&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;5&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;Director        172.16.3.10/16&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;Tomcat-1        172.16.3.20/16&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;Tomcat-2        172.16.3.50/16&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;Memcached-1     172.16.3.60/16&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;Memcached-2     172.16.3.70/16&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;建议每台Tomcat的内存分配的尽可能大一些，建议4GB&lt;/p&gt;
&lt;h4 id=&quot;同步时间&quot;&gt;&lt;a href=&quot;#同步时间&quot; class=&quot;headerlink&quot; title=&quot;同步时间&quot;&gt;&lt;/a&gt;同步时间&lt;/h4&gt;&lt;p&gt;在操作多台机器实现一个功能/目标时，需要将其时间同步&lt;/p&gt;
&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;1&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;$ ntpdate 172.16.0.1&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;h4 id=&quot;制作网络拓扑图&quot;&gt;&lt;a href=&quot;#制作网络拓扑图&quot; class=&quot;headerlink&quot; title=&quot;制作网络拓扑图&quot;&gt;&lt;/a&gt;制作网络拓扑图&lt;/h4&gt;&lt;hr&gt;
    
    </summary>
    
      <category term="linux进阶" scheme="http://maxiecloud.com/categories/linux%E8%BF%9B%E9%98%B6/"/>
    
      <category term="tomcat" scheme="http://maxiecloud.com/categories/linux%E8%BF%9B%E9%98%B6/tomcat/"/>
    
      <category term="session" scheme="http://maxiecloud.com/categories/linux%E8%BF%9B%E9%98%B6/tomcat/session/"/>
    
    
      <category term="cluster" scheme="http://maxiecloud.com/tags/cluster/"/>
    
      <category term="tomcat" scheme="http://maxiecloud.com/tags/tomcat/"/>
    
      <category term="java" scheme="http://maxiecloud.com/tags/java/"/>
    
      <category term="session" scheme="http://maxiecloud.com/tags/session/"/>
    
  </entry>
  
  <entry>
    <title>HAProxy用法详解</title>
    <link href="http://maxiecloud.com/2017/07/01/haproxy/"/>
    <id>http://maxiecloud.com/2017/07/01/haproxy/</id>
    <published>2017-07-01T06:05:41.000Z</published>
    <updated>2017-07-01T10:47:40.000Z</updated>
    
    <content type="html"><![CDATA[<p><img src="https://ws2.sinaimg.cn/large/006tNc79gy1fh4doappj2j30g703vmxj.jpg" alt=""></p>
<blockquote class="blockquote-center">HAProxy是一款高可用性、负载均衡基于TCP(四层)和HTTP(七层)应用的代理软件，支持虚拟主机。<br>HAProxy特别适用于那些负载特大的web站点，这些站点通常又需要会话保持或七层处理。<br>HAProxy运行在时下的硬件上，完全可以支持数以万计的 并发连接。<br>并且它的运行模式使得它可以很简单安全的整合进您当前的架构中，同时可以保护你的web服务器不被暴露到网络上。<br></blockquote>

<h3 id="HAProxy性能"><a href="#HAProxy性能" class="headerlink" title="HAProxy性能"></a><font szie="4" color="#32CD99"><strong>HAProxy性能</strong></font></h3><ul>
<li>单进程、事件驱动模型显著降低了上下文切换的开销及内存占用</li>
<li>O(1)事件检查器(event checker)允许其在高并发连接中对任何连接的任何事件实现即时探测</li>
<li>在任何可用的情况下，单缓冲(single buffering)机制能以不复制任何数据的方式完成读写操作，这会节约大量的CPU时钟周期及内存带宽</li>
</ul>
<h3 id="相比其他负载均衡调度器，优点有："><a href="#相比其他负载均衡调度器，优点有：" class="headerlink" title="相比其他负载均衡调度器，优点有："></a><font szie="4" color="#5F9F9F"><strong>相比其他负载均衡调度器，优点有：</strong></font></h3><ol>
<li>HAProxy是支持虚拟主机的，通过frontend指令来实现</li>
<li>能够补充Nginx的一些缺点比如Session的保持，Cookie的引导等工作</li>
<li>支持url检测后端的服务器</li>
<li>它跟LVS一样，本身仅仅就只是一款负载均衡软件；单纯从效率上来讲HAProxy更会比Nginx有更出色的负载均衡速度，在并发处理上也是优于Nginx的。</li>
<li>HAProxy可以对Mysql读进行负载均衡，对后端的MySQL节点进行检测和负载均衡，不过在后端的MySQL slaves数量超过10台时性能不如LVS。</li>
<li>能对请求的url和header中的信息做匹配，有比lvs有更好的7层实现</li>
</ol>
<h3 id="配置中两大配置段、五部分配置"><a href="#配置中两大配置段、五部分配置" class="headerlink" title="配置中两大配置段、五部分配置"></a><font szie="4" color="#007FFF"><strong>配置中两大配置段、五部分配置</strong></font></h3><h4 id="两大配置段"><a href="#两大配置段" class="headerlink" title="两大配置段"></a>两大配置段</h4><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line">global      全局配置段，进程级安全配置相关的参数，性能调整相关参数，Debug参数</div><div class="line">proxies     代理配置段，如<span class="string">"defaults"</span>，<span class="string">"frontend"</span>，<span class="string">"backend"</span></div></pre></td></tr></table></figure>
<h4 id="proxie配置段中的五部分配置"><a href="#proxie配置段中的五部分配置" class="headerlink" title="proxie配置段中的五部分配置"></a>proxie配置段中的五部分配置</h4><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div></pre></td><td class="code"><pre><div class="line">defaults        为frontend、listen、backend提供默认配置</div><div class="line">frontend        前端配置，相当于nginx中的 server段</div><div class="line">backend         后端配置，相当于nginx中的 upstream段</div><div class="line">listen          frontend和backend的组合体</div></pre></td></tr></table></figure>
<h3 id="时间格式"><a href="#时间格式" class="headerlink" title="时间格式"></a><font szie="4" color="#8F8FBD"><strong>时间格式</strong></font></h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div></pre></td><td class="code"><pre><div class="line">us: 微秒(microseconds)，即1/1000000秒；</div><div class="line">ms: 毫秒(milliseconds)，即1/1000秒；</div><div class="line">s: 秒(seconds)；</div><div class="line">m: 分钟(minutes)；</div><div class="line">h：小时(hours)；</div><div class="line">d: 天(days)；</div></pre></td></tr></table></figure>
<hr>
<a id="more"></a>
<div class="note primary"><h3 id="HAProxy配置文件详解"><a href="#HAProxy配置文件详解" class="headerlink" title="HAProxy配置文件详解"></a>HAProxy配置文件详解</h3></div>
<h3 id="Global配置参数"><a href="#Global配置参数" class="headerlink" title="Global配置参数"></a><font szie="4" color="#236B8E">Global配置参数</font></h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div></pre></td><td class="code"><pre><div class="line"><span class="built_in">log</span>                 定义全局的syslog服务器；最多可以定义两个</div><div class="line">    <span class="built_in">log</span> &lt;address&gt; [len &lt;length&gt;] &lt;facility&gt; [max level [min level]]</div><div class="line">    facility：帮助用户分类存储日志(将日志归类)</div><div class="line">        后端存储日志的位置，都由facility定义</div><div class="line">        需要在<span class="string">'rsyslog'</span>中配置</div><div class="line">nbproc &lt;number&gt;     要启动的haproxy的进程数量；(<span class="string">'建议工作在单进程模型下'</span>，1个进程处理所有请求)</div><div class="line"><span class="built_in">ulimit</span>-n &lt;number&gt;   每个haproxy进程可打开的最大文件数</div><div class="line">chroot              切根，以安全模式运行</div><div class="line">daemon              以守护进程运行</div><div class="line">stats socket        套接字文件</div><div class="line">pidfile             pid文件路径</div><div class="line"></div><div class="line">性能调优参数：</div><div class="line">maxconn &lt;number&gt;                    设定每个haproxy进程所能接受的最大并发连接数</div><div class="line">maxconnrate &lt;number&gt;                每个进程每秒种所能创建的最大连接数量</div><div class="line">maxsslconn &lt;number&gt;                 每进程能够处理最大的SSL会话数</div><div class="line">spread-checks &lt;0..50, <span class="keyword">in</span> percent&gt;   后端主机健康状态检查</div><div class="line"></div><div class="line">超时时长配置：</div><div class="line">timeout http request                在客户端建立连接但不请求数据时，关闭客户端连接</div><div class="line">timeout queue                       等待最大时长</div><div class="line">timeout connect                     定义haproxy将客户端请求转发至后端服务器所等待的超时时长</div><div class="line">timeout client                      客户端非活动状态的超时时长</div><div class="line">timeout server                      客户端与服务器端建立连接后，等待服务器端的超时时长，</div><div class="line">timeout http-keep-alive             定义保持连接的超时时长</div><div class="line">timeout check                       健康状态监测时的超时时间，过短会误判，过长资源消耗</div><div class="line"> </div><div class="line">http-server-close                   在使用长连接时，为了避免客户端超时没有关闭长连接，此功能可以使服务器端关闭长连接</div><div class="line">redispatch                          在使用基于cookie定向时，一旦后端某一server宕机时，会将会话重新定向至某一上游服务器，必须使用的选项</div></pre></td></tr></table></figure>
<p><br></p>
<h3 id="Proxie配置参数"><a href="#Proxie配置参数" class="headerlink" title="Proxie配置参数"></a><font szie="4" color="#236B8E">Proxie配置参数</font></h3><ul>
<li>defaults <name>：默认配置</name></li>
<li>frontend <name>：以服务端的身份对客户请求时使用</name></li>
<li>backend  <name>：以客户端的身份对后端服务器请求时使用</name></li>
<li>listen   <name>：一一对应时、或者只需监听前端，不用处理后端时(类似status页的工作原理)</name></li>
</ul>
<p><strong>配置参数：</strong></p>
<ul>
<li>bind</li>
</ul>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">bind [&lt;address&gt;]:&lt;port_range&gt; [, ...] [param*]</div></pre></td></tr></table></figure>
<p>此指令仅能用于<code>frontend</code>和<code>listen</code>区段，用于定义一个或几个监听的套接字</p>
<p><code>&lt;address&gt;</code>：可选选项，其可以为主机名、IPv4地址、IPv6地址或<code>*</code>；省略此选项、将其指定为<code>*</code>或0.0.0.0时，将监听当前系统的所有IPv4地址<br><code>&lt;port_range&gt;</code>：可以是一个特定的TCP端口，也可是一个端口范围(如5005-5010)，指定多个端口时，用逗号分割。代理服务器将通过指定的端口来接收客户端请求；需要注意的是，每组监听的套接字<address:port>在同一个实例上只能使用一次<br><code>&lt;interface&gt;</code>：指定物理接口的名称，其不能使用接口别名，而仅能使用物理接口名称，而且只有管理有权限指定绑定的物理接口</address:port></p>
<p>示例：</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div></pre></td><td class="code"><pre><div class="line">listen http_proxy</div><div class="line">	bind :80,:443</div><div class="line">	bind 10.0.0.1:10080,10.0.0.1:10443</div><div class="line">	bind /var/run/ssl-frontend.sock user root mode 600 accept-proxy</div></pre></td></tr></table></figure>
<p><br></p>
<ul>
<li>balance：后端服务器组内的服务器调度算法(不能用在frontend)</li>
</ul>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line">balance &lt;algorithm&gt; [ &lt;arguments&gt; ]</div><div class="line">balance url_param &lt;param&gt; [check_post]</div></pre></td></tr></table></figure>
<p>定义负载均衡算法，用于在负载均衡场景中挑选一个server，其仅应用于持久信息不可用的条件下或需要将一个连接重新派发至另一个服务器时。</p>
<p>支持的算法有：</p>
<figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div></pre></td><td class="code"><pre><div class="line">roundrobin          动态轮询算法，支持权重的运行时调整，支持慢启动；每个后端中最多支持4095个后端服务器(server)--&gt;相当于无上限</div><div class="line">static-rr           静态轮询算法，不支持权重的运行时调整及慢启动；后端主机数量无上限</div><div class="line">leastconn           最少连接，推荐使用在具有较长会话的场景中，例如MySQL、LDAP等</div><div class="line">first               先到先得(只有当 当前服务器资源用完/上限之后，才会调度)，根据服务器在列表中的位置，自上而下进行调度；前面服务器的连接数达到上限，新请求才会分配给下一台服务</div><div class="line"><span class="built_in">source</span>              源地址<span class="built_in">hash</span>；除权取余法和一致性哈希</div><div class="line">uri                 类似于nginx的hash_uri，对URI的左半部分做<span class="built_in">hash</span>计算，并由服务器总权重相除以后派发至某挑出的服务器</div><div class="line">    当使用缓存服务器在后端时，使用此调度算法；对uri进行调度，根据请求的uri --&gt; 提高缓存命中率</div><div class="line"></div><div class="line">url_param           通过&lt;argument&gt;为URL指定的参数在每个HTTP GET请求中将会被检索；如果找到了指定的参数且其通过等于号“=”被赋予了一个值，那么此值将被执行<span class="built_in">hash</span>运算并被服务器的总权重相除后派发至某匹配的服务器；</div><div class="line">    此算法可以通过追踪请求中的用户标识进而确保同一个用户ID的请求将被送往同一个特定的服务器，除非服务器的总权重发生了变化；</div><div class="line">    如果某请求中没有出现指定的参数或其没有有效值，则使用轮叫算法对相应请求进行调度；此算法默认为静态的，不过其也可以使用<span class="built_in">hash</span>-type修改此特性</div><div class="line"></div><div class="line">hdr(&lt;name&gt;)：对于每个http请求，此处由&lt;name&gt;指定的http首部将会被取出做<span class="built_in">hash</span>计算； 并由服务器总权重相除以后派发至某挑出的服务器；没有有效值的会被轮询调度；</div><div class="line">    name：请求的方法</div></pre></td></tr></table></figure>
<p><br></p>
<ul>
<li>hash-type</li>
</ul>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">hash-type &lt;method&gt; &lt;function&gt; &lt;modifier&gt;</div></pre></td></tr></table></figure>
<p>定义用于将hash码映射至后端服务器的方法；其不能用于frontend区段；可用方法有map-based和consistent，在大多数场景下推荐使用默认的map-based方法。</p>
<p><strong>method：</strong></p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line">map-based           除权取余法(取模)，哈希数据结构是静态的数组；(静态映射hash)</div><div class="line">consistent          一致性哈希。hash表是一个由各服务器填充而成的树状结构，将服务器散列在hash环上；基于hash键在hash树中查找相应的服务器时，最近的服务器将被选中。</div></pre></td></tr></table></figure>
<p><br></p>
<ul>
<li>default_backend</li>
</ul>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">default_backend &lt;backend&gt;</div></pre></td></tr></table></figure>
<p>在没有匹配的”use_backend”规则时为实例指定使用的默认后端，因此，其不可应用于backend区段。在”frontend”和”backend”之间进行内容交换时，通常使用”use-backend”定义其匹配规则；而没有被规则匹配到的请求将由此参数指定的后端接收。</p>
<p><br></p>
<ul>
<li>default-server</li>
</ul>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">default-server [param*]</div></pre></td></tr></table></figure>
<p>为backend中的各server设定默认选项</p>
<p><br></p>
<ul>
<li>server</li>
</ul>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">server &lt;name&gt; &lt;address&gt;[:[port]] [param*]</div></pre></td></tr></table></figure>
<p>为后端声明一个server，因此，不能用于defaults和frontend区段。</p>
<p><code>&lt;name&gt;</code>：为此服务器指定的内部名称，其将出现在日志及警告信息中；如果设定了”http-send-server-name”，它还将被添加至发往此服务器的请求首部中<br><code>&lt;address&gt;</code>：此服务器的的IPv4地址，也支持使用可解析的主机名，只不过在启动时需要解析主机名至相应的IPv4地址<br><code>[:port]</code>：指定将连接请求所发往的此服务器时的目标端口，其为可选项；未设定时，将使用客户端请求时的同一相端口<br><code>[param*]</code>：为此服务器设定的一系参数；其可用的参数非常多，具体请参考官方文档中的说明，下面仅说明几个常用的参数</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div></pre></td><td class="code"><pre><div class="line">maxconn &lt;maxconn&gt;       当前server的最大并发连接数(压测完后，上线之前要设置)</div><div class="line">backlog &lt;backlog&gt;       当前server的连接数达到上限后的&apos;后援队列长度&apos;；超过则拒绝响应</div><div class="line">backup                  设定为备用服务器，仅在负载均衡场景中的其它server均不可用于启用此servr</div><div class="line">check                   启动对此server执行健康状态检查，其可以借助于额外的其它参数完成更精细的设定</div><div class="line">    addr ：检测时使用的&apos;IP地址&apos;；(当后端服务器有多个IP地址时，避免检查后端服务器的业务IP地址，对后端服务器增加压力)</div><div class="line">    port ：针对此&apos;端口&apos;进行检测；</div><div class="line">    inter &lt;delay&gt;：连续两次检测之间的时间间隔，默认为2000ms; </div><div class="line">    rise &lt;count&gt;：连续多少次检测结果为“成功”才标记服务器为可用；默认为2；</div><div class="line">    fall &lt;count&gt;：连续多少次检测结果为“失败”才标记服务器为不可用；默认为3；</div><div class="line"></div><div class="line">cookie &lt;value&gt;          为当前server指定其cookie值，用于实现基于cookie的会话黏性;为后端服务器指定静态cookie</div><div class="line">disabled                标记为不可用；(人工设置服务器为down状态)</div><div class="line">redir &lt;prefix&gt;          将发往此server的所有GET和HEAD类的请求重定向至指定的URL</div><div class="line">weight &lt;weight&gt;         权重，默认为1</div></pre></td></tr></table></figure>
<p><br></p>
<ul>
<li>stats enable</li>
</ul>
<p>启用基于程序编译时默认设置的统计报告，不能用于“frontend”区段。只要没有另外的其它设定，它们就会使用如下的配置</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div></pre></td><td class="code"><pre><div class="line">stats uri               /haproxy?stats</div><div class="line">stats realm             &quot;HAProxy Statistics&quot;</div><div class="line">stats auth              no authentication</div><div class="line">stats scope             no restriction</div></pre></td></tr></table></figure>
<p>尽管”stats enable”一条就能够启用统计报告，但还是建议设定其它所有的参数，以免其依赖于默认设定而带来非期后果。下面是一个配置案例:</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div></pre></td><td class="code"><pre><div class="line">listen status</div><div class="line">    bind *:9909</div><div class="line">    acl auth_admin  src 172.16.250.15 172.16.1.11</div><div class="line">    stats           enable</div><div class="line">    stats uri       /myha?stats</div><div class="line">    stats realm     HAProxy\ Admin\ Area</div><div class="line">    stats auth      root:root@123</div><div class="line">    stats admin     if auth_admin</div><div class="line">    stats hide-version</div></pre></td></tr></table></figure>
<p><br></p>
<ul>
<li>stats hide-version</li>
</ul>
<p>启用统计报告并隐藏HAProxy版本报告，不能用于“frontend”区段。默认情况下，统计页面会显示一些有用信息，包括HAProxy的版本号，然而，向所有人公开HAProxy的精确版本号是非常有风险的，因为它能帮助恶意用户快速定位版本的缺陷和漏洞。尽管“stats hide-version”一条就能够启用统计报告，但还是建议设定其它所有的参数，以免其依赖于默认设定而带来非期后果。</p>
<p><br></p>
<ul>
<li>stats realm</li>
</ul>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">stats realm &lt;realm&gt;</div></pre></td></tr></table></figure>
<p>启用统计报告并高精认证领域，不能用于”frontend”区段。haproxy在读取realm时会将其视作一个单词，因此，中间的任何空白字符都必须使用反斜线进行转义。此参数仅在与”stats auth”配置使用时有意义。</p>
<p><br></p>
<ul>
<li>stats auth</li>
</ul>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">stats auth &lt;user&gt;:&lt;passwd&gt;</div></pre></td></tr></table></figure>
<p>启用带认证的统计报告功能并授权一个用户帐号，其不能用于”frontend”区段。<br><code>&lt;user&gt;</code>：授权进行访问的用户名<br><code>&lt;passwd&gt;</code>：此用户的访问密码，明文格式</p>
<p><br></p>
<ul>
<li>stats admin</li>
</ul>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">stats admin &#123; if | unless &#125; &lt;cond&gt;</div></pre></td></tr></table></figure>
<p>在指定的条件满足时启用统计报告页面的管理级别功能，它允许通过web接口启用或禁用服务器，不过，基于安全的角度考虑，统计报告页面应该尽可能为只读的。此外，如果启用了HAProxy的多进程模式，启用此管理级别将有可能导致异常行为。</p>
<p><br></p>
<ul>
<li>option httplog</li>
</ul>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">option httplog [ clf ]</div></pre></td></tr></table></figure>
<p>启用记录HTTP请求、会话状态和计时器的功能。<br><code>clf</code>：使用CLF格式来代替HAProxy默认的HTTP格式，通常在使用仅支持CLF格式的特定日志分析器时才需要使用此格式。</p>
<p><br></p>
<ul>
<li>errorfile</li>
</ul>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">errorfile &lt;code&gt; &lt;file&gt;</div></pre></td></tr></table></figure>
<p>在用户请求不存在的页面时，返回一个页面文件给客户端而非由haproxy生成的错误代码；可用于所有段中。</p>
<p><code>&lt;code&gt;</code>：指定对HTTP的哪些状态码返回指定的页面；这里可用的状态码有200、400、403、408、500、502、503和504<br><code>&lt;file&gt;</code>：指定用于响应的页面文件</p>
<p><br></p>
<ul>
<li>option forwardfor</li>
</ul>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">option forwardfor [ except &lt;network&gt; ] [ header &lt;name&gt; ] [ if-none ]</div></pre></td></tr></table></figure>
<p>允许在发往服务器的请求首部中插入”X-Forwarded-For”首部。用于向后端主发送真实的客户端IP</p>
<p><code>&lt;network&gt;</code>：可选参数，当指定时，源地址为匹配至此网络中的请求都禁用此功能。<br><code>&lt;name&gt;</code>：可选参数，可使用一个自定义的首部，如“X-Client”来替代“X-Forwarded-For”。有些独特的web服务器的确需要用于一个独特的首部。<br><code>if-none</code>：仅在此首部不存在时才将其添加至请求报文问道中。<br>HAProxy工作于反向代理模式，其发往服务器的请求中的客户端IP均为HAProxy主机的地址而非真正客户端的地址，这会使得服务器端的日志信息记录不了真正的请求来源，“X-Forwarded-For”首部则可用于解决此问题。HAProxy可以向每个发往服务器的请求上添加此首部，并以客户端IP为其value。</p>
<p>示例：</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line">errorfile 400 /etc/haproxy/errorpages/400badreq.http</div><div class="line">errorfile 403 /etc/haproxy/errorpages/403forbid.http</div><div class="line">errorfile 503 /etc/haproxy/errorpages/503sorry.http</div></pre></td></tr></table></figure>
<p><br></p>
<ul>
<li>reqadd</li>
</ul>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">reqadd  &lt;string&gt; [&#123;if | unless&#125; &lt;cond&gt;]</div></pre></td></tr></table></figure>
<p>在请求报文中添加首部</p>
<p><br></p>
<ul>
<li>rspadd</li>
</ul>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">rspadd &lt;string&gt; [&#123;if | unless&#125; &lt;cond&gt;]</div></pre></td></tr></table></figure>
<p>在响应给客户端的报文中添加首部；上下文，除了default都可以</p>
<p><br></p>
<ul>
<li>reqdel</li>
</ul>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line">reqdel  &lt;search&gt; [&#123;if | unless&#125; &lt;cond&gt;]</div><div class="line">reqidel &lt;search&gt; [&#123;if | unless&#125; &lt;cond&gt;]  (ignore case)</div></pre></td></tr></table></figure>
<p>删除请求报文的某个首部、依据正则表达式进行删除</p>
<p><br></p>
<ul>
<li>rspdel</li>
</ul>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line">rspdel  &lt;search&gt; [&#123;if | unless&#125; &lt;cond&gt;]</div><div class="line">rspidel &lt;search&gt; [&#123;if | unless&#125; &lt;cond&gt;]  (ignore case)</div></pre></td></tr></table></figure>
<p>删除响应报文的首部</p>
<p><strong>配置示例</strong></p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div></pre></td><td class="code"><pre><div class="line">frontend  main</div><div class="line">    bind *:80</div><div class="line">    default_backend             websrv</div><div class="line">    maxconn 5000</div><div class="line">    rspadd X-Via:\ HAPorxy</div><div class="line">    rspidel Server.*</div></pre></td></tr></table></figure>
<p><br></p>
<h3 id="日志配置"><a href="#日志配置" class="headerlink" title="日志配置"></a><font szie="4" color="#236B8E">日志配置</font></h3><p><strong>默认格式</strong></p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div></pre></td><td class="code"><pre><div class="line">Field   Format                                Extract from the example above</div><div class="line">  1   process_name &apos;[&apos; pid &apos;]:&apos;                            haproxy[14385]:</div><div class="line">  2   &apos;Connect from&apos;                                          Connect from</div><div class="line">  3   source_ip &apos;:&apos; source_port                             10.0.1.2:33312</div><div class="line">  4   &apos;to&apos;                                                              to</div><div class="line">  5   destination_ip &apos;:&apos; destination_port                   10.0.3.31:8012</div><div class="line">  6   &apos;(&apos; frontend_name &apos;/&apos; mode &apos;)&apos;                            (www/HTTP)</div></pre></td></tr></table></figure>
<p><br></p>
<p><strong>tcp日志格式</strong></p>
<p>option tcplog：指定日志格式为tcplog</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div></pre></td><td class="code"><pre><div class="line">Field   Format                                Extract from the example above</div><div class="line"> 1   process_name &apos;[&apos; pid &apos;]:&apos;                            haproxy[14387]:</div><div class="line"> 2   client_ip &apos;:&apos; client_port                             10.0.1.2:33313</div><div class="line"> 3   &apos;[&apos; accept_date &apos;]&apos;                       [06/Feb/2009:12:12:51.443]</div><div class="line"> 4   frontend_name                                                    fnt</div><div class="line"> 5   backend_name &apos;/&apos; server_name                                bck/srv1</div><div class="line"> 6   Tw &apos;/&apos; Tc &apos;/&apos; Tt*                                           0/0/5007</div><div class="line"> 7   bytes_read*                                                      212</div><div class="line"> 8   termination_state                                                 --</div><div class="line"> 9   actconn &apos;/&apos; feconn &apos;/&apos; beconn &apos;/&apos; srv_conn &apos;/&apos; retries*    0/0/0/0/3</div><div class="line">10   srv_queue &apos;/&apos; backend_queue                                      0/0</div></pre></td></tr></table></figure>
<p><br></p>
<p><strong>http日志格式</strong></p>
<p>option httplog：指定日志格式为 httplog</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div></pre></td><td class="code"><pre><div class="line">Field   Format                                Extract from the example above</div><div class="line"> 1   process_name &apos;[&apos; pid &apos;]:&apos;                            haproxy[14389]:</div><div class="line"> 2   client_ip &apos;:&apos; client_port                             10.0.1.2:33317</div><div class="line"> 3   &apos;[&apos; request_date &apos;]&apos;                      [06/Feb/2009:12:14:14.655]</div><div class="line"> 4   frontend_name                                                http-in</div><div class="line"> 5   backend_name &apos;/&apos; server_name                             static/srv1</div><div class="line"> 6   TR &apos;/&apos; Tw &apos;/&apos; Tc &apos;/&apos; Tr &apos;/&apos; Ta*                       10/0/30/69/109</div><div class="line"> 7   status_code                                                      200</div><div class="line"> 8   bytes_read*                                                     2750</div><div class="line"> 9   captured_request_cookie                                            -</div><div class="line">10   captured_response_cookie                                           -</div><div class="line">11   termination_state                                               ----</div><div class="line">12   actconn &apos;/&apos; feconn &apos;/&apos; beconn &apos;/&apos; srv_conn &apos;/&apos; retries*    1/1/1/1/0</div><div class="line">13   srv_queue &apos;/&apos; backend_queue                                      0/0</div><div class="line">14   &apos;&#123;&apos; captured_request_headers* &apos;&#125;&apos;                   &#123;haproxy.1wt.eu&#125;</div><div class="line">15   &apos;&#123;&apos; captured_response_headers* &apos;&#125;&apos;                                &#123;&#125;</div><div class="line">16   &apos;&quot;&apos; http_request &apos;&quot;&apos;                      &quot;GET /index.html HTTP/1.1&quot;</div></pre></td></tr></table></figure>
<p><br></p>
<ul>
<li>capture cookie </li>
</ul>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">capture cookie &lt;name&gt; len &lt;length&gt;</div></pre></td></tr></table></figure>
<p>记录指定cookie的日志</p>
<p><code>name</code>：cookie的名字<br><code>length</code>：记录日志的长度</p>
<p><br></p>
<ul>
<li>capture request header</li>
</ul>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">capture request header &lt;name&gt; len &lt;length&gt;</div></pre></td></tr></table></figure>
<p>捕获请求报文的指定首部的值并记录下来</p>
<p><br></p>
<ul>
<li>capture response header</li>
</ul>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">capture response header &lt;name&gt; len &lt;length&gt;</div></pre></td></tr></table></figure>
<p>捕获响应报文的指定首部的值并记录</p>
<p><br></p>
<h3 id="健康状态检查"><a href="#健康状态检查" class="headerlink" title="健康状态检查"></a><font szie="4" color="#236B8E">健康状态检查</font></h3><p>对后端服务器做http协议的健康状态检测(除frontend段，都可以使用)</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div></pre></td><td class="code"><pre><div class="line">option httpchk</div><div class="line">option httpchk &lt;uri&gt; 			</div><div class="line">option httpchk &lt;method&gt; &lt;uri&gt;</div><div class="line">option httpchk &lt;method&gt; &lt;uri&gt; &lt;version&gt;</div></pre></td></tr></table></figure>
<p>定义基于http协议的7层健康状态检测机制</p>
<ul>
<li>http-check</li>
</ul>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">http-check expect [!] &lt;match&gt; &lt;pattern&gt;</div></pre></td></tr></table></figure>
<p>检查，指定返回的内容/响应码</p>
<p><code>rstatus</code>：匹配响应码<br><code>rstring</code>：匹配内容</p>
<p><br></p>
<h3 id="连接超时时长配置"><a href="#连接超时时长配置" class="headerlink" title="连接超时时长配置"></a><font szie="4" color="#236B8E">连接超时时长配置</font></h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div></pre></td><td class="code"><pre><div class="line">timeout client &lt;timeout&gt;</div><div class="line">	Set the maximum inactivity time on the client side. </div><div class="line">	默认单位是毫秒; </div><div class="line">	</div><div class="line">timeout server &lt;timeout&gt;</div><div class="line">	Set the maximum inactivity time on the server side.</div><div class="line">	</div><div class="line">timeout http-keep-alive &lt;timeout&gt;</div><div class="line">	持久连接的持久时长；</div><div class="line">	作为代理服务器，面向客户端开启持久连接，尽量要小 --&gt; 1s  2s </div><div class="line">	</div><div class="line">timeout http-request &lt;timeout&gt;</div><div class="line">	Set the maximum allowed time to wait for a complete HTTP request</div><div class="line">	&apos;等待客户端发送请求报文的超时时长&apos;</div><div class="line"></div><div class="line">timeout connect &lt;timeout&gt;</div><div class="line">	Set the maximum time to wait for a connection attempt to a server to succeed.</div><div class="line">	&apos;HAProxy与后端服务器 连接建立的超时时间&apos;</div><div class="line"></div><div class="line">timeout client-fin &lt;timeout&gt;</div><div class="line">	Set the inactivity timeout on the client side for half-closed connections.</div><div class="line">	半关闭连接超时时间；&apos;提高会话复用性&apos;</div><div class="line">		客户端</div><div class="line"></div><div class="line">timeout server-fin &lt;timeout&gt;</div><div class="line">	Set the inactivity timeout on the server side for half-closed connections.</div><div class="line">	半关闭连接超时时间；&apos;提高会话复用性&apos;</div></pre></td></tr></table></figure>
<p><br></p>
<h3 id="其他配置"><a href="#其他配置" class="headerlink" title="其他配置"></a><font szie="4" color="#236B8E">其他配置</font></h3><ul>
<li>use_backend</li>
</ul>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">use_backend &lt;backend&gt; [&#123;if | unless&#125; &lt;condition&gt;]</div></pre></td></tr></table></figure>
<p>当符合指定的条件时使用特定的backend</p>
<p><br></p>
<ul>
<li>block</li>
</ul>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">block &#123; if | unless &#125; &lt;condition&gt;</div></pre></td></tr></table></figure>
<p>阻塞请求</p>
<p><br></p>
<ul>
<li>http-request</li>
</ul>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">http-request &#123; allow | deny &#125; [ &#123; if | unless &#125; &lt;condition&gt; ]</div></pre></td></tr></table></figure>
<p>http访问控制</p>
<p><strong>配置示例</strong></p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div></pre></td><td class="code"><pre><div class="line">listen ssh</div><div class="line">	bind :22022</div><div class="line">	balance leastconn</div><div class="line">	acl invalid_src src 172.16.200.2</div><div class="line">	tcp-request connection reject if invalid_src</div><div class="line">	mode tcp</div><div class="line">	server sshsrv1 172.16.100.6:22 check</div><div class="line">	server sshsrv2 172.16.100.7:22 check backup</div></pre></td></tr></table></figure>
<p><br></p>
<h3 id="ACL"><a href="#ACL" class="headerlink" title="ACL"></a><font szie="4" color="#236B8E">ACL</font></h3><p>aproxy的ACL用于实现基于请求报文的首部、响应报文的内容或其它的环境状态信息来做出转发决策，这大大增强了其配置弹性。其配置法则通常分为两步，首先去定义ACL，即定义一个测试条件，而后在条件得到满足时执行某特定的动作，如阻止请求或转发至某特定的后端。</p>
<p>语法格式：</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">acl &lt;aclname&gt; &lt;criterion&gt; [flags] [operator] &lt;value&gt; ...</div></pre></td></tr></table></figure>
<h4 id="lt-aclname-gt-：acl的名称-标识符"><a href="#lt-aclname-gt-：acl的名称-标识符" class="headerlink" title="&lt;aclname&gt;：acl的名称(标识符)"></a><code>&lt;aclname&gt;</code>：acl的名称(标识符)</h4><h4 id="lt-criterion-gt-：匹配标准"><a href="#lt-criterion-gt-：匹配标准" class="headerlink" title="&lt;criterion&gt;：匹配标准"></a><code>&lt;criterion&gt;</code>：匹配标准</h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div></pre></td><td class="code"><pre><div class="line">dst : ip  --&gt;目标IP</div><div class="line">dst_port : integer</div><div class="line">src : ip  --&gt;源IP</div><div class="line">src_port : integer</div></pre></td></tr></table></figure>
<p><strong>path: string</strong></p>
<p>提取请求url的地址信息，从第一个”/“开始，不包含host，不包含参数</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div></pre></td><td class="code"><pre><div class="line">path     : exact string match</div><div class="line">path_beg : prefix match</div><div class="line">path_dir : subdir match</div><div class="line">path_dom : domain match </div><div class="line">path_end : suffix match</div><div class="line">path_len : length match</div><div class="line">path_reg : regex match</div><div class="line">path_sub : substring match</div></pre></td></tr></table></figure>
<p><strong>url : string</strong></p>
<p>提取URL的全部内容，包含host和参数ACL</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div></pre></td><td class="code"><pre><div class="line">url     : exact string match</div><div class="line">url_beg : prefix match</div><div class="line">url_dir : subdir match</div><div class="line">url_dom : domain match</div><div class="line">url_end : suffix match</div><div class="line">url_len : length match</div><div class="line">url_reg : regex match</div><div class="line">url_sub : substring match</div></pre></td></tr></table></figure>
<p><strong>req请求报文：hdr([<name>[,<occ>]]) : string</occ></name></strong></p>
<p>请求报文首部访问控制</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div></pre></td><td class="code"><pre><div class="line">hdr([&lt;name&gt;[,&lt;occ&gt;]])     : exact string match</div><div class="line">hdr_beg([&lt;name&gt;[,&lt;occ&gt;]]) : prefix match</div><div class="line">hdr_dir([&lt;name&gt;[,&lt;occ&gt;]]) : subdir match</div><div class="line">hdr_dom([&lt;name&gt;[,&lt;occ&gt;]]) : domain match</div><div class="line">hdr_end([&lt;name&gt;[,&lt;occ&gt;]]) : suffix match</div><div class="line">hdr_len([&lt;name&gt;[,&lt;occ&gt;]]) : length match</div><div class="line">hdr_reg([&lt;name&gt;[,&lt;occ&gt;]]) : regex match</div><div class="line">hdr_sub([&lt;name&gt;[,&lt;occ&gt;]]) : substring match</div></pre></td></tr></table></figure>
<h4 id="lt-value-gt-类型："><a href="#lt-value-gt-类型：" class="headerlink" title="&lt;value&gt;类型："></a><code>&lt;value&gt;</code>类型：</h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div></pre></td><td class="code"><pre><div class="line">- boolean：真假</div><div class="line">- integer or integer range：整数值</div><div class="line">- IP address / network：IP地址、网络地址</div><div class="line">- string (exact, substring, suffix, prefix, subdir, domain)</div><div class="line">	匹配指定的首部的值</div><div class="line">	exact：精确匹配</div><div class="line">	substring：</div><div class="line">	suffix：后缀匹配</div><div class="line">	prefix：前缀匹配</div><div class="line">	subdir：子路径匹配</div><div class="line">	domain：域名子串匹配</div><div class="line"></div><div class="line">- regular expression：正则表达式匹配</div><div class="line">- hex block：16进制数字块</div></pre></td></tr></table></figure>
<h4 id="lt-flags-gt-标识位"><a href="#lt-flags-gt-标识位" class="headerlink" title="&lt;flags&gt;标识位"></a><code>&lt;flags&gt;</code>标识位</h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div></pre></td><td class="code"><pre><div class="line">-i : ignore case during matching of all subsequent patterns.</div><div class="line">    忽略字符大小写</div><div class="line"></div><div class="line">-m : use a specific pattern matching method</div><div class="line">    特殊匹配</div><div class="line"></div><div class="line">-n : forbid the DNS resolutions</div><div class="line">    DNS解析</div><div class="line"></div><div class="line">-u : force the unique id of the ACL</div><div class="line">    ACL id必须唯一</div><div class="line"></div><div class="line">-- : force end of flags. Useful when a string looks like one of the flags</div><div class="line">    强制结束 flags</div></pre></td></tr></table></figure>
<h4 id="operator"><a href="#operator" class="headerlink" title="[operator]"></a><code>[operator]</code></h4><ul>
<li>匹配整数值：</li>
</ul>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">eq、ge、gt、le、lt</div></pre></td></tr></table></figure>
<ul>
<li>匹配字符串:</li>
</ul>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div></pre></td><td class="code"><pre><div class="line">-m method : 指定模式匹配方法</div><div class="line"></div><div class="line">	其中flag中的 -m 选项可使用的模式匹配方法如下，需要说明的是有些方法已被默认指定无需声明，例如int，ip</div><div class="line"></div><div class="line">	&quot;found&quot; : 只是用来探测数据流中是否存在指定数据，不进行任何比较</div><div class="line">	&quot;bool&quot; : 检查结果返回布尔值。匹配没有模式，可以匹配布尔值或整数，不匹配0和false，其他值可以匹配</div><div class="line">	&quot;int&quot; : 匹配整数类型数据；可以处理整数和布尔值类型样本，0代表false，1代表true</div><div class="line">	&quot;ip&quot; : 匹配IPv4，IPv6地址类型数据。该模式仅被IP地址兼容，不需要特别指定</div><div class="line">	&quot;bin&quot; : 匹配二进制数据</div><div class="line">	&quot;len&quot; : 匹配样本的长度的整数值</div><div class="line">	&quot;str&quot; : 精确匹配，根据字符串匹配文本</div><div class="line">	&quot;sub&quot; : 子串匹配，匹配文本是否包含子串</div><div class="line">	&quot;reg&quot; : 正则匹配，根据正则表达式列表匹配文本</div><div class="line">	&quot;beg&quot; : 前缀匹配，检查文本是否以指定字符串开头</div><div class="line">	&quot;end&quot; : 后缀匹配，检查文本是否以指定字符串结尾</div><div class="line">	&quot;dir&quot; : 子目录匹配，检查部分文本中以&quot; / &quot;作为分隔符的内容是否含有指定字符串</div><div class="line">	&quot;dom&quot; : 域匹配。检查部分文本中以&quot; . &quot;作为分隔符的内容是否含有指定字符串</div></pre></td></tr></table></figure>
<h4 id="acl作为条件时的逻辑关系"><a href="#acl作为条件时的逻辑关系" class="headerlink" title="acl作为条件时的逻辑关系"></a>acl作为条件时的逻辑关系</h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div></pre></td><td class="code"><pre><div class="line">- AND (implicit)</div><div class="line"></div><div class="line">- OR  (explicit with the &quot;or&quot; keyword or the &quot;||&quot; operator)</div><div class="line">	或的关系</div><div class="line"></div><div class="line">- Negation with the exclamation mark (&quot;!&quot;)</div><div class="line">	取反</div><div class="line"></div><div class="line">	if invalid_src invalid_port</div><div class="line">	if invalid_src || invalid_port</div><div class="line">	if ! invalid_src invalid_port</div></pre></td></tr></table></figure>
<h4 id="配置示例"><a href="#配置示例" class="headerlink" title="配置示例"></a>配置示例</h4><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div></pre></td><td class="code"><pre><div class="line"><span class="comment">#禁止使用curl请求</span></div><div class="line">acl bad_curl hdr_sub(User-Agent) -i curl</div><div class="line">block <span class="keyword">if</span> bad_curl	</div><div class="line"></div><div class="line"><span class="comment">#阻断火狐浏览器发送的请求</span></div><div class="line">acl firefox hdr_reg(User-Agent)     -i      .*firefox.*</div><div class="line">block <span class="keyword">if</span> firefox	</div><div class="line"></div><div class="line"><span class="comment">#拒绝GET HEAD 方式之外的HTTP请求</span></div><div class="line">http-request deny <span class="keyword">if</span> ! METH_GET</div></pre></td></tr></table></figure>
<p><br></p>
<h3 id="配置HAProxy支持https协议"><a href="#配置HAProxy支持https协议" class="headerlink" title="配置HAProxy支持https协议"></a><font szie="4" color="#236B8E">配置HAProxy支持https协议</font></h3><ul>
<li>配置支持ssl会话</li>
</ul>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">bind *:443 ssl crt /PATH/TO/SOME_PEM_FILE</div></pre></td></tr></table></figure>
<p><code>ssl</code>：要求必须使用 ssl会话<br><code>crt</code>：指明证书文件路径 –&gt; 证书和私钥都在这个文件内</p>
<p><br></p>
<ul>
<li>把80端口的请求重向定443</li>
</ul>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line">bind *:80</div><div class="line">	redirect scheme https if !&#123; ssl_fc &#125;</div></pre></td></tr></table></figure>
<p><code>scheme</code>：协议<br><code>ssl_fc</code>：如果请求的是非ssl前端的，则重定向(无需定义，因为是內建的，直接调用 ssl_fc)</p>
<ul>
<li>向后端传递用户请求的协议和端口</li>
</ul>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line">http_request set-header X-Forwarded-Port %[dst_port]</div><div class="line">http_request add-header X-Forwared-Proto https if &#123; ssl_fc &#125;</div></pre></td></tr></table></figure>
<hr>
<p>在下一章节，我们会讲解如何使用<code>HAProxy</code>对网站的动静分离实现负载均衡调度，搭配上我们前一节所学<code>varnish</code>，加快对动静资源的访问速度。</p>
<hr>
<iframe frameborder="no" border="0" marginwidth="0" marginheight="0" width="330" height="86" src="//music.163.com/outchain/player?type=2&id=28838894&auto=1&height=66"></iframe>

<p>本文出自<a href="http://maxiecloud.com">Maxie’s Notes</a>博客，转载请务必保留此出处。</p>
<p><img src="https://ww1.sinaimg.cn/large/006tNbRwly1fdzc80odsuj30gn0ilq5m.jpg" alt=""></p>
]]></content>
    
    <summary type="html">
    
      &lt;p&gt;&lt;img src=&quot;https://ws2.sinaimg.cn/large/006tNc79gy1fh4doappj2j30g703vmxj.jpg&quot; alt=&quot;&quot;&gt;&lt;/p&gt;
&lt;blockquote class=&quot;blockquote-center&quot;&gt;HAProxy是一款高可用性、负载均衡基于TCP(四层)和HTTP(七层)应用的代理软件，支持虚拟主机。&lt;br&gt;HAProxy特别适用于那些负载特大的web站点，这些站点通常又需要会话保持或七层处理。&lt;br&gt;HAProxy运行在时下的硬件上，完全可以支持数以万计的 并发连接。&lt;br&gt;并且它的运行模式使得它可以很简单安全的整合进您当前的架构中，同时可以保护你的web服务器不被暴露到网络上。&lt;br&gt;&lt;/blockquote&gt;

&lt;h3 id=&quot;HAProxy性能&quot;&gt;&lt;a href=&quot;#HAProxy性能&quot; class=&quot;headerlink&quot; title=&quot;HAProxy性能&quot;&gt;&lt;/a&gt;&lt;font szie=4 color=&quot;#32CD99&quot;&gt;&lt;strong&gt;HAProxy性能&lt;/strong&gt;&lt;/font&gt;&lt;/h3&gt;&lt;ul&gt;
&lt;li&gt;单进程、事件驱动模型显著降低了上下文切换的开销及内存占用&lt;/li&gt;
&lt;li&gt;O(1)事件检查器(event checker)允许其在高并发连接中对任何连接的任何事件实现即时探测&lt;/li&gt;
&lt;li&gt;在任何可用的情况下，单缓冲(single buffering)机制能以不复制任何数据的方式完成读写操作，这会节约大量的CPU时钟周期及内存带宽&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&quot;相比其他负载均衡调度器，优点有：&quot;&gt;&lt;a href=&quot;#相比其他负载均衡调度器，优点有：&quot; class=&quot;headerlink&quot; title=&quot;相比其他负载均衡调度器，优点有：&quot;&gt;&lt;/a&gt;&lt;font szie=4 color=&quot;#5F9F9F&quot;&gt;&lt;strong&gt;相比其他负载均衡调度器，优点有：&lt;/strong&gt;&lt;/font&gt;&lt;/h3&gt;&lt;ol&gt;
&lt;li&gt;HAProxy是支持虚拟主机的，通过frontend指令来实现&lt;/li&gt;
&lt;li&gt;能够补充Nginx的一些缺点比如Session的保持，Cookie的引导等工作&lt;/li&gt;
&lt;li&gt;支持url检测后端的服务器&lt;/li&gt;
&lt;li&gt;它跟LVS一样，本身仅仅就只是一款负载均衡软件；单纯从效率上来讲HAProxy更会比Nginx有更出色的负载均衡速度，在并发处理上也是优于Nginx的。&lt;/li&gt;
&lt;li&gt;HAProxy可以对Mysql读进行负载均衡，对后端的MySQL节点进行检测和负载均衡，不过在后端的MySQL slaves数量超过10台时性能不如LVS。&lt;/li&gt;
&lt;li&gt;能对请求的url和header中的信息做匹配，有比lvs有更好的7层实现&lt;/li&gt;
&lt;/ol&gt;
&lt;h3 id=&quot;配置中两大配置段、五部分配置&quot;&gt;&lt;a href=&quot;#配置中两大配置段、五部分配置&quot; class=&quot;headerlink&quot; title=&quot;配置中两大配置段、五部分配置&quot;&gt;&lt;/a&gt;&lt;font szie=4 color=&quot;#007FFF&quot;&gt;&lt;strong&gt;配置中两大配置段、五部分配置&lt;/strong&gt;&lt;/font&gt;&lt;/h3&gt;&lt;h4 id=&quot;两大配置段&quot;&gt;&lt;a href=&quot;#两大配置段&quot; class=&quot;headerlink&quot; title=&quot;两大配置段&quot;&gt;&lt;/a&gt;两大配置段&lt;/h4&gt;&lt;figure class=&quot;highlight bash&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;1&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;2&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;global      全局配置段，进程级安全配置相关的参数，性能调整相关参数，Debug参数&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;proxies     代理配置段，如&lt;span class=&quot;string&quot;&gt;&quot;defaults&quot;&lt;/span&gt;，&lt;span class=&quot;string&quot;&gt;&quot;frontend&quot;&lt;/span&gt;，&lt;span class=&quot;string&quot;&gt;&quot;backend&quot;&lt;/span&gt;&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;h4 id=&quot;proxie配置段中的五部分配置&quot;&gt;&lt;a href=&quot;#proxie配置段中的五部分配置&quot; class=&quot;headerlink&quot; title=&quot;proxie配置段中的五部分配置&quot;&gt;&lt;/a&gt;proxie配置段中的五部分配置&lt;/h4&gt;&lt;figure class=&quot;highlight bash&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;1&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;2&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;3&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;4&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;defaults        为frontend、listen、backend提供默认配置&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;frontend        前端配置，相当于nginx中的 server段&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;backend         后端配置，相当于nginx中的 upstream段&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;listen          frontend和backend的组合体&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;h3 id=&quot;时间格式&quot;&gt;&lt;a href=&quot;#时间格式&quot; class=&quot;headerlink&quot; title=&quot;时间格式&quot;&gt;&lt;/a&gt;&lt;font szie=4 color=&quot;#8F8FBD&quot;&gt;&lt;strong&gt;时间格式&lt;/strong&gt;&lt;/font&gt;&lt;/h3&gt;&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;1&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;2&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;3&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;4&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;5&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;6&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;us: 微秒(microseconds)，即1/1000000秒；&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;ms: 毫秒(milliseconds)，即1/1000秒；&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;s: 秒(seconds)；&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;m: 分钟(minutes)；&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;h：小时(hours)；&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;d: 天(days)；&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;hr&gt;
    
    </summary>
    
      <category term="linux进阶" scheme="http://maxiecloud.com/categories/linux%E8%BF%9B%E9%98%B6/"/>
    
      <category term="HAProxy" scheme="http://maxiecloud.com/categories/linux%E8%BF%9B%E9%98%B6/HAProxy/"/>
    
    
      <category term="linux" scheme="http://maxiecloud.com/tags/linux/"/>
    
      <category term="HAProxy" scheme="http://maxiecloud.com/tags/HAProxy/"/>
    
      <category term="nginx" scheme="http://maxiecloud.com/tags/nginx/"/>
    
      <category term="apache" scheme="http://maxiecloud.com/tags/apache/"/>
    
      <category term="php" scheme="http://maxiecloud.com/tags/php/"/>
    
      <category term="mysql" scheme="http://maxiecloud.com/tags/mysql/"/>
    
      <category term="nfs" scheme="http://maxiecloud.com/tags/nfs/"/>
    
  </entry>
  
  <entry>
    <title>tomcat从入门到进阶</title>
    <link href="http://maxiecloud.com/2017/07/01/tomcat/"/>
    <id>http://maxiecloud.com/2017/07/01/tomcat/</id>
    <published>2017-07-01T00:16:11.000Z</published>
    <updated>2017-07-01T03:50:54.000Z</updated>
    
    <content type="html"><![CDATA[<blockquote class="blockquote-center">Tomat是由Apache软件基金会下属的Jakarta项目开发的一个Servlet容器。由于Tomcat本身也包含了一个HTTP服务器，它可以被视作一个单独的WEB服务器。不过HTTP服务器是C语言实现的Web服务器，而Tomcat则是由Java编写。<br></blockquote>

<p>什么是<code>Servlet</code>呢？ <code>Servlet</code>，全称 Java Servlet，是用Java编写的服务器端程序，主要功能在于交互式的浏览和修改数据，生成动态Web内容。</p>
<p><strong>JSP代码运行过程</strong></p>
<blockquote>
<p>index.jsp –&gt; 由jasper转换 –&gt; index_jsp.java –&gt; 通过javac编译器 –&gt; 生成类文件 index_jsp.class –&gt; 在(engine上)jvm虚拟机上运行<br>基于jsp将静态输出的数据转为java代码进行输出，结果为Servlet规范的代码</p>
</blockquote>
<p><img src="https://ws1.sinaimg.cn/large/006tNc79ly1fh435gsf2fj318g0qktb4.jpg" alt=""></p>
<p><strong>Java代码运行过程</strong></p>
<blockquote>
<p><em>.java –&gt; javac –&gt; </em>.class(bytecode字节码)</p>
</blockquote>
<p><strong>JVM运行时区域</strong></p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div></pre></td><td class="code"><pre><div class="line">方法区         用于存储被JVM加载的class信息、常量、静态变量，方法等</div><div class="line">堆            是jvm所管理的内存中占用空间最大的一部分，也是GC管理的主要区域，用来存储对象信息</div><div class="line">栈            线程私有，存储线程自己的局部变量</div><div class="line">PC寄存器       线程私有的内存空间，程序的指令指针</div><div class="line">GC            垃圾回收，回收堆中不再使用的空间</div></pre></td></tr></table></figure>
<hr>
<a id="more"></a>
<div class="note primary"><h3 id="JDK"><a href="#JDK" class="headerlink" title="JDK"></a>JDK</h3></div>
<p>在Linux下想要运行<code>tomcat</code>，就必须依赖<code>JDK</code>环境了，这里我们使用的JDK版本是 <code>java-1.8.0-openjdk</code>。openjdk是jdk的一个分支，也是其开源的项目。</p>
<h3 id="安装JDK"><a href="#安装JDK" class="headerlink" title="安装JDK "></a><font szie="4" color="#236B8E">安装JDK </font></h3><p>由于使用的是<code>Centos 7</code>，所以在base仓库就已经提供了3种openjdk版本：</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div></pre></td><td class="code"><pre><div class="line">$ yum list all *jdk*</div><div class="line">java-1.6.0-openjdk</div><div class="line">java-1.7.0-openjdk</div><div class="line">java-1.8.0-openjdk</div></pre></td></tr></table></figure>
<p>这里我们使用<code>java-1.8.0-openjdk</code>版本</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line">$ yum install java-1.8.0-openjdk</div><div class="line">$ java -version</div></pre></td></tr></table></figure>
<p>为了防止其他程序要使用<code>java</code>时找不到<code>JAVA_HOME</code>，我们这里手动配置<code>JAVA_HOME</code></p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line">$ vim /etc/profile.d/java.sh</div><div class="line">export JAVA_HOME=/usr</div><div class="line">$ . /etc/profile.d/java.sh</div></pre></td></tr></table></figure>
<p>如果是使用<code>Oracle</code>版本的JDK，其默认安装在<code>/usr/java/jdk_VERSION</code>路径下</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div></pre></td><td class="code"><pre><div class="line">$ vim /etc/profile.d/java.sh</div><div class="line">export JAVA_HOME=/usr/java/jdk_VERSION</div><div class="line">export PATH=$JAVA_HOME/bin:$PATH</div><div class="line">$ . /etc/profile.d/java.sh</div></pre></td></tr></table></figure>
<p>安装完<code>jdk</code>之后，我们就可以开始安装和配置Tomcat了！</p>
<hr>
<div class="note success"><h3 id="Tomcat安装与配置"><a href="#Tomcat安装与配置" class="headerlink" title="Tomcat安装与配置"></a>Tomcat安装与配置</h3></div>
<h4 id="安装Tomcat"><a href="#安装Tomcat" class="headerlink" title="安装Tomcat"></a><font size="4" color="#32CD99">安装Tomcat</font></h4><ul>
<li>使用base仓库安装</li>
</ul>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">$ yum install -y tomcat tomcat-lib tomcat-admin-webapps tomcat-webapps tomcat-docs-webapp</div></pre></td></tr></table></figure>
<ul>
<li>使用官方二进制版本安装</li>
</ul>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div></pre></td><td class="code"><pre><div class="line">$ wget http://mirrors.hust.edu.cn/apache/tomcat/tomcat-8/v8.5.16/bin/apache-tomcat-8.5.16.tar.gz</div><div class="line">$ tar -xf  apache-tomcat-8.5.16.tar.gz -C /usr/local/</div><div class="line">$ cd /usr/local</div><div class="line">$ ln -sv apache-tomcat-8.5.16 tomcat</div></pre></td></tr></table></figure>
<p>注意这里使用软连接的方式，是为了生产环境中，如果需要版本升级时，可以很好的进行替换操作，只需将连接修改至新版本即可。</p>
<p>如果使用了二进制版本安装，我们就需要手动添加环境变量了：</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div></pre></td><td class="code"><pre><div class="line">$ vim /etc/profile.d/tomcat.sh </div><div class="line">export CATALINA_BASE=/usr/local/tomcat </div><div class="line">export PATH=$CATALINA_BASE/bin:$PATH</div><div class="line">$ . /etc/profile.d/tomcat.sh</div></pre></td></tr></table></figure>
<p><br></p>
<h4 id="Tomcat程序环境"><a href="#Tomcat程序环境" class="headerlink" title="Tomcat程序环境 "></a><font size="4" color="#32CD99">Tomcat程序环境 </font></h4><p><strong>tomcat的目录结构</strong></p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div></pre></td><td class="code"><pre><div class="line">bin         脚本，及启动时用到的类</div><div class="line">conf        配置文件目录</div><div class="line">lib         库文件，Java类库，jar</div><div class="line">logs        日志文件目录</div><div class="line">temp        临时文件目录</div><div class="line">webapps     webapp的默认目录</div><div class="line">work        工作目录</div><div class="line">ROOT        存放主站的文件，就是访问 / 的显示的页面</div></pre></td></tr></table></figure>
<p><br></p>
<p><strong>rpm包安装的程序环境</strong></p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div></pre></td><td class="code"><pre><div class="line">配置文件目录：/etc/tomcat</div><div class="line">主配置文件：/etc/tomcat/server.xml</div><div class="line">认证用户配置文件：/etc/tomcat/tomcat-users.xml</div><div class="line">webapps存放位置：/var/lib/tomcat/webapps/</div><div class="line">Unit File：/usr/lib/systemd/system/tomcat.service</div><div class="line">环境配置文件：/etc/sysconfig/tomcat</div></pre></td></tr></table></figure>
<p><br></p>
<p><strong>运行Tomcat进程的用户</strong></p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">默认为tomcat用户，但无权监听80端口</div></pre></td></tr></table></figure>
<p><br></p>
<p><strong>使用authbind程序使tomcat用户可以监听80端口</strong></p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div></pre></td><td class="code"><pre><div class="line">$ wget https://s3.amazonaws.com/aaronsilber/public/authbind-2.1.1-0.1.x86_64.rpm</div><div class="line">$ yum install -y ./authbind-2.1.1-0.1.x86_64.rpm</div><div class="line">$ chmod 755 /etc/authbind/port/80 </div><div class="line">$ chown test.test /etc/authbind/port/80 </div><div class="line">$ authbind --deep systemctl restart tomcat</div></pre></td></tr></table></figure>
<p><a href="https://github.com/tootedom/authbind-centos-rpm" target="_blank" rel="external">authbind-github下载</a></p>
<p><br></p>
<p><strong>tomcat的配置文件</strong></p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div></pre></td><td class="code"><pre><div class="line">配置文件路径          /etc/tomcat/conf </div><div class="line"></div><div class="line">server.xml          主配置文件</div><div class="line">web.xml             每个webapp只有&quot;部署&quot;后才能被访问，它的部署方式通常由web.xml进行定义，其存放位置为WEB-INF/目录中；此文件为所有的webapps提供默认部署相关的配置</div><div class="line">context.xml         每个webapp都可以专用的配置文件，它通常由专用的配置文件context.xml来定义，其存放位置为WEB-INF/目录中；此文件为所有的webapps提供默认配置</div><div class="line">tomcat-users.xml    用户认证的账号和密码文件</div><div class="line">catalina.policy     当使用-security选项启动tomcat时，用于为tomcat设置安全策略；</div><div class="line">catalina.properties Java属性的定义文件，用于设定类加载器路径，以及一些与JVM调优相关参数</div><div class="line">logging.properties  日志系统相关的配置</div></pre></td></tr></table></figure>
<p><br></p>
<p><strong>二进制安装中 catalina.sh脚本使用方法</strong></p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div></pre></td><td class="code"><pre><div class="line">debug             测试模式</div><div class="line">debug -security   安全策略的测试模式</div><div class="line">run               运行为守护进程</div><div class="line">run -security     安全策略模式启动</div><div class="line">start             运行为守护进程</div><div class="line">start  -security  安全策略模式启动</div><div class="line">stop              停止</div><div class="line">stop n            等待几秒后停止</div><div class="line">stop -force       强制停止</div><div class="line">stop n -force     几秒后强制停止</div><div class="line">version           版本</div><div class="line"></div><div class="line">$ catalina.sh start         #启动tomcat</div><div class="line">$ catalina.sh version       #查看tomcat版本</div></pre></td></tr></table></figure>
<p><br></p>
<h4 id="JSP-WebAPP的组织结构"><a href="#JSP-WebAPP的组织结构" class="headerlink" title="JSP WebAPP的组织结构 "></a><font size="4" color="#32CD99">JSP WebAPP的组织结构 </font></h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div></pre></td><td class="code"><pre><div class="line">路径                 /var/lib/tomcat/webapps</div><div class="line"></div><div class="line">/                   webapps的根目录</div><div class="line">    index.jsp       主页文件</div><div class="line">    WEB-INF/        当前webapp的&apos;私有资源路径&apos;；通常用于存储当前webapp的web.xml和context.xml配置文件</div><div class="line">    META-INF/       类似于WEB-INF/</div><div class="line">    classes/        类文件，当前webapp所提供的类</div><div class="line">    lib/            类文件，当前webapp所提供的类，被打包为jar格式</div></pre></td></tr></table></figure>
<p><br></p>
<h4 id="部署deploy-webapp的相关操作"><a href="#部署deploy-webapp的相关操作" class="headerlink" title="部署deploy webapp的相关操作"></a><font size="4" color="#32CD99">部署deploy webapp的相关操作</font></h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div></pre></td><td class="code"><pre><div class="line">deploy      将webapp的源文件放置于目标目录(网页程序文件存放目录)，配置tomcat服务器能够基于web.xml和context.xml文件中定义的路径来访问此webapp</div><div class="line">undeploy    反部署，停止webapp，并从tomcat实例上卸载webapp</div><div class="line">start       启动处于停止状态的webapp</div><div class="line">stop        停止webapp，不再向用户提供服务；其类依然在jvm上</div><div class="line">redeploy    重新部署</div></pre></td></tr></table></figure>
<p><strong>部署有两种方式</strong></p>
<figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div></pre></td><td class="code"><pre><div class="line">自动部署：auto deploy(可能需要重启)</div><div class="line">手动部署:</div><div class="line">	冷部署：把webapp复制到指定的位置，而后才启动tomcat</div><div class="line">	热部署：在不停止tomcat的前提下进行部署</div><div class="line"></div><div class="line">部署工具：manager、ant脚本、tcd(tomcat client deployer)等</div></pre></td></tr></table></figure>
<p><br></p>
<h4 id="tomcat的两个管理应用"><a href="#tomcat的两个管理应用" class="headerlink" title="tomcat的两个管理应用"></a><font size="4" color="#32CD99">tomcat的两个管理应用</font></h4><p><strong>manager</strong></p>
<figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div></pre></td><td class="code"><pre><div class="line">不用关闭tomcat，完成webapp的热部署</div><div class="line">使用此功能，需要先配置用户和密码：</div><div class="line">	conf/tomcat-user.xml</div><div class="line">	$ vim tomcat-user.xml</div><div class="line">	&lt;role rolename=<span class="string">"manager-gui"</span>&gt;</div><div class="line">	&lt;user username=<span class="string">"tomcat"</span> password=<span class="string">"tomcat"</span> roles=<span class="string">"manager-gui"</span> /&gt;</div><div class="line"></div><div class="line">	修改完之后，重启tomcat</div><div class="line">	$ systemctl restart tomcat </div><div class="line"></div><div class="line">	expire session：清除超过指定时间的会话</div><div class="line"></div><div class="line">	只要把webapp放到路径下，然后在网页控制页面中的deploy填写 /<span class="built_in">test</span> /<span class="built_in">test</span>2 类似这样</div><div class="line">	并创建WEB-INF、META-INF、index.jsp即可</div></pre></td></tr></table></figure>
<p><br></p>
<p><strong>host-manager</strong></p>
<figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div></pre></td><td class="code"><pre><div class="line">此管理应用，需要另一个配置。</div><div class="line">	&lt;role rolename=<span class="string">"admin-gui"</span>&gt;n</div><div class="line">	&lt;user username=<span class="string">"tomcat"</span> password=<span class="string">"tomcat"</span> roles=<span class="string">"admin-gui"</span> /&gt;</div><div class="line"></div><div class="line">但是在这里通过图形化界面添加的 虚拟主机，重启tomcat后，就会失效，需要定义在 server.xml</div></pre></td></tr></table></figure>
<p><br></p>
<h4 id="Tomcat的常用组件配置"><a href="#Tomcat的常用组件配置" class="headerlink" title="Tomcat的常用组件配置"></a><font size="4" color="#32CD99">Tomcat的常用组件配置</font></h4><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div><div class="line">37</div><div class="line">38</div><div class="line">39</div><div class="line">40</div><div class="line">41</div><div class="line">42</div><div class="line">43</div><div class="line">44</div><div class="line">45</div><div class="line">46</div><div class="line">47</div><div class="line">48</div><div class="line">49</div></pre></td><td class="code"><pre><div class="line">Server：代表tomcat instance，即表现出的一个java进程；监听在8005端口，只接收“SHUTDOWN”。各server监听的端口不能相同，因此，在同一物理主机启动多个实例时，需要修改其监听端口为不同的端口</div><div class="line">Service：用于实现将一个或多个connector组件关联至一个engine组件</div><div class="line"></div><div class="line">Connector组件：</div><div class="line">    负责接收请求，常见的有三类http/https/ajp；</div><div class="line"></div><div class="line">    进入tomcat的请求可分为两类：</div><div class="line">    	(1) standalone : 请求来自于客户端浏览器；</div><div class="line">    	(2) 由其它的web server反代：来自前端的反代服务器；</div><div class="line">    		nginx --&gt; http connector --&gt; tomcat </div><div class="line">    		httpd(proxy_http_module) --&gt; http connector --&gt; tomcat</div><div class="line">    		httpd(proxy_ajp_module) --&gt; ajp connector --&gt; tomcat </div><div class="line">    		http(mod_jk) --&gt; ajp connector --&gt; tomcat </div><div class="line">    </div><div class="line">    参数：</div><div class="line">        address：监听的IP地址；默认为本机所有可用地址</div><div class="line">        maxThreads：最大并发连接数，默认为200</div><div class="line">        <span class="built_in">enable</span>Lookups：是否启用DNS查询功能</div><div class="line">        acceptCount：等待队列的最大长度</div><div class="line">        </div><div class="line">Engine组件：</div><div class="line">    Servlet实例，即servlet引擎，其内部可以一个或多个host组件来定义站点； 通常需要通过defaultHost来定义默认的虚拟主机</div><div class="line">    </div><div class="line">Host组件：</div><div class="line">    位于engine内部用于接收请求并进行相应处理的主机或虚拟主机</div><div class="line">    </div><div class="line">    参数：</div><div class="line">        (1)<span class="string">'appBase'</span>：此Host的<span class="string">'webapps的默认存放目录'</span>，指存放非归档的web应用程序的目录或归档的WAR文件目录路径；可以使用基于<span class="variable">$CATALINA_BASE</span>变量所定义的路径的相对路径；</div><div class="line">        (2) autoDeploy：在Tomcat处于运行状态时，将某webapp放置于appBase所定义的目录中时，是否<span class="string">'自动将其部署至tomcat；'</span></div><div class="line">        (3) unpackWARs：是否自动解开 WAR 文件</div><div class="line"></div><div class="line">注意：<span class="string">'这里如果是新建的HOST，主页的文件资源必须放在appBase指定的目录下的ROOT目录下，否则将无法访问'</span></div><div class="line"></div><div class="line">Context组件:(类似于nginx中的<span class="built_in">alias</span>)</div><div class="line">    参数：</div><div class="line">        path：URL路径</div><div class="line">        reloadable：是否支持自动装载</div><div class="line">        docBase：系统文件路径</div><div class="line"></div><div class="line">Valve组件：</div><div class="line">    参数：</div><div class="line">        定义访问日志：org.apache.catalina.valves.AccessLogValve</div><div class="line">        定义访问控制：org.apache.catalina.valves.RemoteAddrValve </div><div class="line">        pattern：日志格式</div><div class="line">        prefix：日志前缀</div><div class="line">        suffix：日志后缀</div><div class="line">    日志路径：</div><div class="line">        rpm安装：/var/<span class="built_in">log</span>/tomcat/</div><div class="line">        绿色安装：/usr/<span class="built_in">local</span>/tomcat/logs/</div></pre></td></tr></table></figure>
<p><br><br>综合示例：</p>
<figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div></pre></td><td class="code"><pre><div class="line">&lt;Host name=<span class="string">"www.maxie.com"</span> appBase=<span class="string">"/web/apps"</span> unpackWARs=<span class="string">"true"</span> autoDeploy=<span class="string">"true"</span>&gt;</div><div class="line">	&lt;Valve className=<span class="string">"org.apache.catalina.valves.AccessLogValve"</span> directory=<span class="string">"logs"</span></div><div class="line">		prefix=<span class="string">"node1_access"</span> suffix=<span class="string">".log"</span></div><div class="line">		pattern=<span class="string">"%h %l %u %t &amp;quot;%r&amp;quot; %s %b"</span> /&gt;</div><div class="line">	&lt;Context path=<span class="string">"/test"</span> docBase=<span class="string">"test"</span> reloadable=<span class="string">""</span>&gt;</div><div class="line">		&lt;Valve className=<span class="string">"org.apache.catalina.valves.AccessLogValve"</span> directory=<span class="string">"logs"</span></div><div class="line">		prefix=<span class="string">"node1_test_access_"</span> suffix=<span class="string">".log"</span></div><div class="line">		<span class="comment"># 设置为combined格式的日志</span></div><div class="line">		pattern=<span class="string">"%h %l %u %t %r %s %b %&#123;Referer&#125;i %&#123;User-Agent&#125;i"</span> /&gt;      </div><div class="line">	&lt;/Context&gt;</div><div class="line">&lt;/Host&gt;</div></pre></td></tr></table></figure>
<hr>
<div class="note info"><h3 id="配置几个Tomcat示例"><a href="#配置几个Tomcat示例" class="headerlink" title="配置几个Tomcat示例"></a>配置几个Tomcat示例</h3></div>
<h4 id="简单测试页-配置"><a href="#简单测试页-配置" class="headerlink" title=" 简单测试页 配置"></a><font size="3" color="#38B0DE"> 简单测试页 配置</font></h4><ul>
<li>安装Tomcat</li>
</ul>
<figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div></pre></td><td class="code"><pre><div class="line">安装所需要的包：</div><div class="line">$ yum install -y java-1.8.0-openjdk-devel tomcat tomcat-webapps tomcat-admin-webapps tomcat-docs-webapp </div><div class="line"></div><div class="line">配置tomcat.users.xml </div><div class="line">$ vim /etc/tomcat/tomcat.users.xml</div><div class="line">&lt;role rolename=<span class="string">"admin-gui"</span>/&gt;</div><div class="line">&lt;user username=<span class="string">"tomcat"</span> password=<span class="string">"tomcat"</span> roles=<span class="string">"admin-gui"</span>/&gt;</div><div class="line">&lt;role rolename=<span class="string">"manager-gui"</span>/&gt;</div><div class="line">&lt;user username=<span class="string">"maxie"</span> password=<span class="string">"maxie"</span> roles=<span class="string">"manager-gui"</span>/&gt;</div><div class="line"></div><div class="line">修改网卡地址为内网地址</div></pre></td></tr></table></figure>
<ul>
<li>配置Tomcat测试页</li>
</ul>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div></pre></td><td class="code"><pre><div class="line">$ mkdir /usr/share/tomcat/webapps/test/&#123;classes,META-INF,WEB-INF&#125;</div><div class="line">$ vim /usr/share/tomcat/webapps/test/index.jsp</div><div class="line">&lt;%@ page language=&quot;java&quot; %&gt;</div><div class="line">&lt;%@ page import=&quot;java.util.*&quot; %&gt;</div><div class="line">&lt;html&gt;</div><div class="line">    &lt;head&gt;</div><div class="line">        &lt;title&gt;Test Page&lt;/title&gt;</div><div class="line">    &lt;/head&gt;</div><div class="line">    &lt;body&gt;</div><div class="line">        &lt;font size=10 color=&quot;#38B0DE&quot; &gt; Tomcat One Server  &lt;/font&gt;</div><div class="line">        &lt;table align=&quot;centre&quot; border=&quot;1&quot;&gt;</div><div class="line">        &lt;tr&gt;</div><div class="line">                &lt;td&gt;Session ID&lt;/td&gt;</div><div class="line">                &lt;% session.setAttribute(&quot;magedu.com&quot;,&quot;magedu.com&quot;); %&gt;</div><div class="line">                &lt;td&gt;&lt;%= session.getId() %&gt;&lt;/td&gt;</div><div class="line">        &lt;/tr&gt;</div><div class="line">        &lt;tr&gt;</div><div class="line">                &lt;td&gt;Created on&lt;/td&gt;</div><div class="line">                        &lt;td&gt;&lt;%= session.getCreationTime() %&gt;&lt;/td&gt;</div><div class="line">                &lt;/tr&gt;</div><div class="line">        &lt;/table&gt;</div><div class="line">        &lt;br&gt;</div><div class="line">        &lt;% out.println(&quot;hello world&quot;);</div><div class="line">        %&gt;</div><div class="line">    &lt;/body&gt;</div><div class="line">&lt;/html&gt;</div><div class="line"></div><div class="line">$ systemctl restart tomcat</div></pre></td></tr></table></figure>
<ul>
<li>使用nginx作为反向代理tomcat</li>
</ul>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div></pre></td><td class="code"><pre><div class="line">$ yum install nginx </div><div class="line">$ vim /etc/nginx/nginx.conf</div><div class="line">upstream </div><div class="line">server &#123;</div><div class="line">	listen 80;</div><div class="line">	server_name www1.maxie.com;</div><div class="line">	location / &#123;</div><div class="line">		proxy_pass http://192.168.1.30:8080;</div><div class="line">	&#125;</div><div class="line">&#125;</div><div class="line"></div><div class="line">$ systemctl start nginx</div></pre></td></tr></table></figure>
<ul>
<li>修改客户端HOSTS文件</li>
</ul>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line">$ sudo vim /etc/hosts</div><div class="line">172.16.3.10 www1.maxie.com</div></pre></td></tr></table></figure>
<ul>
<li>打开网页进行测试</li>
</ul>
<p><img src="https://ws1.sinaimg.cn/large/006tNc79ly1fh47lab2rvj31hc1pk4am.jpg" alt=""></p>
<p><br></p>
<h4 id="使用反向代理Tomcat"><a href="#使用反向代理Tomcat" class="headerlink" title="使用反向代理Tomcat"></a><font size="3" color="#38B0DE">使用反向代理Tomcat</font></h4><ul>
<li>使用httpd作为反代服务器(需要将之前nginx服务关闭，防止端口冲突)</li>
</ul>
<figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div></pre></td><td class="code"><pre><div class="line">$ yum install httpd </div><div class="line">$ <span class="built_in">cd</span> /etc/httpd </div><div class="line">$ vim conf.d/maxie-http.conf </div><div class="line">&lt;VirtualHost *:80&gt;</div><div class="line">	ServerName www1.maxie.com</div><div class="line">	DocumentRoot <span class="string">"/data/maxie/"</span></div><div class="line">	ProxyRequests Off              <span class="comment"># 关闭正向代理</span></div><div class="line">	ProxyVia	  On           <span class="comment"># 添加首部Via(由谁代理)--&gt; 有可能会httpd被取消掉 </span></div><div class="line">	ProxyPreserveHost On           <span class="comment"># 把主机头部发送到后端；保留代理服务器上虚拟主机的头部(域名)</span></div><div class="line">	&lt;Proxy *&gt;</div><div class="line">		Require all granted</div><div class="line">	&lt;/Proxy&gt;</div><div class="line">	ProxyPass / http://192.168.1.30:8080/          <span class="comment"># 把/ 代理到后端服务器的地址</span></div><div class="line">	<span class="comment">#或者可以定义成：</span></div><div class="line">	ProxyPass / http://192.168.1.30:8080/<span class="built_in">test</span>/     <span class="comment"># 把 / 代理到后端的 /test 上</span></div><div class="line">	ProxyPassReverse / http://192.168.1.30:8080/   <span class="comment"># 把重定向返回给客户端</span></div><div class="line"></div><div class="line">	&lt;Location /&gt;                                   <span class="comment"># 设置代理的/ 允许谁访问</span></div><div class="line">		Require all granted</div><div class="line">	&lt;/Location&gt;</div><div class="line"></div><div class="line">&lt;/VirtualHost&gt;	</div><div class="line"></div><div class="line">$ httpd -M | grep proxy                                 <span class="comment"># 确保 proxy_http 模块装载</span></div><div class="line"></div><div class="line">$ httpd -t </div><div class="line">$ systemctl start httpd</div></pre></td></tr></table></figure>
<ul>
<li>使用<code>ajp</code>协议进行通信(确保 proxy_ajp_module装载)</li>
</ul>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div></pre></td><td class="code"><pre><div class="line">$ cp conf.d/maxie-http.conf conf.d/maxiecloud-ajp.conf</div><div class="line">$ vim conf.d/maxiecloud-ajp.conf</div><div class="line">&lt;VirtualHost *:80&gt;</div><div class="line">	ServerName www1.maxiecloud.com</div><div class="line">	DocumentRoot &quot;/data/maxie/&quot;</div><div class="line">	ProxyRequests Off 			</div><div class="line">	ProxyVia	  On 					</div><div class="line">	ProxyPreserveHost On 		</div><div class="line">	&lt;Proxy *&gt;</div><div class="line">		Require all granted</div><div class="line">	&lt;/Proxy&gt;</div><div class="line">	ProxyPass / ajp://192.168.1.30:8009/ </div><div class="line">	ProxyPassReverse / ajp://192.168.1.30:8009/ </div><div class="line"></div><div class="line">	&lt;Location /&gt; </div><div class="line">		Require all granted</div><div class="line">	&lt;/Location&gt;</div><div class="line"></div><div class="line">&lt;/VirtualHost&gt;</div><div class="line"></div><div class="line">$ systemctl restart httpd</div></pre></td></tr></table></figure>
<p><br></p>
<h4 id="使用nginx-httpd负载均衡Tomcat"><a href="#使用nginx-httpd负载均衡Tomcat" class="headerlink" title="使用nginx/httpd负载均衡Tomcat"></a><font size="3" color="#38B0DE">使用nginx/httpd负载均衡Tomcat</font></h4><p>这时需要两台Tomcat机器，两台配置一样。只需复制之前做的一台上的配置文件以及/test测试jsp文件</p>
<p><strong>使用nginx反向代理调度器对tomcat实现负载均衡</strong></p>
<ul>
<li>停止httpd服务</li>
</ul>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">$ systemctl stop httpd</div></pre></td></tr></table></figure>
<ul>
<li>配置nginx</li>
</ul>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div></pre></td><td class="code"><pre><div class="line">$ vim /etc/nginx/conf.d/maxie.conf </div><div class="line">upstream tomcatsrv &#123;</div><div class="line">	server 192.168.1.50:8080;</div><div class="line">	server 192.168.1.60:8080;</div><div class="line">&#125;</div><div class="line">server &#123;</div><div class="line">    listen          80;</div><div class="line">    server_name     www.maxie.com;</div><div class="line">    </div><div class="line">    location / &#123;</div><div class="line">    	proxy_pass http://tomcatsrv;</div><div class="line">    &#125;</div><div class="line">&#125;</div><div class="line"></div><div class="line">$ systemctl restart nginx</div></pre></td></tr></table></figure>
<ul>
<li>打开网页进行测试</li>
</ul>
<p><img src="https://ws2.sinaimg.cn/large/006tNc79gy1fh48p33ku2g30qo0us4qv.gif" alt=""></p>
<p>如需设置会话保持功能：</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div></pre></td><td class="code"><pre><div class="line">$ vim /etc/nginx/conf.d/maxie.conf</div><div class="line">在upstream中添加</div><div class="line">hash $request_uri consistent;</div><div class="line">或者</div><div class="line">ip_hash;</div><div class="line">或者</div><div class="line">hash $cookie_name consistent;</div></pre></td></tr></table></figure>
<p><br></p>
<p><strong>使用httpd作为反向代理时，对后端2台tomcat实现负载均衡</strong></p>
<ul>
<li>停止nginx服务</li>
</ul>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">$ systemctl stop nginx</div></pre></td></tr></table></figure>
<ul>
<li>配置httpd</li>
</ul>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div></pre></td><td class="code"><pre><div class="line">$ vim /etc/httpd/conf.d/maxie-http.conf</div><div class="line">&lt;Proxy balancer://tomcatsrv&gt;</div><div class="line">	BalancerMember http://192.168.1.50:8080</div><div class="line">	BalancerMember http://192.168.1.60:8080</div><div class="line">	ProxySet lbmethod=byrequests</div><div class="line">&lt;/Proxy&gt;</div><div class="line"></div><div class="line"></div><div class="line">&lt;VirtualHost *:80&gt;</div><div class="line">	ServerName www.maxie.com</div><div class="line">	ProxyRequests Off                  # 关闭正向代理</div><div class="line">	ProxyVia	  On               # 添加首部Via(由谁代理)--&gt; 有可能会httpd被取消掉 </div><div class="line">	ProxyPreserveHost On               # 把主机头部发送到后端；保留代理服务器上虚拟主机的头部(域名)</div><div class="line">	&lt;Proxy *&gt;</div><div class="line">		Require all granted</div><div class="line">	&lt;/Proxy&gt;</div><div class="line">	ProxyPass / balancer://tomcatsrv/              # 把/ 代理到后端服务器的地址</div><div class="line">	</div><div class="line">	ProxyPassReverse / balancer://tomcatsrv/       # 把重定向返回给客户端</div><div class="line"></div><div class="line">	&lt;Location /&gt;                                   # 设置代理的/ 允许谁访问</div><div class="line">		Require all granted</div><div class="line">	&lt;/Location&gt;</div><div class="line"></div><div class="line">&lt;/VirtualHost&gt;	</div><div class="line"></div><div class="line">$ httpd -t</div><div class="line">$ systemctl restart httpd</div></pre></td></tr></table></figure>
<ul>
<li>打开网页测试即可，效果如nginx代理一样</li>
</ul>
<p><br></p>
<ul>
<li>httpd负载均衡实现会话粘性并开启httpd內建的负载均衡状态页</li>
</ul>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div></pre></td><td class="code"><pre><div class="line">$ vim /etc/httpd/conf.d/maxie-http.conf</div><div class="line">Header add Set-Cookie &quot;MYID=.%&#123;BALANCER_WORKER_ROUTE&#125;e; path=/&quot; env=BALANCER_ROUTE_CHANGED</div><div class="line"></div><div class="line">&lt;Proxy balancer://tomcatsrv&gt;</div><div class="line">        BalancerMember http://192.168.1.50:8080 route=tom1 loadfactor=2</div><div class="line">        BalancerMember http://192.168.1.60:8080 route=tom2 loadfactor=1</div><div class="line">        ProxySet lbmethod=byrequests</div><div class="line">        ProxySet stickysession=MYID</div><div class="line">&lt;/Proxy&gt;</div><div class="line">&lt;VirtualHost *:80&gt;</div><div class="line">    ServerName wwww.maxie.com</div><div class="line">    ProxyRequests Off</div><div class="line">    ProxyVia      On</div><div class="line">    ProxyPreserveHost On</div><div class="line">    &lt;Proxy *&gt;</div><div class="line">        Require all granted</div><div class="line">    &lt;/Proxy&gt;</div><div class="line">    ProxyPass / balancer://tomcatsrv/</div><div class="line">    ProxyPassReverse / balancer://tomcatsrv/</div><div class="line"></div><div class="line">    &lt;Location /&gt;</div><div class="line">        Require all granted</div><div class="line">    &lt;/Location&gt;</div><div class="line"></div><div class="line">    &lt;Location /http-stats&gt;                  # 开启管理负载均衡的接口</div><div class="line">        SetHandler balancer-manager         # 启动balancer-manager这个內建功能</div><div class="line">        ProxyPass !                         # !表示 不反代，只在本机处理</div><div class="line">        Require all granted</div><div class="line">    &lt;/Location&gt;</div><div class="line"></div><div class="line">&lt;/VirtualHost&gt;</div><div class="line"></div><div class="line">$ systemctl restart httpd</div></pre></td></tr></table></figure>
<ul>
<li>打开网页测试</li>
</ul>
<p><img src="https://ws4.sinaimg.cn/large/006tNc79gy1fh48hvej25g30qo0usqva.gif" alt=""></p>
<hr>
<iframe frameborder="no" border="0" marginwidth="0" marginheight="0" width="330" height="86" src="//music.163.com/outchain/player?type=2&id=425100254&auto=1&height=66"></iframe>

<p>本文出自<a href="http://maxiecloud.com">Maxie’s Notes</a>博客，转载请务必保留此出处。</p>
<p><img src="https://ww1.sinaimg.cn/large/006tNbRwly1fdzc80odsuj30gn0ilq5m.jpg" alt=""></p>
]]></content>
    
    <summary type="html">
    
      &lt;blockquote class=&quot;blockquote-center&quot;&gt;Tomat是由Apache软件基金会下属的Jakarta项目开发的一个Servlet容器。由于Tomcat本身也包含了一个HTTP服务器，它可以被视作一个单独的WEB服务器。不过HTTP服务器是C语言实现的Web服务器，而Tomcat则是由Java编写。&lt;br&gt;&lt;/blockquote&gt;

&lt;p&gt;什么是&lt;code&gt;Servlet&lt;/code&gt;呢？ &lt;code&gt;Servlet&lt;/code&gt;，全称 Java Servlet，是用Java编写的服务器端程序，主要功能在于交互式的浏览和修改数据，生成动态Web内容。&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;JSP代码运行过程&lt;/strong&gt;&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;index.jsp –&amp;gt; 由jasper转换 –&amp;gt; index_jsp.java –&amp;gt; 通过javac编译器 –&amp;gt; 生成类文件 index_jsp.class –&amp;gt; 在(engine上)jvm虚拟机上运行&lt;br&gt;基于jsp将静态输出的数据转为java代码进行输出，结果为Servlet规范的代码&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;&lt;img src=&quot;https://ws1.sinaimg.cn/large/006tNc79ly1fh435gsf2fj318g0qktb4.jpg&quot; alt=&quot;&quot;&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Java代码运行过程&lt;/strong&gt;&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;&lt;em&gt;.java –&amp;gt; javac –&amp;gt; &lt;/em&gt;.class(bytecode字节码)&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;&lt;strong&gt;JVM运行时区域&lt;/strong&gt;&lt;/p&gt;
&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;1&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;2&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;3&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;4&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;5&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;方法区         用于存储被JVM加载的class信息、常量、静态变量，方法等&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;堆            是jvm所管理的内存中占用空间最大的一部分，也是GC管理的主要区域，用来存储对象信息&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;栈            线程私有，存储线程自己的局部变量&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;PC寄存器       线程私有的内存空间，程序的指令指针&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;GC            垃圾回收，回收堆中不再使用的空间&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;hr&gt;
    
    </summary>
    
      <category term="linux进阶" scheme="http://maxiecloud.com/categories/linux%E8%BF%9B%E9%98%B6/"/>
    
      <category term="tomcat" scheme="http://maxiecloud.com/categories/linux%E8%BF%9B%E9%98%B6/tomcat/"/>
    
    
      <category term="linux" scheme="http://maxiecloud.com/tags/linux/"/>
    
      <category term="tomcat" scheme="http://maxiecloud.com/tags/tomcat/"/>
    
      <category term="java" scheme="http://maxiecloud.com/tags/java/"/>
    
      <category term="balance" scheme="http://maxiecloud.com/tags/balance/"/>
    
  </entry>
  
  <entry>
    <title>高性能缓存服务器Varnish详解</title>
    <link href="http://maxiecloud.com/2017/06/27/varnish/"/>
    <id>http://maxiecloud.com/2017/06/27/varnish/</id>
    <published>2017-06-26T23:39:00.000Z</published>
    <updated>2017-06-27T03:56:12.000Z</updated>
    
    <content type="html"><![CDATA[<p><img src="https://ws4.sinaimg.cn/large/006tNc79ly1fgzgguy09lj30lf06y0tv.jpg" alt=""></p>
<blockquote class="blockquote-center">Varnish是反向HTTP代理，也是HTTP加速器或者Web加速器。<br>Varnish不仅仅是缓存内容以加速器服务器的反向HTTP代理。根据实际情况，Varnish也可以用作：<br><br><em> Web应用程序防火墙 </em><br><em> DDoS攻击防御器 </em><br><em> 负载均衡器 </em><br><em> HTTP路由器 </em><br></blockquote>

<p><code>Varnish</code>的优势：</p>
<blockquote>
<p>Varnish的稳定性很高，与Squid相比，在运行在相同负荷的情况下，Squid服务器发生故障的几率要高于Varnish。<br>Varnish的访问速度更快，因为所有缓存数据都可以直接从内存读取，也可以从硬盘读取；比Squid更为灵活、<br>Varnish支持更多的并发连接。只需要调整thread_pools与thread_pool_max的值即可，不过要根据实际情况的CPU核心数以及服务器要被用来做什么而定。</p>
</blockquote>
<p><br></p>
<p><code>Varnish</code>的劣势：</p>
<blockquote>
<p>一旦Varnish遇到Crash或者重启进程，所有的缓存数据都会从内存中完全释放，此时所有的访问都不会被缓存命中，而请求都会被发送到后端服务器，在高并发的情况下，后端服务器很可能因此崩溃掉。</p>
</blockquote>
<p><br></p>
<p>解决方案：</p>
<blockquote>
<p>在访问量很大的情况下，我们可以使用Varnish的内存缓存方式，而且后端要配置多台Squid服务器。防止前端Varnish服务重启、服务器重启或者不可预知的误操作情况下，大量请求穿透Varnish，这样Squid可以充当第二层缓存。<br>也可以通过Keepalived+varnish+rsync+inotify达到高可用的状态，这样在主节点不繁忙的时候，将缓存的信息同步到另一台备用缓存服务器上。为了尽可能的利用资源，我们可以将两台varnish配置成”双主模式”</p>
</blockquote>
<hr>
<a id="more"></a>
<div class="note primary"><h3 id="Varnish架构以及WorkFlow"><a href="#Varnish架构以及WorkFlow" class="headerlink" title="Varnish架构以及WorkFlow"></a>Varnish架构以及WorkFlow</h3></div>
<h3 id="架构图"><a href="#架构图" class="headerlink" title="架构图"></a><font szie="4" color="#236B8E">架构图</font></h3><p><img src="https://ws2.sinaimg.cn/large/006tNc79ly1fgzj0riyr4j31cg0oste4.jpg" alt=""></p>
<ul>
<li><p>Varnish分为 Master进程和 Child进程；也就是主控进程和子进程，概念相当于nginx中worker进程</p>
</li>
<li><p>Master进程读入配置文件，根据配置文件中指定的缓存类型，选择存储类型，然后创建缓存文件；接着master初始化管理该存储空间的结构体，然后监控 child进程</p>
</li>
<li><p>对外管理接口有三种：CLI命令行接口、Telnet接口、Web接口(商业版)</p>
</li>
<li><p>同时在运行过程中修改的配置，可以由VCL编译器编译成C语言，并组织成共享对象(Shared Object)交由Child进程加载使用</p>
</li>
</ul>
<p><br></p>
<h3 id="Child进程"><a href="#Child进程" class="headerlink" title="Child进程"></a><font szie="4" color="#236B8E">Child进程</font></h3><p><code>Child进程</code>分配若干线程进行工作，主要包括一些管理线程和很多worker线程</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div></pre></td><td class="code"><pre><div class="line">Accept线程            接收请求，将请求挂在overflow队列上</div><div class="line">Work线程              有多个，负责从overflow队列上摘除请求，并对请求进行处理，直到完成，然后处理下一个请求</div><div class="line">Epoll线程             一个请求处理称为一个session，在session周期内，处理完请求后，会交给Epoll处理，监听是否还有事件发生</div><div class="line">Expire线程            对于缓存的object，根据过期时间，组成成二叉堆，该线程周期检查该堆的根，处理过期的文件，对过期的数据进行删除或重取操作</div></pre></td></tr></table></figure>
<p><br></p>
<h4 id="HTTP请求处理基本流程"><a href="#HTTP请求处理基本流程" class="headerlink" title="HTTP请求处理基本流程"></a><font szie="4" color="#236B8E">HTTP请求处理基本流程</font></h4><p><img src="https://ws3.sinaimg.cn/large/006tNc79ly1fgzjd6arfxj30j10qwgrm.jpg" alt=""></p>
<p><strong>Varnish处理HTTP请求的过程如下：</strong></p>
<ol>
<li><p>Receive(vcl_recv)状态：也就是请求处理的入口状态，根据VCL规则判断该请求是应该进入 <code>pass(vcl_pass)</code>或者是 <code>pipe(vcl_pipe)</code>或者是<code>lookup(缓存本地查询)</code>，还是<code>purge(vcl_purge)</code>。<br></p>
</li>
<li><p>Lookup 状态：进入该状态后，会在hash表中查找数据。若找到，则进入<code>hit</code>(vcl_hit)状态，否则进入<code>miss</code>(vcl_miss)状态。<br></p>
</li>
<li><p>Pass(vcl_pass)状态：在此状态下，对于请求会直接发往后端主机，进入到<code>backend_fetch</code>(vcl_backend_fetch)状态。</p>
</li>
<li><p>Backend_Fetch(vcl_backend_fetch)状态：在此状态下，对请求会向后端服务器进行获取，发送请求，获得数据，并根据配置文件中对此类数据的缓存设置进行缓存或者其他操作。</p>
</li>
<li><p>Deliver(vcl_deliver)状态：将获取到的数据发送给客户端，完成本次请求。</p>
</li>
</ol>
<p><br></p>
<h4 id="子例程-内置函数"><a href="#子例程-内置函数" class="headerlink" title="子例程(内置函数)"></a><font szie="4" color="#236B8E">子例程(内置函数)</font></h4><ul>
<li>vcl_recv：用于接收和处理请求；当请求到达varnish，通过判断请求的数据来决定如何处理请求</li>
<li>vcl_pipe：用于将请求直接传递至后端主机，并将后端响应原封不动返回给客户端</li>
<li>vcl_pass：用于将请求直接传递给后端主机，但后端主机的响应并不缓存，而是直接返回给客户端</li>
<li>vcl_hit：在缓存中找到请求的内容后自动调用</li>
<li>vcl_miss：在缓存中没有找到请求的内容后自动调用。用于判断是否需要从后端服务器获取内容</li>
<li>vcl_hash：在vcl_recv调用后为请求创建一个hash值时，调用。此hash值将作为varnish中hash表的key</li>
<li>vcl_pruge：在收到 purge请求时，执行此函数，清空特定页面/资源的缓存。</li>
<li>vcl_deliver：将在缓存中找到的请求的内容发送给客户端前调用。</li>
<li>vcl_backend_fetch：向后端主机发送请求前，调用。可修改发往后端的请求</li>
<li>vcl_backend_response：获得后端主机的响应后，调用。</li>
<li>vcl_backend_error：当从后端主机获取资源时失败时，调用。</li>
<li>vcl_init：VCL加载时调用此函数，用于初始化varnish模块(类似于awk中的BEGIN)</li>
<li>vcl_fini：当所有请求都离开当前VCL，且当前VCL被弃用时，调用。用于清理varnish模块(类似于awk中的END)</li>
</ul>
<p><br></p>
<h4 id="VCL内建变量"><a href="#VCL内建变量" class="headerlink" title="VCL内建变量"></a><font szie="4" color="#236B8E">VCL内建变量</font></h4><p><img src="https://ws2.sinaimg.cn/large/006tNc79ly1fgzk9cjwyxj31kw0nvamp.jpg" alt=""></p>
<p><strong>变量类型详解：</strong></p>
<p><img src="https://ws2.sinaimg.cn/large/006tNc79ly1fgzkau2b7uj30qe0cg41q.jpg" alt=""></p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div></pre></td><td class="code"><pre><div class="line">req         The request object              请求到达时使用的变量</div><div class="line">bereq       The backend request object      向后端主机请求时使用的变量</div><div class="line">beresp      The backend response object     向后端主机获取内容时使用的变量</div><div class="line">resp        The HTTP response object        对客户端响应时使用的变量</div><div class="line">obj                                         存储在内存中时对象属性相关的使用的变量</div></pre></td></tr></table></figure>
<ul>
<li>bereq以及req的子变量详解：</li>
</ul>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div></pre></td><td class="code"><pre><div class="line">bereq.http.HEADERS          各种各样的头部信息</div><div class="line">bereq.request               请求方法</div><div class="line">bereq.url                   请求的url</div><div class="line">bereq.proto                 请求的协议版本</div><div class="line">bereq.backend               指明要调用的后端主机</div><div class="line"></div><div class="line">req.http.Cookie             客户端的请求报文中Cookie首部的值</div><div class="line">req.http.User-Agent ~ &quot;chrome&quot;</div></pre></td></tr></table></figure>
<ul>
<li>beresp以及resp的子变量详解：</li>
</ul>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div></pre></td><td class="code"><pre><div class="line">beresp.http.HEADERS</div><div class="line">beresp.status               响应的状态码</div><div class="line">reresp.proto                协议版本</div><div class="line">beresp.backend.name         BE主机的主机名</div><div class="line">beresp.ttl                  BE主机响应的内容的余下的可缓存时长</div></pre></td></tr></table></figure>
<ul>
<li>obj子变量：</li>
</ul>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line">obj.hits        此对象从缓存中命中的次数</div><div class="line">obj.ttl         缓存时长</div><div class="line">obj.grace       缓存宽限期</div></pre></td></tr></table></figure>
<ul>
<li>server子变量：</li>
</ul>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line">server.ip           服务端IP</div><div class="line">server.hostname     服务端主机名</div></pre></td></tr></table></figure>
<ul>
<li>client子变量：</li>
</ul>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">client.ip           客户端IP地址</div></pre></td></tr></table></figure>
<hr>
<div class="note success"><h3 id="Varnish配置文件详解"><a href="#Varnish配置文件详解" class="headerlink" title="Varnish配置文件详解"></a>Varnish配置文件详解</h3></div>
<h4 id="varnish-params配置文件"><a href="#varnish-params配置文件" class="headerlink" title=" varnish.params配置文件"></a><font size="4" color="#32CD99"> varnish.params配置文件</font></h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div></pre></td><td class="code"><pre><div class="line">VARNISH_VCL_CONF=/etc/varnish/default.vcl           指定vcl文件的地址</div><div class="line"></div><div class="line">VARNISH_LISTEN_PORT=80                              指定监听的服务端口</div><div class="line"></div><div class="line">VARNISH_ADMIN_LISTEN_ADDRESS=127.0.0.1              指定管理IP地址</div><div class="line">VARNISH_ADMIN_LISTEN_PORT=6082                      指定管理监听的端口</div><div class="line"></div><div class="line">VARNISH_SECRET_FILE=/etc/varnish/secret             指定SECRET文件的位置</div><div class="line"></div><div class="line">VARNISH_STORAGE=&quot;malloc,256M&quot;                       设置存储类型以及大小;Varnish 4中默认使用malloc(即内存)作为缓存对象存储方式</div><div class="line"></div><div class="line">VARNISH_USER=varnish                                运行varnish进程的属主</div><div class="line">VARNISH_GROUP=varnish                               运行varnish进程的属组</div><div class="line"></div><div class="line">DAEMON_OPTS=&quot;-p thread_pool_min=5 -p thread_pool_max=500 -p thread_pool_timeout=300&quot;                进程池配置，开启varnish自动加载</div></pre></td></tr></table></figure>
<p><br></p>
<h4 id="default-vcl配置文件"><a href="#default-vcl配置文件" class="headerlink" title=" default.vcl配置文件"></a><font size="4" color="#32CD99"> default.vcl配置文件</font></h4><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div><div class="line">37</div><div class="line">38</div><div class="line">39</div><div class="line">40</div><div class="line">41</div><div class="line">42</div><div class="line">43</div><div class="line">44</div><div class="line">45</div><div class="line">46</div><div class="line">47</div><div class="line">48</div><div class="line">49</div><div class="line">50</div><div class="line">51</div><div class="line">52</div><div class="line">53</div><div class="line">54</div><div class="line">55</div><div class="line">56</div><div class="line">57</div><div class="line">58</div><div class="line">59</div><div class="line">60</div><div class="line">61</div><div class="line">62</div><div class="line">63</div><div class="line">64</div><div class="line">65</div><div class="line">66</div><div class="line">67</div><div class="line">68</div><div class="line">69</div><div class="line">70</div><div class="line">71</div><div class="line">72</div><div class="line">73</div><div class="line">74</div><div class="line">75</div><div class="line">76</div><div class="line">77</div><div class="line">78</div><div class="line">79</div><div class="line">80</div><div class="line">81</div><div class="line">82</div><div class="line">83</div><div class="line">84</div><div class="line">85</div><div class="line">86</div><div class="line">87</div><div class="line">88</div><div class="line">89</div><div class="line">90</div><div class="line">91</div><div class="line">92</div><div class="line">93</div><div class="line">94</div><div class="line">95</div><div class="line">96</div><div class="line">97</div><div class="line">98</div><div class="line">99</div><div class="line">100</div><div class="line">101</div><div class="line">102</div><div class="line">103</div><div class="line">104</div><div class="line">105</div><div class="line">106</div><div class="line">107</div><div class="line">108</div><div class="line">109</div><div class="line">110</div><div class="line">111</div><div class="line">112</div><div class="line">113</div><div class="line">114</div><div class="line">115</div><div class="line">116</div><div class="line">117</div><div class="line">118</div><div class="line">119</div><div class="line">120</div><div class="line">121</div><div class="line">122</div><div class="line">123</div><div class="line">124</div><div class="line">125</div><div class="line">126</div><div class="line">127</div><div class="line">128</div><div class="line">129</div><div class="line">130</div><div class="line">131</div><div class="line">132</div><div class="line">133</div><div class="line">134</div><div class="line">135</div><div class="line">136</div><div class="line">137</div><div class="line">138</div><div class="line">139</div><div class="line">140</div><div class="line">141</div><div class="line">142</div><div class="line">143</div><div class="line">144</div><div class="line">145</div><div class="line">146</div><div class="line">147</div><div class="line">148</div><div class="line">149</div><div class="line">150</div><div class="line">151</div><div class="line">152</div><div class="line">153</div><div class="line">154</div><div class="line">155</div><div class="line">156</div><div class="line">157</div><div class="line">158</div><div class="line">159</div><div class="line">160</div><div class="line">161</div><div class="line">162</div><div class="line">163</div><div class="line">164</div><div class="line">165</div><div class="line">166</div><div class="line">167</div><div class="line">168</div><div class="line">169</div><div class="line">170</div><div class="line">171</div><div class="line">172</div><div class="line">173</div><div class="line">174</div><div class="line">175</div><div class="line">176</div><div class="line">177</div><div class="line">178</div><div class="line">179</div><div class="line">180</div><div class="line">181</div><div class="line">182</div><div class="line">183</div><div class="line">184</div><div class="line">185</div><div class="line">186</div><div class="line">187</div><div class="line">188</div><div class="line">189</div><div class="line">190</div><div class="line">191</div><div class="line">192</div><div class="line">193</div><div class="line">194</div><div class="line">195</div><div class="line">196</div><div class="line">197</div><div class="line">198</div><div class="line">199</div><div class="line">200</div><div class="line">201</div><div class="line">202</div><div class="line">203</div><div class="line">204</div><div class="line">205</div><div class="line">206</div><div class="line">207</div><div class="line">208</div><div class="line">209</div><div class="line">210</div><div class="line">211</div><div class="line">212</div><div class="line">213</div><div class="line">214</div><div class="line">215</div><div class="line">216</div><div class="line">217</div><div class="line">218</div><div class="line">219</div><div class="line">220</div><div class="line">221</div><div class="line">222</div><div class="line">223</div><div class="line">224</div><div class="line">225</div><div class="line">226</div><div class="line">227</div><div class="line">228</div><div class="line">229</div><div class="line">230</div><div class="line">231</div><div class="line">232</div><div class="line">233</div><div class="line">234</div><div class="line">235</div><div class="line">236</div><div class="line">237</div><div class="line">238</div><div class="line">239</div><div class="line">240</div><div class="line">241</div><div class="line">242</div><div class="line">243</div><div class="line">244</div><div class="line">245</div><div class="line">246</div><div class="line">247</div><div class="line">248</div><div class="line">249</div><div class="line">250</div><div class="line">251</div><div class="line">252</div><div class="line">253</div><div class="line">254</div><div class="line">255</div><div class="line">256</div><div class="line">257</div><div class="line">258</div><div class="line">259</div><div class="line">260</div><div class="line">261</div><div class="line">262</div><div class="line">263</div><div class="line">264</div><div class="line">265</div><div class="line">266</div><div class="line">267</div><div class="line">268</div><div class="line">269</div><div class="line">270</div><div class="line">271</div><div class="line">272</div><div class="line">273</div><div class="line">274</div><div class="line">275</div><div class="line">276</div><div class="line">277</div><div class="line">278</div></pre></td><td class="code"><pre><div class="line"><span class="comment"># 使用varnish版本4的格式.</span></div><div class="line">vcl 4.0;</div><div class="line"></div><div class="line"><span class="comment"># 加载后端负载均衡模块</span></div><div class="line">import directors;</div><div class="line"></div><div class="line"></div><div class="line"><span class="comment">#######################健康检查策略区域###########################</span></div><div class="line"><span class="comment"># 名为www_probe的健康检查策略</span></div><div class="line">probe www_probe &#123;</div><div class="line">.request =</div><div class="line">    <span class="string">"GET /html/test.html HTTP/1.1"</span>      <span class="comment"># 健康检查url为/html/test.html 协议为http1.1</span></div><div class="line">    <span class="string">"Host: www.maxie.com"</span>               <span class="comment"># 访问的域名为www.maxie.com</span></div><div class="line">    <span class="string">"Connection: close"</span>;                <span class="comment"># 检查完关闭连接</span></div><div class="line"><span class="comment">#其他参数 如 超时时间 检查间隔 等均使用默认</span></div><div class="line">.window                                 <span class="comment"># 基于最近的多少次检查来判断其健康状态</span></div><div class="line">.threshold                              <span class="comment"># 最近.window中定义的这么次检查中至有.threshhold定义的次数是成功的</span></div><div class="line">.interval                               <span class="comment"># 检测频度</span></div><div class="line">.timeout                                <span class="comment"># 超时时长</span></div><div class="line">&#125;</div><div class="line"></div><div class="line"></div><div class="line"><span class="comment">#名为 backend_healthcheck的健康检查策略</span></div><div class="line">probe backend_healthcheck &#123; </div><div class="line">    .url = /health.html;</div><div class="line">    .window = 5;</div><div class="line">    .threshold = 2;</div><div class="line">    .interval = 3s;</div><div class="line">&#125;</div><div class="line"></div><div class="line"></div><div class="line"><span class="comment">#########################################################</span></div><div class="line"><span class="comment">#######################配置后端区域########################</span></div><div class="line"></div><div class="line">backend backend_20 &#123;</div><div class="line">.host = <span class="string">"172.16.3.20"</span>;</div><div class="line">.port = <span class="string">"80"</span>;</div><div class="line">.probe = www_probe;                 <span class="comment"># 使用名为www_probe的健康检查策略</span></div><div class="line">&#125;</div><div class="line">backend backend_30 &#123;</div><div class="line">.host = <span class="string">"172.16.3.30"</span>;</div><div class="line">.port = <span class="string">"80"</span>;</div><div class="line">.probe = www_probe;                 <span class="comment"># 使用名为www_probe的健康检查策略</span></div><div class="line">&#125;</div><div class="line"></div><div class="line"><span class="comment">#默认后端</span></div><div class="line">backend default &#123;</div><div class="line">.host = <span class="string">"172.16.3.40"</span>;</div><div class="line">.port = <span class="string">"81"</span>;</div><div class="line">&#125;</div><div class="line"></div><div class="line"><span class="comment">###########################################################</span></div><div class="line"><span class="comment">#######################配置后端集群事件#######################</span></div><div class="line"></div><div class="line">sub vcl_init &#123;</div><div class="line"><span class="comment"># 后端集群有4种模式 random, round-robin, fallback, hash</span></div><div class="line"><span class="comment"># random                随机</span></div><div class="line"><span class="comment"># round-robin           轮询</span></div><div class="line"><span class="comment"># fallback              后备</span></div><div class="line"><span class="comment"># hash                  固定后端 根据url(req.http.url) 或 用户cookie(req.http.cookie) 或 用户session(req.http.sticky)(这个还有其他要配合)</span></div><div class="line"></div><div class="line"></div><div class="line"><span class="comment"># 把backend_20 和 backend_30 配置为轮询集群 取名为www_round_robin</span></div><div class="line">new www_round_robin = directors.round_robin();</div><div class="line">www_round_robin.add_backend(backend_16);</div><div class="line">www_round_robin.add_backend(backend_17);</div><div class="line"></div><div class="line"></div><div class="line"><span class="comment"># 把backend_16 和 backend_17配置为随机选择集群 取名为www_random</span></div><div class="line">new www_random = directors.random();</div><div class="line">www_random.add_backend(backend_16,10);  <span class="comment"># 设置backend_16后端的权重为10</span></div><div class="line">www_random.add_backend(backend_17,5);   <span class="comment"># 设置backend_17后端的权重为5</span></div><div class="line"></div><div class="line"></div><div class="line"><span class="comment"># 把backend_16 和 backend_17配置为固定后端集群 取名为www_hash 在recv调用时还需要添加东西 看recv例子</span></div><div class="line">new www_hash = directors.hash();</div><div class="line">www_hash.add_backend(backend_16,1);        <span class="comment"># 设置backend_16后端的权重为1</span></div><div class="line">www_hash.add_backend(backend_17,1);        <span class="comment"># 设置backend_17后端的权重为1</span></div><div class="line">&#125;</div><div class="line"></div><div class="line"></div><div class="line"><span class="comment">#定义允许清理缓存的IP</span></div><div class="line">acl purge &#123;</div><div class="line"><span class="comment"># For now, I'll only allow purges coming from localhost</span></div><div class="line"><span class="string">"127.0.0.1"</span>;</div><div class="line"><span class="string">"localhost"</span>;</div><div class="line">&#125;</div><div class="line"></div><div class="line"><span class="comment"># 请求入口 这里一般用作路由处理 判断是否读取缓存 和 指定该请求使用哪个后端</span></div><div class="line">sub vcl_recv &#123;</div><div class="line"><span class="comment">##############################指定后端区域###########################</span></div><div class="line"><span class="comment"># 域名为 www.xxxxx.com 的请求 指定使用名为www_round_robin的后端集群  在集群名后加上 .backend() 如只使用单独后端 直接写后端名字即可 如 = backend_16;</span></div><div class="line"></div><div class="line"></div><div class="line"><span class="keyword">if</span> (req.http.host ~ <span class="string">"www.xxxxx.com"</span>) &#123;</div><div class="line"><span class="built_in">set</span> req.backend_hint = www_round_robin.backend();</div><div class="line">&#125;</div><div class="line"></div><div class="line"></div><div class="line"><span class="comment"># 使用固定后端集群例子 使用名为www_hash的集群</span></div><div class="line"><span class="keyword">if</span> (req.http.host ~ <span class="string">"3g.xxxxx.com"</span>) &#123;</div><div class="line"><span class="built_in">set</span> req.backend_hint = www_hash.backend(req.http.cookie);           <span class="comment"># 根据用户的cookie来分配固定后端 可以指定其他分配规则</span></div><div class="line">&#125;</div><div class="line"></div><div class="line"></div><div class="line"><span class="comment"># 其他将使用default默认后端</span></div><div class="line"><span class="comment">#####################################################################</span></div><div class="line"><span class="comment"># 把真实客户端IP传递给后端服务器 后端服务器日志使用X-Forwarded-For来接收</span></div><div class="line"><span class="keyword">if</span> (req.restarts == 0) &#123;</div><div class="line"><span class="keyword">if</span> (req.http.X-Forwarded-For) &#123;</div><div class="line"><span class="built_in">set</span> req.http.X-Forwarded-For = req.http.X-Forwarded-For + <span class="string">", "</span> + client.ip;</div><div class="line">&#125; <span class="keyword">else</span> &#123;</div><div class="line"><span class="built_in">set</span> req.http.X-Forwarded-For = client.ip;</div><div class="line">&#125;</div><div class="line">&#125;</div><div class="line"></div><div class="line"></div><div class="line"><span class="comment"># 匹配清理缓存的请求</span></div><div class="line"><span class="keyword">if</span> (req.method == <span class="string">"PURGE"</span>) &#123;</div><div class="line"></div><div class="line"><span class="comment"># 如果发起请求的客户端IP 不是在acl purge里面定义的 就拒绝</span></div><div class="line"><span class="keyword">if</span> (!client.ip ~ purge) &#123;</div><div class="line"><span class="built_in">return</span> (synth(405, <span class="string">"This IP is not allowed to send PURGE requests."</span>));</div><div class="line">&#125;</div><div class="line"></div><div class="line"><span class="comment"># 是的话就执行清理</span></div><div class="line"><span class="built_in">return</span> (purge);</div><div class="line">&#125;</div><div class="line"></div><div class="line"></div><div class="line"><span class="comment"># 如果不是正常请求 就直接穿透没商量</span></div><div class="line"><span class="keyword">if</span> (req.method != <span class="string">"GET"</span> &amp;&amp;</div><div class="line">req.method != <span class="string">"HEAD"</span> &amp;&amp;</div><div class="line">req.method != <span class="string">"PUT"</span> &amp;&amp;</div><div class="line">req.method != <span class="string">"POST"</span> &amp;&amp;</div><div class="line">req.method != <span class="string">"TRACE"</span> &amp;&amp;</div><div class="line">req.method != <span class="string">"OPTIONS"</span> &amp;&amp;</div><div class="line">req.method != <span class="string">"PATCH"</span> &amp;&amp;</div><div class="line">req.method != <span class="string">"DELETE"</span>) &#123;</div><div class="line">/* Non-RFC2616 or CONNECT <span class="built_in">which</span> is weird. */</div><div class="line"><span class="built_in">return</span> (pipe);</div><div class="line">&#125;</div><div class="line"></div><div class="line"></div><div class="line"><span class="comment"># 如果不是GET和HEAD就跳到pass 再确定是缓存还是穿透</span></div><div class="line"><span class="keyword">if</span> (req.method != <span class="string">"GET"</span> &amp;&amp; req.method != <span class="string">"HEAD"</span>) &#123;</div><div class="line"><span class="built_in">return</span> (pass);</div><div class="line">&#125;</div><div class="line"></div><div class="line"><span class="comment"># 缓存通过上面所有判断的请求 (只剩下GET和HEAD了)</span></div><div class="line"><span class="built_in">return</span> (<span class="built_in">hash</span>);</div><div class="line">&#125;</div><div class="line"></div><div class="line"></div><div class="line"><span class="comment"># pass事件</span></div><div class="line">sub vcl_pass &#123;</div><div class="line"><span class="comment"># 有fetch,synth or restart 3种模式. fetch模式下 全部都不会缓存</span></div><div class="line"><span class="built_in">return</span> (fetch);</div><div class="line">&#125;</div><div class="line"></div><div class="line"></div><div class="line"><span class="comment"># hash事件(缓存事件)</span></div><div class="line">sub vcl_hash &#123;</div><div class="line"><span class="comment"># 根据以下特征来判断请求的唯一性 并根据此特征来缓存请求的内容 特征为&amp;关系</span></div><div class="line"><span class="comment"># 1. 请求的url</span></div><div class="line"><span class="comment"># 2. 请求的servername 如没有 就记录请求的服务器IP地址</span></div><div class="line"><span class="comment"># 3. 请求的cookie</span></div><div class="line">hash_data(req.url);</div><div class="line"><span class="keyword">if</span> (req.http.host) &#123;</div><div class="line">hash_data(req.http.host);</div><div class="line">&#125; <span class="keyword">else</span> &#123;</div><div class="line">hash_data(server.ip);</div><div class="line">&#125;</div><div class="line"></div><div class="line"><span class="comment"># 返回lookup , lookup不是一个事件(就是 并非指跳去sub vcl_lookup) 他是一个操作 他会检查有没有缓存 如没有 就会创建缓存</span></div><div class="line"><span class="built_in">return</span> (lookup);</div><div class="line">&#125;</div><div class="line"></div><div class="line"></div><div class="line"><span class="comment"># 缓存命中事件 在lookup操作后自动调用 官网文档说 如没必要 一般不需要修改</span></div><div class="line">sub vcl_hit &#123;</div><div class="line"><span class="comment"># 可以在这里添加判断事件(if) 可以返回 deliver restart synth 3个事件</span></div><div class="line"><span class="comment"># deliver  表示把缓存内容直接返回给用户</span></div><div class="line"><span class="comment"># restart  重新启动请求 不建议使用 超过重试次数会报错</span></div><div class="line"><span class="comment"># synth    返回状态码 和原因 语法:return(synth(status code,reason))</span></div><div class="line"><span class="comment"># 这里没有判断 所有缓存命中直接返回给用户</span></div><div class="line"><span class="built_in">return</span> (deliver);</div><div class="line">&#125;</div><div class="line"></div><div class="line"></div><div class="line"><span class="comment"># 缓存不命中事件 在lookup操作后自动调用 官网文档说 如没必要 一般不需要修改</span></div><div class="line">sub vcl_miss &#123;</div><div class="line"><span class="comment"># 此事件中 会默认给http请求加一个 X-Varnish 的header头 提示: nginx可以根据此header来判断是否来自varnish的请求(就不用起2个端口了)</span></div><div class="line"><span class="comment"># 要取消此header头 只需要在这里添加 unset bereq.http.x-varnish; 即可</span></div><div class="line"><span class="comment"># 这里所有不命中的缓存都去后端拿 没有其他操作 fetch表示从后端服务器拿取请求内容</span></div><div class="line"><span class="built_in">return</span> (fetch);</div><div class="line">&#125;</div><div class="line"></div><div class="line"></div><div class="line"><span class="comment"># 返回给用户的前一个事件 通常用于添加或删除header头</span></div><div class="line">sub vcl_deliver &#123;</div><div class="line"><span class="comment"># 例子</span></div><div class="line"><span class="comment"># set resp.http.*    用来添加header头 如 set resp.http.xxxxx = "haha"; unset为删除</span></div><div class="line"><span class="comment"># set resp.status     用来设置返回状态 如 set resp.status = 404;</span></div><div class="line"><span class="comment"># obj.hits        会返回缓存命中次数 用于判断或赋值给header头</span></div><div class="line"><span class="comment"># req.restarts    会返回该请求经历restart事件次数 用户判断或赋值给header头</span></div><div class="line"><span class="comment"># 根据判断缓存时间来设置xxxxx-Cache header头</span></div><div class="line"><span class="keyword">if</span> (obj.hits &gt; 0) &#123;</div><div class="line"><span class="built_in">set</span> resp.http.xxxxx_Cache = <span class="string">"cached"</span>;</div><div class="line">&#125; <span class="keyword">else</span> &#123;</div><div class="line"><span class="built_in">set</span> resp.http.xxxxx_Cache = <span class="string">"uncached"</span>;</div><div class="line">&#125;</div><div class="line"></div><div class="line"><span class="comment">#取消显示php框架版本的header头</span></div><div class="line"><span class="built_in">unset</span> resp.http.X-Powered-By;</div><div class="line"></div><div class="line"><span class="comment">#取消显示nginx版本、Via(来自varnish)等header头 为了安全</span></div><div class="line"><span class="built_in">unset</span> resp.http.Server;</div><div class="line"><span class="built_in">unset</span> resp.http.X-Drupal-Cache;</div><div class="line"><span class="built_in">unset</span> resp.http.Via;</div><div class="line"><span class="built_in">unset</span> resp.http.Link;</div><div class="line"><span class="built_in">unset</span> resp.http.X-Varnish;</div><div class="line"></div><div class="line"><span class="comment">#显示请求经历restarts事件的次数</span></div><div class="line"><span class="built_in">set</span> resp.http.xxxxx_restarts_count = req.restarts;</div><div class="line"></div><div class="line"><span class="comment">#显示该资源缓存的时间 单位秒</span></div><div class="line"><span class="built_in">set</span> resp.http.xxxxx_Age = resp.http.Age;</div><div class="line"></div><div class="line"><span class="comment">#显示该资源命中的次数</span></div><div class="line"><span class="built_in">set</span> resp.http.xxxxx_hit_count = obj.hits;</div><div class="line"></div><div class="line"><span class="comment">#取消显示Age 为了不和CDN冲突</span></div><div class="line"><span class="built_in">unset</span> resp.http.Age;</div><div class="line"></div><div class="line"><span class="comment">#返回给用户</span></div><div class="line"><span class="built_in">return</span> (deliver);</div><div class="line">&#125;</div><div class="line"></div><div class="line"></div><div class="line"><span class="comment">#处理对后端返回结果的事件(设置缓存、移除cookie信息、设置header头等) 在fetch事件后自动调用</span></div><div class="line">sub vcl_backend_response &#123;</div><div class="line"><span class="comment">#后端返回如下错误状态码 则不缓存</span></div><div class="line"><span class="keyword">if</span> (beresp.status == 499 || beresp.status == 404 || beresp.status == 502) &#123;</div><div class="line"><span class="built_in">set</span> beresp.uncacheable = <span class="literal">true</span>;</div><div class="line">&#125;</div><div class="line"></div><div class="line"><span class="comment">#如请求php或jsp 则不缓存</span></div><div class="line"><span class="keyword">if</span> (bereq.url ~ <span class="string">"\.(php|jsp)(\?|$)"</span>) &#123;</div><div class="line"><span class="built_in">set</span> beresp.uncacheable = <span class="literal">true</span>;</div><div class="line"></div><div class="line"><span class="comment">#php和jsp以外的请求</span></div><div class="line">&#125;<span class="keyword">else</span>&#123;</div><div class="line"></div><div class="line"><span class="comment">#如请求html 则缓存5分钟</span></div><div class="line"><span class="keyword">if</span> (bereq.url ~ <span class="string">"\.html(\?|$)"</span>) &#123;</div><div class="line"><span class="built_in">set</span> beresp.ttl = 300s;</div><div class="line"><span class="built_in">unset</span> beresp.http.Set-Cookie;</div><div class="line"></div><div class="line"><span class="comment">#其他缓存1小时 如css js等</span></div><div class="line">&#125;<span class="keyword">else</span>&#123;</div><div class="line"><span class="built_in">set</span> beresp.ttl = 1h;</div><div class="line"><span class="built_in">unset</span> beresp.http.Set-Cookie;</div><div class="line">&#125;</div><div class="line">&#125;</div><div class="line"></div><div class="line"></div><div class="line"><span class="comment">#开启grace模式 表示当后端全挂掉后 即使缓存资源已过期(超过缓存时间) 也会把该资源返回给用户 资源最大有效时间为6小时</span></div><div class="line"><span class="built_in">set</span> beresp.grace = 6h;</div><div class="line"></div><div class="line"><span class="comment">#返回给用户</span></div><div class="line"><span class="built_in">return</span> (deliver);</div><div class="line">&#125;</div><div class="line"></div><div class="line"></div><div class="line"><span class="comment">#返回给用户前的事件 可以在这里自定义输出给用户的内容</span></div><div class="line">sub vcl_deliver &#123;</div><div class="line">&#125;</div></pre></td></tr></table></figure>
<p><br></p>
<h4 id="使用varnishadm命令查看配置信息"><a href="#使用varnishadm命令查看配置信息" class="headerlink" title=" 使用varnishadm命令查看配置信息"></a><font size="4" color="#32CD99"> 使用varnishadm命令查看配置信息</font></h4><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div></pre></td><td class="code"><pre><div class="line">$ varnishadm -S /etc/varnish/secret -T 127.0.0.1:6082 <span class="comment"># 登录管理命令行</span></div><div class="line">varnish&gt; vcl.list                 <span class="comment"># 列出所有的配置</span></div><div class="line">varnish&gt; vcl.load <span class="built_in">test</span>1 default.vcl  <span class="comment"># 加载编译新配置，test1是配置名，default.vcl是配置文件</span></div><div class="line">varnish&gt; vcl.use <span class="built_in">test</span>1            <span class="comment"># 使用配置，需指定配置名，当前使用的配置以最后一次vcl.use为准</span></div><div class="line">varnish&gt; vcl.show <span class="built_in">test</span>1           <span class="comment"># 显示配置内容，需指定配置</span></div></pre></td></tr></table></figure>
<p><br></p>
<h4 id="配置样本"><a href="#配置样本" class="headerlink" title=" 配置样本 "></a><font size="4" color="#32CD99"> 配置样本 </font></h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div><div class="line">37</div><div class="line">38</div><div class="line">39</div><div class="line">40</div><div class="line">41</div><div class="line">42</div><div class="line">43</div><div class="line">44</div><div class="line">45</div><div class="line">46</div><div class="line">47</div><div class="line">48</div><div class="line">49</div><div class="line">50</div><div class="line">51</div><div class="line">52</div><div class="line">53</div><div class="line">54</div><div class="line">55</div><div class="line">56</div><div class="line">57</div><div class="line">58</div><div class="line">59</div><div class="line">60</div><div class="line">61</div><div class="line">62</div><div class="line">63</div><div class="line">64</div><div class="line">65</div><div class="line">66</div><div class="line">67</div><div class="line">68</div><div class="line">69</div><div class="line">70</div><div class="line">71</div><div class="line">72</div><div class="line">73</div><div class="line">74</div><div class="line">75</div><div class="line">76</div><div class="line">77</div><div class="line">78</div><div class="line">79</div><div class="line">80</div><div class="line">81</div><div class="line">82</div><div class="line">83</div><div class="line">84</div><div class="line">85</div><div class="line">86</div><div class="line">87</div><div class="line">88</div><div class="line">89</div><div class="line">90</div><div class="line">91</div><div class="line">92</div><div class="line">93</div><div class="line">94</div><div class="line">95</div><div class="line">96</div><div class="line">97</div><div class="line">98</div><div class="line">99</div><div class="line">100</div><div class="line">101</div><div class="line">102</div><div class="line">103</div><div class="line">104</div><div class="line">105</div><div class="line">106</div><div class="line">107</div><div class="line">108</div><div class="line">109</div><div class="line">110</div><div class="line">111</div><div class="line">112</div><div class="line">113</div><div class="line">114</div><div class="line">115</div></pre></td><td class="code"><pre><div class="line">#</div><div class="line"># This is an example VCL file for Varnish.</div><div class="line">#</div><div class="line"># It does not do anything by default, delegating control to the</div><div class="line"># builtin VCL. The builtin VCL is called when there is no explicit</div><div class="line"># return statement.</div><div class="line">#</div><div class="line"># See the VCL chapters in the Users Guide at https://www.varnish-cache.org/docs/</div><div class="line"># and http://varnish-cache.org/trac/wiki/VCLExamples for more examples.</div><div class="line"># Marker to tell the VCL compiler that this VCL has been adapted to the</div><div class="line"># new 4.0 format.</div><div class="line">vcl 4.0;</div><div class="line">import directors;</div><div class="line">probe backend_healthcheck &#123;                 # 创建健康监测</div><div class="line">    .url = /health.html;</div><div class="line">    .window = 5;</div><div class="line">    .threshold = 2;</div><div class="line">    .interval = 3s;</div><div class="line">&#125;</div><div class="line">backend web1 &#123;                              # 创建后端主机</div><div class="line">    .host = &quot;web1.maxie.com&quot;;</div><div class="line">    .port = &quot;80&quot;;</div><div class="line">    .probe = backend_healthcheck;</div><div class="line">&#125;</div><div class="line">backend web2 &#123;</div><div class="line">    .host = &quot;web2.maxie.com&quot;;</div><div class="line">    .port = &quot;80&quot;;</div><div class="line">    .probe = backend_healthcheck;</div><div class="line">&#125;</div><div class="line">backend img1 &#123;</div><div class="line">    .host = &quot;img1.maxie.com&quot;;</div><div class="line">    .port = &quot;80&quot;;</div><div class="line">    .probe = backend_healthcheck;</div><div class="line">&#125;</div><div class="line">backend img2 &#123;</div><div class="line">    .host = &quot;img2.maxie.com&quot;;</div><div class="line">    .port = &quot;80&quot;;</div><div class="line">    .probe = backend_healthcheck;</div><div class="line">&#125;</div><div class="line"></div><div class="line">vcl_init &#123;                                  # 创建后端主机组，即directors</div><div class="line">    new web_cluster = directors.random();</div><div class="line">    web_cluster.add_backend(web1);</div><div class="line">    web_cluster.add_backend(web2);</div><div class="line">    new img_cluster = directors.random();</div><div class="line">    img_cluster.add_backend(img1);</div><div class="line">    img_cluster.add_backend(img2);</div><div class="line">&#125;</div><div class="line"></div><div class="line">acl purgers &#123;                               # 定义可使用pruger方法的来源IP</div><div class="line">        &quot;127.0.0.1&quot;;</div><div class="line">        &quot;172.16.0.0&quot;/16;</div><div class="line">&#125;</div><div class="line"></div><div class="line">sub vcl_recv &#123;</div><div class="line">    if (req.request == &quot;GET&quot; &amp;&amp; req.http.cookie) &#123;      # 带cookie首部的GET请求也缓存</div><div class="line">        return(hash);</div><div class="line">&#125;</div><div class="line">    if (req.url ~ &quot;test.html&quot;) &#123;                        # test.html文件禁止缓存</div><div class="line">        return(pass);</div><div class="line">    &#125;</div><div class="line">    if (req.request == &quot;PURGE&quot;) &#123;                       # PURGE请求的处理</div><div class="line">        if (!client.ip ~ purgers) &#123;</div><div class="line">            return(synth(405,&quot;Method not allowed&quot;));</div><div class="line">        &#125;</div><div class="line">        return(hash);</div><div class="line">    &#125;</div><div class="line">    if (req.http.X-Forward-For) &#123;                       # 为发往后端主机的请求添加X-Forward-For首部</div><div class="line">        set req.http.X-Forward-For = req.http.X-Forward-For + &quot;,&quot; + client.ip;</div><div class="line">    &#125; else &#123;</div><div class="line">        set req.http.X-Forward-For = client.ip;</div><div class="line">    &#125;</div><div class="line">    if (req.http.host ~ &quot;(?i)^(www.)?maxie.com$&quot;) &#123;     # 根据不同的访问域名，分发至不同的后端主机组</div><div class="line">        set req.http.host = &quot;www.maxie.com&quot;;</div><div class="line">        set req.backend_hint = web_cluster.backend();</div><div class="line">      &#125; elsif (req.http.host ~ &quot;(?i)^images.maxie.com$&quot;) &#123;</div><div class="line">            set req.backend_hint = img_cluster.backend();</div><div class="line">      &#125;</div><div class="line">        return(hash);</div><div class="line">    &#125;</div><div class="line">sub vcl_hit &#123;                                           # PURGE请求的处理</div><div class="line">    if (req.request == &quot;PURGE&quot;) &#123;  </div><div class="line">        purge;</div><div class="line">        return(synth(200,&quot;Purged&quot;));</div><div class="line">    &#125;</div><div class="line">&#125;</div><div class="line">sub vcl_miss &#123;                                          # PURGE请求的处理</div><div class="line">    if (req.request == &quot;PURGE&quot;) &#123;</div><div class="line">        purge;</div><div class="line">        return(synth(404,&quot;Not in cache&quot;));</div><div class="line">    &#125;</div><div class="line">&#125;</div><div class="line">sub vcl_pass &#123;                                          # PURGE请求的处理</div><div class="line">    if (req.request == &quot;PURGE&quot;) &#123;</div><div class="line">        return(synth(502,&quot;PURGE on a passed object&quot;));</div><div class="line">    &#125;</div><div class="line">&#125;</div><div class="line">sub vcl_backend_response &#123;                              # 自定义缓存文件的缓存时长，即TTL值</div><div class="line">    if (req.url ~ &quot;\.(jpg|jpeg|gif|png)$&quot;) &#123;</div><div class="line">        set beresp.ttl = 7200s;</div><div class="line">    &#125;</div><div class="line">    if (req.url ~ &quot;\.(html|css|js)$&quot;) &#123;</div><div class="line">        set beresp.ttl = 1200s;</div><div class="line">    &#125;</div><div class="line">    if (beresp.http.Set-Cookie) &#123;                       # 定义带Set-Cookie首部的后端响应不缓存，直接返回给客户端</div><div class="line">        return(deliver);</div><div class="line">    &#125;</div><div class="line">&#125;</div><div class="line">sub vcl_deliver &#123;</div><div class="line">    if (obj.hits &gt; 0) &#123;                                 # 为响应添加X-Cache首部，显示缓存是否命中</div><div class="line">        set resp.http.X-Cache = &quot;HIT from &quot; + server.ip;</div><div class="line">    &#125; else &#123;</div><div class="line">        set resp.http.X-Cache = &quot;MISS&quot;;</div><div class="line">    &#125;</div><div class="line">&#125;</div></pre></td></tr></table></figure>
<hr>
<div class="note info"><h3 id="Varnish日志区域"><a href="#Varnish日志区域" class="headerlink" title="Varnish日志区域"></a>Varnish日志区域</h3></div>
<h4 id="varnishstat命令"><a href="#varnishstat命令" class="headerlink" title=" varnishstat命令 "></a><font size="3" color="#38B0DE"> varnishstat命令 </font></h4><p> Varnish Cache statistics 查看统计数据</p>
<p>命令选项： </p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line">-1                      显示一次的统计数据信息</div><div class="line">-1 -f FILED_NAME        指定只显示指定段的信息，可以查看多个段，用空格分割，再加 -f FILED_NAME 即可</div><div class="line">-l：可用于-f选项指定的字段名称列表；查看每个段的意义</div></pre></td></tr></table></figure>
<p>实例：</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line">$ varnishstat -1 -f MAIN.cache_hit -f MAIN.cache_miss</div><div class="line">MAIN.cache_hit             110         0.00 Cache hits</div><div class="line">MAIN.cache_miss             49         0.00 Cache misses</div></pre></td></tr></table></figure>
<p><br> </p>
<h4 id="varnishtop命令"><a href="#varnishtop命令" class="headerlink" title=" varnishtop命令 "></a><font size="3" color="#38B0DE"> varnishtop命令 </font></h4><p>Varnish log entry ranking 日志排序</p>
<p>命令选项：</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div></pre></td><td class="code"><pre><div class="line">-1                      仅显示一次日志(显示详细信息)</div><div class="line">-i taglist              可以同时使用多个-i选项，也可以一个选项跟上多个标签</div><div class="line">-I &lt;[taglist:]regex&gt;    正则表达式过滤日志</div><div class="line">-x taglist              排除列表(黑名单)</div><div class="line">-X  &lt;[taglist:]regex&gt;   排除列表 -- 基于正则表达式</div><div class="line">-a file                 追加到指定文件中</div><div class="line">-w filename             写到哪个文件中(覆盖)</div></pre></td></tr></table></figure>
<p><br> </p>
<h4 id="varnishncsa命令"><a href="#varnishncsa命令" class="headerlink" title="varnishncsa命令"></a><font size="3" color="#38B0DE">varnishncsa命令</font></h4><p>以NCSA的格式输出日志</p>
<p>使用方法：</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line">$ systemctl start varnishncsa.service</div><div class="line">$ tail /var/log/varnish/varnishncsa.log</div><div class="line">172.16.250.15 - - [27/Jun/2017:04:31:56 +0800] &quot;GET http://172.16.3.10/index.php?=PHPE9568F35-D428-11d2-A769-00AA001ACF42 HTTP/1.1&quot; 200 2146 &quot;http://172.16.3.10/index.php&quot; &quot;Mozilla/5.0 (Macintosh; Intel Mac OS X 10.12; rv:54.0) Gecko/20100101 Firefox/54.0&quot;</div></pre></td></tr></table></figure>
<hr>
<iframe frameborder="no" border="0" marginwidth="0" marginheight="0" width="330" height="86" src="//music.163.com/outchain/player?type=2&id=33913866&auto=0&height=66"></iframe>

<p>本文出自<a href="http://maxiecloud.com">Maxie’s Notes</a>博客，转载请务必保留此出处。</p>
<p><img src="https://ww1.sinaimg.cn/large/006tNbRwly1fdzc80odsuj30gn0ilq5m.jpg" alt=""></p>
]]></content>
    
    <summary type="html">
    
      &lt;p&gt;&lt;img src=&quot;https://ws4.sinaimg.cn/large/006tNc79ly1fgzgguy09lj30lf06y0tv.jpg&quot; alt=&quot;&quot;&gt;&lt;/p&gt;
&lt;blockquote class=&quot;blockquote-center&quot;&gt;Varnish是反向HTTP代理，也是HTTP加速器或者Web加速器。&lt;br&gt;Varnish不仅仅是缓存内容以加速器服务器的反向HTTP代理。根据实际情况，Varnish也可以用作：&lt;br&gt;&lt;br&gt;&lt;em&gt; Web应用程序防火墙 &lt;/em&gt;&lt;br&gt;&lt;em&gt; DDoS攻击防御器 &lt;/em&gt;&lt;br&gt;&lt;em&gt; 负载均衡器 &lt;/em&gt;&lt;br&gt;&lt;em&gt; HTTP路由器 &lt;/em&gt;&lt;br&gt;&lt;/blockquote&gt;

&lt;p&gt;&lt;code&gt;Varnish&lt;/code&gt;的优势：&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;Varnish的稳定性很高，与Squid相比，在运行在相同负荷的情况下，Squid服务器发生故障的几率要高于Varnish。&lt;br&gt;Varnish的访问速度更快，因为所有缓存数据都可以直接从内存读取，也可以从硬盘读取；比Squid更为灵活、&lt;br&gt;Varnish支持更多的并发连接。只需要调整thread_pools与thread_pool_max的值即可，不过要根据实际情况的CPU核心数以及服务器要被用来做什么而定。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;&lt;br&gt;&lt;/p&gt;
&lt;p&gt;&lt;code&gt;Varnish&lt;/code&gt;的劣势：&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;一旦Varnish遇到Crash或者重启进程，所有的缓存数据都会从内存中完全释放，此时所有的访问都不会被缓存命中，而请求都会被发送到后端服务器，在高并发的情况下，后端服务器很可能因此崩溃掉。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;&lt;br&gt;&lt;/p&gt;
&lt;p&gt;解决方案：&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;在访问量很大的情况下，我们可以使用Varnish的内存缓存方式，而且后端要配置多台Squid服务器。防止前端Varnish服务重启、服务器重启或者不可预知的误操作情况下，大量请求穿透Varnish，这样Squid可以充当第二层缓存。&lt;br&gt;也可以通过Keepalived+varnish+rsync+inotify达到高可用的状态，这样在主节点不繁忙的时候，将缓存的信息同步到另一台备用缓存服务器上。为了尽可能的利用资源，我们可以将两台varnish配置成”双主模式”&lt;/p&gt;
&lt;/blockquote&gt;
&lt;hr&gt;
    
    </summary>
    
      <category term="linux进阶" scheme="http://maxiecloud.com/categories/linux%E8%BF%9B%E9%98%B6/"/>
    
      <category term="Varnish" scheme="http://maxiecloud.com/categories/linux%E8%BF%9B%E9%98%B6/Varnish/"/>
    
    
      <category term="linux" scheme="http://maxiecloud.com/tags/linux/"/>
    
      <category term="varnish" scheme="http://maxiecloud.com/tags/varnish/"/>
    
      <category term="nginx" scheme="http://maxiecloud.com/tags/nginx/"/>
    
  </entry>
  
  <entry>
    <title>Keepalived+Nginx/LVS实现Web站点高可用</title>
    <link href="http://maxiecloud.com/2017/06/24/keepalived/"/>
    <id>http://maxiecloud.com/2017/06/24/keepalived/</id>
    <published>2017-06-24T08:14:44.000Z</published>
    <updated>2017-06-25T00:36:05.000Z</updated>
    
    <content type="html"><![CDATA[<p>当公司需要实现内部Web网站对外提供服务时，为了提高用户体验，要尽可能的保证Web站点的可用性。这时，我们就需要对Web系统做高可用(High Availability)，计划使用两台Nginx做HA，通过使用keepalived工具达到我们的目的。</p>
<p>但是解决办法不只有Nginx+Keepalived，也可以使用LVS+Keealived，不过在中小型以及不是特别大型的企业，是基本没有使用LVS做负载均衡的，这里我们只做简单的介绍。</p>
<p>在之前的章节，我们已经说过如何对Nginx配置反向代理以及负载均衡的配置，这里就不过多介绍了。</p>
<h3 id="1-Keepalived介绍"><a href="#1-Keepalived介绍" class="headerlink" title="1. Keepalived介绍"></a>1. Keepalived介绍</h3><p><code>Keepalived</code>是一个基于<code>vrrp</code>协议来实现的服务器高可用解决方案，可以利用其实现避免IP单点故障，类似的工具还有<code>heartbeat</code>、<code>corosync</code>。不过其不会单独出现，而是搭配着 LVS、Nginx、HAproxy，一起协同工作达到高可用的目的。</p>
<h4 id="1-1-VRRP协议"><a href="#1-1-VRRP协议" class="headerlink" title="1.1 VRRP协议"></a>1.1 VRRP协议</h4><p><code>VRRP</code>全称Vritual Router Redundancy Protocol，虚拟路由冗余协议。通过把几台提供路由功能的设备组成一个虚拟路由设备，使用一定的机制保证虚拟路由的高可用，从而达到保持业务的连续性与可靠性。</p>
<p>在这组成的一个虚拟路由器中，有<code>master</code>和<code>backup</code>之分。master是主节点，在一个虚拟路由器中，只能有一个master，但可以有多个backup；backup是备用节点，也就是当master挂掉之后，backup接手master节点的所有资源，当有多个backup节点时，根据其<code>priority</code>(优先级)的值的大小，来选择谁作为master的替代者。当backup节点的优先级值相同时，根据其IP地址的大小，来决定。</p>
<p><img src="https://ws2.sinaimg.cn/large/006tKfTcly1fgwe6875u7j305y06jt8n.jpg" alt=""></p>
<h4 id="1-2-VRRP工作逻辑"><a href="#1-2-VRRP工作逻辑" class="headerlink" title="1.2 VRRP工作逻辑"></a>1.2 VRRP工作逻辑</h4><p><img src="https://ws3.sinaimg.cn/large/006tKfTcly1fgwebjw84pj30l80jm75q.jpg" alt=""></p>
<hr>
<a id="more"></a>
<div class="note primary"><h3 id="2-配置前提"><a href="#2-配置前提" class="headerlink" title="2.配置前提"></a>2.配置前提</h3></div>
<h4 id="2-1-各节点时间必须同步"><a href="#2-1-各节点时间必须同步" class="headerlink" title="2.1 各节点时间必须同步"></a>2.1 各节点时间必须同步</h4><p>可以使用<code>ntp</code>、<code>chrony</code>等工具进行时间同步</p>
<p><strong>配置一台时间服务器</strong></p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div></pre></td><td class="code"><pre><div class="line">$ yum install -y chrony</div><div class="line">$ vim /etc/chrony.conf</div><div class="line">server 172.16.0.1 iburst        #设置互联网的时间服务器，这里我们使用的是一台可以连接互联网的服务器</div><div class="line">allow 192.168/16                #允许哪些网段/地址的机器通过我们本机来同步时间</div><div class="line">local stratum 10                #如果本机时间不准确，是否允许其他机器同步时间。如果注释掉，则为不允许</div><div class="line"></div><div class="line">$ systemctl start chronyd.service</div></pre></td></tr></table></figure>
<p>配置完成之后，其他节点安装<code>chrony</code>之后，只需在配置文件中添加一行 <code>server 192.168.1.10 iburst</code>即可。因为我们这台时间服务器对内的网卡是 <code>192.168.1.10/24</code></p>
<h4 id="2-2-确保iptables和selinux规则对我们放行"><a href="#2-2-确保iptables和selinux规则对我们放行" class="headerlink" title="2.2 确保iptables和selinux规则对我们放行"></a>2.2 确保iptables和selinux规则对我们放行</h4><p>实验环境下，我们直接将防火墙规则清空，关闭selinux</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line">$ iptables -F</div><div class="line">$ systemctl stop firewalld.service</div><div class="line">$ setenforce 0</div></pre></td></tr></table></figure>
<h4 id="2-3-查看网卡是否支持-MULTICAST-多播通信"><a href="#2-3-查看网卡是否支持-MULTICAST-多播通信" class="headerlink" title="2.3 查看网卡是否支持 MULTICAST(多播通信)"></a>2.3 查看网卡是否支持 MULTICAST(多播通信)</h4><p>在vrrp协议中我们要将我们虚拟路由器中各节点的优先级进行广播，这样在我们故障时，其他节点发现在多播域内自己的优先级最高，可以实现故障切换。</p>
<p>多播地址(组播)：<code>224.0.0.0 -- 239.255.255.255</code></p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div></pre></td><td class="code"><pre><div class="line">查看是否支持多播</div><div class="line">$ ifconfig | grep MULTICAST</div><div class="line"></div><div class="line">开启多播功能</div><div class="line">$ ip link set multicast on dev eth0</div></pre></td></tr></table></figure>
<hr>
<div class="note info"><h3 id="3-配置Keepalived-Nginx"><a href="#3-配置Keepalived-Nginx" class="headerlink" title="3.配置Keepalived+Nginx"></a>3.配置Keepalived+Nginx</h3></div>
<h4 id="3-1-拓扑结构"><a href="#3-1-拓扑结构" class="headerlink" title="3.1 拓扑结构"></a>3.1 拓扑结构</h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div></pre></td><td class="code"><pre><div class="line">                   +-------------+</div><div class="line">                   |    ROUTER   |</div><div class="line">                   +-------------+</div><div class="line">                          |</div><div class="line">                          +</div><div class="line">    MASTER            keep|alived         BACKUP</div><div class="line">  172.16.3.10       172.16.3.100       172.16.3.40</div><div class="line">+-------------+    +-------------+    +-------------+</div><div class="line">|   nginx01   |----|  virtualIP  |----|   nginx02   |</div><div class="line">+-------------+    +-------------+    +-------------+</div><div class="line">  192.168.1.10            |            192.168.1.20</div><div class="line">           +--------------+--------------+</div><div class="line">           |                             |</div><div class="line">    +-------------+               +-------------+</div><div class="line">    |    web01    |               |    web02    |</div><div class="line">    +-------------+               +-------------+</div></pre></td></tr></table></figure>
<p><img src="https://ws1.sinaimg.cn/large/006tKfTcly1fgwey5f2q2j30no0zxjsq.jpg" alt=""></p>
<h4 id="3-2-安装Keepalived"><a href="#3-2-安装Keepalived" class="headerlink" title="3.2 安装Keepalived"></a>3.2 安装Keepalived</h4><p>本机环境是<code>CentOS 7.2-1511 x86_64</code></p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line">$ yum install -y keepalived</div><div class="line">$ keepalived -v</div><div class="line">Keepalived v1.2.13 (11/20,2015)</div></pre></td></tr></table></figure>
<h4 id="3-3-配置Nginx监控脚本"><a href="#3-3-配置Nginx监控脚本" class="headerlink" title="3.3 配置Nginx监控脚本"></a>3.3 配置Nginx监控脚本</h4><p>Keepalvied提供可以调用外部脚本来达到对资源进行监控，这里我们顶一个对<code>Nginx</code>进程的监控脚本。<br>该脚本检测Nginx的运行状态，</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div><div class="line">37</div><div class="line">38</div><div class="line">39</div></pre></td><td class="code"><pre><div class="line">! Configuration File for keepalived</div><div class="line"></div><div class="line">global_defs &#123;</div><div class="line">   notification_email &#123;</div><div class="line">     root@localhost</div><div class="line">   &#125;</div><div class="line">   notification_email_from KA@localhost</div><div class="line">   smtp_server 127.0.0.1</div><div class="line">   smtp_connect_timeout 30</div><div class="line">   router_id vs1</div><div class="line">   vrrp_mcast_group4 224.16.3.100</div><div class="line">&#125;</div><div class="line"></div><div class="line">vrrp_script chk_ngx &#123;</div><div class="line">    script &quot;killall -0 nginx &amp;&amp; exit 0 || exit 1&quot;</div><div class="line">    interval 4</div><div class="line">    weight -10</div><div class="line">    fall 4</div><div class="line">    rise 4</div><div class="line">&#125;</div><div class="line"></div><div class="line">vrrp_instance VI_1 &#123;</div><div class="line">    state MASTER</div><div class="line">    interface eno16777736</div><div class="line">    virtual_router_id 51</div><div class="line">    priority 100</div><div class="line">    advert_int 2</div><div class="line">    authentication &#123;</div><div class="line">        auth_type PASS</div><div class="line">        auth_pass maxie95</div><div class="line">    &#125;</div><div class="line">    virtual_ipaddress &#123;</div><div class="line">	       172.16.3.100/16 dev eno16777736 label eno16777736:0</div><div class="line">    &#125;</div><div class="line"></div><div class="line">    track_script &#123;</div><div class="line">        chk_ngx</div><div class="line">    &#125;</div><div class="line">&#125;</div></pre></td></tr></table></figure>
<p>在其他备用BACKUP主机上，只需要将：<br><code>route_id vs1</code> &gt;&gt; <code>route_id vsN</code>    只需要修改<code>vs</code>后的数字为backup的机器编号即可<br><code>state MASTER</code> &gt;&gt; <code>state BACKUP</code>    在这之前我们说过，Master只能有一个，所以其他BAKCUP都要修改这里<br><code>priority 100</code> &gt;&gt; <code>priority 90</code>     其他BACKUP节点的优先级一定要比Master节点小</p>
<h4 id="3-4-配置选项说明"><a href="#3-4-配置选项说明" class="headerlink" title="3.4 配置选项说明"></a>3.4 配置选项说明</h4><p><strong>global_defs</strong>：全局配置段</p>
<table>
<thead>
<tr>
<th>选项</th>
<th>说明</th>
</tr>
</thead>
<tbody>
<tr>
<td>notification_email</td>
<td>通知邮件配置块</td>
</tr>
<tr>
<td>root@localhost</td>
<td>通知邮件收件人</td>
</tr>
<tr>
<td>notification_email_from</td>
<td>通知邮件发件人</td>
</tr>
<tr>
<td>smtp_server</td>
<td>邮件服务器地址</td>
</tr>
<tr>
<td>smtp_connect_timeout</td>
<td>邮件服务器连接超时时长</td>
</tr>
<tr>
<td>router_id</td>
<td>机器表示，通常设置为本机的hostname</td>
</tr>
<tr>
<td>vrrp_mcast_group4</td>
<td>vrrp的多播地址(ipv4)</td>
</tr>
</tbody>
</table>
<p><br></p>
<p><strong>vrrp_instance</strong>：vrrp实例配置段</p>
<table>
<thead>
<tr>
<th>选项</th>
<th>说明</th>
</tr>
</thead>
<tbody>
<tr>
<td>state</td>
<td>指定vrrp_instance的初始状态。但如果master的优先级比某个backup还低，那么在通告时，那台backup就会抢占master</td>
</tr>
<tr>
<td>interface</td>
<td>实例绑定的网卡。必须是本机已有的网卡</td>
</tr>
<tr>
<td>virtual_router_id</td>
<td>设置虚拟路由器标识(范围0-255)。只有相同的标识，才能实现在多播域内通告优先级以及其他信息</td>
</tr>
<tr>
<td>priority</td>
<td>设置本机节点的优先级，优先级最高的为真正的MASTER</td>
</tr>
<tr>
<td>advert_int</td>
<td>每隔多长时间通告并检查一次，默认为1秒</td>
</tr>
<tr>
<td>authentication</td>
<td>定义认证方式和密码。MASTER/BACKUP必须一样</td>
</tr>
<tr>
<td>virtual_ipaddress</td>
<td>设置VIP地址，也就是虚拟IP地址。可以设置多个VIP；只有当节点为MASTER时，此IP才会生效</td>
</tr>
<tr>
<td>track_script</td>
<td>调用自定义的脚本，即在vrrp_scrpit块指定的名字。</td>
</tr>
</tbody>
</table>
<p><br></p>
<p><strong>vrrp_script</strong>：通知keepalived在什么情况下切换主备节点。可以有多个<code>vrrp_script</code></p>
<table>
<thead>
<tr>
<th>script</th>
<th>自定义的脚本。可以是脚本文件的路径，也可以是一行命令；</th>
</tr>
</thead>
<tbody>
<tr>
<td>interval 4</td>
<td>每4秒检测一次</td>
</tr>
<tr>
<td>weight -10</td>
<td>检测失败(脚本返回值为非0任意数字)时，优先级减10</td>
</tr>
<tr>
<td>fall 3</td>
<td>连续检测2次失败才算真正的失败。才会执行上面的weight -10，减去优先级</td>
</tr>
<tr>
<td>rise 3</td>
<td>检测3次成功才算成功，不修改优先级</td>
</tr>
</tbody>
</table>
<ul>
<li>只有当<code>script</code>的返回状态结果为任意非<code>0</code>数字时，才会执行降权操作。</li>
<li><p>当<code>script</code>正常执行时，也就是返回值为0时，不做任何操作。</p>
</li>
<li><p>脚本示例：可以在<code>script</code>中调用，直接引用脚本路径即可</p>
</li>
</ul>
<p>该脚本检测ngnix的运行状态，并在nginx进程不存在时尝试重新启动ngnix，如果启动失败则停止keepalived，准备让其它机器接管</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div></pre></td><td class="code"><pre><div class="line">#!/bin/bash</div><div class="line">counter=$(ps -C nginx --no-heading|wc -l)</div><div class="line">if [ &quot;$&#123;counter&#125;&quot; = &quot;0&quot; ]; then</div><div class="line">    /usr/local/bin/nginx</div><div class="line">    sleep 2</div><div class="line">    counter=$(ps -C nginx --no-heading|wc -l)</div><div class="line">    if [ &quot;$&#123;counter&#125;&quot; = &quot;0&quot; ]; then</div><div class="line">        /etc/init.d/keepalived stop</div><div class="line">    fi</div><div class="line">fi</div></pre></td></tr></table></figure>
<p><strong>notify</strong>：自定义通知脚本</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div></pre></td><td class="code"><pre><div class="line">notify_master &lt;STRING&gt;|&lt;QUOTED-STRING&gt;          当前节点成为MASTER时触发的脚本</div><div class="line">notify_backup &lt;STRING&gt;|&lt;QUOTED-STRING&gt;          当前节点成为BACKUP时触发的脚本</div><div class="line">notify_fault  &lt;STRING&gt;|&lt;QUOTED-STRING&gt;          当前节点转为FAULT(失败)状态时触发的脚本</div><div class="line"></div><div class="line">notify &lt;STRING&gt;|&lt;QUOTED-STRING&gt;                 通用格式的通知触发机制，一个脚本可完成以上三种状态的转换时的通知</div></pre></td></tr></table></figure>
<ul>
<li>通知脚本示例：</li>
</ul>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div></pre></td><td class="code"><pre><div class="line">$ vim /etc/keepalived/notify.sh</div><div class="line">#!/bin/bash</div><div class="line">#</div><div class="line">contact=&quot;root@localhost&quot;</div><div class="line"></div><div class="line">notify() &#123;</div><div class="line">	local mailsubject=&quot;$(hostname) to be $1, VIP is folating&quot;</div><div class="line">	local mailbody=&quot;$(date + &apos;$F $T&apos;): vrrp transition, $(hostname) changed to be $1&quot;</div><div class="line">	echo &quot;$mailbody&quot; | mail -s &quot;$mailsubject&quot; $contact</div><div class="line">&#125;</div><div class="line"></div><div class="line">case $1 in</div><div class="line">master)</div><div class="line">	systemctl start nginx</div><div class="line">	notify master</div><div class="line">	;;</div><div class="line">backup)</div><div class="line">	systemctl start nginx</div><div class="line">	notify backup</div><div class="line">	;;</div><div class="line">fault)</div><div class="line">	notify fault</div><div class="line">	;;</div><div class="line">*)</div><div class="line">	echo &quot;Usage: $(basename $0) &#123;master|backup|fault&#125;&quot;</div><div class="line">	exit 1</div><div class="line">	;;</div><div class="line">esac</div></pre></td></tr></table></figure>
<p><strong>抢占/非抢占模式</strong>：</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line">nopreempt               定义工作模式为非抢占模式</div><div class="line">preempt_delay 300       抢占式模式下，节点上线后触发新选举操作的延迟时长为300秒</div></pre></td></tr></table></figure>
<hr>
<div class="note success"><h3 id="4-测试Keepalived-Nginx的效果"><a href="#4-测试Keepalived-Nginx的效果" class="headerlink" title="4.测试Keepalived+Nginx的效果"></a>4.测试Keepalived+Nginx的效果</h3></div>
<h4 id="4-1-测试keepalived的主备切换功能"><a href="#4-1-测试keepalived的主备切换功能" class="headerlink" title="4.1 测试keepalived的主备切换功能"></a>4.1 测试keepalived的主备切换功能</h4><ul>
<li>在主备都正常启动keepalived时，停掉MASTER节点的keepalived服务</li>
</ul>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div></pre></td><td class="code"><pre><div class="line">MASTER:</div><div class="line">$ systemctl stop keepalived</div><div class="line"></div><div class="line">BACKUP:</div><div class="line">$ systemctl status keepalived</div></pre></td></tr></table></figure>
<p><img src="https://ws3.sinaimg.cn/large/006tKfTcly1fgwin8kmirj311s0cbkb5.jpg" alt=""></p>
<p>这时，VIP地址漂移到BACKUP主机上。</p>
<ul>
<li>原MASTER节点再启动keepalived服务，抢回VIP地址</li>
</ul>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line">MASTER:</div><div class="line">$ systemctl start keepalived</div><div class="line">$ systemctl status keepalived</div></pre></td></tr></table></figure>
<p><img src="https://ws3.sinaimg.cn/large/006tKfTcly1fgwitjzx2lj31kw0ig4qq.jpg" alt=""></p>
<h4 id="4-2-通过tcpdump查看发送通告信息"><a href="#4-2-通过tcpdump查看发送通告信息" class="headerlink" title="4.2 通过tcpdump查看发送通告信息"></a>4.2 通过tcpdump查看发送通告信息</h4><p>执行上面的实验，观察<code>tcpdump</code>命令结果输出的信息的变化：</p>
<p><img src="https://ws1.sinaimg.cn/large/006tKfTcly1fgwiymz96jg30qk0fc4r6.gif" alt=""></p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div></pre></td><td class="code"><pre><div class="line">[root@vs1 ~]# tcpdump -i eno16777736 -nn host 224.16.3.100</div><div class="line">tcpdump: verbose output suppressed, use -v or -vv for full protocol decode</div><div class="line">listening on eno16777736, link-type EN10MB (Ethernet), capture size 65535 bytes</div><div class="line">17:40:24.749943 IP 172.16.3.40 &gt; 224.16.3.100: VRRPv2, Advertisement, vrid 51, prio 98, authtype simple, intvl 2s, length 20</div><div class="line">17:40:33.421434 IP 172.16.3.40 &gt; 224.16.3.100: VRRPv2, Advertisement, vrid 51, prio 98, authtype simple, intvl 2s, length 20</div><div class="line">17:40:35.590278 IP 172.16.3.10 &gt; 224.16.3.100: VRRPv2, Advertisement, vrid 51, prio 100, authtype simple, intvl 2s, length 20</div><div class="line">17:40:35.590697 IP 172.16.3.40 &gt; 224.16.3.100: VRRPv2, Advertisement, vrid 51, prio 98, authtype simple, intvl 2s, length 20</div><div class="line">17:40:35.591009 IP 172.16.3.10 &gt; 224.16.3.100: VRRPv2, Advertisement, vrid 51, prio 100, authtype simple, intvl 2s, length 20</div><div class="line">17:40:37.595546 IP 172.16.3.10 &gt; 224.16.3.100: VRRPv2, Advertisement, vrid 51, prio 100, authtype simple, intvl 2s, length 20</div></pre></td></tr></table></figure>
<hr>
<div class="note warning"><h3 id="5-配置双主模式"><a href="#5-配置双主模式" class="headerlink" title="5.配置双主模式"></a>5.配置双主模式</h3></div>
<h4 id="5-1-添加配置"><a href="#5-1-添加配置" class="headerlink" title="5.1 添加配置"></a>5.1 添加配置</h4><p>只需要在原有的配置上添加1个VIP地址以及vrrp_intance的配置即可</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div></pre></td><td class="code"><pre><div class="line">$ vim /etc/keepalived/keepalived.conf</div><div class="line">添加一个vrrp_intance配置：</div><div class="line"></div><div class="line">vrrp_instance VI_2 &#123;</div><div class="line">    state BACKUP</div><div class="line">    interface eno16777736</div><div class="line">    virtual_router_id 61</div><div class="line">    priority 98</div><div class="line">    advert_int 2</div><div class="line">    authentication &#123;</div><div class="line">        auth_type PASS</div><div class="line">        auth_pass maxie19</div><div class="line">    &#125;</div><div class="line">    virtual_ipaddress &#123;</div><div class="line">        172.16.3.200/16 dev eno16777736 label eno16777736:1</div><div class="line">    &#125;</div><div class="line"></div><div class="line">    track_script &#123;</div><div class="line">        chk_down</div><div class="line">        chk_ngx</div><div class="line">    &#125;</div><div class="line"></div><div class="line">    notify_master &quot;/etc/keepalived/notify.sh master&quot;</div><div class="line">    notify_backup &quot;/etc/keepalived/notify.sh backup&quot;</div><div class="line">    notify_fault &quot;/etc/keepalived/notify.sh fault&quot;</div><div class="line">&#125;</div><div class="line"></div><div class="line">$ systemctl restart keepalived</div></pre></td></tr></table></figure>
<p><strong>注意：</strong>记得也要在另一台”MASTER”节点上配置，并修改 <code>state</code>、<code>priority</code></p>
<h4 id="5-2-测试"><a href="#5-2-测试" class="headerlink" title="5.2 测试"></a>5.2 测试</h4><p><img src="https://ws4.sinaimg.cn/large/006tKfTcly1fgwj7o76hwg30qk0fcu10.gif" alt=""></p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div></pre></td><td class="code"><pre><div class="line"># maxie @ maxie in ~ [15:02:55]</div><div class="line">$ curl http://172.16.3.200</div><div class="line">RS1 Node1 192.168.1.30</div><div class="line"></div><div class="line"># maxie @ maxie in ~ [15:13:06]</div><div class="line">$ curl http://172.16.3.200</div><div class="line">RS2 Node2 192.168.1.40</div><div class="line"></div><div class="line"># maxie @ maxie in ~ [15:13:07]</div><div class="line">$ curl http://172.16.3.100</div><div class="line">RS2 Node2 192.168.1.40</div><div class="line"></div><div class="line"># maxie @ maxie in ~ [15:13:08]</div><div class="line">$ curl http://172.16.3.100</div><div class="line">RS1 Node1 192.168.1.30</div></pre></td></tr></table></figure>
<hr>
<p><strong>参考：</strong></p>
<ul>
<li><a href="http://debugo.com/keepalived-nginx/" target="_blank" rel="external">使用Keepalived实现Nginx高可用性</a></li>
<li><a href="http://zhaoyuqiang.blog.51cto.com/6328846/1166840" target="_blank" rel="external">虚拟路由器冗余协议【原理篇】VRRP详解</a></li>
<li><a href="http://freeloda.blog.51cto.com/2033581/1280962" target="_blank" rel="external">Linux 高可用（HA）集群之keepalived详解</a></li>
<li><a href="enterprise.huawei.com/ilink/cnenterprise/download/HW_201057">VRRP 技术白皮书 - Huawei</a></li>
</ul>
<hr>
<iframe frameborder="no" border="0" marginwidth="0" marginheight="0" width="330" height="86" src="//music.163.com/outchain/player?type=2&id=29588431&auto=0&height=66"></iframe>

<p>本文出自<a href="http://maxiecloud.com">Maxie’s Notes</a>博客，转载请务必保留此出处。</p>
<p><img src="https://ww1.sinaimg.cn/large/006tNbRwly1fdzc80odsuj30gn0ilq5m.jpg" alt=""></p>
]]></content>
    
    <summary type="html">
    
      &lt;p&gt;当公司需要实现内部Web网站对外提供服务时，为了提高用户体验，要尽可能的保证Web站点的可用性。这时，我们就需要对Web系统做高可用(High Availability)，计划使用两台Nginx做HA，通过使用keepalived工具达到我们的目的。&lt;/p&gt;
&lt;p&gt;但是解决办法不只有Nginx+Keepalived，也可以使用LVS+Keealived，不过在中小型以及不是特别大型的企业，是基本没有使用LVS做负载均衡的，这里我们只做简单的介绍。&lt;/p&gt;
&lt;p&gt;在之前的章节，我们已经说过如何对Nginx配置反向代理以及负载均衡的配置，这里就不过多介绍了。&lt;/p&gt;
&lt;h3 id=&quot;1-Keepalived介绍&quot;&gt;&lt;a href=&quot;#1-Keepalived介绍&quot; class=&quot;headerlink&quot; title=&quot;1. Keepalived介绍&quot;&gt;&lt;/a&gt;1. Keepalived介绍&lt;/h3&gt;&lt;p&gt;&lt;code&gt;Keepalived&lt;/code&gt;是一个基于&lt;code&gt;vrrp&lt;/code&gt;协议来实现的服务器高可用解决方案，可以利用其实现避免IP单点故障，类似的工具还有&lt;code&gt;heartbeat&lt;/code&gt;、&lt;code&gt;corosync&lt;/code&gt;。不过其不会单独出现，而是搭配着 LVS、Nginx、HAproxy，一起协同工作达到高可用的目的。&lt;/p&gt;
&lt;h4 id=&quot;1-1-VRRP协议&quot;&gt;&lt;a href=&quot;#1-1-VRRP协议&quot; class=&quot;headerlink&quot; title=&quot;1.1 VRRP协议&quot;&gt;&lt;/a&gt;1.1 VRRP协议&lt;/h4&gt;&lt;p&gt;&lt;code&gt;VRRP&lt;/code&gt;全称Vritual Router Redundancy Protocol，虚拟路由冗余协议。通过把几台提供路由功能的设备组成一个虚拟路由设备，使用一定的机制保证虚拟路由的高可用，从而达到保持业务的连续性与可靠性。&lt;/p&gt;
&lt;p&gt;在这组成的一个虚拟路由器中，有&lt;code&gt;master&lt;/code&gt;和&lt;code&gt;backup&lt;/code&gt;之分。master是主节点，在一个虚拟路由器中，只能有一个master，但可以有多个backup；backup是备用节点，也就是当master挂掉之后，backup接手master节点的所有资源，当有多个backup节点时，根据其&lt;code&gt;priority&lt;/code&gt;(优先级)的值的大小，来选择谁作为master的替代者。当backup节点的优先级值相同时，根据其IP地址的大小，来决定。&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;https://ws2.sinaimg.cn/large/006tKfTcly1fgwe6875u7j305y06jt8n.jpg&quot; alt=&quot;&quot;&gt;&lt;/p&gt;
&lt;h4 id=&quot;1-2-VRRP工作逻辑&quot;&gt;&lt;a href=&quot;#1-2-VRRP工作逻辑&quot; class=&quot;headerlink&quot; title=&quot;1.2 VRRP工作逻辑&quot;&gt;&lt;/a&gt;1.2 VRRP工作逻辑&lt;/h4&gt;&lt;p&gt;&lt;img src=&quot;https://ws3.sinaimg.cn/large/006tKfTcly1fgwebjw84pj30l80jm75q.jpg&quot; alt=&quot;&quot;&gt;&lt;/p&gt;
&lt;hr&gt;
    
    </summary>
    
      <category term="Nginx" scheme="http://maxiecloud.com/categories/Nginx/"/>
    
      <category term="LVS" scheme="http://maxiecloud.com/categories/Nginx/LVS/"/>
    
      <category term="linux进阶" scheme="http://maxiecloud.com/categories/Nginx/LVS/linux%E8%BF%9B%E9%98%B6/"/>
    
    
      <category term="nginx" scheme="http://maxiecloud.com/tags/nginx/"/>
    
      <category term="keepalived" scheme="http://maxiecloud.com/tags/keepalived/"/>
    
      <category term="lvs" scheme="http://maxiecloud.com/tags/lvs/"/>
    
      <category term="HA" scheme="http://maxiecloud.com/tags/HA/"/>
    
  </entry>
  
  <entry>
    <title>LVS从入门到进阶</title>
    <link href="http://maxiecloud.com/2017/06/22/lvs/"/>
    <id>http://maxiecloud.com/2017/06/22/lvs/</id>
    <published>2017-06-22T06:05:27.000Z</published>
    <updated>2017-06-22T10:11:34.000Z</updated>
    
    <content type="html"><![CDATA[<p><img src="https://ws4.sinaimg.cn/large/006tNc79ly1fgtydyz1tbj30xc0go4qp.jpg" alt=""></p>
<blockquote class="blockquote-center">一组服务器通过高速的局域网或者地理分布的广域网相互连接，在它们的前端有一个负载调度器（Load Balancer）。<br>负载调度器能无缝地将网络请求调度到真实服务器上，从而使得服务器集群的结构对客户是透明的，<br>客户访问集群系统提供的网络服务就像访问一台高性能、高可用的服务器一样。<br><br>客户程序不受服务器集群的影响不需作任何修改。<br>系统的伸缩性通过在服务机群中透明地加入和删除一个节点来达到，通过检测节点或服务进程故障和正确地重置系统达到高可用性。<br>由于我们的负载调度技术是在Linux内核中实现的，我们称之为Linux虚拟服务器（Linux Virtual Server）。<br></blockquote>

<p>在1998年5月，章博士成立了Linux Virtual Server的自由软件项目，进行Linux服务器集群的开发工作。同时，Linux Virtual Server项目是国内最早出现的自由软件项目之一。</p>
<p><code>Linux Virtual Server项目的目标</code> ：使用集群技术和Linux操作系统实现一个高性能、高可用的服务器，它具有很好的可伸缩性（Scalability）、可靠性（Reliability）和可管理性（Manageability）。</p>
<hr>
<a id="more"></a>
<font size="4" color="#FF7F00">LVS术语：</font>


<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div></pre></td><td class="code"><pre><div class="line">VS：Virtual Server</div><div class="line">RS：Real Server</div><div class="line"></div><div class="line">CIP：Client IP</div><div class="line">VIP：Virtual Server IP</div><div class="line">RIP：Real Server IP</div><div class="line">DIP：Director IP</div><div class="line"></div><div class="line">CIP &lt;--&gt; VIP == DIP &lt;--&gt; RIP</div></pre></td></tr></table></figure>
<p><strong>注意：</strong>这里的RIP，可不是<code>R.I.P</code> –&gt; 安息吧的意思哦~</p>
<hr>
<div class="note primary"><h3 id="IP虚拟机服务器软件IPVS"><a href="#IP虚拟机服务器软件IPVS" class="headerlink" title="IP虚拟机服务器软件IPVS"></a>IP虚拟机服务器软件IPVS</h3></div>
<p>在调度器的实现技术中，IP负载均衡技术是效率最高的。</p>
<p>其中关于IP负载均衡技术有三种最关键的技术：<code>VS/NAT</code>，<code>VS/DR</code>，<code>VS/TUN</code></p>
<hr>
<h4 id="VS-NAT详解"><a href="#VS-NAT详解" class="headerlink" title=" VS/NAT详解 "></a><font color="#D19275"> VS/NAT详解 </font></h4><p><strong>概念：</strong>通过网络地址转化的功能，调度器(Director)重写请求报文的目标地址，根据预设的<code>调度算法</code>，将请求分派给后端的真实服务器(Real Server)；真实服务器的响应报文通过调度器时，报文的源地址又被重写，再通过调度器返回给用户，完成整个负载调度过程。<br>其中<code>Real Server</code>在发送响应报文之前，需要将<code>Director</code>的IP地址作为自己的网关，否则可能会出现能接收请求报文，而无法返回响应报文；</p>
<p><strong>拓扑图：</strong></p>
<p><img src="https://ws4.sinaimg.cn/large/006tNc79ly1fgtzl2ljr4j30xd0irdhl.jpg" alt=""></p>
<p><strong>总结：</strong></p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div></pre></td><td class="code"><pre><div class="line">1、RIP和DIP必须在同一个网段内，且应该使用私网IP地址；RS的网关要指向DIP --&gt; route add default gw DIP</div><div class="line">2、请求报文和响应报文都必须经由调度器(DIRECTOR)转发；这样会让调度器的负载大大增加，成为系统瓶颈</div><div class="line">3、支持端口映射，可修改请求报文的目标端口</div><div class="line">4、VS必须是Linux系统，RS可以是任意系统</div></pre></td></tr></table></figure>
<p><br></p>
<h4 id="配置VS-NAT"><a href="#配置VS-NAT" class="headerlink" title="配置VS/NAT"></a><font size="4" color="#32CD99">配置VS/NAT</font></h4><p><strong>准备工作</strong></p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div></pre></td><td class="code"><pre><div class="line">3台虚拟机、同步时间</div><div class="line"></div><div class="line">VS主机：</div><div class="line">VIP 172.16.3.100/16</div><div class="line">DIP 192.168.1.254/24</div><div class="line"></div><div class="line">RS1主机：</div><div class="line">RIP 192.168.1.10/24 gateway 192.168.1.254</div><div class="line"></div><div class="line">RS2主机：</div><div class="line">RIP 192.168.1.20/24 gateway 192.168.1.254</div><div class="line"></div><div class="line">客户端主机：</div><div class="line">CIP 172.16.1.11/16</div></pre></td></tr></table></figure>
<p>1、VS主机操作如下：</p>
<p>[1] 安装ipvsadm管理工具</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">$ yum install ipvsadm</div></pre></td></tr></table></figure>
<p>[2] 开启核心转发功能(永久生效)</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line">$ vim /etc/sysctl.conf</div><div class="line">net.ipv4.ip_forward = 1</div><div class="line">$ sysctl -p</div></pre></td></tr></table></figure>
<p><br></p>
<p>2、RS两台主机操作如下：(除网页内容不同，其余操作均相同)</p>
<p>[1] 安装nginx</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">$ yum install nginx</div></pre></td></tr></table></figure>
<p>[2] 添加测试页内容</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div></pre></td><td class="code"><pre><div class="line">RS1：</div><div class="line">$ echo &quot;RS1 192.168.1.10&quot; &gt; /usr/share/nginx/html/index.html</div><div class="line">$ systemctl start nginx</div><div class="line"></div><div class="line">RS2：</div><div class="line">$ echo &quot;RS2 192.168.1.20&quot; &gt; /usr/share/nginx/html/index.html</div><div class="line">$ systemctl start nginx</div></pre></td></tr></table></figure>
<p>[3] 通过VS主机对测试页进行测试检查</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div></pre></td><td class="code"><pre><div class="line">$ curl http://192.168.1.10</div><div class="line">RS1 192.168.1.10</div><div class="line"></div><div class="line">$ curl http://192.168.1.20</div><div class="line">RS2 192.168.1.20</div></pre></td></tr></table></figure>
<p><br></p>
<p>3、VS主机上添加负载均衡集群规则</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div></pre></td><td class="code"><pre><div class="line">$ ipvsadm -A -t 172.16.3.100:80 -s rr      #这里我们使用round robin调度算法，之后我们会对调度算法进行详解</div><div class="line">$ ipvsadm -a -t 172.16.3.100:80 -r 192.168.1.10 -m  #这里-m表示我们使用的负载均衡技术是VS/NAT类型的</div><div class="line">$ ipvsadm -a -t 172.16.3.100:80 -r 192.168.1.20 -m</div><div class="line">$ ipvsadm -ln </div><div class="line">IP Virtual Server version 1.2.1 (size=4096)</div><div class="line">Prot LocalAddress:Port Scheduler Flags</div><div class="line">  -&gt; RemoteAddress:Port           Forward Weight ActiveConn InActConn</div><div class="line">TCP  172.16.3.100:80 rr </div><div class="line">  -&gt; 172.16.3.20:80               Masq   1      0          0</div><div class="line">  -&gt; 172.16.3.30:80               Masq   1      2          0</div></pre></td></tr></table></figure>
<p><br></p>
<p>4、客户端进行测试</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div></pre></td><td class="code"><pre><div class="line">$ for i in &#123;1..10&#125;; do curl http://172.16.3.100/index.html ;done</div><div class="line">RS1 192.168.1.10</div><div class="line">RS2 192.168.1.20</div><div class="line">RS1 192.168.1.10</div><div class="line">RS2 192.168.1.20</div><div class="line">RS1 192.168.1.10</div><div class="line">RS2 192.168.1.20</div><div class="line">RS1 192.168.1.10</div><div class="line">RS2 192.168.1.20</div><div class="line">RS1 192.168.1.10</div><div class="line">RS2 192.168.1.20</div></pre></td></tr></table></figure>
<p><strong>测试成功，VS/NAT配置完成</strong></p>
<hr>
<h4 id="VS-DR详解"><a href="#VS-DR详解" class="headerlink" title=" VS/DR详解 "></a><font color="#D19275"> VS/DR详解 </font></h4><p><strong>概念：</strong>VS/DR通过改写请求报文的MAC地址，将请求发送到真实服务器，而真实服务器直接响应返回给客户端。这样大大提高了集群系统的伸缩性，这种方法要求调度器和真实服务器都有一块网卡连在同一物理网段上。</p>
<p><strong>拓扑图：</strong></p>
<p><img src="https://ws4.sinaimg.cn/large/006tNc79ly1fgu1rnjufuj30z30nogne.jpg" alt=""></p>
<p><strong>总结：</strong></p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div></pre></td><td class="code"><pre><div class="line">1、确保前端路由器将目标IP为VIP的请求报文发往Director</div><div class="line">    (a) 在前端网关做静态绑定；</div><div class="line">    (b) 在RS上使用arptables；</div><div class="line">    (c) 在RS上修改内核参数以限制arp通告及应答级别；</div><div class="line">    	arp_announce</div><div class="line">    	arp_ignore</div><div class="line">2、 RS的RIP可以使用私网地址，也可以是公网地址；RIP与DIP在同一IP网络；RIP的网关不能指向DIP，以确保响应报文不会经由Director</div><div class="line">3、RS跟Director要在同一个物理网络；</div><div class="line">4、请求报文要经由Director，但响应不能经由Director，而是由RS直接发往Client；</div><div class="line">5、不支持端口映射；</div><div class="line">6、各RS必须有VIP地址(拒绝ARP广播)，绑定在lo的别名上即可</div></pre></td></tr></table></figure>
<p><br></p>
<h4 id="配置VS-DR"><a href="#配置VS-DR" class="headerlink" title="配置VS/DR"></a><font size="4" color="#32CD99">配置VS/DR</font></h4><p><strong>实验目标：</strong></p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line">负载均衡两个php应用（wordpress，discuzx）</div><div class="line">并为其配置NFS以及会话保持功能</div></pre></td></tr></table></figure>
<p><strong>实验准备：</strong></p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div></pre></td><td class="code"><pre><div class="line">VS主机：</div><div class="line">VIP 172.16.3.100/32 </div><div class="line">DIP 172.16.3.10/16</div><div class="line"></div><div class="line">RS1主机：</div><div class="line">RIP 172.16.3.20/16 </div><div class="line">VIP 172.16.3.100/32</div><div class="line"></div><div class="line">RS2主机：</div><div class="line">RIP 172.16.3.30/16</div><div class="line">VIP 172.16.3.100/32</div><div class="line"></div><div class="line">MySQL主机：</div><div class="line">MIP 172.16.3.40/16</div><div class="line"></div><div class="line">NFS主机：</div><div class="line">NIP 172.16.3.50/16</div></pre></td></tr></table></figure>
<p><br></p>
<p>1、在VS、RS主机上配置网卡别名</p>
<p>[1] VS配置网卡别名：</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">$ ifconfig eno16777736 172.16.3.100 netmask 255.255.255.255 broadcast 172.16.3.100 up</div></pre></td></tr></table></figure>
<p>[2] 编写脚本、配置RS的网卡别名并不接受arp广播</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div></pre></td><td class="code"><pre><div class="line">$ vim set-rs.sh</div><div class="line">#!/bin/bash</div><div class="line">#</div><div class="line">vip=172.16.3.100</div><div class="line">mask=255.255.255.255</div><div class="line"></div><div class="line">case $1 in</div><div class="line">start)</div><div class="line">    echo 1 &gt; /proc/sys/net/ipv4/conf/all/arp_ignore</div><div class="line">    echo 1 &gt; /proc/sys/net/ipv4/conf/lo/arp_ignore</div><div class="line">    echo 2 &gt; /proc/sys/net/ipv4/conf/all/arp_announce</div><div class="line">    echo 2 &gt; /proc/sys/net/ipv4/conf/lo/arp_announce</div><div class="line"></div><div class="line">    ifconfig lo:0 $vip netmask $mask broadcast $vip up</div><div class="line">    route add -host $vip dev lo:0</div><div class="line">    ;;</div><div class="line">stop)</div><div class="line">    ifconfig lo:0 down</div><div class="line"></div><div class="line">    echo 0 &gt; /proc/sys/net/ipv4/conf/all/arp_ignore</div><div class="line">    echo 0 &gt; /proc/sys/net/ipv4/conf/lo/arp_ignore</div><div class="line">    echo 0 &gt; /proc/sys/net/ipv4/conf/all/arp_announce</div><div class="line">    echo 0 &gt; /proc/sys/net/ipv4/conf/lo/arp_announce</div><div class="line"></div><div class="line">    ;;</div><div class="line">*)</div><div class="line">    echo &quot;Usage $(basename $0) start|stop&quot;</div><div class="line">    exit 1</div><div class="line">    ;;</div><div class="line">esac</div><div class="line"></div><div class="line">RS1：</div><div class="line">$ bash -x set-rs.sh start </div><div class="line"></div><div class="line">RS2：</div><div class="line">$ bash -x set-rs.sh start</div></pre></td></tr></table></figure>
<p><br></p>
<p>2、RS1、2安装nginx以及php-fpm、在VS上配置ipvsadm的dr负载均衡技术，使用rr调度算法</p>
<p>[1] RS操作如下：</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">$ yum install -y nginx php-fpm php-mbstring php-mcrypt</div></pre></td></tr></table></figure>
<p>[2] VS操作如下：</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line">$ ipvsadm -A -t 172.16.3.100:80 -s rr</div><div class="line">$ ipvsadm -a -t 172.16.3.100:80 -r 172.16.3.20:80 -g</div><div class="line">$ ipvsadm -a -t 172.16.3.100:80 -r 172.16.3.30:80 -g</div></pre></td></tr></table></figure>
<p><br></p>
<p>3、RS1与RS2配置nginx对于php-fpm的代理：(两台同样的步骤)</p>
<p>[1] 编辑php-fpm的配置文件：</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div></pre></td><td class="code"><pre><div class="line">$ vim /etc/php-fpm.d/www.conf</div><div class="line">user = nginx</div><div class="line">group = nginx</div><div class="line">pm.status_path = /status</div><div class="line">ping.path = /ping</div><div class="line">ping.response = pong</div><div class="line"></div><div class="line">$ mkdir -pv /var/lib/php/session </div><div class="line">$ chown -R nginx.nginx /var/lib/php/session</div><div class="line">$ systemctl start php-fpm</div></pre></td></tr></table></figure>
<p>[2] 编辑nginx配置文件:<br>这里最好删除主配置文件内的<code>server</code>块的配置信息，防止干扰</p>
<p><code>RS1配置</code>：</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div></pre></td><td class="code"><pre><div class="line">$ vim /etc/nginx/conf.d/www1.conf</div><div class="line">server &#123;</div><div class="line">        listen 80;</div><div class="line">        server_name     172.16.3.20;</div><div class="line">        root            /data/www1;</div><div class="line">        index           index.html index.htm index.php;</div><div class="line"></div><div class="line">        location ~* \.php$ &#123;</div><div class="line">                fastcgi_pass    127.0.0.1:9000;</div><div class="line">                fastcgi_index   index.php;</div><div class="line">                fastcgi_param   SCRIPT_FILENAME /nfs$fastcgi_script_name;</div><div class="line"></div><div class="line">                include         fastcgi_params;</div><div class="line">        &#125;</div><div class="line">&#125;</div></pre></td></tr></table></figure>
<p><code>RS2配置</code>：</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div></pre></td><td class="code"><pre><div class="line">$ vim /etc/nginx/conf.d/www1.conf</div><div class="line">server &#123;</div><div class="line">        listen 80;</div><div class="line">        server_name     172.16.3.30;</div><div class="line">        root            /data/www1;</div><div class="line">        index           index.html index.htm index.php;</div><div class="line"></div><div class="line">        location ~* \.php$ &#123;</div><div class="line">                fastcgi_pass    127.0.0.1:9000;</div><div class="line">                fastcgi_index   index.php;</div><div class="line">                fastcgi_param   SCRIPT_FILENAME /nfs$fastcgi_script_name;</div><div class="line"></div><div class="line">                include         fastcgi_params;</div><div class="line">        &#125;</div><div class="line">&#125;</div></pre></td></tr></table></figure>
<p>[3] 创建目录以及php测试页：</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div></pre></td><td class="code"><pre><div class="line">$ mkdir -pv /data/www1</div><div class="line">$ mkdir -pv /data/cache </div><div class="line">$ vim /data/index.php</div><div class="line">NODE 1 / NODE2          #这里根据RS1、2的分别来选择定义，便于区分</div><div class="line">&lt;?php </div><div class="line">	phpinfo();</div><div class="line">?&gt;</div></pre></td></tr></table></figure>
<p>[4] 重启服务，测试Php的测试页是否正常访问：</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div></pre></td><td class="code"><pre><div class="line">$ nginx -t </div><div class="line">$ nginx -s reload</div><div class="line"></div><div class="line">$ curl http://172.16.3.20/index.php</div><div class="line">NODE 1</div><div class="line">...</div><div class="line">...</div><div class="line">$ curl http://172.16.3.30/index.php</div><div class="line">NODE 2</div><div class="line">...</div><div class="line">...</div></pre></td></tr></table></figure>
<p><br></p>
<p>4、拷贝wordpress以及discuzx到<code>NFS</code>的共享目录下并开启<code>NFS</code>共享</p>
<p>[1] 拷贝程序包到NFS</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div></pre></td><td class="code"><pre><div class="line">$ scp wordpress-4.7.4-zh_CN.tar.gz root@172.16.3.50:/nfs</div><div class="line">wordpress-4.7.4-zh_CN.tar.gz                                100% 8308KB   2.9MB/s   00:02</div><div class="line">$ scp Discuz_X3.3_SC_UTF8.zip root@172.16.3.50:/nfs/</div><div class="line">Discuz_X3.3_SC_UTF8.zip                                     100%   10MB   2.2MB/s   00:04</div></pre></td></tr></table></figure>
<p>[2] 创建单独目录、解压、修改权限：</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div></pre></td><td class="code"><pre><div class="line">$ mkdir -pv /nfs/&#123;wp,pma,discuzx&#125;</div><div class="line">$ useradd -r nginx</div><div class="line">$ tar -xf wordpress-4.7.4-zh_CN.tar.gz -C /nfs/wp</div><div class="line">$ unzip Discuz_X3.3_SC_UTF8.zip -C /nfs/discuzx</div><div class="line">$ chown -R nginx.nginx /nfs</div><div class="line">$ cd /nfs/discuzx/</div><div class="line">$ mv upload/* ./</div></pre></td></tr></table></figure>
<p>[3] 创建共享目录，并启动<code>NFS</code>服务：</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div></pre></td><td class="code"><pre><div class="line">$ vim /etc/exports</div><div class="line">/nfs/wp         172.16.3.20(rw,no_root_squash) 172.16.3.30(rw,no_root_squash)</div><div class="line">/nfs/discuzx    172.16.3.20(rw,no_root_squash) 172.16.3.30(rw,no_root_squash)</div><div class="line">$ systemctl start nfs.service</div></pre></td></tr></table></figure>
<p><br></p>
<p>5、回到RS上<code>挂载NFS</code>共享的目录(两台RS都要做)</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line">$ mkdir -pv /nfs/&#123;wp,pma,discuzx&#125;</div><div class="line">$ mount -t 172.16.3.50:/nfs/wp /nfs/wp</div><div class="line">$ mount -t 172.16.3.50:/nfs/wp /nfs/discuzx</div></pre></td></tr></table></figure>
<p><br></p>
<p>6、修改RS上nginx虚拟主机配置文件</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div></pre></td><td class="code"><pre><div class="line">$ vim /etc/nginx/conf.d/www1.conf </div><div class="line">添加三条location：</div><div class="line">location / &#123;</div><div class="line">    root /data/www1;</div><div class="line">&#125;</div><div class="line"></div><div class="line">location /wp/wordpress &#123;</div><div class="line">    root    /nfs;</div><div class="line">&#125;</div><div class="line"></div><div class="line">location /discuzx &#123;</div><div class="line">    root    /nfs;</div><div class="line">&#125;</div></pre></td></tr></table></figure>
<p><br></p>
<p>7、打开各RS的wordpress以及discuzx的访问网址测试</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div></pre></td><td class="code"><pre><div class="line">http://172.16.3.20/wp/wordpress</div><div class="line">http://172.16.3.30/wp/wordpress</div><div class="line"></div><div class="line">http://172.16.3.20/discuzx</div><div class="line">http://172.16.3.30/discuzx</div></pre></td></tr></table></figure>
<p><br></p>
<p>8、在任意一台RS上进行对<code>wordpress</code>配置文件进行修改</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div></pre></td><td class="code"><pre><div class="line">$ vim /data/wordpress/wp-config.inc.php</div><div class="line">// ** MySQL 设置 - 具体信息来自您正在使用的主机 ** //</div><div class="line">/** WordPress数据库的名称 */</div><div class="line">define(&apos;DB_NAME&apos;, &apos;wordpress_db&apos;);</div><div class="line"></div><div class="line">/** MySQL数据库用户名 */</div><div class="line">define(&apos;DB_USER&apos;, &apos;wordpress&apos;);</div><div class="line"></div><div class="line">/** MySQL数据库密码 */</div><div class="line">define(&apos;DB_PASSWORD&apos;, &apos;root@123&apos;);</div><div class="line"></div><div class="line">/** MySQL主机 */</div><div class="line">define(&apos;DB_HOST&apos;, &apos;172.16.3.40&apos;);</div></pre></td></tr></table></figure>
<p><br></p>
<p>9、在<code>MySQL</code>主机上创建WordPress和Discuzx的数据库以及用户</p>
<p>[1] 修改MySQL配置文件</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div></pre></td><td class="code"><pre><div class="line">$ vim /etc/my.cnf.d/server.conf </div><div class="line">[mysqld]</div><div class="line">skip_name_resolve=ON</div><div class="line">innodb_file_per_table=ON</div><div class="line">log-bin=mysql_bin</div><div class="line"></div><div class="line">$ systemctl start mariadb.service</div></pre></td></tr></table></figure>
<p>[2] 创建数据库以及用户信息</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div></pre></td><td class="code"><pre><div class="line">$ mysql</div><div class="line">&gt; CREATE DATABASE wordpress_db;</div><div class="line">&gt; CREATE DATABASE discuzx_db;</div><div class="line">&gt; GRANT ALL PRIVILEGES ON wordpress_db.* TO &apos;wordpress&apos;@&apos;172.16.3.20&apos; IDENTIFIED BY &apos;root@123&apos;;</div><div class="line">&gt; GRANT ALL PRIVILEGES ON wordpress_db.* TO &apos;wordpress&apos;@&apos;172.16.3.30&apos; IDENTIFIED BY &apos;root@123&apos;;</div><div class="line">&gt; GRANT ALL PRIVILEGES ON wordpress_db.* TO &apos;wordpress&apos;@&apos;172.16.3.50&apos; IDENTIFIED BY &apos;root@123&apos;;</div><div class="line">&gt; GRANT ALL PRIVILEGES ON discuzx_db.* TO &apos;discuzx&apos;@&apos;172.16.3.20&apos; IDENTIFIED BY &apos;root@123&apos;;</div><div class="line">&gt; GRANT ALL PRIVILEGES ON discuzx_db.* TO &apos;discuzx&apos;@&apos;172.16.3.30&apos; IDENTIFIED BY &apos;root@123&apos;;</div><div class="line">&gt; GRANT ALL PRIVILEGES ON discuzx_db.* TO &apos;discuzx&apos;@&apos;172.16.3.50&apos; IDENTIFIED BY &apos;root@123&apos;;</div><div class="line">&gt; FLUSH PRIVILEGES;</div><div class="line">&gt; exit;</div></pre></td></tr></table></figure>
<p><br></p>
<p>现在打开<code>WordPress</code>和<code>Discuzx</code>就可以进行设置了</p>
<p><img src="https://ws4.sinaimg.cn/large/006tKfTcly1fgu3rtfkn9j31hc1pskf0.jpg" alt=""></p>
<p><br></p>
<p>10、配置完成之后，我们对各<code>RS</code>主机上的<code>php-fpm</code>的配置文件要进行一下修改</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div></pre></td><td class="code"><pre><div class="line">$ vim /etc/php-fpm.d/www.conf</div><div class="line">;listen.allowed_clients = 127.0.0.1         #将这条配置注释掉即可</div><div class="line"></div><div class="line">$ systemctl restart php-fpm</div><div class="line">$ systemctl restart nginx</div></pre></td></tr></table></figure>
<p>11、测试</p>
<p>[1] 对于<code>wordpress</code>上传图片的问题，其实在之前我们修改wordpress和discuzx目录的属主属组就已经实现了，如果还是上传不到的话，执行如下指令：</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">$ chmod +x /nfs/wp/wordpress/wp-content</div></pre></td></tr></table></figure>
<p>[2] 输入网址打开测试：</p>
<p><img src="https://ws2.sinaimg.cn/large/006tKfTcly1fgu3yxlxjhj31hc1psqv5.jpg" alt=""></p>
<p><img src="https://ws3.sinaimg.cn/large/006tKfTcly1fgu3z2g8vuj31hc1psnpd.jpg" alt=""></p>
<hr>
<div class="note success"><h3 id="LVS实现健康状态检查以及会话持久连接"><a href="#LVS实现健康状态检查以及会话持久连接" class="headerlink" title="LVS实现健康状态检查以及会话持久连接"></a>LVS实现健康状态检查以及会话持久连接</h3></div>
<p>为了节约时间，实现此次目标就在上一个<code>VS/DR</code>的实验的基础之上进行操作</p>
<h4 id="实现会话持久连接"><a href="#实现会话持久连接" class="headerlink" title="实现会话持久连接"></a><font size="4" color="#32CD99">实现会话持久连接</font></h4><p>1、重新定义负载均衡规则</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div></pre></td><td class="code"><pre><div class="line">$ ipvsadm -C</div><div class="line">$ ipvsadm -A -t 172.16.3.100:80 -s rr -p 600            #-p 600持久连接超时时长</div><div class="line">$ ipvsadm -a -t 172.16.3.20:80 -r 172.16.3.20 -g</div><div class="line">$ ipvsadm -a -t 172.16.3.20:80 -r 172.16.3.30 -g</div></pre></td></tr></table></figure>
<p>2、也可以使用<code>ldirectord</code>实现，下面我们演示如何配置</p>
<h4 id="使用-ldirectord-实现健康状态检查"><a href="#使用-ldirectord-实现健康状态检查" class="headerlink" title="使用 ldirectord 实现健康状态检查"></a><font size="4" color="#32CD99">使用 ldirectord 实现健康状态检查</font></h4><p>1、下载<code>ldirectord</code>的rpm包并安装</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div></pre></td><td class="code"><pre><div class="line">$ wget ftp://172.16.0.1/pub/Sources/6.x86_64/corosync/ldirectord-3.9.5-5.1.x86_64.rpm</div><div class="line">$ yum install ./ldirectord-3.9.5-5.1.x86_64.rpm</div><div class="line">$ rpm -ql ldirectord</div><div class="line">/etc/ha.d                                               #配置文件存放路径</div><div class="line">/etc/ha.d/resource.d</div><div class="line">/etc/ha.d/resource.d/ldirectord</div><div class="line">/etc/init.d/ldirectord</div><div class="line">/etc/logrotate.d/ldirectord</div><div class="line">/usr/lib/ocf/resource.d/heartbeat/ldirectord</div><div class="line">/usr/sbin/ldirectord</div><div class="line">/usr/share/doc/ldirectord-3.9.5</div><div class="line">/usr/share/doc/ldirectord-3.9.5/COPYING</div><div class="line">/usr/share/doc/ldirectord-3.9.5/ldirectord.cf           #配置文件模板</div><div class="line">/usr/share/man/man8/ldirectord.8.gz</div></pre></td></tr></table></figure>
<p><br></p>
<p>2、使lvs本机作为sorry server并配置</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line">$ yum install nginx </div><div class="line">$ echo &quot;Sorry Server&quot; &gt; /usr/share/nginx/html/index.html</div></pre></td></tr></table></figure>
<p><br></p>
<p>3、拷贝ldriectord配置文件模板并修改配置</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div></pre></td><td class="code"><pre><div class="line">$ cp /usr/share/doc/ldirectord-3.9.5/ldirectord.cf /etc/ha.d/</div><div class="line">$ vim /etc/ha.d/ldirectord.cf</div><div class="line"># Global Directives                         #全局配置段</div><div class="line">checktimeout=3                              #检查超时时间</div><div class="line">checkinterval=1                             #检查间隔，单位为秒</div><div class="line">#fallback=127.0.0.1:80                      #全局的sorry server</div><div class="line">#fallback6=[::1]:80                         #ipv6的sorry server</div><div class="line">autoreload=yes                              #自动加载配置</div><div class="line">logfile=&quot;/var/log/ldirectord.log&quot;           #日志文件</div><div class="line">#logfile=&quot;local0&quot;                           #rsyslog</div><div class="line">#emailalert=&quot;admin@x.y.z&quot;                   #邮件</div><div class="line">#emailalertfreq=3600                        #</div><div class="line">#emailalertstatus=all                       #出现任何状态都发送邮件</div><div class="line">quiescent=no                                #静默模式</div><div class="line"></div><div class="line"># Sample for an http virtual service        #虚拟主机配置段</div><div class="line">virtual=172.16.3.100:80                     #定义的lvs的VIP地址</div><div class="line">        real=172.16.3.20:80 gate            #RS的IP地址以及负载均衡技术是哪种</div><div class="line">        real=172.16.3.30:80 gate</div><div class="line">        fallback=127.0.0.1:80 gate          #sorry server</div><div class="line">        service=http                        #应用层使用的协议</div><div class="line">        scheduler=rr                        #调度算法</div><div class="line">        persistent=600                      #持久连接超时时长 </div><div class="line">        #netmask=255.255.255.255            #子网掩码</div><div class="line">        protocol=tcp                        #传输层协议</div><div class="line">        checktype=negotiate                 #检测方式</div><div class="line">        checkport=80                        #检查端口为80</div><div class="line">        request=&quot;index.html&quot;                #请求的哪个页面</div><div class="line">        #receive=&quot;NODE&quot;                     #请求页面中应包含有的内容</div></pre></td></tr></table></figure>
<p><br></p>
<p>4、启动<code>ldirectord</code>服务，会自动生成<code>ipvsadm</code>规则</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div></pre></td><td class="code"><pre><div class="line">$ ipvsadm -C </div><div class="line">$ systemctl start ldirectord.service </div><div class="line">$ ipvsadm -ln </div><div class="line">[root@master ha.d]# ipvsadm -ln</div><div class="line">IP Virtual Server version 1.2.1 (size=4096)</div><div class="line">Prot LocalAddress:Port Scheduler Flags</div><div class="line">  -&gt; RemoteAddress:Port           Forward Weight ActiveConn InActConn</div><div class="line">TCP  172.16.3.100:80 rr persistent 600</div><div class="line">  -&gt; 172.16.3.20:80               Route   1      0          0</div><div class="line">  -&gt; 172.16.3.30:80               Route   1      0          0</div></pre></td></tr></table></figure>
<p><br></p>
<p>5、RS1、RS2进行关闭或者启动Nginx服务，在VS上查看ipvsadm -ln 查看状态检查是否应用</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div></pre></td><td class="code"><pre><div class="line">RS1：</div><div class="line">$ systemctl stop nginx</div><div class="line"></div><div class="line">VS：</div><div class="line">$ ipvsadm -ln</div><div class="line">IP Virtual Server version 1.2.1 (size=4096)</div><div class="line">Prot LocalAddress:Port Scheduler Flags</div><div class="line">  -&gt; RemoteAddress:Port           Forward Weight ActiveConn InActConn</div><div class="line">TCP  172.16.3.100:80 rr persistent 600</div><div class="line">  -&gt; 172.16.3.30:80               Route   1      0          11</div><div class="line">  </div><div class="line"></div><div class="line">两台RS都停止服务之后：</div><div class="line">$ ipvsadm -ln</div><div class="line">IP Virtual Server version 1.2.1 (size=4096)</div><div class="line">Prot LocalAddress:Port Scheduler Flags</div><div class="line">  -&gt; RemoteAddress:Port           Forward Weight ActiveConn InActConn</div><div class="line">TCP  172.16.3.100:80 rr persistent 600</div><div class="line">  -&gt; 127.0.0.1:80                 Route   1      0          0</div><div class="line">  </div><div class="line">  </div><div class="line">两台RS启动，自动加载到规则中：</div><div class="line">$ ipvsadm -ln</div><div class="line">IP Virtual Server version 1.2.1 (size=4096)</div><div class="line">Prot LocalAddress:Port Scheduler Flags</div><div class="line">  -&gt; RemoteAddress:Port           Forward Weight ActiveConn InActConn</div><div class="line">TCP  172.16.3.100:80 rr persistent 600</div><div class="line">  -&gt; 172.16.3.20:80               Route   1      0          0</div><div class="line">  -&gt; 172.16.3.30:80               Route   1      0          0</div></pre></td></tr></table></figure>
<hr>
<div class="note info"><h3 id="LVS调度算法详解"><a href="#LVS调度算法详解" class="headerlink" title="LVS调度算法详解"></a>LVS调度算法详解</h3></div>
<p>根据其调度时是否考虑各RS当前的负载状态，可分为静态方法和动态方法两种</p>
<p>长连接(开启会话保持)应该考虑负载不均衡的情况，短连接无需考虑</p>
<h4 id="静态方法"><a href="#静态方法" class="headerlink" title="静态方法"></a><font size="3" color="#007FFF">静态方法</font></h4><ul>
<li>轮叫（Round Robin）</li>
</ul>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line">调度器通过&quot;轮叫&quot;调度算法将外部请求按顺序轮流分配到集群中的真实服务器上，它均等地对待每一台服务器，而不管服务器上实际的连接数和系统负载。</div><div class="line"></div><div class="line">当服务器的权重为0时，表示该服务器不可用。</div></pre></td></tr></table></figure>
<ul>
<li>加权轮叫（Weighted Round Robin）</li>
</ul>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">调度器通过&quot;加权轮叫&quot;调度算法根据真实服务器的不同处理能力来调度访问请求。这样可以保证处理能力强的服务器处理更多的访问流量。调度器可以自动问询真实服务器的负载情况，并动态地调整其权值。</div></pre></td></tr></table></figure>
<ul>
<li>源地址散列（Source Hashing）</li>
</ul>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line">&quot;源地址散列&quot;调度算法根据请求的源IP地址，作为散列键（Hash Key）从静态分配的散列表找出对应的服务器，若该服务器是可用的且未超载，将请求发送到该服务器，否则返回空。</div><div class="line"></div><div class="line">简单的来说，就是将来自于同一个IP地址的请求始终发往第一次挑中的RS，从而实现会话绑定；</div></pre></td></tr></table></figure>
<ul>
<li>目标地址散列（Destination Hashing）</li>
</ul>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line">&quot;目标地址散列&quot;调度算法根据请求的目标IP地址，作为散列键（Hash Key）从静态分配的散列表找出对应的服务器，若该服务器是可用的且未超载，将请求发送到该服务器，否则返回空。</div><div class="line"></div><div class="line">简单的来说，就是将发往同一个目标地址的请求始终转发至第一次挑中的RS，典型使用场景是正向代理缓存场景中的负载均衡</div></pre></td></tr></table></figure>
<p><br></p>
<h4 id="动态方法"><a href="#动态方法" class="headerlink" title="动态方法"></a><font size="3" color="#007FFF">动态方法</font></h4><ul>
<li>最少链接（Least Connections）</li>
</ul>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div></pre></td><td class="code"><pre><div class="line">调度器通过&quot;最少连接&quot;调度算法动态地将网络请求调度到已建立的链接数最少的服务器上。如果集群系统的真实服务器具有相近的系统性能，采用&quot;最小连接&quot;调度算法可以较好地均衡负载。</div><div class="line"></div><div class="line">当各个服务器有相同的处理性能时，最小连接调度算法能把负载变化大的请求分布平滑到各个 服务器上，所有处理时间比较长的请求不可能被发送到同一台服务器上。</div><div class="line">但是，当各个服务器 的处理能力不同时，该算法并不理想</div></pre></td></tr></table></figure>
<ul>
<li>加权最少链接（Weighted Least Connections）</li>
</ul>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">在集群系统中的服务器性能差异较大的情况下，调度器采用&quot;加权最少链接&quot;调度算法优化负载均衡性能，具有较高权值的服务器将承受较大比例的活动连接负载。调度器可以自动问询真实服务器的负载情况，并动态地调整其权值。</div></pre></td></tr></table></figure>
<ul>
<li>最短预期延时调度（Shortest Expection Delay）</li>
</ul>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line">Overhead=(activeconns+1)*256/weight</div><div class="line">谁的权重越大，调度时就选谁</div></pre></td></tr></table></figure>
<ul>
<li>不排队调度（Never Queue）</li>
</ul>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">在请求没有的时候，分别平均分给每个RS，等每个RS都有了请求之后；再根据SED(Shortest Expection Delay)的算法进行分配</div></pre></td></tr></table></figure>
<p><strong>注意：SED、NQ会增加调度器的负载</strong></p>
<p><strong>经常使用的调度算法：</strong><code>rr</code>、<code>wlc</code>、<code>wrr</code></p>
<hr>
<iframe frameborder="no" border="0" marginwidth="0" marginheight="0" width="330" height="86" src="//music.163.com/outchain/player?type=2&id=35779145&auto=0&height=66"></iframe>


<p>本文出自<a href="http://maxiecloud.com">Maxie’s Notes</a>博客，转载请务必保留此出处。</p>
<p><img src="https://ww1.sinaimg.cn/large/006tNbRwly1fdzc80odsuj30gn0ilq5m.jpg" alt=""></p>
]]></content>
    
    <summary type="html">
    
      &lt;p&gt;&lt;img src=&quot;https://ws4.sinaimg.cn/large/006tNc79ly1fgtydyz1tbj30xc0go4qp.jpg&quot; alt=&quot;&quot;&gt;&lt;/p&gt;
&lt;blockquote class=&quot;blockquote-center&quot;&gt;一组服务器通过高速的局域网或者地理分布的广域网相互连接，在它们的前端有一个负载调度器（Load Balancer）。&lt;br&gt;负载调度器能无缝地将网络请求调度到真实服务器上，从而使得服务器集群的结构对客户是透明的，&lt;br&gt;客户访问集群系统提供的网络服务就像访问一台高性能、高可用的服务器一样。&lt;br&gt;&lt;br&gt;客户程序不受服务器集群的影响不需作任何修改。&lt;br&gt;系统的伸缩性通过在服务机群中透明地加入和删除一个节点来达到，通过检测节点或服务进程故障和正确地重置系统达到高可用性。&lt;br&gt;由于我们的负载调度技术是在Linux内核中实现的，我们称之为Linux虚拟服务器（Linux Virtual Server）。&lt;br&gt;&lt;/blockquote&gt;

&lt;p&gt;在1998年5月，章博士成立了Linux Virtual Server的自由软件项目，进行Linux服务器集群的开发工作。同时，Linux Virtual Server项目是国内最早出现的自由软件项目之一。&lt;/p&gt;
&lt;p&gt;&lt;code&gt;Linux Virtual Server项目的目标&lt;/code&gt; ：使用集群技术和Linux操作系统实现一个高性能、高可用的服务器，它具有很好的可伸缩性（Scalability）、可靠性（Reliability）和可管理性（Manageability）。&lt;/p&gt;
&lt;hr&gt;
    
    </summary>
    
      <category term="LVS" scheme="http://maxiecloud.com/categories/LVS/"/>
    
    
      <category term="linux" scheme="http://maxiecloud.com/tags/linux/"/>
    
      <category term="nginx" scheme="http://maxiecloud.com/tags/nginx/"/>
    
      <category term="server" scheme="http://maxiecloud.com/tags/server/"/>
    
      <category term="lvs" scheme="http://maxiecloud.com/tags/lvs/"/>
    
      <category term="cluster" scheme="http://maxiecloud.com/tags/cluster/"/>
    
  </entry>
  
  <entry>
    <title>nginx从入门到进阶【二】</title>
    <link href="http://maxiecloud.com/2017/06/17/nginx-advanced/"/>
    <id>http://maxiecloud.com/2017/06/17/nginx-advanced/</id>
    <published>2017-06-17T00:53:34.000Z</published>
    <updated>2017-06-24T07:53:39.000Z</updated>
    
    <content type="html"><![CDATA[<span itemprop="image" itemscope="" itemtype="http://schema.org/ImageObject"><img itemprop="url image" src="/images/LEMP.png" class="full-image" alt="nginx_LEMP"><meta itemprop="width" content="auto"><meta itemprop="height" content="auto"></span>
<blockquote class="blockquote-center">在学习了之前的一些关于Nginx相关的基础配置以及功能，下面我们就开始学习如何搭建LEMP以及Load-Balacning<br></blockquote>

<font size="4" color="#32CD99">LEMP</font>

<p><code>L</code>：Linux<br><code>E</code>：Engine X –&gt; Nginx<br><code>M</code>：MariaDB<br><code>P</code>：PHP-FPM</p>
<p>在做<code>LEMP</code>之前，我们先要学习一下<code>proxy</code>模块的使用，方便我们对<code>fastcgi</code>的理解</p>
<hr>
<a id="more"></a>
<font size="4" color="#FF7F00"> 注意：在做这次的实验之前，确保你的机器能够同时运行5台以上的虚拟机，否则后面的实验可能会做不了</font>


<h3 id="实验拓扑图"><a href="#实验拓扑图" class="headerlink" title="实验拓扑图"></a>实验拓扑图</h3><p><img src="https://ws1.sinaimg.cn/large/006tNc79ly1fgnykattu5j30gx0rqgmd.jpg" alt=""></p>
<h4 id="虚拟机配置"><a href="#虚拟机配置" class="headerlink" title="虚拟机配置"></a>虚拟机配置</h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line">虚拟机操作系统（OS）：CentOS Linux release 7.2.1511 (Core)</div><div class="line">内核版本（Kernel）：3.10.0-327.el7.x86_64</div><div class="line">虚拟机环境：VMware Fusion 专业版 8.5.3 (4696910)</div></pre></td></tr></table></figure>
<h4 id="物理机配置"><a href="#物理机配置" class="headerlink" title="物理机配置"></a>物理机配置</h4><p><img src="https://ws4.sinaimg.cn/large/006tNc79ly1fg5rfg0cjsj30ga0a8dj6.jpg" alt=""></p>
<hr>
<div class="note primary"><h3 id="Nginx-Proxy代理详解"><a href="#Nginx-Proxy代理详解" class="headerlink" title="Nginx Proxy代理详解"></a>Nginx Proxy代理详解</h3></div>
<h4 id="Proxy模块各参数详解"><a href="#Proxy模块各参数详解" class="headerlink" title="Proxy模块各参数详解 "></a><font szie="4" color="#236B8E">Proxy模块各参数详解 </font></h4><p>1、proxy_pass URL;</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">该指令用来设置被代理服务器的地址，可以是主机名、IP地址加端口号等形式</div></pre></td></tr></table></figure>
<p><br></p>
<p>2、proxy_set_header filed value;</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div></pre></td><td class="code"><pre><div class="line">该指令可以更改Nginx服务器接收到的客户端请求的请求头信息，然后将新的请求头发送给被代理的服务器。</div><div class="line"></div><div class="line">field   要更改的信息所在的头域</div><div class="line">value   要更改的值，支持使用文本、变量或者变量的组合</div></pre></td></tr></table></figure>
<p>3、proxy_hide_header field;</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line">该指令用于设置Nginx服务器在发送HTTP响应时，隐藏的一些头域信息</div><div class="line"></div><div class="line">filed   需要隐藏的头域</div></pre></td></tr></table></figure>
<p><img src="https://ws4.sinaimg.cn/large/006tNc79ly1fgo0j8mbuwg30qk0fcu15.gif" alt=""></p>
<p>4、proxy_pass_header filed;</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div></pre></td><td class="code"><pre><div class="line">默认情况下，Nginx服务器在发送响应报文时，报文头中不包含Date、Server等来自被代理服务器的头域信息。</div><div class="line">该指令可以设置这些头域信息以被发送</div><div class="line"></div><div class="line">field   需要发送的头域</div></pre></td></tr></table></figure>
<p><img src="https://ws4.sinaimg.cn/large/006tNc79ly1fgo0ms0vcfg30qk0fcu17.gif" alt=""></p>
<p>5、proxy_cache_path  path [levels=levels] keys_zone=name:size [max_size=size];</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div></pre></td><td class="code"><pre><div class="line">该指令用于设置Nginx服务器存储数据缓存的路径以及缓存索引相关的内容（只能定义在http中或者server之外）</div><div class="line"></div><div class="line">path        设置缓存数据存放的根路径，该路径应该是预先存在与磁盘上的</div><div class="line">levels      设置在相对于path指定目录的第几级hash目录中缓存数据。levels=1，表示一级hash目录；levels=1:2，表示两级，以此类推</div><div class="line">name:size   用来设置存放缓存索引的内存区域的名称和大小</div><div class="line">max_size    设置硬盘中缓存数据的大小限制</div></pre></td></tr></table></figure>
<p>6、proxy_cache zone | off;</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div></pre></td><td class="code"><pre><div class="line">该指令用于配置一块公用的内存区域的名称，该区域可以存放缓存的索引区域</div><div class="line"></div><div class="line">zone    设置的用于存放缓存索引的内存区域的名称</div><div class="line">off     关闭proxy_cache功能</div></pre></td></tr></table></figure>
<p>7、proxy_cache_key string;</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div></pre></td><td class="code"><pre><div class="line">该指令用于设置Nginx服务器在内存中为缓存数据建立索引时使用的关键字</div><div class="line"></div><div class="line">string  为设置的关键字，支持变量</div><div class="line">可以设置多个变量为关键字：</div><div class="line">proxy_cache_key $scheme$proxy_host$uri$is_args$args;</div></pre></td></tr></table></figure>
<p>8、proxy_cache_valid [code …] time;</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div></pre></td><td class="code"><pre><div class="line">该指令可以针对不同的HTTP响应状态设置不同的缓存时间</div><div class="line"></div><div class="line">code    设置HTTP响应的状态代码   any表示缓存所有该指令中未设置的其他响应数据</div><div class="line">time    设置缓存时间</div></pre></td></tr></table></figure>
<p>9、proxy_cache_use_stale error | timeout | invalid_header | updating | http_500 | http_502 | http_503 | http_504 | http_403 | http_404 | off …;</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line">如果Nginx在访问被代理服务器过程中出现被代理的服务器无法访问或者访问错误等现象时，Nginx服务器可以使用历史缓存响应客户端的请求，这些数据不一定和被代理服务器上最新的数据一致，但对于更新频率不高的后端服务器来说，该功能在一定程度上，能够为客户端提供不间断访问。</div><div class="line"></div><div class="line">该指令用来设置一些状态，当后端被代理的服务器处于这些状态时，Nginx服务器启用该功能</div></pre></td></tr></table></figure>
<p>10、proxy_cache_methods GET | HEAD | POST …;</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">该指令用来设置仅缓存指定的methods的数据</div></pre></td></tr></table></figure>
<p>11、proxy_connect_timeout time;</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line">该指令配置Nginx服务器与后端被代理服务器尝试建立连接的超时时间</div><div class="line"></div><div class="line">time    设置的超时时间 默认为60s</div></pre></td></tr></table></figure>
<p>12、proxy_send_timeout time;</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line">该指令配置Nginx服务器向后端被代理服务器发出 write请求后，等待响应的超时时间</div><div class="line"></div><div class="line">time    设置的超时时间 默认为60s</div></pre></td></tr></table></figure>
<h4 id="实例"><a href="#实例" class="headerlink" title="实例"></a>实例</h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div><div class="line">37</div><div class="line">38</div><div class="line">39</div><div class="line">40</div></pre></td><td class="code"><pre><div class="line">$ vim /etc/nginx/conf.d/maxie.conf</div><div class="line">proxy_cache_path		/web/cache/   levels=2:1:1    keys_zone=my_cache:10mmax_size=1g;</div><div class="line"></div><div class="line">server &#123;</div><div class="line">	listen             80;</div><div class="line">	server_name        www1.maxie.com;</div><div class="line">	root               /web/www1;</div><div class="line">	index              index.html index.htm;</div><div class="line">	add_header         X-Via	$server_addr;</div><div class="line">	add_header         X-Accel	$server_name;</div><div class="line"></div><div class="line">	location / &#123;</div><div class="line">		access_log        /web/www1/access.log my_log flush=4m buffer=1m;</div><div class="line">	&#125;</div><div class="line"></div><div class="line"></div><div class="line">	location ~* \.(jpg|png|gif|jpeg)$ &#123;</div><div class="line">		proxy_pass            http://172.16.1.20:80;</div><div class="line">		proxy_redirect        default;</div><div class="line">		proxy_set_header      X-Real-IP    $remote_addr;</div><div class="line">		proxy_cache           my_cache;</div><div class="line">		proxy_cache_key       $request_uri;</div><div class="line">		proxy_cache_valid     200 301 302 10m;</div><div class="line">		proxy_cache_valid     any 1m;</div><div class="line"></div><div class="line">		proxy_cache_methods   GET HEAD;</div><div class="line">		proxy_connect_timeout 10s;</div><div class="line"></div><div class="line">		#proxy_hide_header    ETag;</div><div class="line">		#proxy_hide_header    Content-Type;</div><div class="line"></div><div class="line">		#proxy_pass_header    Server;</div><div class="line">		#proxy_pass_header    Date;</div><div class="line">	&#125;</div><div class="line"></div><div class="line">	error_page             404	    http://www1.maxie.com/404.html;</div><div class="line"></div><div class="line">	location = /404.html &#123;</div><div class="line">	&#125;</div><div class="line">&#125;</div></pre></td></tr></table></figure>
<p><img src="https://ws4.sinaimg.cn/large/006tNc79ly1fgo1in6knog30qk0fcnpm.gif" alt=""></p>
<hr>
<div class="note success"><h3 id="Nginx-fastcgi详解"><a href="#Nginx-fastcgi详解" class="headerlink" title="Nginx fastcgi详解"></a>Nginx fastcgi详解</h3></div>
<h4 id="fastcgi各参数详解"><a href="#fastcgi各参数详解" class="headerlink" title=" fastcgi各参数详解"></a><font color="#D19275"> fastcgi各参数详解</font></h4><p>1、fastcgi_pass address;</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">该指令配置被代理的php-fpm的地址，一般地址后要跟监听的端口，默认为9000</div></pre></td></tr></table></figure>
<p>2、fastcgi_index name;</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">该指令配置fastcgi默认的主页资源</div></pre></td></tr></table></figure>
<p>3、fastcgi_param parameter value [if_not_empty];</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div></pre></td><td class="code"><pre><div class="line">该指令配置fastcgi指定的参数和参数的值</div><div class="line"></div><div class="line">一般这里要配置 SCRIPT_FILENAME 的值为php-fpm主机上php的资源路径</div><div class="line"></div><div class="line">value：php或者php-fpm主机上的 php资源路径的地址</div><div class="line">parameter：一般为 SCRIPT_FILENAME 这个变量</div><div class="line"></div><div class="line">fastcgi_param   SCRIPT_FILENAME /web/www1/fcgi$fastcgi_script_name;</div></pre></td></tr></table></figure>
<p>4、fastcgi_cache_path path [levels=levels] keys_zone=name:size [max_size=size];</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div></pre></td><td class="code"><pre><div class="line">该指令用于设置Nginx服务器存储数据缓存的路径以及缓存索引相关的内容（只能定义在http中或者server之外）</div><div class="line"></div><div class="line">levels=levels           缓存目录的层级数量，以及每一级的目录数量；levels=ONE:TWO:THREE</div><div class="line">keys_zone=name:size     k/v映射的内存空间的名称及大小</div><div class="line">inactive=time           非活动时长</div><div class="line">max_size=size           磁盘上用于缓存数据的缓存空间上限</div></pre></td></tr></table></figure>
<p>5、fastcgi_cache zone | off;</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">该指令调用指定的缓存空间来缓存数据</div></pre></td></tr></table></figure>
<p>6、fastcgi_cache_key string;</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">定义用作缓存项的key的字符串；</div></pre></td></tr></table></figure>
<p>7、fastcgi_cache_min_uses number;</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">缓存空间中的缓存项在inactive定义的非活动时间内至少要被访问到此处所指定的次数方可被认作活动项；</div></pre></td></tr></table></figure>
<p>8、fastcgi_cache_valid [code …] time;</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">不同的响应码各自的缓存时长；</div></pre></td></tr></table></figure>
<p>9、fastcgi_keep_conn on | off;</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div></pre></td><td class="code"><pre><div class="line">是否开启fastcgi的保持连接</div><div class="line"></div><div class="line">因为Nginx作为代理，是以客户端的身份与后端的php服务器进行传输，所以每有1个新的请求，就需要一个新的随机端口与php进行交互</div><div class="line">这样在并发请求数非常大的情况下，会造成端口可能不够用。</div><div class="line">这时，就需要开启这个功能，提供一个类似于管道的连接，使用一个端口传输多个请求，提高性能</div></pre></td></tr></table></figure>
<h4 id="配置文件预览"><a href="#配置文件预览" class="headerlink" title="配置文件预览"></a><font color="#D19275">配置文件预览</font></h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div><div class="line">37</div><div class="line">38</div><div class="line">39</div><div class="line">40</div><div class="line">41</div><div class="line">42</div><div class="line">43</div><div class="line">44</div><div class="line">45</div><div class="line">46</div><div class="line">47</div><div class="line">48</div><div class="line">49</div><div class="line">50</div><div class="line">51</div><div class="line">52</div><div class="line">53</div><div class="line">54</div><div class="line">55</div><div class="line">56</div><div class="line">57</div><div class="line">58</div><div class="line">59</div><div class="line">60</div><div class="line">61</div><div class="line">62</div><div class="line">63</div><div class="line">64</div><div class="line">65</div><div class="line">66</div><div class="line">67</div><div class="line">68</div><div class="line">69</div><div class="line">70</div><div class="line">71</div><div class="line">72</div><div class="line">73</div></pre></td><td class="code"><pre><div class="line">$ vim /etc/nginx/conf.d/maxie.conf</div><div class="line">proxy_cache_path		/web/cache/   levels=2:1:1    keys_zone=my_cache:10mmax_size=1g;</div><div class="line"></div><div class="line">server &#123;</div><div class="line">    listen             80;</div><div class="line">    server_name        www1.maxie.com;</div><div class="line">    root               /web/www1;</div><div class="line">    index              index.html index.htm;</div><div class="line">    add_header         X-Via	$server_addr;</div><div class="line">    add_header         X-Accel	$server_name;</div><div class="line">    </div><div class="line">    location / &#123;</div><div class="line">    access_log        /web/www1/access.log my_log flush=4m buffer=1m;</div><div class="line">    &#125;</div><div class="line">        </div><div class="line">    location ~* \.php$ &#123;</div><div class="line">    	root               /web/www1/fcgi;</div><div class="line">    	fastcgi_pass       172.16.1.120:9000;</div><div class="line">    	fastcgi_index      index.php;</div><div class="line">    	fastcgi_param      SCRIPT_FILENAME /web/www1/fcgi$fastcgi_script_name;</div><div class="line">    	include            fastcgi_params;</div><div class="line">    </div><div class="line">    	fastcgi_cache      fcgi_cache;</div><div class="line">    	fastcgi_cache_key  $request_uri;</div><div class="line">    	fastcgi_cache_methods  GET HEAD;</div><div class="line">    	fastcgi_cache_min_uses 2;</div><div class="line">    	fastcgi_cache_valid    200 301 302 5m;</div><div class="line">    	fastcgi_cache_valid    any 1m;</div><div class="line">    	fastcgi_keep_conn      on;</div><div class="line">    &#125;</div><div class="line">    </div><div class="line">    location ~* ^/pm_(ping|status)$ &#123;</div><div class="line">    	include            fastcgi_params;</div><div class="line">    	fastcgi_pass       172.16.1.120:9000;</div><div class="line">    	fastcgi_param      SCRIPT_FILENAME $fastcgi_script_name;</div><div class="line">    &#125;</div><div class="line">    </div><div class="line">    location ~* ^/pma$ &#123;</div><div class="line">    	root               /web/www1/;</div><div class="line">    	include            fastcgi_params;</div><div class="line">    	fastcgi_pass       172.16.1.120:9000;</div><div class="line">    	fastcgi_param      SCRIPT_FILENAME /web/www/fcgi$fastcgi_script_name;</div><div class="line">    </div><div class="line">    	#^表示从匹配的开始就替换为后面的URL</div><div class="line">    	if ($request_filename ~ /pma ) &#123;</div><div class="line">    		rewrite	^	http://www1.maxie.com/pma/index.php permanent;</div><div class="line">    	&#125;</div><div class="line">    &#125;   </div><div class="line">    </div><div class="line">    location ~* \.(jpg|png|gif|jpeg)$ &#123;</div><div class="line">    	proxy_pass            http://172.16.1.20:80;</div><div class="line">    	proxy_redirect        default;</div><div class="line">    	proxy_set_header      X-Real-IP    $remote_addr;</div><div class="line">    	proxy_cache           my_cache;</div><div class="line">    	proxy_cache_key       $request_uri;</div><div class="line">    	proxy_cache_valid     200 301 302 10m;</div><div class="line">    	proxy_cache_valid     any 1m;</div><div class="line">    </div><div class="line">    	proxy_cache_methods   GET HEAD;</div><div class="line">    	proxy_connect_timeout 10s;</div><div class="line">    </div><div class="line">    	#proxy_hide_header    ETag;</div><div class="line">    	#proxy_hide_header    Content-Type;</div><div class="line">    </div><div class="line">    	#proxy_pass_header    Server;</div><div class="line">    	#proxy_pass_header    Date;</div><div class="line">    &#125;</div><div class="line">    </div><div class="line">    error_page             404	    http://www1.maxie.com/404.html;</div><div class="line">    </div><div class="line">    location = /404.html &#123;</div><div class="line">	&#125;</div><div class="line">&#125;</div></pre></td></tr></table></figure>
<h4 id="效果演示"><a href="#效果演示" class="headerlink" title="效果演示"></a><font color="#D19275">效果演示</font></h4><p><strong>1.访问php页面自动代理至php-fpm处理：</strong></p>
<p><img src="https://ws4.sinaimg.cn/large/006tNc79ly1fgo5v6vbxog30qk0fc7wr.gif" alt=""></p>
<p><strong>2.访问php自带的测试页：</strong></p>
<p><img src="https://ws2.sinaimg.cn/large/006tNc79ly1fgo5x7ggqwg30qk0fc4r1.gif" alt=""></p>
<p><strong>3.测试fastcgi缓存功能</strong></p>
<ul>
<li>未开启缓存功能 压测index.php：(5000访问，200并发，总耗时374.381ms）</li>
</ul>
<p><img src="https://ws4.sinaimg.cn/large/006tNc79ly1fgo648k19zg30qk0fckju.gif" alt=""></p>
<ul>
<li>开启缓存功能 压测index.php：（5000访问，200并发，总耗时45.795ms）</li>
</ul>
<p><img src="https://ws4.sinaimg.cn/large/006tNc79ly1fgo65wjx7og30qk0fc7wr.gif" alt=""></p>
<p>由此测试可见缓存的重要性</p>
<hr>
<div class="note info"><h3 id="Nginx-upstream详解"><a href="#Nginx-upstream详解" class="headerlink" title="Nginx upstream详解"></a>Nginx upstream详解</h3></div>
<h4 id="什么是负载均衡"><a href="#什么是负载均衡" class="headerlink" title="什么是负载均衡"></a>什么是负载均衡</h4><p>网络负载均衡技术的大致原理是利用一定的<code>分配策略</code>将网络负载平衡地分摊到网络集群的<code>各个工作单元</code>上，使得单个重负负载任务能够分担到多个单元上<code>并行处理</code>，或者使得大量并发访问或者数据流量分担到多个单元上<code>分别处理</code>，从而减少用户的等待响应时间。</p>
<p>在实际应用中，负载均衡会根据网络的不同层次（一般按照OSI的七层参考模型）进行划分。现代的负载均衡技术主要实现和作用域网络的第四层（传输层）或第七层（应用层），完全独立于网络基础硬件设备，成为单独的技术设备。</p>
<p><code>Nginx</code>服务器实现的负载均衡一般认为是<code>七层负载均衡</code>。</p>
<p><img src="https://ws4.sinaimg.cn/large/006tNc79ly1fgo6iv2gi1j30sm1a81kx.jpg" alt="OSI模型"></p>
<p><br></p>
<h4 id="Nginx服务器负载均衡配置"><a href="#Nginx服务器负载均衡配置" class="headerlink" title="Nginx服务器负载均衡配置"></a>Nginx服务器负载均衡配置</h4><p>理解了“负载均衡”的概念，就可以利用Nginx服务器实现负载均衡的配置了。Nginx服务器实现了静态的基于<code>优先级</code>的<code>加权轮询(weighted round robin)</code>算法，主要使用的配置是<code>proxy_pass</code>指令和<code>upstream</code>指令，这些内容实际上很容易理解，关键点在于Nginx服务器的配置灵活多样，<font coloro="#FF0000">如何在配置均衡负载的同时合理的融合其他功能，形成一套可以满足实际需求的配置方案。</font></p>
<p><br></p>
<h4 id="upstream模块详解"><a href="#upstream模块详解" class="headerlink" title="upstream模块详解"></a>upstream模块详解</h4><p>1、upstream name { … }</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line">定义后端服务器组，会引入一个新的上下文</div><div class="line">需要定义在http中，server之外</div></pre></td></tr></table></figure>
<p><br><br>2、server address [parameters];</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">在upstream上下文中server成员</div></pre></td></tr></table></figure>
<p>address的表示格式</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line">unix:/PATH/TO/SOME_SOCK_FILE</div><div class="line">IP[:PORT]</div><div class="line">HOSTNAME[:PORT]</div></pre></td></tr></table></figure>
<p>parameters的可用参数：</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div></pre></td><td class="code"><pre><div class="line">weight=number           权重，默认为1</div><div class="line">max_fails=number        失败尝试最大次数；超出此处指定的次数时，server将被标记为不可用</div><div class="line">fail_timeout=time       设置将服务器标记为不可用状态的超时时长</div><div class="line">max_conns               当前的服务器的最大并发连接数</div><div class="line">backup                  将服务器标记为“备用”，即所有服务器均不可用时此服务器才启用(可以用来做sorry server)</div><div class="line">down                    标记为“不可用”</div></pre></td></tr></table></figure>
<p><br><br>3、least_conn;</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">最少连接调度算法，当server拥有不同的权重时其为wlc</div></pre></td></tr></table></figure>
<p><br><br>4、ip_hash;</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">源地址hash调度方法；</div></pre></td></tr></table></figure>
<p><br><br>5、hash key [consistent];</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line">基于指定的key的hash表来实现对请求的调度，此处的key可以直接文本、变量或二者的组合</div><div class="line"></div><div class="line">作用：将请求分类，同一类请求将发往同一个upstream server</div></pre></td></tr></table></figure>
<p><br><br>6、keepalive connections;</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">为每个worker进程保留的空闲的长连接数量</div></pre></td></tr></table></figure>
<h4 id="upstream配置实例"><a href="#upstream配置实例" class="headerlink" title="upstream配置实例"></a>upstream配置实例</h4><h5 id="配置文件预览-1"><a href="#配置文件预览-1" class="headerlink" title="配置文件预览"></a><font size="3" color="#D19275">配置文件预览</font></h5><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div></pre></td><td class="code"><pre><div class="line">$ vim /etc/nginx/conf.d/balancing.conf</div><div class="line">#Load Balancing</div><div class="line">upstream websrvs &#123;</div><div class="line">        #ip_hash;</div><div class="line">        server 172.16.1.20      weight=1 max_fails=2 fail_timeout=10;</div><div class="line">        server 172.16.1.130     weight=1 max_fails=2 fail_timeout=10;</div><div class="line">        server localhost:10080  weight=1 backup;</div><div class="line">&#125;</div><div class="line"></div><div class="line">server &#123;</div><div class="line">        listen                          10080;</div><div class="line">        server_name                     localhost;</div><div class="line">        root                            /web/backup;</div><div class="line">&#125;</div><div class="line"></div><div class="line">server &#123;</div><div class="line">        listen                          8080;</div><div class="line">        server_name                     www.balancing.com;</div><div class="line"></div><div class="line">        location / &#123;</div><div class="line">                proxy_pass              http://websrvs;</div><div class="line">                proxy_set_header        X-Real-IP $remote_addr;</div><div class="line">        &#125;</div><div class="line">&#125;</div></pre></td></tr></table></figure>
<h5 id="效果演示-1"><a href="#效果演示-1" class="headerlink" title="效果演示"></a><font size="3" color="#D19275">效果演示</font></h5><p><img src="https://ws2.sinaimg.cn/large/006tNc79ly1fgo77e1z5ug30qk0fcb2j.gif" alt=""></p>
<h5 id="配置文件详解"><a href="#配置文件详解" class="headerlink" title="配置文件详解"></a><font size="3" color="#D19275">配置文件详解</font></h5><p><img src="https://ws1.sinaimg.cn/large/006tNc79ly1fgwc66reuuj31kw1ll4qp.jpg" alt=""></p>
<hr>
<div class="note warning"><h3 id="Re-配置LEMP"><a href="#Re-配置LEMP" class="headerlink" title="Re:配置LEMP"></a>Re:配置LEMP</h3></div>
<h4 id="Engine-X-Nginx-配置"><a href="#Engine-X-Nginx-配置" class="headerlink" title="Engine X (Nginx) 配置"></a>Engine X (Nginx) 配置</h4><h5 id="1、安装Nginx"><a href="#1、安装Nginx" class="headerlink" title="1、安装Nginx "></a><font size="3" color="#32CD99">1、安装Nginx </font></h5><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line">$ yum info nginx</div><div class="line">$ yum install nginx</div></pre></td></tr></table></figure>
<p>如果yum仓库中没有 <code>nginx</code>，需要到官方站点下载，并使用如下命令安装；或者<a href="http://maxiecloud.com/2017/06/14/nginx-1/">编译安装</a>，在之前的一章已经讲过了。</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line">$ wget http://nginx.org/packages/centos/7/x86_64/RPMS/nginx-1.10.2-1.el7.ngx.x86_64.rpm</div><div class="line">$ yum install ./nginx-1.10.2-1.el7.ngx.x86_64.rpm</div></pre></td></tr></table></figure>
<p><br></p>
<h5 id="2、修改主配置文件，添加自定义日志格式"><a href="#2、修改主配置文件，添加自定义日志格式" class="headerlink" title="2、修改主配置文件，添加自定义日志格式 "></a><font size="3" color="#32CD99">2、修改主配置文件，添加自定义日志格式 </font></h5><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div></pre></td><td class="code"><pre><div class="line">$ cd /etc/nginx </div><div class="line">$ vim nginx.conf</div><div class="line">http &#123;</div><div class="line">	log_format	my_log	&apos;$remote_addr - - $remote_user [$time_local] &quot;$request&quot;&apos;</div><div class="line">						&apos;$status $body_bytes_sent &quot;$http_referer&quot;&apos;</div><div class="line">						&apos;$http_user_agent&apos;;</div><div class="line">&#125;</div></pre></td></tr></table></figure>
<p><br></p>
<h5 id="3、添加虚拟主机配置文件"><a href="#3、添加虚拟主机配置文件" class="headerlink" title="3、添加虚拟主机配置文件 "></a><font size="3" color="#32CD99">3、添加虚拟主机配置文件 </font></h5><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div><div class="line">37</div><div class="line">38</div><div class="line">39</div><div class="line">40</div><div class="line">41</div><div class="line">42</div><div class="line">43</div><div class="line">44</div><div class="line">45</div><div class="line">46</div><div class="line">47</div><div class="line">48</div><div class="line">49</div><div class="line">50</div></pre></td><td class="code"><pre><div class="line">$ vim conf.d/maxie.conf</div><div class="line">fastcgi_cache 					/web/cache/fcgi levels=2:1:1 keys_zone=fcgi_cache:20m inactive=1m max_size=1g;</div><div class="line"></div><div class="line">server &#123;</div><div class="line">	listen 					80;</div><div class="line">	server_name				www1.maxie.com;</div><div class="line">	root					/web/www1/;</div><div class="line">	index 					index.php index.html index.htm;</div><div class="line">	add_header				X-Via   $server_addr;</div><div class="line">	add_header				X-Accel $server_name;</div><div class="line"></div><div class="line">	location / &#123;</div><div class="line">		try_files			$uri $uri/ /index.html;</div><div class="line">		access_log			/web/www1/access.log my_log flush=4m buffer=1m;</div><div class="line">	&#125;</div><div class="line"></div><div class="line">	location ~* \.php$ &#123;</div><div class="line">		root				/web/www1/fcgi;</div><div class="line">		fastcgi_pass			172.16.1.120:9000;</div><div class="line">		fastcgi_index			index.php;</div><div class="line">		fastcgi_param 			SCRIPT_FILENAME /web/www1/fcgi$fastcgi_script_name;</div><div class="line"></div><div class="line">		fastcgi_cache 			fcgi_cache;</div><div class="line">		fastcgi_cache_key		$request_uri;</div><div class="line">		fastcgi_cache_methods	        GET HEAD;</div><div class="line">		fastcgi_cache_min_uses	        2;</div><div class="line">		fastcgi_cache_valid		200 301 302 10m;</div><div class="line">		fastcgi_cache_valid		any 1m;</div><div class="line">		fastcgi_keep_conn		on;</div><div class="line"></div><div class="line">		include				fastcgi_params;</div><div class="line">	&#125;</div><div class="line"></div><div class="line">	location ~* ^/pm_(ping|status)$ &#123;</div><div class="line">		include				fastcgi_params;</div><div class="line">		fastcgi_pass			172.16.1.120:9000;</div><div class="line">		fastcgi_param 			SCRIPT_FILENAME /web/www1/fcgi$fastcgi_script_name;</div><div class="line"></div><div class="line">	&#125;</div><div class="line"></div><div class="line">	location ~* ^/pma$ &#123;</div><div class="line">		include				fastcgi_params;</div><div class="line">		fastcgi_pass			172.16.1.120:9000;</div><div class="line">		fastcgi_param 			SCRIPT_FILENAME /web/www1/fcgi$fastcgi_script_name;</div><div class="line"></div><div class="line">		if ($request_filename ~ /pma ) &#123;</div><div class="line">            rewrite ^       	http://www1.maxie.com/pma/index.php permanent;</div><div class="line">    	&#125;</div><div class="line">	&#125;</div><div class="line">&#125;</div></pre></td></tr></table></figure>
<p><br></p>
<h5 id="4、创建配置文件中的目录以及主站html"><a href="#4、创建配置文件中的目录以及主站html" class="headerlink" title="4、创建配置文件中的目录以及主站html "></a><font size="3" color="#32CD99">4、创建配置文件中的目录以及主站html </font></h5><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div></pre></td><td class="code"><pre><div class="line">$ mkdir -pv /web/www1/</div><div class="line">$ mkdir -pv /web/cache/</div><div class="line">$ vim /web/www1/index.html </div><div class="line">&lt;h1&gt; Nginx Server &lt;/h1&gt;</div><div class="line">&lt;h2&gt; =_= &lt;/h2&gt;</div></pre></td></tr></table></figure>
<p><img src="https://ws3.sinaimg.cn/large/006tNc79ly1fgo8z39mo1j30qo0fgjsr.jpg" alt=""></p>
<p><br></p>
<h4 id="php-fpm配置"><a href="#php-fpm配置" class="headerlink" title="php-fpm配置"></a>php-fpm配置</h4><h5 id="1、安装php-fpm以及其他所需组件"><a href="#1、安装php-fpm以及其他所需组件" class="headerlink" title="1、安装php-fpm以及其他所需组件"></a><font size="3" color="#007FFF">1、安装php-fpm以及其他所需组件</font></h5><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">$ yum -y install php-fpm php-mysql php-mbstring</div></pre></td></tr></table></figure>
<p><br></p>
<h5 id="2、编辑配置文件"><a href="#2、编辑配置文件" class="headerlink" title="2、编辑配置文件"></a><font size="3" color="#007FFF">2、编辑配置文件</font></h5><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div></pre></td><td class="code"><pre><div class="line">$ vim /etc/php-fpm.d/www.conf</div><div class="line">将如下选项修改默认值的为这里的值：</div><div class="line">listen = 172.16.1.120:9000</div><div class="line">listen.allowed_clients = 172.16.1.70</div><div class="line">user = nginx</div><div class="line">group = nginx</div><div class="line">pm.status_path = /pm_status</div><div class="line">ping.path = /pm_ping</div><div class="line">ping.response = pong</div><div class="line">并创建/var/lib/php/session目录 修改属主属组为nginx</div></pre></td></tr></table></figure>
<p><br></p>
<h5 id="3、创建用户以及所需目录以及主站index-php"><a href="#3、创建用户以及所需目录以及主站index-php" class="headerlink" title="3、创建用户以及所需目录以及主站index.php"></a><font size="3" color="#007FFF">3、创建用户以及所需目录以及主站index.php</font></h5><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div></pre></td><td class="code"><pre><div class="line">$ useradd -r nginx </div><div class="line">$ mkdir -pv /var/lib/php/session </div><div class="line">$ chown -R nginx.nginx /var/lib/php/session</div><div class="line"></div><div class="line">$ mkdir -pv /web/www1/fcgi </div><div class="line">$ chown -R nginx.nginx /web/www1/fcgi</div><div class="line"></div><div class="line">$ vim /web/www1/fcgi/index.php</div><div class="line">&lt;?php </div><div class="line">	phpinfo();</div><div class="line">?&gt;</div></pre></td></tr></table></figure>
<p><br></p>
<h5 id="4、启动php-fpm"><a href="#4、启动php-fpm" class="headerlink" title="4、启动php-fpm"></a><font size="3" color="#007FFF">4、启动php-fpm</font></h5><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">$ systemctl start php-fpm</div></pre></td></tr></table></figure>
<p><br></p>
<h4 id="MariaDB配置"><a href="#MariaDB配置" class="headerlink" title="MariaDB配置"></a>MariaDB配置</h4><h5 id="1、安装maridb"><a href="#1、安装maridb" class="headerlink" title="1、安装maridb"></a><font size="3" color="#32CD99">1、安装maridb</font></h5><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">$ yum -y install mariadb-server</div></pre></td></tr></table></figure>
<p><br></p>
<h5 id="2、编辑配置文件-1"><a href="#2、编辑配置文件-1" class="headerlink" title="2、编辑配置文件"></a><font size="3" color="#32CD99">2、编辑配置文件</font></h5><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div></pre></td><td class="code"><pre><div class="line">$ vim /etc/my.conf</div><div class="line">[mysqld]</div><div class="line">skil_name_resolve=ON</div><div class="line">innodb_file_per_table=ON</div><div class="line">log-bin=mysql_bin</div></pre></td></tr></table></figure>
<p><br></p>
<h5 id="3、启动mariadb"><a href="#3、启动mariadb" class="headerlink" title="3、启动mariadb"></a><font size="3" color="#32CD99">3、启动mariadb</font></h5><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">$ systemctl start mariadb.service</div></pre></td></tr></table></figure>
<p><br></p>
<h5 id="4、授权远程用户登陆数据库"><a href="#4、授权远程用户登陆数据库" class="headerlink" title="4、授权远程用户登陆数据库"></a><font size="3" color="#32CD99">4、授权远程用户登陆数据库</font></h5><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div></pre></td><td class="code"><pre><div class="line">$ mysql </div><div class="line">&gt; GRANT ALL PRIVILEGES ON *.* TO &apos;root&apos;@&apos;172.16.1.120&apos; IDENTIFIED BY &apos;root@123&apos;;</div><div class="line">&gt; GRANT ALL PRIVILEGES ON *.* TO &apos;root&apos;@&apos;172.16.1.70&apos; IDENTIFIED BY &apos;root@123&apos;;</div><div class="line">&gt; FLUSH PRIVILEGES;</div></pre></td></tr></table></figure>
<p><br></p>
<h4 id="配置phpMyAdmin"><a href="#配置phpMyAdmin" class="headerlink" title="配置phpMyAdmin"></a>配置phpMyAdmin</h4><h5 id="1、拷贝rpm包"><a href="#1、拷贝rpm包" class="headerlink" title="1、拷贝rpm包"></a><font size="3" color="#FF7F00">1、拷贝rpm包</font></h5><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">$ scp Downloads/LinuxPackages/phpMyAdmin-4.0.10.20-all-languages.zip root@172.16.1.120:/web/www1/fcgi/</div></pre></td></tr></table></figure>
<p><br></p>
<h5 id="2、解压缩并修改配置文件"><a href="#2、解压缩并修改配置文件" class="headerlink" title="2、解压缩并修改配置文件"></a><font size="3" color="#FF7F00">2、解压缩并修改配置文件</font></h5><p><strong>php主机上进行的操作：</strong></p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div></pre></td><td class="code"><pre><div class="line">$ tar -xf /web/www1/fcgi/phpMyAdmin-4.0.10.20-all-languages.zip</div><div class="line">$ cd /web/www1/fcgi/</div><div class="line">$ ln -sv phpMyAdmin-4.0.10.20-all-languages pma</div><div class="line">$ cd pma </div><div class="line">$ cp config.sample.inc.php config.inc.php</div><div class="line">$ vim config.inc.php</div><div class="line">修改下面一行中的localhost改为 mariadb主机的IP地址</div><div class="line">$cfg[&apos;Servers&apos;][$i][&apos;host&apos;] = &apos;172.16.1.110&apos;;</div><div class="line"></div><div class="line">$ vim libraries/config.default.php</div><div class="line">修改下面一行中的localhost改为 mariadb主机的IP地址</div><div class="line">$cfg[&apos;Servers&apos;][$i][&apos;host&apos;] = &apos;172.16.1.110&apos;;</div><div class="line"></div><div class="line">$ chown -R nginx.nginx /web/www1/fcgi</div></pre></td></tr></table></figure>
<p><strong>nginx主机上进行的操作：</strong></p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line">$ scp root@172.16.1.120:/web/www1/fcgi/phpMyAdmin-4.0.10.20-all-languages /web/www1/pma</div><div class="line">$ chown -R nginx.nginx /web/www1/</div></pre></td></tr></table></figure>
<h5 id="3、开启nginx服务、打开网页进行测试即可，LEMP搭建完成-font-gt"><a href="#3、开启nginx服务、打开网页进行测试即可，LEMP搭建完成-font-gt" class="headerlink" title="3、开启nginx服务、打开网页进行测试即可，LEMP搭建完成/font&gt;"></a><font size="3" color="#FF7F00">3、开启nginx服务、打开网页进行测试即可，LEMP搭建完成/font&gt;</font></h5><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line">$ nginx -t</div><div class="line">$ systemctl start nginx</div></pre></td></tr></table></figure>
<h4 id="配置文件预览-2"><a href="#配置文件预览-2" class="headerlink" title="配置文件预览"></a>配置文件预览</h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div><div class="line">37</div><div class="line">38</div><div class="line">39</div><div class="line">40</div><div class="line">41</div><div class="line">42</div><div class="line">43</div><div class="line">44</div><div class="line">45</div><div class="line">46</div><div class="line">47</div><div class="line">48</div><div class="line">49</div><div class="line">50</div><div class="line">51</div><div class="line">52</div><div class="line">53</div><div class="line">54</div></pre></td><td class="code"><pre><div class="line">$ vim /etc/nginx/conf.d/maxie.conf</div><div class="line">fastcgi_cache_path              /web/cache/fcgi levels=2:1:1 keys_zone=fcgi_cache:20m inactive=1m max_size=1g;</div><div class="line"></div><div class="line">server &#123;</div><div class="line">        listen                  80;</div><div class="line">        server_name             www1.maxie.com;</div><div class="line">        root                    /web/www1;</div><div class="line">        index                   index.php index.html index.htm;</div><div class="line">        add_header              X-Via   $server_addr;</div><div class="line">        add_header              X-Accel $server_name;</div><div class="line"></div><div class="line">        location / &#123;</div><div class="line">                access_log              /web/www1/access.log my_log flush=4m buffer=1m;</div><div class="line">        &#125;</div><div class="line"></div><div class="line">        location ~* \.php$ &#123;</div><div class="line">                root                    /web/www1/fcgi;</div><div class="line">                fastcgi_pass            172.16.1.120:9000;</div><div class="line">                fastcgi_index           index.php;</div><div class="line">                fastcgi_param           SCRIPT_FILENAME /web/www1/fcgi$fastcgi_script_name;</div><div class="line">                include                 fastcgi_params;</div><div class="line"></div><div class="line">                fastcgi_cache           fcgi_cache;</div><div class="line">                fastcgi_cache_key       $request_uri;</div><div class="line">                fastcgi_cache_methods   GET HEAD;</div><div class="line">                fastcgi_cache_min_uses  2;</div><div class="line">                fastcgi_cache_valid     200 301 302 5m;</div><div class="line">                fastcgi_cache_valid     any 1m;</div><div class="line">                fastcgi_keep_conn       on;</div><div class="line">        &#125;</div><div class="line"></div><div class="line">        location ~* ^/pm_(ping|status)$ &#123;</div><div class="line">                include                 fastcgi_params;</div><div class="line">                fastcgi_pass            172.16.1.120:9000;</div><div class="line">                fastcgi_param           SCRIPT_FILENAME $fastcgi_script_name;</div><div class="line">        &#125;</div><div class="line"></div><div class="line">        location ~* ^/pma$ &#123;</div><div class="line">                root                    /web/www1/;</div><div class="line">                include                 fastcgi_params;</div><div class="line">                fastcgi_pass            172.16.1.120:9000;</div><div class="line">                fastcgi_param           SCRIPT_FILENAME /web/www/fcgi$fastcgi_script_name;</div><div class="line"></div><div class="line">                #^表示从匹配的开始就替换为后面的URL</div><div class="line">                if ($request_filename ~ /pma ) &#123;</div><div class="line">                        rewrite ^       http://www1.maxie.com/pma/index.php permanent;</div><div class="line">                &#125;</div><div class="line">        &#125;</div><div class="line">        </div><div class="line">        error_page                      404     http://www1.maxie.com/404.html;</div><div class="line"></div><div class="line">        location = /404.html &#123;</div><div class="line">        &#125;</div><div class="line">&#125;</div></pre></td></tr></table></figure>
<h4 id="实例演示"><a href="#实例演示" class="headerlink" title="实例演示"></a>实例演示</h4><p><img src="https://ws3.sinaimg.cn/large/006tNc79ly1fgo9g2f8fdg30qk0fc1la.gif" alt=""></p>
<hr>
<div class="note danger"><h3 id="Re-配置LNAMP"><a href="#Re-配置LNAMP" class="headerlink" title="Re:配置LNAMP"></a>Re:配置LNAMP</h3></div>
<p><strong>目标：</strong></p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line">实现lnamp、并实现如下功能</div><div class="line">1、http，提供WordPress</div><div class="line">2、https，提供phpMyAdmin</div></pre></td></tr></table></figure>
<p><strong>实验拓扑结构：</strong></p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line">nginx               172.16.1.100/16 </div><div class="line">ap(httpd+php)       172.16.1.70/16</div><div class="line">mariadb             172.16.1.20/16</div></pre></td></tr></table></figure>
<h4 id="Engine-X-Nginx"><a href="#Engine-X-Nginx" class="headerlink" title="Engine X (Nginx)"></a>Engine X (Nginx)</h4><h4 id="安装与配置"><a href="#安装与配置" class="headerlink" title="安装与配置 "></a><font size="3" color="#38B0DE">安装与配置 </font></h4><ul>
<li>安装nginx</li>
</ul>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">$ yum install -y nginx</div></pre></td></tr></table></figure>
<ul>
<li>修改配置文件</li>
</ul>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div></pre></td><td class="code"><pre><div class="line">$ vim /etc/nginx/nginx.conf</div><div class="line">在server块进行如下操作：</div><div class="line"></div><div class="line">1、修改root目录</div><div class="line">    root    /data/www1;</div><div class="line"></div><div class="line">2、添加location将以php结尾的资源代理到ap上</div><div class="line">#添加缓存目录</div><div class="line">proxy_cache_path        /web/cache/    levels=2:1:1    keys_zone=pcache:10m    max_size=1g;</div><div class="line"></div><div class="line">server &#123;</div><div class="line">    listen       80 default_server;</div><div class="line">    listen       [::]:80 default_server;</div><div class="line">    server_name  _;</div><div class="line">    root         /data/www1/;</div><div class="line"></div><div class="line">    # Load configuration files for the default server block.</div><div class="line">    include /etc/nginx/default.d/*.conf;</div><div class="line"></div><div class="line">    location / &#123;</div><div class="line">    &#125;</div><div class="line"></div><div class="line">    #添加如下location</div><div class="line">    location ~* \.php$ &#123;</div><div class="line">            proxy_pass                      http://172.16.1.70:80;</div><div class="line">            proxy_set_header                X-Real-IP       $remote_addr;</div><div class="line">            proxy_cache                     pcache;</div><div class="line">            proxy_cache_key                 $request_uri;</div><div class="line">            proxy_cache_valid               200 301 302 10m;</div><div class="line">            proxy_cache_valid               any 1m;</div><div class="line"></div><div class="line">            proxy_cache_methods             GET HEAD;</div><div class="line">            proxy_connect_timeout           10s;</div><div class="line">    &#125;</div></pre></td></tr></table></figure>
<ul>
<li>创建所需目录以及主站文件</li>
</ul>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div></pre></td><td class="code"><pre><div class="line">$ mkdir -pv /web/cache</div><div class="line">$ mkdir -pv /data/www1</div><div class="line">$ vim /data/www1/index.html</div><div class="line">&lt;h1&gt; NgInX Server &lt;/h1&gt;</div></pre></td></tr></table></figure>
<ul>
<li>启动nginx服务，打开浏览器验证</li>
</ul>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div></pre></td><td class="code"><pre><div class="line">$ nginx -t</div><div class="line">$ systemctl start nginx</div><div class="line">$ curl http://172.16.1.100/</div><div class="line">&lt;h1&gt; NgInX Server &lt;/h1&gt;</div></pre></td></tr></table></figure>
<hr>
<h4 id="AP-–-gt-apache-php"><a href="#AP-–-gt-apache-php" class="headerlink" title="AP –&gt; apache + php"></a>AP –&gt; apache + php</h4><h4 id="安装与配置-1"><a href="#安装与配置-1" class="headerlink" title=" 安装与配置 "></a><font size="3" color="#32CD99"> 安装与配置 </font></h4><ul>
<li>安装</li>
</ul>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">$ yum install -y httpd php php-mysql php-mbstring php-mcrypt</div></pre></td></tr></table></figure>
<ul>
<li>创建index.html和index.php</li>
</ul>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div></pre></td><td class="code"><pre><div class="line">$ cd /var/www/html/</div><div class="line">$ vim index.html</div><div class="line">	&lt;h1&gt;HTTP Server 172.16.1.70 &lt;/h1&gt;</div><div class="line"></div><div class="line">	&lt;h2&gt; AP Server &lt;/h2&gt;</div><div class="line">$ vim index.php </div><div class="line">&lt;?php </div><div class="line">		phpinfo();</div><div class="line">?&gt;</div></pre></td></tr></table></figure>
<h4 id="拷贝WordPress以及phpMyAdmin"><a href="#拷贝WordPress以及phpMyAdmin" class="headerlink" title=" 拷贝WordPress以及phpMyAdmin "></a><font size="3" color="#32CD99"> 拷贝WordPress以及phpMyAdmin </font></h4><ul>
<li>拷贝wordpress以及pma到http服务器的DocumentRoot目录下</li>
</ul>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line">$ scp wordpress-4.7.4-zh_CN.tar.gz phpMyAdmin-4.0.10.20-all-languages.zip root@172.16.1.70:/var/www/html</div><div class="line">wordpress-4.7.4-zh_CN.tar.gz                                 100% 8308KB   4.4MB/s   00:01</div><div class="line">phpMyAdmin-4.0.10.20-all-languages.zip                       100% 7282KB   4.4MB/s   00:01</div></pre></td></tr></table></figure>
<ul>
<li>解压缩wordpress以及pma</li>
</ul>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line">$ tar -xf wordpress-4.7.4-zh_CN.tar.gz</div><div class="line">$ unzip phpMyAdmin-4.0.10.20-all-languages.zip</div><div class="line">$ ln -sv phpMyAdmin-4.0.10.20-all-languages pma</div></pre></td></tr></table></figure>
<ul>
<li>启动http服务并测试</li>
</ul>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line">$ systemctl start httpd</div><div class="line">$ curl http://172.16.1.70/index.html</div><div class="line">$ curl http://172.16.1.70/index.php</div></pre></td></tr></table></figure>
<hr>
<h4 id="MariaDB"><a href="#MariaDB" class="headerlink" title="MariaDB"></a>MariaDB</h4><h4 id="安装与配置-2"><a href="#安装与配置-2" class="headerlink" title=" 安装与配置 "></a><font size="3" color="#70DBDB"> 安装与配置 </font></h4><ul>
<li>安装</li>
</ul>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">$ yum install -y mariadb-server</div></pre></td></tr></table></figure>
<ul>
<li>配置</li>
</ul>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div></pre></td><td class="code"><pre><div class="line">$ vim /etc/my.cnf.d/server.conf</div><div class="line">[mysqld]</div><div class="line">skip_name_resolve=ON</div><div class="line">innodb_file_per_table=ON</div><div class="line">log-bin=mysql_bin</div></pre></td></tr></table></figure>
<ul>
<li>创建WordPress所需的数据库及用户，并授权远程连接权限</li>
</ul>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div></pre></td><td class="code"><pre><div class="line">$ mysql</div><div class="line">&gt; CREATE DATABASE wordpress_db;</div><div class="line">Query OK, 1 row affected (0.00 sec)</div><div class="line"></div><div class="line">&gt; GRANT ALL PRIVILEGES ON wordpress_db.* TO &apos;wordpress&apos;@&apos;172.16.1.70&apos; IDENTIFIED BY &apos;root@123&apos;;</div><div class="line">Query OK, 0 rows affected (0.00 sec)</div><div class="line"></div><div class="line">&gt; GRANT ALL PRIVILEGES ON *.* TO &apos;root&apos;@&apos;172.16.1.70&apos; IDENTIFIED BY &apos;root@123&apos;;</div><div class="line">Query OK, 0 rows affected (0.00 sec)</div><div class="line"></div><div class="line">&gt; FLUSH PRIVILEGES;</div><div class="line">Query OK, 0 rows affected (0.00 sec)</div><div class="line"></div><div class="line">&gt; exit</div></pre></td></tr></table></figure>
<ul>
<li>在ap服务器上修改pma以及wordpress的数据库配置</li>
</ul>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div></pre></td><td class="code"><pre><div class="line">phpMyAdmin：</div><div class="line"></div><div class="line">$ cp pma/config.sample.inc.php pma/config.inc.php</div><div class="line">$ pwd</div><div class="line">/var/www/html</div><div class="line">$ vim pma/config.inc.php</div><div class="line">修改其下信息：</div><div class="line">$cfg[&apos;Servers&apos;][$i][&apos;host&apos;] = &apos;172.16.1.20&apos;;</div><div class="line"></div><div class="line">$ vim pma/libraries/config.default.php</div><div class="line">修改其下信息：</div><div class="line">$cfg[&apos;Servers&apos;][$i][&apos;host&apos;] = &apos;172.16.1.20&apos;;</div><div class="line"></div><div class="line"></div><div class="line">WordPress：</div><div class="line"></div><div class="line">$ cp wordpress/wp-config-sample.php wordpress/wp-config.php</div><div class="line">$ vim wordpress/wp-config.php</div><div class="line">修改为如下信息：</div><div class="line"></div><div class="line">// ** MySQL 设置 - 具体信息来自您正在使用的主机 ** //</div><div class="line">/** WordPress数据库的名称 */</div><div class="line">define(&apos;DB_NAME&apos;, &apos;wordpress_db&apos;);</div><div class="line"></div><div class="line">/** MySQL数据库用户名 */</div><div class="line">define(&apos;DB_USER&apos;, &apos;wordpress&apos;);</div><div class="line"></div><div class="line">/** MySQL数据库密码 */</div><div class="line">define(&apos;DB_PASSWORD&apos;, &apos;root@123&apos;);</div><div class="line"></div><div class="line">/** MySQL主机 */</div><div class="line">define(&apos;DB_HOST&apos;, &apos;172.16.1.20&apos;);</div></pre></td></tr></table></figure>
<h4 id="拷贝ap上pma和wordpress到nginx的网站root目录下"><a href="#拷贝ap上pma和wordpress到nginx的网站root目录下" class="headerlink" title=" 拷贝ap上pma和wordpress到nginx的网站root目录下 "></a><font size="3" color="#70DBDB"> 拷贝ap上pma和wordpress到nginx的网站root目录下 </font></h4><ul>
<li>ap操作：</li>
</ul>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div></pre></td><td class="code"><pre><div class="line">$ scp -r phpMyAdmin-4.0.10.20-all-languages root@172.16.1.100:/data/www1/</div><div class="line">$ scp -r  wordpress  root@172.16.1.100:/data/www1</div><div class="line">$ chown -R apache.apache wordpress *</div><div class="line">$ chmod +x wordpress/wp-content</div></pre></td></tr></table></figure>
<ul>
<li>nginx操作：</li>
</ul>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line">$ cd /data/www1/</div><div class="line">$ chown -R nginx.nginx *</div><div class="line">$ ln -sv phpMyAdmin-4.0.10.20-all-languages/ pma</div></pre></td></tr></table></figure>
<hr>
<h4 id="测试"><a href="#测试" class="headerlink" title="测试"></a>测试</h4><p>打开网页输入网址即可测试</p>
<hr>
<h4 id="增加https功能"><a href="#增加https功能" class="headerlink" title="增加https功能"></a>增加https功能</h4><h4 id="自建CA并自签nginx证书"><a href="#自建CA并自签nginx证书" class="headerlink" title=" 自建CA并自签nginx证书 "></a><font size="3" color="#236B8E"> 自建CA并自签nginx证书 </font></h4><ul>
<li>自建CA</li>
</ul>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div></pre></td><td class="code"><pre><div class="line">$ cd /etc/pki/CA/</div><div class="line">$ (umask 077;openssl genrsa -out /etc/pki/CA/private/cakey.pem 4096)</div><div class="line">$ openssl req -new -x509 -key /etc/pki/CA/private/cakey.pem -out /etc/pki/CA/cacert.pem -days 3650</div><div class="line">$ touch &#123;serial,index.txt&#125;</div><div class="line">$ echo 01 &gt; serial</div></pre></td></tr></table></figure>
<ul>
<li>生成ssl签署请求，并让CA签署</li>
</ul>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div></pre></td><td class="code"><pre><div class="line">$ mkdir -pv /etc/nginx/ssl </div><div class="line">$ cd /etc/nginx/ssl </div><div class="line">$ (umask 077;openssl genrsa -out /etc/nginx/ssl/nginx.key 4096)</div><div class="line">$ openssl req -new -key /etc/nginx/ssl/nginx.key -out /etc/nginx/ssl/nginx.csr -days 550</div><div class="line">$ openssl ca -in /etc/nginx/ssl/nginx.csr -out /etc/nginx/ssl/nginx.crt</div></pre></td></tr></table></figure>
<h4 id="编辑nginx配置文件，开启ssl功能"><a href="#编辑nginx配置文件，开启ssl功能" class="headerlink" title=" 编辑nginx配置文件，开启ssl功能 "></a><font size="3" color="#236B8E"> 编辑nginx配置文件，开启ssl功能 </font></h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div></pre></td><td class="code"><pre><div class="line">$ vim /etc/nginx/nginx.conf</div><div class="line">添加一个server对80进行转发：</div><div class="line">server &#123;</div><div class="line">	listen 80;</div><div class="line">	server_name www1.maxie.com;</div><div class="line">	rewrite ^	https://$server_name$1 permanent;</div><div class="line">&#125;</div><div class="line"></div><div class="line">修改默认server：</div><div class="line">server &#123;</div><div class="line">listen       443 ssl;</div><div class="line">server_name  www1.maxie.com;</div><div class="line">root         /data/www1/;</div><div class="line"></div><div class="line"># Load configuration files for the default server block.</div><div class="line">include /etc/nginx/default.d/*.conf;</div><div class="line"></div><div class="line">#SSL</div><div class="line">ssl                                     on;</div><div class="line">ssl_certificate                         /etc/nginx/ssl/nginx.crt;</div><div class="line">ssl_certificate_key                     /etc/nginx/ssl/nginx.key;</div><div class="line">ssl_session_timeout                     5m;</div><div class="line">ssl_protocols                           SSLv2 TLSv1 SSLv3;</div><div class="line">ssl_ciphers                             HIGH:!aNULL:!MD5;</div><div class="line"></div><div class="line">ssl_session_cache                       shared:sslcache:20m;</div><div class="line"></div><div class="line">其余配置不变</div><div class="line"></div><div class="line">$ nginx -t </div><div class="line">$ nginx -s reload</div></pre></td></tr></table></figure>
<h4 id="拷贝CA公钥到MBP，导入浏览器中，验证"><a href="#拷贝CA公钥到MBP，导入浏览器中，验证" class="headerlink" title=" 拷贝CA公钥到MBP，导入浏览器中，验证 "></a><font size="3" color="#236B8E"> 拷贝CA公钥到MBP，导入浏览器中，验证 </font></h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line">$ scp root@172.16.1.100:/etc/pki/CA/cacert.pem ./</div><div class="line">cacert.pem   100% 1992   422.8KB/s   00:00</div></pre></td></tr></table></figure>
<h3 id="到此Nginx的相关知识与实践实验就结束啦"><a href="#到此Nginx的相关知识与实践实验就结束啦" class="headerlink" title="到此Nginx的相关知识与实践实验就结束啦"></a>到此Nginx的相关知识与实践实验就结束啦</h3><hr>
<iframe frameborder="no" border="0" marginwidth="0" marginheight="0" width="330" height="86" src="//music.163.com/outchain/player?type=2&id=21968164&auto=1&height=66"></iframe>


<p>本文出自<a href="http://maxiecloud.com">Maxie’s Notes</a>博客，转载请务必保留此出处。</p>
<p><img src="https://ww1.sinaimg.cn/large/006tNbRwly1fdzc80odsuj30gn0ilq5m.jpg" alt=""></p>
]]></content>
    
    <summary type="html">
    
      &lt;span itemprop=&quot;image&quot; itemscope itemtype=&quot;http://schema.org/ImageObject&quot;&gt;&lt;img itemprop=&quot;url image&quot; src=&quot;/images/LEMP.png&quot; class=&quot;full-image&quot; alt=&quot;nginx_LEMP&quot; /&gt;&lt;meta itemprop=&quot;width&quot; content=&quot;auto&quot;&gt;&lt;meta itemprop=&quot;height&quot; content=&quot;auto&quot;&gt;&lt;/span&gt;
&lt;blockquote class=&quot;blockquote-center&quot;&gt;在学习了之前的一些关于Nginx相关的基础配置以及功能，下面我们就开始学习如何搭建LEMP以及Load-Balacning&lt;br&gt;&lt;/blockquote&gt;

&lt;font size=4 color=&quot;#32CD99&quot;&gt;LEMP&lt;/font&gt;

&lt;p&gt;&lt;code&gt;L&lt;/code&gt;：Linux&lt;br&gt;&lt;code&gt;E&lt;/code&gt;：Engine X –&amp;gt; Nginx&lt;br&gt;&lt;code&gt;M&lt;/code&gt;：MariaDB&lt;br&gt;&lt;code&gt;P&lt;/code&gt;：PHP-FPM&lt;/p&gt;
&lt;p&gt;在做&lt;code&gt;LEMP&lt;/code&gt;之前，我们先要学习一下&lt;code&gt;proxy&lt;/code&gt;模块的使用，方便我们对&lt;code&gt;fastcgi&lt;/code&gt;的理解&lt;/p&gt;
&lt;hr&gt;
    
    </summary>
    
      <category term="Nginx" scheme="http://maxiecloud.com/categories/Nginx/"/>
    
    
      <category term="linux" scheme="http://maxiecloud.com/tags/linux/"/>
    
      <category term="nginx" scheme="http://maxiecloud.com/tags/nginx/"/>
    
      <category term="server" scheme="http://maxiecloud.com/tags/server/"/>
    
      <category term="web" scheme="http://maxiecloud.com/tags/web/"/>
    
      <category term="http" scheme="http://maxiecloud.com/tags/http/"/>
    
  </entry>
  
  <entry>
    <title>nginx从入门到进阶【一】</title>
    <link href="http://maxiecloud.com/2017/06/14/nginx-1/"/>
    <id>http://maxiecloud.com/2017/06/14/nginx-1/</id>
    <published>2017-06-14T11:26:37.000Z</published>
    <updated>2017-06-17T08:14:19.000Z</updated>
    
    <content type="html"><![CDATA[<span itemprop="image" itemscope="" itemtype="http://schema.org/ImageObject"><img itemprop="url image" src="/images/nginx.jpg" class="full-image" alt="nginx"><meta itemprop="width" content="auto"><meta itemprop="height" content="auto"></span>
<blockquote class="blockquote-center">近几年来，Nginx逐步进入高速发展的时期，从各类主流的IT媒体到各大著名的IT论坛，我们不时能够看到它的身影。<br>经过逐步的改进，Nginx已成为一款高性能、功能完善、性能稳定的服务器产品。<br></blockquote>

<p><strong><font size="3" color="#7093DB"> Nginx服务器以其功能丰富著称于世。</font></strong></p>
<p>它既可以作为<code>http服务器</code>，也可以作为<code>反向代理服务器</code>；能够快速响应静态页面(HTML)的请求；支持FastCGI、SSL、Virtual Host、URL Rewirte、HTTP Basic Auth、Gzip等大量功能；并且<code>支持第三方</code>模块扩展。</p>
<p>在这篇博客中，我们主要对 <code>Nginx</code> 提供的 <code>HTTP</code>服务来讲解。</p>
<a id="more"></a>
<p><code>Nginx</code>提供基本的<code>HTTP</code>服务，可以作为<code>HTTP</code>代理服务器和反向代理服务器，支持通过缓存加速访问，可以完成简单的负载均衡和容错，支持包过滤功能，支持SSL等。</p>
<p><img src="https://ws3.sinaimg.cn/large/006tNbRwly1fgkz0jup0mj30q80gbt9r.jpg" alt="Nginx架构图"></p>
<p>上图是<code>Nginx</code>的整体架构图，下面我们就围绕着这张图，来讲解<code>Nginx</code></p>
<hr>
<div class="note primary"><h3 id="安装Nginx"><a href="#安装Nginx" class="headerlink" title="安装Nginx"></a>安装Nginx</h3></div>
<p>关于<code>Nginx</code>的安装，有两种方法，一种是编译安装，另一种则是使用官方提供的yum仓库进行安装。</p>
<p>为了更深入的了解<code>Nginx</code>，我们当然是选择编译安装了。不过在安装完成之后，我们还是会使用yum安装的<code>Nginx</code>来演示和讲解各种功能。</p>
<h4 id="下载源码包并解压"><a href="#下载源码包并解压" class="headerlink" title=" 下载源码包并解压 "></a><font szie="4" color="#5F9F9F"> 下载源码包并解压 </font></h4><p>1、到<code>Nginx</code>的官方站点下载源码包：<a href="http://nginx.org/download/nginx-1.12.0.tar.gz" target="_blank" rel="external">下载地址</a></p>
<p>2、拷贝到我们的虚拟机上并解压缩：</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line">$ scp maxie@172.16.1.11:/Users/maxie/Downloads/nginx-1.12.0.tar ./</div><div class="line">$ tar -xvf nginx-1.12.0.tar</div></pre></td></tr></table></figure>
<h4 id="编译安装Nginx"><a href="#编译安装Nginx" class="headerlink" title=" 编译安装Nginx "></a><font szie="4" color="#5F9F9F"> 编译安装Nginx </font></h4><p>1、安装编译安装所需的开发组包：</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line">$ cd nginx-1.12.0</div><div class="line">$ yum -y groupinstall &quot;Development Tools&quot; &quot;Server Platform Development&quot;</div><div class="line">$ yum -y install pcre-devel openssl-devel zlib-devel</div></pre></td></tr></table></figure>
<p>2、开始生成Makefile文件：</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div></pre></td><td class="code"><pre><div class="line">$ ./configure --prefix=/usr/local/nginx \</div><div class="line">--conf-path=/etc/nginx/nginx.conf \</div><div class="line">--error-log-path=/var/log/nginx/error.log \</div><div class="line">--http-log-path=/var/log/nginx/access.log \</div><div class="line">--pid-path=/var/run/nginx.pid \</div><div class="line">--lock-path=/var/run/nginx.lock \</div><div class="line">--user=nginx --group=nginx \</div><div class="line">--with-http_ssl_module \</div><div class="line">--with-http_v2_module \</div><div class="line">--with-http_dav_module \</div><div class="line">--with-http_stub_status_module \</div><div class="line">--with-threads --with-file-aio</div></pre></td></tr></table></figure>
<p><br></p>
<font szie="3" color="#007FFF"><strong>其中的各个选项的意义如下：</strong></font>

<table>
<thead>
<tr>
<th>选项</th>
<th>说明</th>
</tr>
</thead>
<tbody>
<tr>
<td>—-prefix=PATH</td>
<td>指定Nginx软件的安装路径。此项如果未指定，默认为/usr/local/nginx/目录</td>
</tr>
<tr>
<td>—-conf-path=PATH</td>
<td>在未给定 -c 选项下，指定默认的 nginx.conf 路径。如果未指定，默认为 prefix/conf/</td>
</tr>
<tr>
<td>—-error-log-path=PATH</td>
<td>在nginx.conf中未指定error_log指令的情况下，指定默认的错误日志路径。如果未指定，默认为 prefix/logs/error.log</td>
</tr>
<tr>
<td>—-http-log-path=PATH</td>
<td>在nginx.conf中未指定access_log指令的情况下，指定默认的错误日志路径。如果未指定，默认为 prefix/logs/access.log</td>
</tr>
<tr>
<td>—-pid-path=PATH</td>
<td>在nginx.conf中未指定pid指令的情况下，指定默认的 nginx.pid路径。nginx.pid保存了当前运行的Nginx服务的进程号</td>
</tr>
<tr>
<td>—-lock-path=PATH</td>
<td>指定nginx.lock文件的路径。nginx.lock是Nginx服务器的锁文件。如果未指定，默认为/var/lock目录</td>
</tr>
<tr>
<td>-—user=USER</td>
<td>在nginx.conf中未指定user指令的情况下，指定默认的Nginx服务器进程的属主用户，即Nginx进程运行的用户。如果未指定，默认为nobody。</td>
</tr>
<tr>
<td>—-group=GROUP</td>
<td>在nginx.conf中未指定group指令的情况下，指定默认的Nginx服务器进程的属主用户组，即Nginx进程运行的用户组。如果未指定，默认为nobody</td>
</tr>
<tr>
<td>—-with-http_ssl_module</td>
<td>声明启用HTTP的ssl模块，这样Nginx服务器就可以支持HTTPS请求了。这个模块的正常运行需要安装 openssl库</td>
</tr>
<tr>
<td>—-with-http_v2_module</td>
<td>声明启用HTTPv2版本模块。</td>
</tr>
<tr>
<td>—-with-http_dav_module</td>
<td>声明启用HTTP的dav模块。默认不启用</td>
</tr>
<tr>
<td>—-with-http_stub_status_module</td>
<td>声明启用Server Status页。默认不启用</td>
</tr>
<tr>
<td>—-with-threads</td>
<td>声明启用线程池(1.7版本以上)</td>
</tr>
<tr>
<td>—-with-file-aio</td>
<td>声明启用异步IO(0.8版本以上)</td>
</tr>
</tbody>
</table>
<p><br></p>
<h4 id="更多编译选项点击这里"><a href="#更多编译选项点击这里" class="headerlink" title="更多编译选项点击这里"></a><a href="#编译选项">更多编译选项点击这里</a></h4><p><br></p>
<p>3、开始编译并安装</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line">$ make              #编译</div><div class="line">$ make install      #安装</div></pre></td></tr></table></figure>
<hr>
<div class="note success"><h3 id="Nginx配置文件详解"><a href="#Nginx配置文件详解" class="headerlink" title="Nginx配置文件详解"></a>Nginx配置文件详解</h3></div>
<p>安装完成之后，让我们看一看<code>Nginx</code>生成了哪些配置文件</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div></pre></td><td class="code"><pre><div class="line">$ cd /etc/nginx/</div><div class="line">$ ls</div><div class="line">conf.d                  koi-utf             scgi_params</div><div class="line">default.d               koi-win             scgi_params.default</div><div class="line">fastcgi.conf            mime.types          uwsgi_params</div><div class="line">fastcgi.conf.default    mime.types.default  uwsgi_params.default</div><div class="line">fastcgi_params          nginx.conf          win-utf</div><div class="line">fastcgi_params.default  nginx.conf.default</div></pre></td></tr></table></figure>
<p>其中<code>nginx.conf</code>是主配置文件，<code>conf.d/</code>目录下是其他配置文件</p>
<h4 id="主配置文件介绍"><a href="#主配置文件介绍" class="headerlink" title=" 主配置文件介绍 "></a><font szie="4" color="#5F9F9F"> 主配置文件介绍 </font></h4><p>让我们使用<code>vim</code>命令查看一下主配置文件：</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">$ vim /etc/nginx/nginx.conf</div></pre></td></tr></table></figure>
<p><img src="https://ws1.sinaimg.cn/large/006tNbRwly1fgl0lxboblj31h42zc4qr.jpg" alt=""></p>
<p>看了上面的图，想必不用我多解释了，各个配置段的内容以及生效范围，已经画出来了。</p>
<p>下面我们就对上面的各个配置段进行详细的介绍</p>
<h4 id="全局块-Main"><a href="#全局块-Main" class="headerlink" title=" 全局块[Main] "></a><font szie="2" color="#D98719"> 全局块[Main] </font></h4><p>全局块是默认配置文件从开始到<code>events</code>块之间的一部分内容，主要设置一些影响Nginx服务器整体运行的配置命令，因此，这些指令的作用域是Nginx服务器全局。</p>
<p><strong>Main配置段常见的配置指令：</strong></p>
<pre><code>通过查看官方帮助文档中的 Core Functionnality 即可获得详细帮助
</code></pre><h5 id="正常运行必备的配置如下"><a href="#正常运行必备的配置如下" class="headerlink" title="正常运行必备的配置如下"></a>正常运行必备的配置如下</h5><p>1、user/group：用于配置运行<code>Nginx</code>服务器用户(组)的指令是user<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line">user user [group];</div><div class="line">默认为:</div><div class="line">user nobody nobody;</div></pre></td></tr></table></figure></p>
<p>2、pid：指定存储<code>Nginx</code>主进程进程号码的文件路径</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">pid /PATH/TO/PID_FILE;</div></pre></td></tr></table></figure>
<p>3、include file | mask：指定包含进来的其他配置文件片段</p>
<p>4、load_module file：指明要装载的动态模块</p>
<p>5、sendfile on | off：直接在内核中发送响应报文，不经由用户空间</p>
<p>6、keepalive_timeout NUM：是否开启长连接模式，0为关闭</p>
<p>7、include /PATH/TO/SOME/DIR：包含哪些配置文件的目录</p>
<p>8、server_name：虚拟主机名; </p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">_;      表示匹配所有主机名</div></pre></td></tr></table></figure>
<p><br></p>
<h5 id="性能优化相关的配置："><a href="#性能优化相关的配置：" class="headerlink" title="性能优化相关的配置："></a>性能优化相关的配置：</h5><p>1、worker_processes number | auto;</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line">worker进程的数量；通常应该为当前主机的cpu的物理核心数；应该小于等于当前主机的CPU的物理核心数;</div><div class="line">auto：当前主机物理CPU核心数;</div></pre></td></tr></table></figure>
<p>2、worker_cpu_affinity auto [cpumask];</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div></pre></td><td class="code"><pre><div class="line">绑定worker进程与CPU核心</div><div class="line"></div><div class="line">CPU MASK：CPU掩码</div><div class="line">00000001：0号CPU</div><div class="line">00000010：1号CPU</div><div class="line">... ...</div></pre></td></tr></table></figure>
<p>3、worker_priority number;</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">指定worker进程的nice值，设定worker进程优先级；[-20,20]</div></pre></td></tr></table></figure>
<p>4、worker_rlimit_nofile number;</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">worker进程所能够打开的文件数量上限；</div></pre></td></tr></table></figure>
<p><br></p>
<h5 id="测试、定位选项配置"><a href="#测试、定位选项配置" class="headerlink" title="测试、定位选项配置"></a>测试、定位选项配置</h5><p>1、daemon on|off;    (在CentOS6上要开启)</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">是否以守护进程方式运行Nginx</div></pre></td></tr></table></figure>
<p>2、master_process on|off; (调试使用，输出错误信息到屏幕)</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">是否以master/worker模型运行nginx；默认为on；</div></pre></td></tr></table></figure>
<p>3、error_log file [level]; 错误日志级别</p>
<hr>
<h4 id="事件驱动-events"><a href="#事件驱动-events" class="headerlink" title=" 事件驱动[events] "></a><font szie="2" color="#D98719"> 事件驱动[events] </font></h4><p>1、worker_connections number;</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line">每个worker进程所能够打开的最大并发连接数数量；</div><div class="line">number = worker_processes * worker_connections</div></pre></td></tr></table></figure>
<p>2、use method;</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line">指明并发连接请求的处理方法；</div><div class="line">默认使用:</div><div class="line">use epoll;</div></pre></td></tr></table></figure>
<p>3、accept_mutex on | off;    (互斥锁)</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line">处理新的连接请求的方法；on意味着由各worker轮流处理新请求，Off意味着每个新请求的到达都会通知所有的worker进程；</div><div class="line">		on：起点公平</div><div class="line">		off：结果公平(更合理)</div></pre></td></tr></table></figure>
<hr>
<div class="note info"><h3 id="HTTP协议的相关配置"><a href="#HTTP协议的相关配置" class="headerlink" title="HTTP协议的相关配置"></a>HTTP协议的相关配置</h3></div>
<h4 id="与套接字相关的配置"><a href="#与套接字相关的配置" class="headerlink" title=" 与套接字相关的配置 "></a><font szie="3" color="#32CD99"> 与套接字相关的配置 </font></h4><p>1、server { … }：配置一个虚拟主机</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div></pre></td><td class="code"><pre><div class="line">server &#123;</div><div class="line">    listen address[:PORT]|PORT;</div><div class="line">    server_name SERVER_NAME;</div><div class="line">    root /PATH/TO/DOCUMENT_ROOT;</div><div class="line">    &#125;</div></pre></td></tr></table></figure>
<p>2、listen PORT|address[:port]|unix:/PATH/TO/SOCKET_FILE</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div></pre></td><td class="code"><pre><div class="line">default_server：设定为默认虚拟主机；</div><div class="line">ssl：限制仅能够通过ssl连接提供服务；强制使用443</div><div class="line">http2 | spdy：强制使用http协议</div><div class="line">backlog=number：后援队列长度；</div><div class="line">rcvbuf=size：接收缓冲区大小；</div><div class="line">sndbuf=size：发送缓冲区大小；</div></pre></td></tr></table></figure>
<p>3、server_name name …;</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div></pre></td><td class="code"><pre><div class="line">指明虚拟主机的主机名称；后可跟多个由空白字符分隔的字符串；</div><div class="line">支持*通配任意长度的任意字符；server_name *.magedu.com  www.magedu.*</div><div class="line">支持~起始的字符做正则表达式模式匹配；server_name ~^www\d+\.magedu\.com$</div><div class="line">	</div><div class="line">匹配机制：</div><div class="line">(1) 首先是字符串精确匹配;</div><div class="line">(2) 左侧*通配符；</div><div class="line">(3) 右侧*通配符；</div><div class="line">(4) 正则表达式；</div></pre></td></tr></table></figure>
<p><img src="https://ws4.sinaimg.cn/large/006tNbRwly1fgl1lqps0pg30qk0fc7wo.gif" alt=""></p>
<p>配置文件如下：</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div></pre></td><td class="code"><pre><div class="line">server &#123;</div><div class="line">   listen          8080;</div><div class="line">   server_name     www1.maxie.com;</div><div class="line">   root            /web/www1/;</div><div class="line">&#125;</div></pre></td></tr></table></figure>
<p>4、tcp_nodelay on | off;</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line">在keepalived模式下的连接是否启用TCP_NODELAY选项；</div><div class="line">当请求资源过小时，如果开启nodelay，则不管请求资源多小，都立即发送;</div><div class="line">如果off，并开启keepalived，则等待请求好几个资源</div></pre></td></tr></table></figure>
<p>5、tcp_nopush on | off;</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line">在sendfile模式下，是否启用TCP_CORK选项;</div><div class="line">在sendfile发送响应报文之前，等待用户空间把首部发过来之后，和响应报文+首部一起发给用户;</div></pre></td></tr></table></figure>
<p>6、sendfile on | off;(默认开启on)</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line">是否启用sendfile功能；</div><div class="line">直接在内核中发送响应报文，不经由用户空间</div></pre></td></tr></table></figure>
<p><br></p>
<h4 id="定义路径相关的配置"><a href="#定义路径相关的配置" class="headerlink" title=" 定义路径相关的配置 "></a><font szie="3" color="#32CD99"> 定义路径相关的配置 </font></h4><p>1、root path; (适用以下上下文 : http、server、location、if in location)</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line">设置web资源路径映射；用于指明用户请求的url所对应的本地文件系统上的文档所在目录路径；</div><div class="line">可用的位置：http, server, location, if</div></pre></td></tr></table></figure>
<p>2、location [ = | ~ | ~* | ^~ ] uri { … } </p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div></pre></td><td class="code"><pre><div class="line">其中的root可以继承于server，也可以自己创建，生效的最后是location自己定义的</div><div class="line">	</div><div class="line">在一个server中location配置段可存在多个，用于实现从uri到文件系统的路径映射；</div><div class="line">ngnix会根据用户请求的URI来检查定义的所有location，并找出一个最佳匹配，而后应用其配置；</div><div class="line">	</div><div class="line">=：对URI做精确匹配；</div><div class="line">~：对URI做正则表达式模式匹配，区分字符大小写；</div><div class="line">~*：对URI做正则表达式模式匹配，不区分字符大小写；</div><div class="line">^~：对URI的左半部分做匹配检查，不区分字符大小写；</div><div class="line">不带符号：匹配起始于此uri的所有的url；</div><div class="line">	</div><div class="line">匹配优先级：=, ^~, ～/～*，不带符号；</div></pre></td></tr></table></figure>
<p>3、alias path;</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div></pre></td><td class="code"><pre><div class="line">定义路径别名，文档映射的另一种机制；仅能用于location上下文；</div><div class="line">注意：location中使用root指令和alias指令的意义不同；</div><div class="line">	(a) root，给定的路径对应于location中的/uri/左侧的/；</div><div class="line">	(b) alias，给定的路径对应于location中的/uri/右侧的</div></pre></td></tr></table></figure>
<p>4、index file …;</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">使用于http、server、location</div></pre></td></tr></table></figure>
<p>5、error_page code … [=[response]] uri;</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div></pre></td><td class="code"><pre><div class="line">自定义错误页</div><div class="line">code：要处理的HTTP错误代码</div><div class="line">response：可选项，将 code 指定的错误代码转化为新的错误代码 response</div><div class="line">uri：错误页面的路径或者网站地址。如果设置为路径，则是以Nginx服务器安装路径下的html目录为根路径的相对路径; 如果设置为网址，则Nginx服务器会直接访问该网址获取错误页面，并返回给用户端</div></pre></td></tr></table></figure>
<p><strong>实例：</strong></p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div></pre></td><td class="code"><pre><div class="line">$ cd /etc/nginx</div><div class="line">$ vim conf.d/maxie.conf</div><div class="line">server &#123;</div><div class="line">        listen          8080;</div><div class="line">        server_name     www1.maxie.com;</div><div class="line"></div><div class="line">        location / &#123;</div><div class="line">                index   index.html index.htm;</div><div class="line">                root /web/www1/;</div><div class="line">        &#125;</div><div class="line"></div><div class="line">        location /images &#123;</div><div class="line">                alias /web/pic/;</div><div class="line">        &#125;</div><div class="line"></div><div class="line">        location ~* /source &#123;</div><div class="line">                root /web/Source/;</div><div class="line">        &#125;</div><div class="line"></div><div class="line">        error_page 404 http://www1.maxie.com:8080/404.html;</div><div class="line">&#125;</div><div class="line">$ nginx -t</div><div class="line">$ nginx -s reload</div></pre></td></tr></table></figure>
<p>打开网页进行测试：</p>
<p><img src="https://ws1.sinaimg.cn/large/006tKfTcly1fgl3m1s2r4g30qk0fc1l4.gif" alt=""></p>
<p><br></p>
<h4 id="定义客户端请求相关的配置"><a href="#定义客户端请求相关的配置" class="headerlink" title=" 定义客户端请求相关的配置 "></a><font szie="3" color="#32CD99"> 定义客户端请求相关的配置 </font></h4><p>1、keepalive_timeout timeout [header_timeout];(时间维度)</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">设定保持连接的超时时长，0表示禁止长连接；默认为75s；</div></pre></td></tr></table></figure>
<p>2、keepalive_requests number;(数量维度)</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">在一次长连接上所允许请求的资源的最大数量，默认为100;</div></pre></td></tr></table></figure>
<p>3、keepalive_disable none | browser …;</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">对哪种浏览器禁用长连接；</div></pre></td></tr></table></figure>
<p>4、send_timeout time;</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">向客户端发送响应报文的超时时长，此处，是指两次写操作之间的间隔时长；</div></pre></td></tr></table></figure>
<p>5、client_body_buffer_size size;</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line">用于接收客户端请求报文的&apos;body部分的缓冲区大小&apos;；默认为16k；超出此大小时，其将被暂存到磁盘上的由client_body_temp_path指令所定义的位置；</div><div class="line">	如果是博客或者论坛站点,可以提高缓冲区大小;如果是电商站点,则使用默认即可.</div></pre></td></tr></table></figure>
<p>6、client_body_temp_path path [level1 [level2 [level3]]];</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div></pre></td><td class="code"><pre><div class="line">设定用于存储客户端请求报文的body部分的临时存储路径及子目录结构和数量</div><div class="line"></div><div class="line">分级缓存： 	通过hash(md5sum)进行生成校验码，取校验码的第一位作为一级子目录，以此类推；也可以取2位作为一级子目录</div><div class="line">	client_body_temp_path /var/tmp/client_body  2 1 1 </div><div class="line">		1：表示用一位16进制数字表示一级子目录；0-f：16个</div><div class="line">		2：表示用2位16进程数字表示二级子目录：00-ff：16 * 256 个</div><div class="line">		2：表示用2位16进程数字表示三级子目录：00-ff：16 * 256 * 256个</div></pre></td></tr></table></figure>
<p>注意：启用此项会影响性能</p>
<p>实例：</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div></pre></td><td class="code"><pre><div class="line">$ vim conf.d/maxie.conf</div><div class="line">server &#123;</div><div class="line">        listen          8080;</div><div class="line">        server_name     www1.maxie.com;</div><div class="line">        keepalive_timeout 30s;</div><div class="line">        keepalive_requests 4;</div><div class="line">        send_timeout 3s;</div><div class="line"></div><div class="line">        client_body_buffer_size 8k;</div><div class="line">        client_body_temp_path /web/cache 1 1 1;</div><div class="line"></div><div class="line">        location / &#123;</div><div class="line">                index   index.html index.htm;</div><div class="line">                root /web/www1/;</div><div class="line">        &#125;</div><div class="line"></div><div class="line">        location /images &#123;</div><div class="line">                alias /web/pic/;</div><div class="line">        &#125;</div><div class="line"></div><div class="line"></div><div class="line"></div><div class="line">        error_page 404 http://www1.maxie.com:8080/404.html;</div><div class="line">&#125;</div></pre></td></tr></table></figure>
<p><br></p>
<h4 id="对客户端进行限制的相关配置"><a href="#对客户端进行限制的相关配置" class="headerlink" title=" 对客户端进行限制的相关配置 "></a><font szie="3" color="#32CD99"> 对客户端进行限制的相关配置 </font></h4><p>1、limit_rate rate;  (一般不开启)</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">限制响应给客户端的传输速率，单位是bytes/second，0表示无限制；</div></pre></td></tr></table></figure>
<p>2、limit_except method … { … }</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div></pre></td><td class="code"><pre><div class="line">限制除这里定义的method以外的所有method对此location的动作</div><div class="line">					</div><div class="line">limit_except GET &#123;</div><div class="line">    deny 172.16.1.20;</div><div class="line">    allow 172.16.0.0/16;</div><div class="line">    deny  all;</div><div class="line">&#125;</div></pre></td></tr></table></figure>
<p>实例：</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div></pre></td><td class="code"><pre><div class="line">$ vim conf.d/maxie.conf</div><div class="line">server &#123;</div><div class="line">        listen          8080;</div><div class="line">        server_name     www1.maxie.com;</div><div class="line">        keepalive_timeout 30s;</div><div class="line">        keepalive_requests 4;</div><div class="line">        send_timeout 3s;</div><div class="line"></div><div class="line">        client_body_buffer_size 8k;</div><div class="line">        client_body_temp_path /web/cache 1 1 1;</div><div class="line"></div><div class="line">        limit_rate 100;</div><div class="line"></div><div class="line">        location  / &#123;</div><div class="line">                index   index.html index.htm;</div><div class="line">                root /web/www1/;</div><div class="line">                limit_except PUT &#123;</div><div class="line">                        deny 172.16.1.20;</div><div class="line">                        allow 172.16.0.0/16;</div><div class="line">                        deny all;</div><div class="line">                &#125;</div><div class="line">        &#125;</div><div class="line"></div><div class="line">        location /images &#123;</div><div class="line">                alias /web/pic/;</div><div class="line">        &#125;</div><div class="line">         error_page 404 http://www1.maxie.com:8080/404.html;</div><div class="line">&#125;</div></pre></td></tr></table></figure>
<p><img src="https://ws1.sinaimg.cn/large/006tNbRwly1fglmatxa6yg30qk0fcb2m.gif" alt=""></p>
<font szie="4" color="#FF0000">总结</font>

<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line">1、开启 limit_rate 之后，客户端访问网站资源明显变慢，对用户体验极差，不建议开启;</div><div class="line">2、开启 limit_except 之后，可以对用户访问网站的请求方法进行限制，可以设置成只允许用户有 GET、HEAD、POST等方法的权限;</div><div class="line">3、limit_except METHOD:表示此方法所有人都可以方法，但是除了此方法以外的其他方法，只允许在其中设置的 allow 的用户IP使用。</div></pre></td></tr></table></figure>
<p><br></p>
<h4 id="文件操作优化的相关配置"><a href="#文件操作优化的相关配置" class="headerlink" title=" 文件操作优化的相关配置 "></a><font szie="3" color="#32CD99"> 文件操作优化的相关配置 </font></h4><p>1、aio on | off | threads[=pool];  (一般都要启用)</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">是否启用aio功能(异步IO)</div></pre></td></tr></table></figure>
<p>2、directio size | off;</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">在Linux主机启用O_DIRECT标记，此处意味文件大于等于给定的大小时使用，例如directio 4m;</div></pre></td></tr></table></figure>
<p>3、open_file_cache off; | open_file_cache max=N [inactive=time];</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div></pre></td><td class="code"><pre><div class="line">nginx可以缓存以下三种信息：</div><div class="line">(1) 文件的描述符、文件大小和最近一次的修改时间；</div><div class="line">(2) 打开的目录结构；</div><div class="line">(3) 没有找到的或者没有权限访问的文件的相关信息；</div><div class="line">	</div><div class="line">max=N：可缓存的缓存项上限；达到上限后会使用LRU算法实现缓存管理；</div><div class="line">缓存多少个文件</div><div class="line">&apos;LRU：最近最少使用算法&apos;</div><div class="line"></div><div class="line">inactive=time：缓存项的非活动时长，在此处指定的时长内未被命中的或命中的次数少于open_file_cache_min_uses指令所指定的次数的缓存项即为非活动项</div></pre></td></tr></table></figure>
<p>4、open_file_cache_valid time;</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line">缓存项有效性的检查频率；默认为60s;</div><div class="line">检查非活动时长频率</div></pre></td></tr></table></figure>
<p>5、open_file_cache_min_uses number;</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">在open_file_cache指令的inactive参数指定的时长内，至少应该被命中多少次方可被归类为活动项；</div></pre></td></tr></table></figure>
<p>6、open_file_cache_errors on | off;</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">是否缓存查找时发生错误的文件一类的信息；</div></pre></td></tr></table></figure>
<p>实例：</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div></pre></td><td class="code"><pre><div class="line">$ vim conf.d/maxie.conf</div><div class="line">server &#123;</div><div class="line">        listen          8080;</div><div class="line">        server_name     www1.maxie.com;</div><div class="line">        keepalive_timeout 30s;</div><div class="line">        keepalive_requests 4;</div><div class="line">        send_timeout 3s;</div><div class="line"></div><div class="line">        client_body_buffer_size 8k;</div><div class="line">        client_body_temp_path /web/cache 1 1 1;</div><div class="line"></div><div class="line">        limit_rate 100;</div><div class="line">        </div><div class="line">        aio on;</div><div class="line">        directio 5m;</div><div class="line">                        </div><div class="line">        location / &#123;</div><div class="line">                index   index.html index.htm;</div><div class="line">                root /web/www1/;</div><div class="line">        &#125;</div><div class="line"></div><div class="line">        location /images &#123;</div><div class="line">                alias /web/pic/;</div><div class="line">                open_file_cache max=10 inactive=20s;</div><div class="line">                open_file_cache_valid 50s;</div><div class="line">                open_file_cache_min_uses 2;</div><div class="line">                open_file_cache_errors on;</div><div class="line">                &#125;</div><div class="line">         error_page 404 http://www1.maxie.com:8080/404.html;</div><div class="line">&#125;</div></pre></td></tr></table></figure>
<p><br></p>
<h4 id="其他配置"><a href="#其他配置" class="headerlink" title=" 其他配置 "></a><font szie="3" color="#32CD99"> 其他配置 </font></h4><p>1、实现基于用户的访问控制，使用basic机制进行用户认证</p>
<p>auth_basic string | off;<br>auth_basic_user_file file;</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div><div class="line">37</div><div class="line">38</div><div class="line">39</div><div class="line">40</div><div class="line">41</div><div class="line">42</div></pre></td><td class="code"><pre><div class="line">安装http-tools工具包：</div><div class="line">$ yum install -y httpd-tools</div><div class="line"></div><div class="line">使用htpasswd生成认证用户文件：</div><div class="line">$ htpasswd -c -m /etc/nginx/.ngxpasswd tom</div><div class="line">$ htpasswd -m /etc/nginx/.ngxpasswd jerry</div><div class="line"></div><div class="line">编辑虚拟主机配置文件：</div><div class="line">$ vim conf.d/maxie.conf</div><div class="line">$ vim conf.d/maxie.conf</div><div class="line">server &#123;</div><div class="line">        listen          8080;</div><div class="line">        server_name     www1.maxie.com;</div><div class="line">        keepalive_timeout 30s;</div><div class="line">        keepalive_requests 4;</div><div class="line">        send_timeout 3s;</div><div class="line"></div><div class="line">        client_body_buffer_size 8k;</div><div class="line">        client_body_temp_path /web/cache 1 1 1;</div><div class="line"></div><div class="line">        limit_rate 100;</div><div class="line">        </div><div class="line">        aio on;</div><div class="line">        directio 5m;</div><div class="line">                        </div><div class="line">        location / &#123;</div><div class="line">                index   index.html index.htm;</div><div class="line">                root /web/www1/;</div><div class="line">        &#125;</div><div class="line"></div><div class="line">        location /images &#123;</div><div class="line">                alias /web/pic/;</div><div class="line">                open_file_cache max=10 inactive=20s;</div><div class="line">                open_file_cache_valid 50s;</div><div class="line">                open_file_cache_min_uses 2;</div><div class="line">                open_file_cache_errors on;</div><div class="line">                </div><div class="line">                auth_basic &quot;Admin Area&quot;;</div><div class="line">                auth_basic_user_file /etc/nginx/.ngxpasswd;</div><div class="line">                &#125;</div><div class="line">         error_page 404 http://www1.maxie.com:8080/404.html;</div><div class="line">&#125;</div></pre></td></tr></table></figure>
<p><img src="https://ws4.sinaimg.cn/large/006tNbRwly1fgl61r850lg30qk0fcqvc.gif" alt=""></p>
<p><br></p>
<p>2、使用ngx_http_stub_status_module模块输出nginx的基本状态信息</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div></pre></td><td class="code"><pre><div class="line">$ vim conf.d/maxie.conf</div><div class="line">在最后一个location的后面添加下面这条</div><div class="line">location /ngx_status &#123;</div><div class="line">                stub_status;</div><div class="line">        &#125;</div><div class="line">    </div><div class="line">$ nginx -t</div><div class="line">$ nginx -s reload</div></pre></td></tr></table></figure>
<p><img src="https://ws2.sinaimg.cn/large/006tNbRwly1fgl66b164xg30qk0fc1l0.gif" alt=""></p>
<p>其中的各个信息的详细解释：</p>
<table>
<thead>
<tr>
<th>Active connections</th>
<th>活动状态的连接数</th>
</tr>
</thead>
<tbody>
<tr>
<td>accepts</td>
<td>已经接受的客户端请求的总</td>
</tr>
<tr>
<td>handled</td>
<td>已经处理完成的客户端请求的总数</td>
</tr>
<tr>
<td>requests</td>
<td>客户端发来的总的请求数</td>
</tr>
<tr>
<td>Reading</td>
<td>处于读取客户端请求报文首部的连接的连接数</td>
</tr>
<tr>
<td>Writing</td>
<td>处于向客户端发送响应报文过程中的连接数</td>
</tr>
<tr>
<td>Waiting</td>
<td>处于等待客户端发出请求的空闲连接数</td>
</tr>
</tbody>
</table>
<p>3、使用ngx_http_log_module模块自定义<code>Nginx</code>日志</p>
<ul>
<li>log_format name string …; 只能定义在http段中，不能在server段中配置</li>
</ul>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">string可以使用nginx核心模块及其他模块内嵌的变量</div></pre></td></tr></table></figure>
<p>日志格式变量：</p>
<table>
<thead>
<tr>
<th>变量</th>
<th>意义</th>
</tr>
</thead>
<tbody>
<tr>
<td>$remote</td>
<td>记录客户端的IP地址</td>
</tr>
<tr>
<td>$remote_user</td>
<td>记录客户端用户名</td>
</tr>
<tr>
<td>$request</td>
<td>记录请求的URL和HTTP协议</td>
</tr>
<tr>
<td>$status</td>
<td>记录请求状态</td>
</tr>
<tr>
<td>$body_bytes_sent</td>
<td>发送给客户端的字节数，不包括响应头的大小</td>
</tr>
<tr>
<td>$connection</td>
<td>连接的序列号</td>
</tr>
<tr>
<td>$connection_requests</td>
<td>当前通过一个连接获得的请求数量</td>
</tr>
<tr>
<td>$msec</td>
<td>日志写入时间。单位为秒，精度是毫秒</td>
</tr>
<tr>
<td>$pipe</td>
<td>如果请求是通过HTTP流水线(pipelined)发送，pipe值为”p”，否则为”.”</td>
</tr>
<tr>
<td>$http_referer</td>
<td>记录从哪个页面链接访问过来的</td>
</tr>
<tr>
<td>$http_user_agent</td>
<td>记录客户端浏览器相关信息</td>
</tr>
<tr>
<td>$request_length</td>
<td>请求的长度(包括请求行，头部、正文)</td>
</tr>
<tr>
<td>$request_time</td>
<td>请求处理时间，单位为秒，精度毫秒</td>
</tr>
<tr>
<td>$time_iso8601</td>
<td>ISO8601标准格式下的本地时间</td>
</tr>
<tr>
<td>$time_local</td>
<td>通用格式下的本地时间</td>
</tr>
</tbody>
</table>
<ul>
<li>access_log path [format [buffer=size] [gzip[=level]] [flush=time] [if=condition]];</li>
</ul>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div></pre></td><td class="code"><pre><div class="line">可以在单独的location中关闭日志功能;</div><div class="line">访问日志文件路径，格式及相关的缓冲的配置；</div><div class="line">buffer=size：接收缓冲区大小，防止磁盘IO过大导致性能降低;</div><div class="line">flush=time ：刷新时间</div></pre></td></tr></table></figure>
<p>使用<code>Nginx</code>日志格式变量定义类似于httpd的combined格式的访问日志：</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div></pre></td><td class="code"><pre><div class="line">$ vim /etc/nginx/nginx.conf</div><div class="line">在http段添加如下信息：</div><div class="line">log_format  mylog   &apos;$remote_addr - $remote_user [$time_local] &quot;$request&quot;&apos;</div><div class="line">                    &apos;$status - &quot;$http_server&quot; &quot;$http_user_agent&quot;&apos;;</div><div class="line"></div><div class="line">$ vim /etc/nginx/conf.d/maxie.conf</div><div class="line">在server段添加：</div><div class="line">access_log              /var/log/nginx/www1/access.log  mylog;</div><div class="line">在status段添加：(关闭状态信息的记录日志)</div><div class="line">location /ngx_status &#123;</div><div class="line">                stub_status;</div><div class="line">                access_log off;</div><div class="line">        &#125;</div></pre></td></tr></table></figure>
<ul>
<li>open_log_file_cache max=N [inactive=time] [min_uses=N] [valid=time];</li>
</ul>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div></pre></td><td class="code"><pre><div class="line">缓存各日志文件相关的元数据信息（加速读操作)</div><div class="line"></div><div class="line">max：缓存的最大文件描述符数量；</div><div class="line">min_uses：在inactive指定的时长内访问大于等于此值方可被当作活动项；</div><div class="line">inactive：非活动时长；</div><div class="line">valid：验正缓存中各缓存项是否为活动项的时间间隔；</div></pre></td></tr></table></figure>
<p><strong>实例：</strong></p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div><div class="line">37</div><div class="line">38</div><div class="line">39</div><div class="line">40</div><div class="line">41</div><div class="line">42</div><div class="line">43</div><div class="line">44</div><div class="line">45</div></pre></td><td class="code"><pre><div class="line">$ vim /etc/nginx/conf.d/maxie.conf</div><div class="line">server &#123;</div><div class="line">        listen                  8080;</div><div class="line">        server_name             www1.maxie.com;</div><div class="line">        keepalive_timeout       30s;</div><div class="line">        keepalive_requests      4;</div><div class="line">        send_timeout            3s;</div><div class="line"></div><div class="line">        client_body_buffer_size 8k;</div><div class="line">        client_body_temp_path   /web/cache 1 1 1;</div><div class="line"></div><div class="line">        #limit_rate 100;</div><div class="line"></div><div class="line">        aio                     on;</div><div class="line">        directio                5m;</div><div class="line"></div><div class="line">        access_log              /var/log/nginx/www1/access.log  mylog buffer=16k flush=30s;</div><div class="line">        open_log_file_cache     max=1000 inactive=20s min_uses=2 valid=60s;</div><div class="line"></div><div class="line">        location / &#123;</div><div class="line">                index   index.html index.htm;</div><div class="line">                root /web/www1/;</div><div class="line">        &#125;</div><div class="line"></div><div class="line"></div><div class="line">        location /images/ &#123;</div><div class="line">                alias /web/pic/;</div><div class="line">                open_file_cache max=10 inactive=20s;</div><div class="line">                open_file_cache_valid 50s;</div><div class="line">                open_file_cache_min_uses 2;</div><div class="line">                open_file_cache_errors on;</div><div class="line"></div><div class="line">                auth_basic &quot;Admin Area&quot;;</div><div class="line">                auth_basic_user_file /etc/nginx/.ngxpasswd;</div><div class="line">        &#125;</div><div class="line"></div><div class="line"></div><div class="line">        location /ngx_status &#123;</div><div class="line">                stub_status;</div><div class="line">                access_log off;</div><div class="line">        &#125;</div><div class="line"></div><div class="line">        error_page 404 http://www1.maxie.com:8080/404.html;</div><div class="line"></div><div class="line">&#125;</div></pre></td></tr></table></figure>
<hr>
<p><br></p>
<h4 id="gzip相关的配置"><a href="#gzip相关的配置" class="headerlink" title=" gzip相关的配置 "></a><font szie="3" color="#32CD99"> gzip相关的配置 </font></h4><p>如果要查看<code>Nginx</code>支持的压缩格式有哪些：</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div><div class="line">37</div><div class="line">38</div><div class="line">39</div><div class="line">40</div><div class="line">41</div><div class="line">42</div><div class="line">43</div><div class="line">44</div><div class="line">45</div><div class="line">46</div><div class="line">47</div><div class="line">48</div><div class="line">49</div><div class="line">50</div><div class="line">51</div><div class="line">52</div><div class="line">53</div><div class="line">54</div><div class="line">55</div><div class="line">56</div><div class="line">57</div><div class="line">58</div><div class="line">59</div><div class="line">60</div><div class="line">61</div><div class="line">62</div><div class="line">63</div><div class="line">64</div><div class="line">65</div><div class="line">66</div><div class="line">67</div><div class="line">68</div><div class="line">69</div><div class="line">70</div><div class="line">71</div><div class="line">72</div><div class="line">73</div><div class="line">74</div><div class="line">75</div><div class="line">76</div><div class="line">77</div><div class="line">78</div><div class="line">79</div><div class="line">80</div><div class="line">81</div><div class="line">82</div><div class="line">83</div><div class="line">84</div><div class="line">85</div><div class="line">86</div><div class="line">87</div><div class="line">88</div><div class="line">89</div><div class="line">90</div></pre></td><td class="code"><pre><div class="line">$ cat /etc/nginx/mime.types</div><div class="line"></div><div class="line">types &#123;</div><div class="line">    text/html                             html htm shtml;</div><div class="line">    text/css                              css;</div><div class="line">    text/xml                              xml;</div><div class="line">    image/gif                             gif;</div><div class="line">    image/jpeg                            jpeg jpg;</div><div class="line">    application/javascript                js;</div><div class="line">    application/atom+xml                  atom;</div><div class="line">    application/rss+xml                   rss;</div><div class="line"></div><div class="line">    text/mathml                           mml;</div><div class="line">    text/plain                            txt;</div><div class="line">    text/vnd.sun.j2me.app-descriptor      jad;</div><div class="line">    text/vnd.wap.wml                      wml;</div><div class="line">    text/x-component                      htc;</div><div class="line"></div><div class="line">    image/png                             png;</div><div class="line">    image/tiff                            tif tiff;</div><div class="line">    image/vnd.wap.wbmp                    wbmp;</div><div class="line">    image/x-icon                          ico;</div><div class="line">    image/x-jng                           jng;</div><div class="line">    image/x-ms-bmp                        bmp;</div><div class="line">    image/svg+xml                         svg svgz;</div><div class="line">    image/webp                            webp;</div><div class="line"></div><div class="line">    application/font-woff                 woff;</div><div class="line">    application/java-archive              jar war ear;</div><div class="line">    application/json                      json;</div><div class="line">    application/mac-binhex40              hqx;</div><div class="line">    application/msword                    doc;</div><div class="line">    application/pdf                       pdf;</div><div class="line">    application/postscript                ps eps ai;</div><div class="line">    application/rtf                       rtf;</div><div class="line">    application/vnd.apple.mpegurl         m3u8;</div><div class="line">    application/vnd.ms-excel              xls;</div><div class="line">    application/vnd.ms-fontobject         eot;</div><div class="line">    application/vnd.ms-powerpoint         ppt;</div><div class="line">    application/vnd.wap.wmlc              wmlc;</div><div class="line">    application/vnd.google-earth.kml+xml  kml;</div><div class="line">    application/vnd.google-earth.kmz      kmz;</div><div class="line">    application/x-7z-compressed           7z;</div><div class="line">    application/x-cocoa                   cco;</div><div class="line">    application/x-java-archive-diff       jardiff;</div><div class="line">    application/x-java-jnlp-file          jnlp;</div><div class="line">    application/x-makeself                run;</div><div class="line">    application/x-perl                    pl pm;</div><div class="line">    application/x-pilot                   prc pdb;</div><div class="line">    application/x-rar-compressed          rar;</div><div class="line">    application/x-redhat-package-manager  rpm;</div><div class="line">    application/x-sea                     sea;</div><div class="line">    application/x-shockwave-flash         swf;</div><div class="line">    application/x-stuffit                 sit;</div><div class="line">    application/x-tcl                     tcl tk;</div><div class="line">    application/x-x509-ca-cert            der pem crt;</div><div class="line">    application/x-xpinstall               xpi;</div><div class="line">    application/xhtml+xml                 xhtml;</div><div class="line">    application/xspf+xml                  xspf;</div><div class="line">    application/zip                       zip;</div><div class="line"></div><div class="line">    application/octet-stream              bin exe dll;</div><div class="line">    application/octet-stream              deb;</div><div class="line">    application/octet-stream              dmg;</div><div class="line">    application/octet-stream              iso img;</div><div class="line">    application/octet-stream              msi msp msm;</div><div class="line"></div><div class="line">    application/vnd.openxmlformats-officedocument.wordprocessingml.document    docx;</div><div class="line">    application/vnd.openxmlformats-officedocument.spreadsheetml.sheet          xlsx;</div><div class="line">    application/vnd.openxmlformats-officedocument.presentationml.presentation  pptx;</div><div class="line"></div><div class="line">    audio/midi                            mid midi kar;</div><div class="line">    audio/mpeg                            mp3;</div><div class="line">    audio/ogg                             ogg;</div><div class="line">    audio/x-m4a                           m4a;</div><div class="line">    audio/x-realaudio                     ra;</div><div class="line"></div><div class="line">    video/3gpp                            3gpp 3gp;</div><div class="line">    video/mp2t                            ts;</div><div class="line">    video/mp4                             mp4;</div><div class="line">    video/mpeg                            mpeg mpg;</div><div class="line">    video/quicktime                       mov;</div><div class="line">    video/webm                            webm;</div><div class="line">    video/x-flv                           flv;</div><div class="line">    video/x-m4v                           m4v;</div><div class="line">    video/x-mng                           mng;</div><div class="line">    video/x-ms-asf                        asx asf;</div><div class="line">    video/x-ms-wmv                        wmv;</div><div class="line">    video/x-msvideo                       avi;</div><div class="line">&#125;</div></pre></td></tr></table></figure>
<p>1、gzip on | off; 是否开启gzip压缩功能</p>
<p>2、gzip_comp_level LEVEL; 压缩比</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">默认为1,可以设置1-9之间</div></pre></td></tr></table></figure>
<p>3、gzip_disable regex …;</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line">针对不同种类客户端发起的请求，可以选择性的开启和关闭gzip功能。(0.6.23版本以上)</div><div class="line">其中 regex 根据客户端的浏览器标志(User-Agent,UA)进行设置，支持使用正则表达式</div></pre></td></tr></table></figure>
<h5 id="以下是常见的PC以及手机浏览器的UA字符串"><a href="#以下是常见的PC以及手机浏览器的UA字符串" class="headerlink" title="以下是常见的PC以及手机浏览器的UA字符串"></a>以下是常见的PC以及手机浏览器的UA字符串</h5><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div><div class="line">37</div><div class="line">38</div><div class="line">39</div><div class="line">40</div><div class="line">41</div><div class="line">42</div><div class="line">43</div><div class="line">44</div><div class="line">45</div><div class="line">46</div><div class="line">47</div><div class="line">48</div><div class="line">49</div><div class="line">50</div><div class="line">51</div><div class="line">52</div><div class="line">53</div><div class="line">54</div><div class="line">55</div><div class="line">56</div><div class="line">57</div><div class="line">58</div><div class="line">59</div><div class="line">60</div><div class="line">61</div><div class="line">62</div><div class="line">63</div><div class="line">64</div><div class="line">65</div><div class="line">66</div><div class="line">67</div><div class="line">68</div><div class="line">69</div><div class="line">70</div><div class="line">71</div><div class="line">72</div><div class="line">73</div><div class="line">74</div><div class="line">75</div><div class="line">76</div><div class="line">77</div><div class="line">78</div><div class="line">79</div><div class="line">80</div><div class="line">81</div><div class="line">82</div><div class="line">83</div><div class="line">84</div><div class="line">85</div><div class="line">86</div><div class="line">87</div><div class="line">88</div><div class="line">89</div><div class="line">90</div><div class="line">91</div><div class="line">92</div><div class="line">93</div><div class="line">94</div><div class="line">95</div><div class="line">96</div><div class="line">97</div><div class="line">98</div><div class="line">99</div><div class="line">100</div><div class="line">101</div><div class="line">102</div><div class="line">103</div><div class="line">104</div><div class="line">105</div><div class="line">106</div><div class="line">107</div><div class="line">108</div><div class="line">109</div><div class="line">110</div><div class="line">111</div><div class="line">112</div><div class="line">113</div><div class="line">114</div><div class="line">115</div><div class="line">116</div><div class="line">117</div><div class="line">118</div><div class="line">119</div></pre></td><td class="code"><pre><div class="line">桌面</div><div class="line"></div><div class="line">============================================</div><div class="line"></div><div class="line">IE</div><div class="line">  而IE各个版本典型的userAgent如下：</div><div class="line">  Mozilla/4.0 (compatible; MSIE 8.0; Windows NT 6.0)</div><div class="line">  Mozilla/4.0 (compatible; MSIE 7.0; Windows NT 5.2)</div><div class="line">  Mozilla/4.0 (compatible; MSIE 6.0; Windows NT 5.1)</div><div class="line">  Mozilla/4.0 (compatible; MSIE 5.0; Windows NT)</div><div class="line">  其中，版本号是MSIE之后的数字。</div><div class="line"></div><div class="line">注：MSIE后面跟的数字为IE的版本号，如MSIE 8.0代表IE8, Windows NT 6.1 对应操作系统 windows 7</div><div class="line"></div><div class="line">Windows NT 6.0 对应操作系统 windows vista 　</div><div class="line">Windows NT 5.2 对应操作系统 windows 2003 　　</div><div class="line">Windows NT 5.1 对应操作系统 windows xp 　　</div><div class="line">Windows NT 5.0 对应操作系统 windows 2000   </div><div class="line"></div><div class="line">UNIX/LINUX下的为X11代替，具体可以从网上找下，百度百科上也有的。</div><div class="line"></div><div class="line">Firefox</div><div class="line">  Firefox几个版本的userAgent大致如下：</div><div class="line">  Mozilla/5.0 (Windows; U; Windows NT 5.2) Gecko/2008070208 Firefox/3.0.1</div><div class="line">  Mozilla/5.0 (Windows; U; Windows NT 5.1) Gecko/20070309 Firefox/2.0.0.3</div><div class="line">  Mozilla/5.0 (Windows; U; Windows NT 5.1) Gecko/20070803 Firefox/1.5.0.12  其中，版本号是Firefox之后的数字。</div><div class="line">注：N: 表示无安全加密 　　I: 表示弱安全加密 　　U: 表示强安全加密     上面的U代表加密等级</div><div class="line"></div><div class="line">Opera</div><div class="line">  Opera典型的userAgent如下：</div><div class="line">  Opera/9.27 (Windows NT 5.2; U; zh-cn)</div><div class="line">  Opera/8.0 (Macintosh; PPC Mac OS X; U; en)</div><div class="line">  Mozilla/5.0 (Macintosh; PPC Mac OS X; U; en) Opera 8.0 </div><div class="line">  其中，版本号是靠近Opera的数字。</div><div class="line"></div><div class="line">Safari</div><div class="line">  Safari典型的userAgent如下：</div><div class="line">  Mozilla/5.0 (Windows; U; Windows NT 5.2) AppleWebKit/525.13 (KHTML, like Gecko) Version/3.1 Safari/525.13</div><div class="line">  Mozilla/5.0 (iPhone; U; CPU like Mac OS X) AppleWebKit/420.1 (KHTML, like Gecko) Version/3.0 Mobile/4A93 Safari/419.3</div><div class="line">  其版本号是Version之后的数字。</div><div class="line"></div><div class="line">Chrome</div><div class="line">  目前，Chrome的userAgent是：</div><div class="line">Mozilla/5.0 (Windows; U; Windows NT 5.2) AppleWebKit/525.13 (KHTML, like Gecko) Chrome/0.2.149.27 Safari/525.13 </div><div class="line">  其中，版本号在Chrome之后的数字。</div><div class="line"></div><div class="line">Navigator</div><div class="line">目前，Navigator的userAgent是：</div><div class="line">Mozilla/5.0 (Windows; U; Windows NT 5.1; en-US; rv:1.8.1.12) Gecko/20080219 Firefox/2.0.0.12 Navigator/9.0.0.6</div><div class="line">其中，版本号在Navigator之后的数字。</div><div class="line"></div><div class="line">360SE                                                                                                                                                                  Mozilla/4.0 (compatible; MSIE 8.0; Windows NT 5.1; Trident/4.0; .NET CLR 2.0.50727; 360SE)</div><div class="line"></div><div class="line"></div><div class="line">360</div><div class="line"></div><div class="line">[USER_AGENT] =&gt; Mozilla/4.0 (compatible; MSIE 7.0; Windows NT 5.1; Trident/4.0; Mozilla/4.0 (compatible; MSIE 6.0; Windows NT 5.1; SV1) ; 360SE)</div><div class="line"></div><div class="line">360极速浏览器</div><div class="line"></div><div class="line">[USER_AGENT] =&gt; Mozilla/4.0 (compatible; MSIE 8.0; Windows NT 5.1; Trident/4.0; Mozilla/4.0 (compatible; MSIE 6.0; Windows NT 5.1; SV1) ;  QIHU 360EE)</div><div class="line"></div><div class="line">傲游浏览器</div><div class="line"></div><div class="line">[USER_AGENT] =&gt; Mozilla/4.0 (compatible; MSIE 7.0; Windows NT 5.1; Trident/4.0; Mozilla/4.0 (compatible; MSIE 6.0; Windows NT 5.1; SV1) ; Maxthon/3.0)</div><div class="line"></div><div class="line">TT</div><div class="line"></div><div class="line">[USER_AGENT] =&gt; Mozilla/4.0 (compatible; MSIE 7.0; Windows NT 5.1; Trident/4.0; TencentTraveler 4.0; Mozilla/4.0 (compatible; MSIE 6.0; Windows NT 5.1; SV1) )</div><div class="line"></div><div class="line">safari</div><div class="line"></div><div class="line">[USER_AGENT] =&gt; Mozilla/5.0 (Windows NT 5.1) AppleWebKit/534.55.3 (KHTML, like Gecko) Version/5.1.5 Safari/534.55.3</div><div class="line"></div><div class="line">==============================</div><div class="line"></div><div class="line">移动</div><div class="line"></div><div class="line">==============================</div><div class="line"></div><div class="line">安卓 QQ浏览器</div><div class="line"></div><div class="line">Mozilla/5.0 (Linux; U; Android 4.0.3; zh-cn; M032 Build/IML74K) AppleWebKit/533.1 (KHTML, like Gecko)Version/4.0 MQQBrowser/4.1 Mobile Safari/533.1</div><div class="line"></div><div class="line">安卓 原生浏览器</div><div class="line"></div><div class="line">Mozilla/5.0 (Linux; U; Android 4.0.3; zh-cn; M032 Build/IML74K) AppleWebKit/534.30 (KHTML, like Gecko) Version/4.0 Mobile Safari/534.30</div><div class="line"></div><div class="line">安卓 UC</div><div class="line"></div><div class="line">Mozilla/5.0 (Linux; U; Android 4.0.3; zh-cn; M032 Build/IML74K) UC AppleWebKit/534.31 (KHTML, like Gecko) Mobile Safari/534.31</div><div class="line"></div><div class="line">安卓 Opera</div><div class="line"></div><div class="line">Opera/9.80 (Android 4.0.3; Linux; Opera Mobi/ADR-1210241554) Presto/2.11.355 Version/12.10</div><div class="line"></div><div class="line">三星手机</div><div class="line"></div><div class="line">SAMSUNG-SGH-G508E/G508EZCIG2 SHP/VPP/R5 NetFront/3.4 Qtv5.3 SMM-MMS/1.2.0 profile/MIDP-2.0 configuration/CLDC-1.1</div><div class="line"></div><div class="line">iphone safria</div><div class="line"></div><div class="line">Mozilla/5.0 (iPhone; CPU iPhone OS 5_1_1 like Mac OS X) AppleWebKit/534.46 (KHTML, like Gecko) Version/5.1 Mobile/9B206 Safari/7534.48.3</div><div class="line"></div><div class="line">iphone QQ</div><div class="line"></div><div class="line">MQQBrowser/38 (iOS 4; U; CPU like Mac OS X; zh-cn)</div><div class="line"></div><div class="line">iphone UC</div><div class="line"></div><div class="line">IUC(U;iOS 5.1.1;Zh-cn;320*480;)/UCWEB8.9.1.271/42/800</div><div class="line"></div><div class="line">塞班 自带浏览器</div><div class="line"></div><div class="line">Nokia5320/04.13 (SymbianOS/9.3; U; Series60/3.2 Mozilla/5.0; Profile/MIDP-2.1 Configuration/CLDC-1.1 ) AppleWebKit/413 (KHTML, like Gecko) Safari/413</div><div class="line"></div><div class="line">塞班 QQ浏览器</div><div class="line"></div><div class="line">Nokia5320(19.01)/SymbianOS/9.1 Series60/3.0</div></pre></td></tr></table></figure>
<p>4、gzip_min_length LENGTH;</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div></pre></td><td class="code"><pre><div class="line">Gzip压缩功能能对大数据的压缩效果明显，但是如果压缩很小的数据，可能会出现越压缩数据量越大的情况(参考本站之前关于压缩的文章)。</div><div class="line">因此应该根据响应页面的大小，选择性的开启或关闭Gzip功能。</div><div class="line"></div><div class="line">该指令设置页面的字节数，当响应页面的大小小于该值时，不启用Gzip功能。</div><div class="line">默认值为20，0为不管响应页面的大小如何一律压缩。</div></pre></td></tr></table></figure>
<p><a href="http://maxiecloud.com/2017/04/08/compression-tool/">本站–压缩解压缩详解</a></p>
<p>5、gzip_buffers NUMBER SIZE;</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div></pre></td><td class="code"><pre><div class="line">该指令用于设置Gzip压缩文件使用缓存空间的大小</div><div class="line">number：指定Nginx服务器需要向系统申请缓存空间的个数</div><div class="line">size：指定每个缓存空间的大小</div><div class="line"></div><div class="line">默认情况下：number * size = 128k</div><div class="line">所以设置为：</div><div class="line">gzip_buffers 32 4k | 16 8k;</div></pre></td></tr></table></figure>
<p>6、gzip_proxied off | expired | no-cache | no-store | private | no_last_modified | no_etag | auth | any …;</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line">当Nginx作为反向代理服务器时有效;</div><div class="line">主要用于设置Nginx服务器是否对后端服务器返回的结果进行Gzip压缩。</div></pre></td></tr></table></figure>
<p><strong>各参数详解：</strong></p>
<table>
<thead>
<tr>
<th>指令</th>
<th>意义</th>
</tr>
</thead>
<tbody>
<tr>
<td>off</td>
<td>关闭Nginx服务器对后端服务器返回结果的Gzip压缩(默认设置)</td>
</tr>
<tr>
<td>expired</td>
<td>当后端服务器相应页头部包含用于指示响应数据过期时间的expired 头域时，启用对响应数据的Gzip压缩</td>
</tr>
<tr>
<td>no-cache</td>
<td>当后端…….包含用于通知所有缓存机制是否缓存的Cache-Control头域、且指令值为no-cache时，启用对响应数据的Gzip压缩</td>
</tr>
<tr>
<td>no-store</td>
<td>当后端…….包含用于通知所有缓存机制是否缓存的Cache-Control头域、且指令值为no-store时，启用对响应数据的Gzip压缩</td>
</tr>
<tr>
<td>private</td>
<td>当后端…….包含用于通知所有缓存机制是否缓存的Cache-Control头域、且指令值为private时，启用对响应数据的Gzip压缩</td>
</tr>
<tr>
<td>no_last_modified</td>
<td>当后端服务器响应页头部不包含用于指明需要获取数据最后修改时间的Last-Modified头域时，启用对响应数据的Gzip压缩</td>
</tr>
<tr>
<td>no_etag</td>
<td>当后端服务器响应页头部不包含用于标示被请求变量的实体值得ETag头域时，启用对响应数据的Gzip压缩</td>
</tr>
<tr>
<td>auth</td>
<td>当后端服务器响应页头部包含用于标示HTTP授权证书的Authorization头域时，启用对响应数据的Gzip压缩</td>
</tr>
<tr>
<td>any</td>
<td>无条件启用对后端服务器响应数据的Gzip压缩</td>
</tr>
</tbody>
</table>
<p>7、gzip_types mime-type …;</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line">压缩过滤器，仅对此处设定的MIME类型的内容启用压缩功能(默认对text/html开启功能)</div><div class="line">mime-type我们在开篇就介绍了，请自行查找</div></pre></td></tr></table></figure>
<p>8、gzip_vary on | off;</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div></pre></td><td class="code"><pre><div class="line">该指令用于设置在使用Gzip功能时，是否发送带有&quot;Vary: Accept-Encoding&quot;头域的响应头部。</div><div class="line">该头域的主要功能是告诉接收方发送的数据经过了压缩处理</div><div class="line">默认设置为 off。</div><div class="line"></div><div class="line">我们也可以通过Nginx配置的add_header指令强制达到这种效果</div><div class="line">add_header Vary Accept-Encoding gzip;</div></pre></td></tr></table></figure>
<p><em>注意：该指令在使用过程中存在bug，会导致IE4及以上浏览器的数据缓存功能失效。</em></p>
<p>实例：</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div></pre></td><td class="code"><pre><div class="line">$ vim /etc/nginx/conf.d/maxie.conf</div><div class="line">添加一条location：</div><div class="line">location /log &#123;</div><div class="line">                root /web/www1/;</div><div class="line">                gzip on;</div><div class="line">                gzip_comp_level 6;</div><div class="line">                gzip_min_length 1024;</div><div class="line">                gzip_proxied any;</div><div class="line">                gzip_types text/xml text/css application/javascript;</div><div class="line">                gzip_vary on;</div><div class="line">        &#125;</div><div class="line">$ cp /var/log/nginx/access.log /web/www1/log/index.html</div><div class="line">$ nginx -t</div><div class="line">$ nginx -s reload</div></pre></td></tr></table></figure>
<p><img src="https://ws2.sinaimg.cn/large/006tNbRwly1fglnrggdh8g30qk0fche5.gif" alt=""></p>
<hr>
<p><br></p>
<h4 id="HTTP-SSL-相关的配置"><a href="#HTTP-SSL-相关的配置" class="headerlink" title=" HTTP + SSL 相关的配置 "></a><font szie="3" color="#32CD99"> HTTP + SSL 相关的配置 </font></h4><p>HTTPS建立连接的过程：</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">TCP三次握手 --&gt; Clinet hello --&gt; 服务器回复 (Server Hello) --&gt; 服务端发送公钥 --&gt; Certificate Status --&gt; 客户端验证证书 --&gt; 密钥交换 --&gt; 传输数据</div></pre></td></tr></table></figure>
<font color="#FF0000"> <strong>注意：ssl的所有设置只能在http、server中设置</strong></font>

<p>1、ssl on | off;</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line">是否开启SSL功能</div><div class="line">为了强制开启此功能，需要在监听端口设置443以后，在443 之后加上 ssl --&gt; listen 443 ssl;</div></pre></td></tr></table></figure>
<p>2、ssl_certificate file;</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">当前虚拟主机使用PEM格式的证书文件路径</div></pre></td></tr></table></figure>
<p>3、ssl_certificate file;</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">当前虚拟主机上与其证书匹配的私钥文件路径</div></pre></td></tr></table></figure>
<p>4、ssl_protocols [SSLv2] [SSLv3] [TLSv1] [TLSv1.1] [TLSv1.2];</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">支持ssl协议的版本</div></pre></td></tr></table></figure>
<p>5、ssl_session_cache off | none | [builtin[:size]] [shared:name:size];</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div></pre></td><td class="code"><pre><div class="line">ssl缓存设置</div><div class="line">builtin[:size]：使用OpenSSL內建的缓存，此缓存为每个worker进程私有</div><div class="line">shared:name:size：在各个worker之间使用一个共享的缓存</div><div class="line"></div><div class="line">shared的目的是为了使缓存更加有效</div></pre></td></tr></table></figure>
<p>6、ssl_session_timeout time;</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">客户端一侧的连接可以复用ssl session cache中缓存 的ssl参数的有效时长；</div></pre></td></tr></table></figure>
<p>7、ssl_ciphers;</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line">ssl的加密算法 --&gt; 使用 openssl cipheres命令可以获得最全的加密算法表</div><div class="line"></div><div class="line">ssl_ciphers ALL:!aNULL:!EXPORT56:RC4+RSA:+HIGH:+MEDIUM:+LOW:+SSLv2:+EXP;</div></pre></td></tr></table></figure>
<p>默认我们使用如下配置即可：</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">ssl_ciphers HIGH:!aNULL:!MD5;</div></pre></td></tr></table></figure>
<hr>
<p><br></p>
<h5 id="在Nginx上配置一个https"><a href="#在Nginx上配置一个https" class="headerlink" title=" 在Nginx上配置一个https"></a><font size="2" color="#A67D3D"> 在Nginx上配置一个https</font></h5><p>1、自建CA</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div></pre></td><td class="code"><pre><div class="line">$ cd /etc/pki/CA/</div><div class="line">$ (umask 077;openssl genrsa -out /etc/pki/CA/private/cakey.pem 4096)</div><div class="line">$ openssl req -new -x509 -key /etc/pki/CA/private/cakey.pem -out /etc/pki/CA/cacert.pem -days 3650</div><div class="line">$ touch &#123;serial,index.txt&#125;</div><div class="line">$ echo 01 &gt; serial</div></pre></td></tr></table></figure>
<p>2、生成ssl签署请求，并让CA签署</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div></pre></td><td class="code"><pre><div class="line">$ mkdir -pv /etc/nginx/ssl </div><div class="line">$ cd /etc/nginx/ssl </div><div class="line">$ (umask 077;openssl genrsa -out /etc/nginx/ssl/nginx.key 4096)</div><div class="line">$ openssl req -new -key /etc/nginx/ssl/nginx.key -out /etc/nginx/ssl/nginx.csr -day 550</div><div class="line">$ openssl ca -in /etc/nginx/ssl/nginx.csr -out /etc/nginx/ssl/nginx.crt</div></pre></td></tr></table></figure>
<p>3、编辑虚拟主机配置文件：使其开启 SSL功能</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div></pre></td><td class="code"><pre><div class="line">$ cd /etc/nginx</div><div class="line">$ vim conf.d/maxie.conf</div><div class="line">添加如下信息在server段内：</div><div class="line">ssl                     on;</div><div class="line">        ssl_certificate         /etc/nginx/ssl/nginx.crt;</div><div class="line">        ssl_certificate_key     /etc/nginx/ssl/nginx.key;</div><div class="line">        ssl_session_timeout     1m;</div><div class="line">        ssl_protocols           SSLv2 SSLv3 tlsv1 tlsv1.2;</div><div class="line">        ssl_session_cache       shared:ssl_cache:10m;</div><div class="line">        ssl_ciphers             HIGH:!aNULL:!MD5;</div><div class="line">        </div><div class="line">并修改listen：</div><div class="line">listen 443 ssl;</div><div class="line"></div><div class="line">$ nginx -t</div><div class="line">$ nginx -s reload</div></pre></td></tr></table></figure>
<p>4、将CA公钥拷贝至客户端，并导入浏览器，测试</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">$ scp /etc/pki/CA/cacert.pem maxie@172.16.1.11:/Users/maxie/</div></pre></td></tr></table></figure>
<p><img src="https://ws2.sinaimg.cn/large/006tNbRwly1fglos1uabbg30qk0fce8a.gif" alt=""></p>
<p><strong>配置文件：</strong></p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div><div class="line">37</div><div class="line">38</div><div class="line">39</div><div class="line">40</div><div class="line">41</div><div class="line">42</div><div class="line">43</div><div class="line">44</div><div class="line">45</div><div class="line">46</div><div class="line">47</div><div class="line">48</div><div class="line">49</div><div class="line">50</div><div class="line">51</div><div class="line">52</div><div class="line">53</div><div class="line">54</div><div class="line">55</div><div class="line">56</div><div class="line">57</div><div class="line">58</div><div class="line">59</div><div class="line">60</div><div class="line">61</div><div class="line">62</div><div class="line">63</div><div class="line">64</div><div class="line">65</div><div class="line">66</div><div class="line">67</div><div class="line">68</div><div class="line">69</div><div class="line">70</div><div class="line">71</div><div class="line">72</div><div class="line">73</div><div class="line">74</div><div class="line">75</div></pre></td><td class="code"><pre><div class="line">$ vim conf.d/maxie.conf</div><div class="line">server &#123;</div><div class="line">	listen 			443 ssl;</div><div class="line">	server_name		www1.maxie.com;</div><div class="line">	keepalive_timeout 	30s;</div><div class="line">	keepalive_requests 	4;</div><div class="line">	send_timeout		3s;</div><div class="line"></div><div class="line">	ssl			on;</div><div class="line">	ssl_certificate		/etc/nginx/ssl/nginx.crt;</div><div class="line">	ssl_certificate_key	/etc/nginx/ssl/nginx.key;</div><div class="line">	ssl_session_timeout	1m;</div><div class="line">	ssl_protocols		SSLv2 SSLv3 tlsv1 tlsv1.2;</div><div class="line">	ssl_session_cache	shared:ssl_cache:10m;</div><div class="line">	ssl_ciphers		HIGH:!aNULL:!MD5;</div><div class="line"></div><div class="line"></div><div class="line">	client_body_buffer_size 8k;</div><div class="line">	client_body_temp_path 	/web/cache 1 1 1;</div><div class="line"></div><div class="line">	#limit_rate 100;</div><div class="line"></div><div class="line">	aio			on;</div><div class="line">	directio		5m;</div><div class="line"></div><div class="line"></div><div class="line"></div><div class="line">	access_log		/var/log/nginx/www1/access.log	mylog buffer=16k flush=30s;</div><div class="line">	open_log_file_cache	max=1000 inactive=20s min_uses=2 valid=60s;</div><div class="line"></div><div class="line"></div><div class="line"></div><div class="line">	location  / &#123;</div><div class="line">		index	index.html index.htm;</div><div class="line">		root /web/www1/;</div><div class="line">		limit_except PUT &#123;</div><div class="line">			deny 172.16.1.20;</div><div class="line">			allow 172.16.0.0/16;</div><div class="line">			deny all;</div><div class="line">		&#125;</div><div class="line">	&#125;</div><div class="line"></div><div class="line"></div><div class="line">	location /images/ &#123;</div><div class="line">		alias /web/pic/;</div><div class="line">		open_file_cache max=10 inactive=20s;</div><div class="line">		open_file_cache_valid 50s;</div><div class="line">		open_file_cache_min_uses 2;</div><div class="line">		open_file_cache_errors on;</div><div class="line"></div><div class="line">		auth_basic &quot;Admin Area&quot;;</div><div class="line">		auth_basic_user_file /etc/nginx/.ngxpasswd;</div><div class="line"></div><div class="line">	&#125;</div><div class="line"></div><div class="line"></div><div class="line">	location /ngx_status &#123;</div><div class="line">		stub_status;</div><div class="line">		access_log off;</div><div class="line"></div><div class="line">	&#125;</div><div class="line"></div><div class="line">	location /log &#123;</div><div class="line">		root /web/www1/;</div><div class="line">		gzip on;</div><div class="line">		gzip_comp_level 6;</div><div class="line">		gzip_min_length 1024;</div><div class="line">		gzip_proxied any;</div><div class="line">		gzip_types text/xml text/css application/javascript;</div><div class="line">		gzip_vary on;</div><div class="line">	&#125;</div><div class="line"></div><div class="line">	error_page 404 http://www1.maxie.com:8080/404.html;</div><div class="line"></div><div class="line">&#125;</div></pre></td></tr></table></figure>
<hr>
<div class="note warning"><h3 id="Nginx服务器的Rewrite功能"><a href="#Nginx服务器的Rewrite功能" class="headerlink" title="Nginx服务器的Rewrite功能"></a>Nginx服务器的Rewrite功能</h3></div>
<p>Nginx中关于Rewirte功能非常多，这里我们只介绍其中的<code>rewrite指令</code>、<code>return指令</code>、<code>if (conndition){...}指令</code></p>
<h4 id="rewirte指令"><a href="#rewirte指令" class="headerlink" title=" rewirte指令 "></a><font size="4" color="#7093DB"> rewirte指令 </font></h4><p>该指令通过正则表达式的使用来改变URL。可以同时存在一个或者多个指令。按照顺序依次对URL进行匹配和处理。</p>
<font color="#FF0000">提示：URL和URI的区别和联系</font>

<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line">URI（Universal Resource Identifier，通用资源标识符），用于对网络中的各种资源进行标识，由存放资源的主机名、片段标志和相对URI三部分组成。存放资源的主机名一般由传输协议(Scheme),主机和资源路径三部分组成；片段标志符指向资源内容的具体元素；相对URI表示资源在主机上的相对路径。一般格式为：Scheme:[//][用户名[:密码]]@主机名[:端口号][/资源路径]</div><div class="line"></div><div class="line">URL（Uniform Resource Location，统一资源定位符），是用于Internet中描述资源的字符串，是URI的子集，主要包括传输协议(Scheme)，主机(IP,端口或者域名)和资源具体地址(目录和文件名)等三部分。一般格式为：Scheme://主机名[:端口号][/资源路径]</div></pre></td></tr></table></figure>
<p><br><br>指令的语法结构：</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">rewrite regex replacement [flag]</div></pre></td></tr></table></figure>
<p>将用户请求的URI基于regex所描述的模式进行检查，匹配到时将其替换为replacement指定的新的URI；</p>
<font color="#FF0000"><em>注意：如果在同一级配置块中存在多个rewrite规则，那么会自下而下逐个检查；被某条件规则替换完成后，会重新一轮的替换检查，因此，隐含有循环机制；[flag]所表示的标志位用于控制此循环机制；</em>        </font>    

<p><br>        </p>
<p>1、regex：用于匹配URI的正则表达式，使用括号”( )”标记要截取的内容</p>
<p>2、replacement：匹配成功后用于替换URI中被截取内容的字符。默认情况下，如果该字符是由<code>http://</code>或者<code>https://</code>开头的，则不会继续向下对URI进行其他处理，而直接将重写后的URI返回给客户端。</p>
<p>3、flag：用来设置rewrite对URI的处理行为，可以为以下标志中的一个：</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div></pre></td><td class="code"><pre><div class="line">last：重写完成后停止对当前URI在当前location中后续的其它重写操作，而后对新的URI启动新一轮重写检查；提前重启新一轮循环； </div><div class="line">break：重写完成后停止对当前URI在当前location中后续的其它重写操作，而后直接跳转至重写规则配置块之后的其它配置；结束循环；</div><div class="line">redirect：重写完成后以临时重定向方式直接返回重写后生成的新URI给客户端，由客户端重新发起请求；不能以http://或https://开头；</div><div class="line">permanent:重写完成后以永久重定向方式直接返回重写后生成的新URI给客户端，由客户端重新发起请求；</div></pre></td></tr></table></figure>
<p><br><br><strong>实例1：</strong></p>
<p>如果要实现全站https则使用如下配置：</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div></pre></td><td class="code"><pre><div class="line">先把nginx.conf主配置文件内的server注释掉或者删除</div><div class="line"></div><div class="line">编辑虚拟主机配置文件</div><div class="line">$ vim conf.d/maxie.conf</div><div class="line">在https的server段之前再添加一个80的server段：</div><div class="line">server &#123;</div><div class="line">    listen 80;</div><div class="line">    server_name www1.maxie.com;</div><div class="line">    rewrite ^(.*)$ https://$&#123;server_name&#125;$1 permanent;</div><div class="line">&#125;</div></pre></td></tr></table></figure>
<font color="#FF0000"> 这里注意不要在https的server块之中配置rewrite，需要在用户只要访问默认80端口时，直接重写URL即可</font>

<p><br><br><strong>实例2：</strong></p>
<p>只要访问本站的任何<code>.jpg文件</code>都重写至<code>.png文件</code></p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div></pre></td><td class="code"><pre><div class="line">$ vim conf.d/maxie.conf</div><div class="line">添加如下location：</div><div class="line">location /png &#123;</div><div class="line">                root /web/pic/;</div><div class="line">                rewrite /(.*)\.jpg /$1.png;</div><div class="line">        &#125;</div><div class="line"></div><div class="line">拷贝png文件至/web/pic/png目录</div><div class="line">$ scp maxie@172.16.1.11:/Users/maxie/Download/Netfilter-packet-flow.svg.png /web/pic/png/net.jpg</div><div class="line"></div><div class="line">$ nginx -t</div><div class="line">$ nginx -s reload</div></pre></td></tr></table></figure>
<p><img src="https://ws3.sinaimg.cn/large/006tNbRwly1fgluffcb6vg30qk0fce8b.gif" alt=""></p>
<p><br></p>
<h4 id="return指令"><a href="#return指令" class="headerlink" title=" return指令 "></a><font size="4" color="#7093DB"> return指令 </font></h4><p>该指令用于完成对请求的处理，直接向客户端返回响应状态代码。<code>处于该指令后</code>的所有Nginx配合都是<code>无效的</code>。<br>该指令可以在server块和location块以及if块中使用</p>
<p><strong>语法结构如下：</strong></p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line">return code [ text ];</div><div class="line">return code URL;</div><div class="line">return URL;</div></pre></td></tr></table></figure>
<p><br><br>1、code：为返回给客户端的HTTP状态代码。可以返回的状态代码为<code>0 ~ 999</code>的任意HTTP状态代码。非标准的444代码可以强制关闭服务器与客户端的连接而不返回任何响应信息给客户端。</p>
<p>2、text：为返回给客户端的响应体内容，支持变量的使用</p>
<p>3、URL：为返回给客户端的URL地址</p>
<p>其中当<code>code</code>使用 301（表示被请求资源永久移动到新的位置）， 302（表示请求的资源限制临时从不同的URL响应，要求使用GET方式请求）。</p>
<p><br></p>
<h5 id="实例"><a href="#实例" class="headerlink" title="实例"></a>实例</h5><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div></pre></td><td class="code"><pre><div class="line">$ vim conf.d/maxie.conf</div><div class="line">添加以下信息：</div><div class="line">error_page 404 https://www1.maxie.com/404.html;</div><div class="line">        location ~* 404.html &#123;</div><div class="line">                return 505;</div><div class="line">        &#125;</div><div class="line">$ nginx -t </div><div class="line">$ nginx -s reload</div></pre></td></tr></table></figure>
<p><img src="https://ws3.sinaimg.cn/large/006tNbRwly1fglvsur411g30qk0fcx71.gif" alt=""></p>
<p><br></p>
<h4 id="if-conndition-指令"><a href="#if-conndition-指令" class="headerlink" title=" if (conndition) 指令 "></a><font size="4" color="#7093DB"> if (conndition) 指令 </font></h4><p>该指令用来支持条件判断，并根据条件判断结果选择不同的Nginx配置，可以在server块或者location块中配置该指令。</p>
<p><strong>语法格式：</strong></p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">if (conndition) &#123; ... &#125;</div></pre></td></tr></table></figure>
<p>其中花括号代表一个作用域，形成一个<code>if</code>配置块，是条件为真时的Nginx配置。</p>
<p><code>condition</code>：为判断条件(true/false)，它可以支持以下几种设置方法：</p>
<h5 id="变量名"><a href="#变量名" class="headerlink" title="变量名"></a>变量名</h5><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div></pre></td><td class="code"><pre><div class="line">如果变量的值为空字符串或者以&quot;0&quot;开头的任意字符串，if指令认为条件为false，其他情况认为条件为true。</div><div class="line"></div><div class="line">if ($slow) &#123;        #这里slow变量是一个布尔值的变量，如果为1则执行如下的Nginx配置；反之，不执行</div><div class="line">    ...             #Nginx配置</div><div class="line">&#125;</div></pre></td></tr></table></figure>
<h5 id="比较操作符"><a href="#比较操作符" class="headerlink" title="比较操作符"></a>比较操作符</h5><p>使用比较操作符，比较变量和字符串是否相等；相等时<code>if</code>条件为true；反之为false</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div></pre></td><td class="code"><pre><div class="line">==      是否相等</div><div class="line">!=      是否不相等</div><div class="line">~       模式匹配，区分字符大小写；</div><div class="line">~*      模式匹配，不区分字符大小写；</div><div class="line">!~      模式不匹配，区分字符大小写；</div><div class="line">!~*     模式不匹配，不区分字符大小写；</div></pre></td></tr></table></figure>
<p><strong>例子：</strong></p>
<font color="#23238E"> 如果请求方法是POST，返回405代码 </font><br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line">if ($request_method = POST) &#123;       </div><div class="line">    return 405;</div><div class="line">&#125;</div></pre></td></tr></table></figure><br><br><font color="#23238E"> 如果用户agent内包含curl字符串，返回404代码 </font><br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line">if ($http_user_agent ~ curl) &#123;</div><div class="line">                return 404;</div><div class="line">        &#125;</div></pre></td></tr></table></figure><br><br>##### 文件及目录存在性判断<br><br><strong>各判断符详解</strong><br><br>| -f | 如果请求的文件存在，if指令认为条件为true;反之，为false |<br>| — | — |<br>| !-f   | 如果请求的文件不存在，但是文件所在的目录存在，if指令认为条件为true；如果两者都不存在，或者请求的文件存在，则为false |<br>| -e | 如果请求的目录或者文件存在时，if指令认为条件为true，否则为false |<br>| !-e | 如果请求的文件和该文件所在路径上的目录都不存在，为true，否则为false |<br>| -d | 如果请求的目录存在，if指令认为条件为true；反之，为false |<br>| !-d   | 如果请求的目录不存在，但该目录的上级目录存在，if指令认为条件为true；如果该目录和他的上级目录都不存在，或者请求的目录存在，则为false； |<br>| -x     | 如果请求的文件可执行，if指令认为条件为true，否则为false |<br>| !-x | 如果请求的文件不可执行，为true；反之，为false |<br><br><br><br><strong>实例</strong><br><br><br><font color="#23238E"> 如果请求的文件不存在，则返回404响应码 </font>

<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line">if (!-f $request_filename) &#123;</div><div class="line">    return 404;</div><div class="line">   &#125;</div></pre></td></tr></table></figure>
<p><br></p>
<h4 id="referer模块"><a href="#referer模块" class="headerlink" title=" referer模块 "></a><font size="4" color="#7093DB"> referer模块 </font></h4><p>该模块经常被我们用来做网站的<code>防盗链</code>，是很有效的。</p>
<p><strong>语法格式</strong></p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">valid_referers none | blocked | server_names | string ...;</div></pre></td></tr></table></figure>
<p>各个参数详解：</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div></pre></td><td class="code"><pre><div class="line">none                请求报文首部没有referer首部</div><div class="line">blocked             请求报文的referer首部没有值</div><div class="line">server_names        服务器主机名</div><div class="line">arbitrary_string    直接字符串，但可使用*作通配符</div><div class="line">regular expression  被指定的正则表达式模式匹配到的字符串；要使用~打头，例如 ~.*\.maxie\.com;</div></pre></td></tr></table></figure>
<p><strong>实例：</strong></p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div></pre></td><td class="code"><pre><div class="line">$ vim conf.d/maxie.conf</div><div class="line">location ~* \.(jpg|png|gif|bmp)$ &#123;</div><div class="line">                valid_referers          none block server_names *.maxie.com maxie.*;</div><div class="line">                if ($invalid_referer) &#123;</div><div class="line">                        return http://www1.maxie.com/403.png;</div><div class="line">                &#125;</div><div class="line">        &#125;</div><div class="line"></div><div class="line">location = /403.png &#123;           #单独定义403.png，防止循环过多</div><div class="line">      root /web/www1;</div><div class="line">&#125;</div><div class="line"></div><div class="line">新建一个虚拟主机引用maxie.com的图片</div><div class="line">$ vim conf.d/www2.conf</div><div class="line">server &#123;</div><div class="line">        listen          80;</div><div class="line">        server_name     www2.ilinux.com;</div><div class="line">        root /web/www2/;</div><div class="line">        location / &#123;</div><div class="line">                try_files $uri $uri/ index.html;</div><div class="line">        &#125;</div><div class="line"></div><div class="line">&#125;</div><div class="line">$ mkdir -p /web/www2</div><div class="line">$ vim /web/www2/index.html</div><div class="line">&lt;h2&gt; www2.maxiecloud.com &lt;/h2&gt;</div><div class="line"></div><div class="line">&lt;img src=&quot;https://www1.maxie.com/png/java.png&quot;/&gt;        #引用maxie.com上的java.png这个图片资源</div><div class="line"></div><div class="line"></div><div class="line">$ nginx -t</div><div class="line">$ nginx -s reload</div><div class="line"></div><div class="line">配置完成之后打开浏览器检测</div></pre></td></tr></table></figure>
<p><img src="https://ws2.sinaimg.cn/large/006tNbRwly1fglz57ua3jg30qk0fcx73.gif" alt=""></p>
<hr>
<div class="note danger"><h3 id="到此我们的-Nginx-从入门到进阶【一】就算讲完了"><a href="#到此我们的-Nginx-从入门到进阶【一】就算讲完了" class="headerlink" title="到此我们的 Nginx 从入门到进阶【一】就算讲完了"></a>到此我们的 Nginx 从入门到进阶【一】就算讲完了</h3></div>
<h4 id="以上所有配置完成后的配置文件"><a href="#以上所有配置完成后的配置文件" class="headerlink" title="以上所有配置完成后的配置文件"></a>以上所有配置完成后的配置文件</h4><h5 id="代码版"><a href="#代码版" class="headerlink" title="代码版"></a>代码版</h5><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div><div class="line">37</div><div class="line">38</div><div class="line">39</div><div class="line">40</div><div class="line">41</div><div class="line">42</div><div class="line">43</div><div class="line">44</div><div class="line">45</div><div class="line">46</div><div class="line">47</div><div class="line">48</div><div class="line">49</div><div class="line">50</div><div class="line">51</div><div class="line">52</div><div class="line">53</div><div class="line">54</div><div class="line">55</div><div class="line">56</div><div class="line">57</div><div class="line">58</div><div class="line">59</div><div class="line">60</div><div class="line">61</div><div class="line">62</div><div class="line">63</div><div class="line">64</div><div class="line">65</div><div class="line">66</div><div class="line">67</div><div class="line">68</div><div class="line">69</div><div class="line">70</div><div class="line">71</div><div class="line">72</div><div class="line">73</div><div class="line">74</div><div class="line">75</div><div class="line">76</div><div class="line">77</div><div class="line">78</div><div class="line">79</div><div class="line">80</div><div class="line">81</div><div class="line">82</div><div class="line">83</div><div class="line">84</div><div class="line">85</div><div class="line">86</div><div class="line">87</div><div class="line">88</div><div class="line">89</div><div class="line">90</div><div class="line">91</div><div class="line">92</div><div class="line">93</div><div class="line">94</div><div class="line">95</div><div class="line">96</div><div class="line">97</div><div class="line">98</div><div class="line">99</div><div class="line">100</div></pre></td><td class="code"><pre><div class="line">[root@test-2 nginx]# cat conf.d/maxie.conf</div><div class="line">server &#123;</div><div class="line">    listen 80;</div><div class="line">    server_name www1.maxie.com;</div><div class="line">    return 301 https://www1.maxie.com$request_uri;</div><div class="line">&#125;</div><div class="line"></div><div class="line">server &#123;</div><div class="line">	listen 			443 ssl;</div><div class="line">	server_name		www1.maxie.com;</div><div class="line">	keepalive_timeout 	30s;</div><div class="line">	keepalive_requests 	4;</div><div class="line">	send_timeout		3s;</div><div class="line"></div><div class="line"></div><div class="line">	ssl			on;</div><div class="line">	ssl_certificate		/etc/nginx/ssl/nginx.crt;</div><div class="line">	ssl_certificate_key	/etc/nginx/ssl/nginx.key;</div><div class="line">	ssl_session_timeout	1m;</div><div class="line">	ssl_protocols		SSLv2 SSLv3 tlsv1 tlsv1.2;</div><div class="line">	ssl_session_cache	shared:ssl_cache:10m;</div><div class="line">	ssl_ciphers		HIGH:!aNULL:!MD5;</div><div class="line"></div><div class="line"></div><div class="line">	client_body_buffer_size 8k;</div><div class="line">	client_body_temp_path 	/web/cache 1 1 1;</div><div class="line"></div><div class="line">	#limit_rate 100;</div><div class="line"></div><div class="line">	aio			on;</div><div class="line">	directio		5m;</div><div class="line"></div><div class="line">	access_log		/var/log/nginx/www1/access.log	mylog buffer=16k flush=30s;</div><div class="line">	open_log_file_cache	max=1000 inactive=20s min_uses=2 valid=60s;</div><div class="line"></div><div class="line"></div><div class="line"></div><div class="line">	location  / &#123;</div><div class="line">		try_files $uri $uri/ /index.html;</div><div class="line">		root /web/www1/;</div><div class="line">		limit_except PUT &#123;</div><div class="line">			deny 172.16.1.20;</div><div class="line">			allow 172.16.0.0/16;</div><div class="line">			deny all;</div><div class="line">		&#125;</div><div class="line"></div><div class="line">	&#125;</div><div class="line"></div><div class="line">	location /images &#123;</div><div class="line">		alias /web/pic;</div><div class="line">		open_file_cache max=10 inactive=20s;</div><div class="line">		open_file_cache_valid 50s;</div><div class="line">		open_file_cache_min_uses 2;</div><div class="line">		open_file_cache_errors on;</div><div class="line"></div><div class="line">		auth_basic &quot;Admin Area&quot;;</div><div class="line">		auth_basic_user_file /etc/nginx/.ngxpasswd;</div><div class="line"></div><div class="line">	&#125;</div><div class="line"></div><div class="line"></div><div class="line">	location ~* \.(jpg|png|gif|bmp)$ &#123;</div><div class="line">		valid_referers		none block server_names *.maxie.com maxie.*;</div><div class="line">		if ($invalid_referer) &#123;</div><div class="line">			return http://www1.maxie.com/403.png;</div><div class="line">		&#125;</div><div class="line">	&#125;</div><div class="line"></div><div class="line">	location = /403.png &#123;</div><div class="line">		root /web/www1;</div><div class="line">	&#125;</div><div class="line"></div><div class="line">	location /ngx_status &#123;</div><div class="line">		stub_status;</div><div class="line">		access_log off;</div><div class="line"></div><div class="line">	&#125;</div><div class="line"></div><div class="line">	location /log &#123;</div><div class="line">		root /web/www1/;</div><div class="line">		gzip on;</div><div class="line">		gzip_comp_level 6;</div><div class="line">		gzip_min_length 1024;</div><div class="line">		gzip_proxied any;</div><div class="line">		gzip_types text/xml text/css application/javascript;</div><div class="line">		gzip_vary on;</div><div class="line">	&#125;</div><div class="line"></div><div class="line">	location /png &#123;</div><div class="line">		root /web/pic/;</div><div class="line">		rewrite /(.*)\.jpg /$1.png;</div><div class="line">	&#125;</div><div class="line"></div><div class="line"></div><div class="line">	if ($http_user_agent ~ curl) &#123;</div><div class="line">		return 404;</div><div class="line">	&#125;</div><div class="line"></div><div class="line">	error_page 404 https://www1.maxie.com/404.html;</div><div class="line">&#125;</div></pre></td></tr></table></figure>
<p>资源路径：</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div></pre></td><td class="code"><pre><div class="line">[root@test-2 nginx]# tree /web</div><div class="line">/web</div><div class="line">├── cache</div><div class="line">├── pic</div><div class="line">│   ├── 2.jpg</div><div class="line">│   ├── 3.jpg</div><div class="line">│   ├── images</div><div class="line">│   │   └── index.html</div><div class="line">│   └── png</div><div class="line">│       ├── java.png</div><div class="line">│       └── net.png</div><div class="line">├── Source</div><div class="line">│   └── source</div><div class="line">│       ├── nginx-1.10.2-1.el7.ngx.x86_64.rpm</div><div class="line">│       ├── nginx-1.12.0-1.el7.ngx.x86_64.rpm</div><div class="line">│       ├── nginx-1.12.0.tar</div><div class="line">│       ├── nginx-1.12.0.tar.gz</div><div class="line">│       ├── nginx-module-geoip-1.10.2-1.el7.ngx.x86_64.rpm</div><div class="line">│       └── nginx.vim</div><div class="line">├── www1</div><div class="line">│   ├── 403.png</div><div class="line">│   ├── 404-file</div><div class="line">│   │   └── 404.jpeg</div><div class="line">│   ├── 404.html</div><div class="line">│   ├── hello.jpg</div><div class="line">│   ├── index.html</div><div class="line">│   └── log</div><div class="line">│       └── index.html</div><div class="line">└── www2</div><div class="line">    └── index.html</div><div class="line"></div><div class="line">10 directories, 18 files</div></pre></td></tr></table></figure>
<h5 id="图片详解版"><a href="#图片详解版" class="headerlink" title="图片详解版"></a>图片详解版</h5><font size="3" color="#FF0000">图片可能分辨率过大，为了您的用户体验：请右键在新标签页中打开，或者下载之后查看</font> 

<p><img src="https://ws2.sinaimg.cn/large/006tNbRwly1fgm14s79yhj31kw2rsu0y.jpg" alt=""></p>
<hr>
<h3 id="编译选项"><a href="#编译选项" class="headerlink" title="编译选项"></a>编译选项</h3><table>
<thead>
<tr>
<th>选项</th>
<th>说明</th>
</tr>
</thead>
<tbody>
<tr>
<td>–sbin-path=path</td>
<td>设置nginx的可执行文件的路径，默认为  prefix/sbin/nginx.</td>
</tr>
<tr>
<td>–with-select_module</td>
<td>启用一个模块来允许服务器使用select()方法</td>
</tr>
<tr>
<td>–without-select_module</td>
<td>禁用一个模块来允许服务器使用select()方法</td>
</tr>
<tr>
<td>–with-poll_module</td>
<td>启用一个模块来允许服务器使用poll()方法</td>
</tr>
<tr>
<td>–without-poll_module</td>
<td>禁用一个模块来允许服务器使用poll()方法</td>
</tr>
<tr>
<td>–without-http_gzip_module</td>
<td>不编译压缩的HTTP服务器的响应模块。编译并运行此模块需要zlib库。</td>
</tr>
<tr>
<td>–without-http_rewrite_module</td>
<td>不编译重写模块。编译并运行此模块需要PCRE库支持。</td>
</tr>
<tr>
<td>–without-http_proxy_module</td>
<td>不编译http_proxy模块。</td>
</tr>
<tr>
<td>–with-pcre=path</td>
<td>设置PCRE库的源码路径。</td>
</tr>
<tr>
<td>–with-cc-opt=parameters</td>
<td>设置额外的参数将被添加到CFLAGS变量</td>
</tr>
<tr>
<td>–with-ld-opt=parameters</td>
<td>设置附加的参数，将用于在链接期间</td>
</tr>
<tr>
<td>–with-http_sub_module</td>
<td>启用sub模块。支持URL重定向功能</td>
</tr>
<tr>
<td>–with-http_memcached_module</td>
<td>启用memcache缓存</td>
</tr>
</tbody>
</table>
<hr>
<iframe frameborder="no" border="0" marginwidth="0" marginheight="0" width="330" height="86" src="//music.163.com/outchain/player?type=2&id=28798452&auto=0&height=66"></iframe>


<p>本文出自<a href="http://maxiecloud.com">Maxie’s Notes</a>博客，转载请务必保留此出处。</p>
<p><img src="https://ww1.sinaimg.cn/large/006tNbRwly1fdzc80odsuj30gn0ilq5m.jpg" alt=""></p>
]]></content>
    
    <summary type="html">
    
      &lt;span itemprop=&quot;image&quot; itemscope itemtype=&quot;http://schema.org/ImageObject&quot;&gt;&lt;img itemprop=&quot;url image&quot; src=&quot;/images/nginx.jpg&quot; class=&quot;full-image&quot; alt=&quot;nginx&quot; /&gt;&lt;meta itemprop=&quot;width&quot; content=&quot;auto&quot;&gt;&lt;meta itemprop=&quot;height&quot; content=&quot;auto&quot;&gt;&lt;/span&gt;
&lt;blockquote class=&quot;blockquote-center&quot;&gt;近几年来，Nginx逐步进入高速发展的时期，从各类主流的IT媒体到各大著名的IT论坛，我们不时能够看到它的身影。&lt;br&gt;经过逐步的改进，Nginx已成为一款高性能、功能完善、性能稳定的服务器产品。&lt;br&gt;&lt;/blockquote&gt;

&lt;p&gt;&lt;strong&gt;&lt;font size=3 color=&quot;#7093DB&quot;&gt; Nginx服务器以其功能丰富著称于世。&lt;/font&gt;&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;它既可以作为&lt;code&gt;http服务器&lt;/code&gt;，也可以作为&lt;code&gt;反向代理服务器&lt;/code&gt;；能够快速响应静态页面(HTML)的请求；支持FastCGI、SSL、Virtual Host、URL Rewirte、HTTP Basic Auth、Gzip等大量功能；并且&lt;code&gt;支持第三方&lt;/code&gt;模块扩展。&lt;/p&gt;
&lt;p&gt;在这篇博客中，我们主要对 &lt;code&gt;Nginx&lt;/code&gt; 提供的 &lt;code&gt;HTTP&lt;/code&gt;服务来讲解。&lt;/p&gt;
    
    </summary>
    
      <category term="Nginx" scheme="http://maxiecloud.com/categories/Nginx/"/>
    
    
      <category term="linux" scheme="http://maxiecloud.com/tags/linux/"/>
    
      <category term="nginx" scheme="http://maxiecloud.com/tags/nginx/"/>
    
      <category term="server" scheme="http://maxiecloud.com/tags/server/"/>
    
      <category term="web" scheme="http://maxiecloud.com/tags/web/"/>
    
      <category term="http" scheme="http://maxiecloud.com/tags/http/"/>
    
  </entry>
  
  <entry>
    <title>layer7实现禁止登陆QQ,迅雷</title>
    <link href="http://maxiecloud.com/2017/06/12/iptables-of-layer7/"/>
    <id>http://maxiecloud.com/2017/06/12/iptables-of-layer7/</id>
    <published>2017-06-12T12:03:57.000Z</published>
    <updated>2017-06-12T13:53:23.000Z</updated>
    
    <content type="html"><![CDATA[<p><img src="https://ws1.sinaimg.cn/large/006tNbRwly1fgioztll76j31hc0s7wm7.jpg" alt=""></p>
<blockquote class="blockquote-center">作为网络管理员，对p2p，QQ，迅雷等软件是又爱又恨<br>大多数公司，为了提高工作效率禁止公司员工上QQ，用迅雷下载高清无码视频，在市场上买专门的上网行为管理设备，动辄就是上万。<br>但是，如果使用Linux来做网关，一样可以禁止这些软件，成本才不到万把块钱。<br></blockquote>

<p>在使用 <code>layer7</code> 之前，我们需要知道，<code>layer7</code>是第三方的软件，而非 <code>Liunx</code>内核或者其他发行版自带的功能。所以我们要想使用其提供的功能，就要先把它编译到<code>kernel</code>中。</p>
<p>一听到<font size="3" color="#FF0000">编译内核 </font>，大多数人都会有<code>好麻烦</code>，<code>会不会出错</code>，<code>还是算了吧</code>这样的心态或者想法；但是，对于<code>Linux</code>来说，只有<strong><font color="#7093DB">永无止境的折腾</font></strong>才能学好并精通<code>Linux</code>。</p>
<p>废话不多说，下面让我们开始第一步：<code>编译Linux内核</code></p>
<hr>
<a id="more"></a>
<font size="5" color="#FF6EC7"> 实验环境： </font>

<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line">虚拟机操作系统（OS）：CentOS Linux release 7.2.1511 (Core)</div><div class="line">内核版本（Kernel）：3.10.0-327.el7.x86_64</div><div class="line">虚拟机环境：VMware Fusion 专业版 8.5.3 (4696910)</div></pre></td></tr></table></figure>
<p>这里因为要编译内核，所以尽可能增加一下虚拟机的配置</p>
<font szie="5" color="#FF0000"> /usr目录如果是单独分区，分区大小必须大于20G，以免编译时空间不足</font>

<p><strong>客户端环境：</strong><br><img src="https://ws4.sinaimg.cn/large/006tNc79ly1fg5rfg0cjsj30ga0a8dj6.jpg" alt=""></p>
<hr>
<div class="note primary"><h3 id="编译Linux内核并打layer7补丁"><a href="#编译Linux内核并打layer7补丁" class="headerlink" title="编译Linux内核并打layer7补丁"></a>编译Linux内核并打layer7补丁</h3></div>
<h4 id="1、安装基本开发库及相关依赖软件"><a href="#1、安装基本开发库及相关依赖软件" class="headerlink" title="1、安装基本开发库及相关依赖软件"></a>1、安装基本开发库及相关依赖软件</h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">$ yum -y groupinstall &quot;Development Libraries&quot; &quot;Development Tools&quot;  &quot;Server Platform Development&quot;</div></pre></td></tr></table></figure>
<h4 id="2、下载内核源码以及layer7补丁"><a href="#2、下载内核源码以及layer7补丁" class="headerlink" title="2、下载内核源码以及layer7补丁"></a>2、下载内核源码以及layer7补丁</h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line">$ wget ftp://172.16.0.1/pub/Sources/sources/iptables/* ./</div><div class="line">$ wget ftp://172.16.0.1/pub/Sources/sources/kernel/linux-2.6.32.61.tar.xz ./</div></pre></td></tr></table></figure>
<h5 id="下载好了之后将其复制到-usr-src"><a href="#下载好了之后将其复制到-usr-src" class="headerlink" title="下载好了之后将其复制到/usr/src"></a>下载好了之后将其复制到<code>/usr/src</code></h5><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div></pre></td><td class="code"><pre><div class="line">$ cp /root/linux-2.6.32.61.tar.xz /usr/src</div><div class="line">$ cp /root/netfilter-layer7-v2.23.tar.bz2 /usr/src</div><div class="line">$ cd /usr/src</div><div class="line">$ tar xf linux-2.6.32.61.tar.xz  </div><div class="line">$ tar xf netfilter-layer7-v2.23.tar.bz2 </div><div class="line">$ ln -s linux-2.6.32.61 linux </div><div class="line">$ cd /usr/src/linux </div><div class="line">$ patch -p1 &lt; ../netfilter-layer7-v2.23/kernel-2.6.32-layer7-2.23.patch </div><div class="line">$ cp /root/config-2.6.32-el6 /usr/src/linux/.config </div><div class="line">$ make menuconfig  #执行之后会出现一个让用户选择内核模块的界面,进入相应的菜单,将下面的模块选上</div></pre></td></tr></table></figure>
<h5 id="Networking-support-→-Networking-Options-→Network-packet-filtering-framework-→Core-Netfilter-Configuration"><a href="#Networking-support-→-Networking-Options-→Network-packet-filtering-framework-→Core-Netfilter-Configuration" class="headerlink" title="Networking support → Networking Options →Network packet filtering framework →Core Netfilter Configuration"></a>Networking support → Networking Options →Network packet filtering framework →Core Netfilter Configuration</h5><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div></pre></td><td class="code"><pre><div class="line">&lt;M&gt;  Netfilter connection tracking support </div><div class="line">&lt;M&gt;  “layer7” match support</div><div class="line">&lt;M&gt;  “string” match support</div><div class="line">&lt;M&gt;  “time”  match support</div><div class="line">&lt;M&gt;  “iprange”  match support</div><div class="line">&lt;M&gt;  “connlimit”  match support</div><div class="line">&lt;M&gt;  “state”  match support</div><div class="line">&lt;M&gt;  “conntrack”  connection  match support</div><div class="line">&lt;M&gt;  “mac”  address  match support</div><div class="line">&lt;M&gt;   &quot;multiport&quot; Multiple port match support</div></pre></td></tr></table></figure>
<h5 id="Networking-support-→-Networking-Options-→Network-packet-filtering-framework-→-IP-Netfilter-Configuration"><a href="#Networking-support-→-Networking-Options-→Network-packet-filtering-framework-→-IP-Netfilter-Configuration" class="headerlink" title="Networking support → Networking Options →Network packet filtering framework → IP: Netfilter Configuration"></a>Networking support → Networking Options →Network packet filtering framework → IP: Netfilter Configuration</h5><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div></pre></td><td class="code"><pre><div class="line">&lt;M&gt; IPv4 connection tracking support (required for NAT)</div><div class="line">&lt;M&gt;   Full NAT</div><div class="line">	&lt;M&gt;     MASQUERADE target support                                                                                   </div><div class="line">	&lt;M&gt;     NETMAP target support                                                                               </div><div class="line">	&lt;M&gt;     REDIRECT target support</div></pre></td></tr></table></figure>
<h5 id="编译内核"><a href="#编译内核" class="headerlink" title="编译内核"></a>编译内核</h5><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div></pre></td><td class="code"><pre><div class="line">$ yum install screen</div><div class="line">$ screen</div><div class="line">$ make </div><div class="line">$ make modules_install</div><div class="line">$ make install</div></pre></td></tr></table></figure>
<p>编译完成后记得要重启服务器，启动时选择新的内核</p>
<hr>
<div class="note success"><h3 id="编译安装iptables"><a href="#编译安装iptables" class="headerlink" title="编译安装iptables"></a>编译安装iptables</h3></div>
<h4 id="1、卸载系统上自带的iptables"><a href="#1、卸载系统上自带的iptables" class="headerlink" title="1、卸载系统上自带的iptables"></a>1、卸载系统上自带的iptables</h4><p>卸载之前要先把<code>iptables</code>的启动脚本以及配置文件备份</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line">$ cp /etc/init.d/iptables /root</div><div class="line">$ cp /etc/sysconfig/iptables-config /root</div></pre></td></tr></table></figure>
<p>卸载iptables：</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">$ rpm -e --nodeps iptables iptables-ipv6 iptstate</div></pre></td></tr></table></figure>
<h4 id="2、编译安装iptables"><a href="#2、编译安装iptables" class="headerlink" title="2、编译安装iptables"></a>2、编译安装iptables</h4><p>先下载<code>iptables-1.4.20.tar.bz2</code>包到系统的 <code>/usr/src</code>目录下，然后开始编译安装</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div></pre></td><td class="code"><pre><div class="line">$ wget ftp://172.16.0.1/pub/Sources/sources/iptables/iptables-1.4.20.tar.bz2 /usr/src</div><div class="line">$ cd /usr/src</div><div class="line">$ tar xf iptables-1.4.20.tar.bz2 </div><div class="line">$ cd iptables-1.4.20 </div><div class="line">$ cp ../netfilter-layer7-v2.23/iptables-1.4.3forward-for-kernel-2.6.20forward/libxt_layer7.* ./extensions/ </div><div class="line">$ ./configure --prefix=/usr --with-ksource=/usr/src/linux</div><div class="line">$ make </div><div class="line">$ make install</div></pre></td></tr></table></figure>
<hr>
<div class="note info"><h3 id="安装l7-protocols"><a href="#安装l7-protocols" class="headerlink" title="安装l7-protocols"></a>安装l7-protocols</h3></div>
<p><code>l7protocols</code> 是layer7所能够支持的协议包</p>
<p>下载<code>l7-protocols-2009-05-28.tar.gz</code>到/usr/src目录,然后开始编译安装</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div></pre></td><td class="code"><pre><div class="line">$ wget ftp://172.16.0.1/pub/Sources/sources/iptables/l7-protocols-2009-05-28.tar.gz /usr/src</div><div class="line">$ cd /usr/src </div><div class="line">$ tar xf l7-protocols-2009-05-28.tar.gz </div><div class="line">$ cd l7-protocols-2009-05-28 </div><div class="line">$ make install</div></pre></td></tr></table></figure>
<hr>
<div class="note warning"><h3 id="修改iptables启动脚本"><a href="#修改iptables启动脚本" class="headerlink" title="修改iptables启动脚本"></a>修改iptables启动脚本</h3></div>
<p>就是之前我们做的关于<code>iptables</code>的启动脚本与配置文件的备份</p>
<h4 id="修改iptables启动脚本"><a href="#修改iptables启动脚本" class="headerlink" title="修改iptables启动脚本"></a>修改iptables启动脚本</h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div></pre></td><td class="code"><pre><div class="line">$ cp /root/iptables-config /etc/sysconfig/</div><div class="line">$ cp /root/iptables /etc/init.d/</div><div class="line">$ chmod +x /etc/init.d/iptables</div><div class="line">$ vim /etc/init.d/iptables      #注意，这里要把所有 /sbin/$IPTABLES 替换为 /usr/sbin/$IPTABLES</div><div class="line">在vim的命令模式下输入：</div><div class="line">%s@/sbin/$IPTABLES@/usr/sbin/$IPTABLES@g   回车执行后，保存退出</div></pre></td></tr></table></figure>
<h4 id="启动iptables"><a href="#启动iptables" class="headerlink" title="启动iptables"></a>启动iptables</h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">$ service iptables restar</div></pre></td></tr></table></figure>
<hr>
<div class="note danger"><h3 id="封QQ，迅雷"><a href="#封QQ，迅雷" class="headerlink" title="封QQ，迅雷"></a>封QQ，迅雷</h3></div>
<p>使本机作为一个局域网的网关，并具有上网功能的情况下：</p>
<h4 id="封QQ"><a href="#封QQ" class="headerlink" title="封QQ"></a>封QQ</h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">$ iptables -A FORWARD -s 192.168.1.0/24 -m layer7 --l7proto qq -j REJECT</div></pre></td></tr></table></figure>
<p><img src="https://ws4.sinaimg.cn/large/006tKfTcly1fgird94hz3j30bp08zacc.jpg" alt=""></p>
<h4 id="封迅雷"><a href="#封迅雷" class="headerlink" title="封迅雷"></a>封迅雷</h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">$ iptables -A FORWARD -s 192.168.1.0/24 -m layer7 --l7proto xunlei -j REJECT</div></pre></td></tr></table></figure>
<h4 id="layer7支持百种协议"><a href="#layer7支持百种协议" class="headerlink" title="layer7支持百种协议"></a>layer7支持百种协议</h4><p>如果你想封其他程序，只需要查看程序是否在 <code>/etc/l7-protocols/protocols/</code> 目录下，如果有则<code>照猫画虎</code>似的按照上面的例子进行封杀即可。</p>
<hr>
<iframe frameborder="no" border="0" marginwidth="0" marginheight="0" width="330" height="86" src="//music.163.com/outchain/player?type=2&id=189895&auto=0&height=66"></iframe>


<p>本文出自<a href="http://maxiecloud.com">Maxie’s Notes</a>博客，转载请务必保留此出处。</p>
<p><img src="https://ww1.sinaimg.cn/large/006tNbRwly1fdzc80odsuj30gn0ilq5m.jpg" alt=""></p>
]]></content>
    
    <summary type="html">
    
      &lt;p&gt;&lt;img src=&quot;https://ws1.sinaimg.cn/large/006tNbRwly1fgioztll76j31hc0s7wm7.jpg&quot; alt=&quot;&quot;&gt;&lt;/p&gt;
&lt;blockquote class=&quot;blockquote-center&quot;&gt;作为网络管理员，对p2p，QQ，迅雷等软件是又爱又恨&lt;br&gt;大多数公司，为了提高工作效率禁止公司员工上QQ，用迅雷下载高清无码视频，在市场上买专门的上网行为管理设备，动辄就是上万。&lt;br&gt;但是，如果使用Linux来做网关，一样可以禁止这些软件，成本才不到万把块钱。&lt;br&gt;&lt;/blockquote&gt;

&lt;p&gt;在使用 &lt;code&gt;layer7&lt;/code&gt; 之前，我们需要知道，&lt;code&gt;layer7&lt;/code&gt;是第三方的软件，而非 &lt;code&gt;Liunx&lt;/code&gt;内核或者其他发行版自带的功能。所以我们要想使用其提供的功能，就要先把它编译到&lt;code&gt;kernel&lt;/code&gt;中。&lt;/p&gt;
&lt;p&gt;一听到&lt;font size=3 color=&quot;#FF0000&quot;&gt;编译内核 &lt;/font&gt;，大多数人都会有&lt;code&gt;好麻烦&lt;/code&gt;，&lt;code&gt;会不会出错&lt;/code&gt;，&lt;code&gt;还是算了吧&lt;/code&gt;这样的心态或者想法；但是，对于&lt;code&gt;Linux&lt;/code&gt;来说，只有&lt;strong&gt;&lt;font color=&quot;#7093DB&quot;&gt;永无止境的折腾&lt;/font&gt;&lt;/strong&gt;才能学好并精通&lt;code&gt;Linux&lt;/code&gt;。&lt;/p&gt;
&lt;p&gt;废话不多说，下面让我们开始第一步：&lt;code&gt;编译Linux内核&lt;/code&gt;&lt;/p&gt;
&lt;hr&gt;
    
    </summary>
    
      <category term="iptables" scheme="http://maxiecloud.com/categories/iptables/"/>
    
    
      <category term="linux" scheme="http://maxiecloud.com/tags/linux/"/>
    
      <category term="iptables" scheme="http://maxiecloud.com/tags/iptables/"/>
    
      <category term="layer7" scheme="http://maxiecloud.com/tags/layer7/"/>
    
      <category term="QQ" scheme="http://maxiecloud.com/tags/QQ/"/>
    
      <category term="xunlei" scheme="http://maxiecloud.com/tags/xunlei/"/>
    
  </entry>
  
  <entry>
    <title>iptables进阶</title>
    <link href="http://maxiecloud.com/2017/06/10/iptables-advanced/"/>
    <id>http://maxiecloud.com/2017/06/10/iptables-advanced/</id>
    <published>2017-06-10T06:38:14.000Z</published>
    <updated>2017-06-11T12:09:02.000Z</updated>
    
    <content type="html"><![CDATA[<p><img src="https://ws2.sinaimg.cn/large/006tNbRwly1fgg5yvq7kzj30xc0go7wh.jpg" alt=""></p>
<blockquote class="blockquote-center">在这章我们会介绍iptables中如何配置NAT(Network Address Translation)，<br>也就是网络地址转换的功能。<br></blockquote>

<p>在iptables中，定义NAT时，需要在自带的<code>五表</code>之中的<code>nat表</code>中定义：</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line">SNAT        源地址转换       --&gt;     POSTROUTING链</div><div class="line">DNAT        目标地址转换     --&gt;     PREROUTING链 </div><div class="line">PAT         端口转换        --&gt;     端口映射</div></pre></td></tr></table></figure>
<hr>
<a id="more"></a>
<div class="note primary"><h3 id="SNAT"><a href="#SNAT" class="headerlink" title="SNAT"></a>SNAT</h3></div>
<p>SNAT：Source NAT；请求来自内网，隐藏客户端IP地址</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">-j SNAT --to-source [ipaddr[-ipaddr]]</div></pre></td></tr></table></figure>
<h4 id="SNAT实例"><a href="#SNAT实例" class="headerlink" title=" SNAT实例"></a><font size="4" color="#7093DB"> SNAT实例</font></h4><p>实验拓扑图：</p>
<p><img src="https://ws3.sinaimg.cn/large/006tNbRwly1fgg76jvc82j312y0mvqdi.jpg" alt=""></p>
<p><code>NAT IP</code>: 172.16.1.70 ; 192.168.1.254<br><code>Client IP</code>: 172.16.1.100<br><code>http IP</code>: 192.168.1.10</p>
<p>实验目标：</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line">1、实现三台机器之间互通，开启NAT服务器的核心转发功能</div><div class="line">2、通过iptables的SNAT的功能，对http服务器隐藏客户端的IP地址</div></pre></td></tr></table></figure>
<h5 id="开启核心转发功能"><a href="#开启核心转发功能" class="headerlink" title=" 开启核心转发功能"></a><font size="3" color="#3299CC"> 开启核心转发功能</font></h5><p>在NAT服务器上进行操作:</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line">$ sysctl -w net.ipv4.ip_forward=1</div><div class="line">$ cat /proc/sys/net/ipv4/ip_forward/</div><div class="line">1</div></pre></td></tr></table></figure>
<p>在外网客户端上进行操作：</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div></pre></td><td class="code"><pre><div class="line">$ route -n</div><div class="line">Kernel IP routing table</div><div class="line">Destination     Gateway         Genmask         Flags Metric Ref    Use Iface</div><div class="line">0.0.0.0         172.16.0.1      0.0.0.0         UG    0      0        0 eth0</div><div class="line">172.16.0.0      0.0.0.0         255.255.0.0     U     100    0        0 eth0</div><div class="line"></div><div class="line">$ route del -net 0.0.0.0</div><div class="line">$ route add defalut gw 172.16.1.70</div><div class="line">$ route -n</div><div class="line">Kernel IP routing table</div><div class="line">Destination     Gateway         Genmask         Flags Metric Ref    Use Iface</div><div class="line">0.0.0.0         172.16.1.70     0.0.0.0         UG    0      0        0 eth0</div><div class="line">172.16.0.0      0.0.0.0         255.255.0.0     U     100    0        0 eth0</div></pre></td></tr></table></figure>
<p>在http服务器上的操作：</p>
<p>配置好网关为NAT服务器的内网网卡地址</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div></pre></td><td class="code"><pre><div class="line">$ route -n</div><div class="line">Kernel IP routing table</div><div class="line">Destination     Gateway         Genmask         Flags Metric Ref    Use Iface</div><div class="line">0.0.0.0         192.168.1.254   0.0.0.0         UG    100    0        0 eth0</div><div class="line">192.168.1.0     0.0.0.0         255.255.255.0   U     100    0        0 eth0</div></pre></td></tr></table></figure>
<h5 id="配置SNAT"><a href="#配置SNAT" class="headerlink" title=" 配置SNAT"></a><font size="3" color="#3299CC"> 配置SNAT</font></h5><p>在NAT服务器上进行操作：</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line">$ iptables -t nat -F</div><div class="line">$ iptables -F</div><div class="line">$ iptables -t nat -A POSTROUTING -s 172.16.0.0/16 -p tcp --dport 80 -j SNAT --to-source 192.168.1.254</div></pre></td></tr></table></figure>
<h5 id="测试SNAT"><a href="#测试SNAT" class="headerlink" title=" 测试SNAT"></a><font size="3" color="#3299CC"> 测试SNAT</font></h5><p>在外网客户端上进行操作：</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div></pre></td><td class="code"><pre><div class="line">$ curl http://192.168.1.10</div><div class="line">&lt;h1&gt; hello world&lt;/h1&gt;</div><div class="line"></div><div class="line">&lt;font size=4 color=&quot;#3299CC&quot; &gt; IP: 192.168.1.10 HTTP &lt;/font&gt;</div></pre></td></tr></table></figure>
<p>在http服务器上查看http访问日志：</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line">$ cat /var/log/httpd/access_log</div><div class="line">192.168.1.254 - - [10/Jun/2017:13:33:54 +0800] &quot;GET / HTTP/1.1&quot; 200 84 &quot;-&quot; &quot;curl/7.29.0&quot;</div></pre></td></tr></table></figure>
<hr>
<div class="note success"><h3 id="DNAT"><a href="#DNAT" class="headerlink" title="DNAT"></a>DNAT</h3></div>
<p>DNAT：Destination NAT；请求来自外网，隐藏服务器</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">-j DNAT --to-destination [ipaddr[-ipaddr]][:port[-port]]</div></pre></td></tr></table></figure>
<h4 id="DNAT实例"><a href="#DNAT实例" class="headerlink" title=" DNAT实例"></a><font size="4" color="#7093DB"> DNAT实例</font></h4><p>实验拓扑图：</p>
<p><img src="https://ws3.sinaimg.cn/large/006tNbRwly1fgg76jvc82j312y0mvqdi.jpg" alt=""></p>
<p><code>NAT IP</code>: 172.16.1.70 ; 192.168.1.254<br><code>Client IP</code>: 172.16.1.100<br><code>http IP</code>: 192.168.1.10</p>
<p>实验目标：</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line">1、实现三台机器之间互通，开启NAT服务器的核心转发功能</div><div class="line">2、通过iptables的DNAT的功能，对客户端隐藏http服务器的IP地址</div></pre></td></tr></table></figure>
<h5 id="配置DNAT"><a href="#配置DNAT" class="headerlink" title=" 配置DNAT"></a><font size="3" color="#3299CC"> 配置DNAT</font></h5><p>在NAT服务器上进行操作：</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line">$ iptables -t nat -F</div><div class="line">$ iptables -F</div><div class="line">$ iptables -t nat -A PREROUTING -d 172.16.1.70 -p tcp --dport 80 -j DNAT --to-destination 192.168.1.10</div></pre></td></tr></table></figure>
<h5 id="测试DNAT"><a href="#测试DNAT" class="headerlink" title=" 测试DNAT"></a><font size="3" color="#3299CC"> 测试DNAT</font></h5><p>在外网客户端上进行操作：</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div></pre></td><td class="code"><pre><div class="line">$ curl http://172.16.1.70</div><div class="line">&lt;h1&gt; hello world&lt;/h1&gt;</div><div class="line"></div><div class="line">&lt;font size=4 color=&quot;#3299CC&quot; &gt; IP: 192.168.1.10 HTTP &lt;/font&gt;</div></pre></td></tr></table></figure>
<p>在http服务器上查看http访问日志：</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line">$ cat /var/log/httpd/access_log</div><div class="line">192.168.1.254 - - [10/Jun/2017:13:33:54 +0800] &quot;GET / HTTP/1.1&quot; 200 84 &quot;-&quot; &quot;curl/7.29.0&quot;</div><div class="line">172.16.1.100 - - [10/Jun/2017:13:40:24 +0800] &quot;GET / HTTP/1.1&quot; 200 84 &quot;-&quot; &quot;curl/7.29.0&quot;</div></pre></td></tr></table></figure>
<hr>
<div class="note info"><h3 id="iptables-NAT转换实操视频"><a href="#iptables-NAT转换实操视频" class="headerlink" title="iptables NAT转换实操视频"></a>iptables NAT转换实操视频</h3></div>
<p>哔哩哔哩视频源：</p>
<embed height="415" width="544" quality="high" allowfullscreen="true" type="application/x-shockwave-flash" src="//static.hdslb.com/miniloader.swf" flashvars="aid=11219192&page=1" pluginspage="//www.adobe.com/shockwave/download/download.cgi?P1_Prod_Version=ShockwaveFlash">


<hr>
<div class="note warning"><h3 id="iptables放行ftp服务并使远程可以正常访问"><a href="#iptables放行ftp服务并使远程可以正常访问" class="headerlink" title="iptables放行ftp服务并使远程可以正常访问"></a>iptables放行ftp服务并使远程可以正常访问</h3></div>
<p>哔哩哔哩视频源：</p>
<embed height="415" width="544" quality="high" allowfullscreen="true" type="application/x-shockwave-flash" src="//static.hdslb.com/miniloader.swf" flashvars="aid=11216926&page=1" pluginspage="//www.adobe.com/shockwave/download/download.cgi?P1_Prod_Version=ShockwaveFlash">

<hr>
<div class="note primary"><h3 id="创建iptables配置文件开机自动导入的Unit-File文件"><a href="#创建iptables配置文件开机自动导入的Unit-File文件" class="headerlink" title="创建iptables配置文件开机自动导入的Unit File文件"></a>创建iptables配置文件开机自动导入的Unit File文件</h3></div>
<h4 id="1、先复制一份别的程序的Unit-File："><a href="#1、先复制一份别的程序的Unit-File：" class="headerlink" title="1、先复制一份别的程序的Unit File："></a>1、先复制一份别的程序的Unit File：</h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">$ cp /usr/lib/systemd/system/httpd.service /usr/lib/systemd/system/iptables.service</div></pre></td></tr></table></figure>
<h4 id="2、编辑复制好的配置文件"><a href="#2、编辑复制好的配置文件" class="headerlink" title="2、编辑复制好的配置文件"></a>2、编辑复制好的配置文件</h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div></pre></td><td class="code"><pre><div class="line">$ vim /usr/lib/systemd/system/iptables.service</div><div class="line">[Unit]</div><div class="line">Description=iptables rules constructor	#描述</div><div class="line">After=network.target remote-fs.target nss-lookup.target</div><div class="line"></div><div class="line">[Service]</div><div class="line">Type=notify</div><div class="line">ExecStart=/usr/sbin/iptables-restore /root/iptables-rules/rules1		#启动时执行</div><div class="line">ExecReload=/usr/sbin/iptables-restore /root/iptables-rules/rules1		#重载时执行</div><div class="line">ExecStop=/usr/sbin/iptables -F          #停止时执行</div><div class="line"></div><div class="line">[Install]</div><div class="line">WantedBy=multi-user.target		#多用户模式下运行</div></pre></td></tr></table></figure>
<h4 id="3、装载配置文件"><a href="#3、装载配置文件" class="headerlink" title="3、装载配置文件"></a>3、装载配置文件</h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">$ systemctl daemon-reload</div></pre></td></tr></table></figure>
<h4 id="4、启动自定义配置"><a href="#4、启动自定义配置" class="headerlink" title="4、启动自定义配置"></a>4、启动自定义配置</h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line">$ systemctl enable iptables</div><div class="line">$ systemctl start iptables</div></pre></td></tr></table></figure>
<hr>
<font size="5" color="#70DBDB"> 呃。。。这篇博客可能写的有点不太完善，有点草草应付了事的样子，最近为了学习Nginx，练习iptables，实在是无暇完善博客内容了。该做的都录屏了，以后再完善吧</font>

<hr>
<iframe frameborder="no" border="0" marginwidth="0" marginheight="0" width="330" height="86" src="//music.163.com/outchain/player?type=2&id=32272267&auto=1&height=66"></iframe>

<p>本文出自<a href="http://maxiecloud.com">Maxie’s Notes</a>博客，转载请务必保留此出处。</p>
<p><img src="https://ww1.sinaimg.cn/large/006tNbRwly1fdzc80odsuj30gn0ilq5m.jpg" alt=""></p>
]]></content>
    
    <summary type="html">
    
      &lt;p&gt;&lt;img src=&quot;https://ws2.sinaimg.cn/large/006tNbRwly1fgg5yvq7kzj30xc0go7wh.jpg&quot; alt=&quot;&quot;&gt;&lt;/p&gt;
&lt;blockquote class=&quot;blockquote-center&quot;&gt;在这章我们会介绍iptables中如何配置NAT(Network Address Translation)，&lt;br&gt;也就是网络地址转换的功能。&lt;br&gt;&lt;/blockquote&gt;

&lt;p&gt;在iptables中，定义NAT时，需要在自带的&lt;code&gt;五表&lt;/code&gt;之中的&lt;code&gt;nat表&lt;/code&gt;中定义：&lt;/p&gt;
&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;1&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;2&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;3&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;SNAT        源地址转换       --&amp;gt;     POSTROUTING链&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;DNAT        目标地址转换     --&amp;gt;     PREROUTING链 &lt;/div&gt;&lt;div class=&quot;line&quot;&gt;PAT         端口转换        --&amp;gt;     端口映射&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;hr&gt;
    
    </summary>
    
      <category term="iptables" scheme="http://maxiecloud.com/categories/iptables/"/>
    
    
      <category term="linux" scheme="http://maxiecloud.com/tags/linux/"/>
    
      <category term="iptables" scheme="http://maxiecloud.com/tags/iptables/"/>
    
      <category term="nat" scheme="http://maxiecloud.com/tags/nat/"/>
    
      <category term="DNAT" scheme="http://maxiecloud.com/tags/DNAT/"/>
    
      <category term="SNAT" scheme="http://maxiecloud.com/tags/SNAT/"/>
    
  </entry>
  
  <entry>
    <title>iptables从入门到&quot;放弃&quot;</title>
    <link href="http://maxiecloud.com/2017/06/09/iptables-and-netfilter/"/>
    <id>http://maxiecloud.com/2017/06/09/iptables-and-netfilter/</id>
    <published>2017-06-09T11:24:50.000Z</published>
    <updated>2017-06-09T14:55:00.000Z</updated>
    
    <content type="html"><![CDATA[<p><img src="https://ws1.sinaimg.cn/large/006tKfTcly1fgf6igu3zwj30xc0go7wh.jpg" alt=""></p>
<blockquote class="blockquote-center">iptables是一个配置 Linux内核 防火墙的命令行工具，是 netfilter 项目的一部分。<br>术语 iptables 也经常代指该内核级防火墙。<br>iptables可以直接配置，也可以通过 CentOS7中的新特性–firewalld 和图形界面配置。<br>iptables 适用于ipv4, ip6tables 适用于ipv6。<br></blockquote>

<p>在介绍如何在 Linux中使用与配置<code>iptables</code>之前，让我们先对<font color="#FF000">防火墙</font>有一个简单的理解：</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div></pre></td><td class="code"><pre><div class="line">它是一种位于内部网络与外部网络之间的网络安全系统。</div><div class="line">一项信息安全的防护系统，依照特定的规则，允许或是限制传输的数据通过。</div><div class="line">内部网络和外部网络之间的所有网络数据流都必须经过防火墙，这是防火墙所处网络位置特性，同时也是一个前提。</div><div class="line">因为只有当防火墙是内、外部网络之间通信的唯一通道，才可以全面、有效地保护企业网内部网络不受侵害，所以防火墙一般部署在内网的最外层。</div></pre></td></tr></table></figure>
<a id="more"></a>
<h2 id="iptables发展历史简介"><a href="#iptables发展历史简介" class="headerlink" title="iptables发展历史简介"></a>iptables发展历史简介</h2><h3 id="ipfirewall"><a href="#ipfirewall" class="headerlink" title="ipfirewall"></a>ipfirewall</h3><p>ipfirewall，简称<code>ipfw</code>，在<a href="https://zh.wikipedia.org/wiki/FreeBSD" target="_blank" rel="external">FreeBSD</a>上开发的IP封包过滤程式，具备防火墙功能，由FreeBSD开发团队负责维护。它曾被移植到多个平台上，Mac OS X曾经采用它作为预设防火墙，直到Mac OS X 10.7 Lion 采用另一个FreeBSD程式<a href="https://www.freebsd.org/doc/handbook/firewalls-pf.html" target="_blank" rel="external">PF</a>。在1994年，<a href="https://zh.wikipedia.org/wiki/%E8%89%BE%E5%80%AB%C2%B7%E8%80%83%E5%85%8B%E6%96%AF" target="_blank" rel="external">艾伦·考克斯</a>曾经将它移植到Linux 1.1上，作为Linux的预设防火墙，直到Linux2.4 采用iptable来取代</p>
<h3 id="ipchains"><a href="#ipchains" class="headerlink" title="ipchains"></a>ipchains</h3><p>Linux IP Firewalling Chains，一般称为ipchains，一种自由软件，在Linux内核2.2系列中运作，可用来作为封包过滤与防火墙功能之用。它被设计来取代旧有的ipfwadm，在Linux内核2.4系列中被iptables取代。</p>
<h3 id="iptables"><a href="#iptables" class="headerlink" title="iptables"></a>iptables</h3><p>iptables，一个运行在用户空间的应用软件，通过控制Linux内核netfilter模块，来管理网络数据包的流动与转送。在大部分的Linux系统上面，iptables是使用/usr/sbin/iptables来操作，文件则放置在手册页（Man page）底下，可以通过 man iptables 指令获取。通常iptables都需要内核层级的模块来配合运作，Xtables是主要在内核层级里面iptables API运作功能的模块。因相关动作上的需要，iptables的操作需要用到超级用户的权限。</p>
<p>目前iptables系在2.4、2.6及3.0的内核底下运作，旧版的Linux内核（2.2）使用ipchains及<font color="#FF000">ipwadm（Linux 2.0)</font>来达成类似的功能，2014年1月19日起发行的新版Linux内核（3.13后）则使用<font color="#FF000">nftables</font>取而代之。</p>
<hr>
<div class="note primary"><h2 id="iptables简介"><a href="#iptables简介" class="headerlink" title="iptables简介"></a>iptables简介</h2></div>
<p>iptables其实应该叫<code>netfilter/iptables</code>它实际上由两个组件<code>netfilter</code> 和 <code>iptables</code> 组成。</p>
<p><code>netfilter</code> 组件也称为内核空间（kernelspace），是内核的一部分，由一些信息包过滤表组成，这些表包含内核用来控制信息包过滤处理的规则集。<br><code>iptables</code> 组件是一种规则编写工具，也称为用户空间（userspace），它使插入、修改和除去信息包过滤表中的规则变得容易。</p>
<h3 id="iptables是定义规则的工具"><a href="#iptables是定义规则的工具" class="headerlink" title="iptables是定义规则的工具"></a>iptables是定义规则的工具</h3><p>iptables本身并不算是防火墙。它定义的规则，可以让内核空间当中的 netfilter 来读取，并且实现让防火墙工作。而放入内核的地方必须要是特定的位置，必须是 <code>tcp/ip</code>的协议栈经过的地方。<br>而这个<code>tcp/ip</code>协议栈必须经过的地方，可以实现读取规则的地方就叫做 <code>netfilter</code>(网络过滤器)</p>
<h3 id="Hook-functions"><a href="#Hook-functions" class="headerlink" title="Hook functions"></a>Hook functions</h3><p>在Linux的内核空间中有五个位置可以对数据包进行过滤：</p>
<p><img src="https://ws1.sinaimg.cn/large/006tKfTcly1fgf8vso1paj31kw0x8azk.jpg" alt=""></p>
<p>由上图可以看出：<br>一个数据包经过时，必须经过这五个关卡中的其一个或多个，而每个关卡都可以做相关的<code>规则</code>来进行限制，而这个关卡就叫做<code>Chain(链)</code>，每个关卡都会通过数据包的特征来进行判断（IP、port等）</p>
<p>iptables的表有四种，顾名思义，每个表的名字都已经高度概括了其功能，即<code>filter表</code>、<code>nat表</code>、<code>mangle</code>表和<code>raw表</code>，分别用于实现包过滤（防火墙），网络地址转换、包重构(修改)和数据跟踪处理，而每个表又定义了不同的链组合：</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div></pre></td><td class="code"><pre><div class="line">raw: INPUT,FORWARD,OUTPUT</div><div class="line">nat: PREROUTING,INPUT,OUTPUT,POSTROUTING</div><div class="line">mangle: PREROUTING,INPUT,OUTPUT,POSTROUTING</div><div class="line">filter: INPUT,FORWARD,OUTPUT</div></pre></td></tr></table></figure>
<p>其中表与表之间的优先级也就是：<code>raw</code> &gt; <code>mangle</code> &gt; <code>nat</code> &gt; <code>filter</code></p>
<p><strong>由图可以分析得出，其中的报文流向也就是：</strong></p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line">流入本机：PREROUTING --&gt; INPUT</div><div class="line">由本机流出：OUTPUT --&gt; POSTROUTING</div><div class="line">转发： PREROUTING --&gt; FORWARD --&gt; POSTROUTING</div></pre></td></tr></table></figure>
<hr>
<div class="note success"><h2 id="iptables规则的组成部分"><a href="#iptables规则的组成部分" class="headerlink" title="iptables规则的组成部分"></a>iptables规则的组成部分</h2></div>
<p>根据规则匹配条件来尝试匹配报文，一旦匹配成功，就由规则定义的处理动作做出处理。</p>
<h3 id="匹配条件"><a href="#匹配条件" class="headerlink" title="匹配条件"></a>匹配条件</h3><p>基本匹配条件：源地址，目标地址，传输层协议<br>扩展匹配条件：由扩展模块定义</p>
<p>隐式扩展：无需知名扩展模块的扩展机制<br>显式扩展：必须指明要调用的扩展模块的扩展机制</p>
<h3 id="处理动作-跳转目标"><a href="#处理动作-跳转目标" class="headerlink" title="处理动作(跳转目标)"></a>处理动作(跳转目标)</h3><p>基本处理动作：ACCEPT、DROP<br>扩展处理动作：REJECT、RETURN、LOG、REDIRECT</p>
<h3 id="iptables的链：内置链和自定义链"><a href="#iptables的链：内置链和自定义链" class="headerlink" title="iptables的链：内置链和自定义链"></a>iptables的链：内置链和自定义链</h3><p>内置链：对应于hook functions<br>自定义链接：用于内置链的扩展和补充，可实现更灵活的规则管理机制；自定义链可以设置完之后，添加到内置链中，方便管理</p>
<h3 id="添加规则时需要考量的因素"><a href="#添加规则时需要考量的因素" class="headerlink" title="添加规则时需要考量的因素"></a>添加规则时需要考量的因素</h3><p>(1) 实现的功能：用于判定将规则添加至哪个表；<br>(2) 报文的流经位置：用于判断将规则添加至哪个链；<br>(3) 报文的流向：判定规则中何为”源“，何为”目标“；<br>(4) 匹配条件：用于编写正确的匹配规则；</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line">专用于某种应用的同类规则，匹配范围小的放前面；</div><div class="line">专用于某些应用的不同类规则，匹配到的可能性较多的放前面；同一类别的规则可使用自定义链单独存放；访问量大的放前面，访问量小的放后面</div><div class="line">用于通用目的的规则放前面；</div></pre></td></tr></table></figure>
<p><strong>链：    链上的规则次序，即为检查的次序；因此，隐含一定的应用法则：</strong></p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div></pre></td><td class="code"><pre><div class="line">(1)同类规则（访问统一应用），匹配范围小的放上面；</div><div class="line">(2)不同类的规则(访问不同应用)，匹配到报文频率较大的放在上面</div><div class="line">(3)将那些可由一条规则描述的多个规则合并起来；</div><div class="line">(4)设置默认策略</div></pre></td></tr></table></figure>
<hr>
<div class="note info"><h2 id="iptables命令详解"><a href="#iptables命令详解" class="headerlink" title="iptables命令详解"></a>iptables命令详解</h2></div>
<h3 id="安装"><a href="#安装" class="headerlink" title="安装"></a>安装</h3><p><code>netfilter</code>：位于内核中的tcp/ip协议栈报文处理框架<br><code>iptables</code>：</p>
<p>CentOS5/6：iptables命令生成规则，可保存于文件中以反复装载生效</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line">$ iptables -t filter -F     #清空filter表的规则</div><div class="line">$ service iptables save     #保存iptables规则</div></pre></td></tr></table></figure>
<p>CentOS 7：firewalld, firewall-cmd, firewall-config</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">$ systemctl start firewalld.service     #开启防火墙，自动生成规则</div></pre></td></tr></table></figure>
<h3 id="iptables命令"><a href="#iptables命令" class="headerlink" title="iptables命令"></a>iptables命令</h3><p>iptables是高度模块化的，由诸多扩展模块实现其检查条件或处理动作的</p>
<p>模块文件：</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div></pre></td><td class="code"><pre><div class="line">/usr/lib64/xtables/</div><div class="line"></div><div class="line">IPv4使用范围的模块文件：libip6t_*</div><div class="line">IPv6使用范围的模块文件：libipt_*,libxt_*</div></pre></td></tr></table></figure>
<h4 id="命令格式"><a href="#命令格式" class="headerlink" title="命令格式"></a>命令格式</h4><p><code>iptables [-t table] COMMAND chain [-m matchname [per-match-options]] -j targetname [per-target-options]</code></p>
<p><img src="https://ws1.sinaimg.cn/large/006tKfTcly1fgf9zcpfsmj30s30kttag.jpg" alt=""></p>
<h4 id="t-table"><a href="#t-table" class="headerlink" title="-t table"></a><font size="5" color="#7093DB">-t table</font></h4><p><code>raw表</code>：<br>Chain：</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line">PREROUTING</div><div class="line">OUTPUT</div></pre></td></tr></table></figure>
<p><br><br><code>mangle表：</code><br>Chain：</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div></pre></td><td class="code"><pre><div class="line">PREROUTING</div><div class="line">INPUT</div><div class="line">FORWARD</div><div class="line">OUTPUT</div><div class="line">POSTROUTING</div></pre></td></tr></table></figure>
<p><br><br><code>nat表：</code><br>Chain</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div></pre></td><td class="code"><pre><div class="line">PREROUTING</div><div class="line">INPUT</div><div class="line">OUTPUT</div><div class="line">POSTROUTING</div></pre></td></tr></table></figure>
<p><br><br><code>filter表：</code><br>Chain：</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line">INPUT</div><div class="line">OUTPUT</div><div class="line">FORWARD</div></pre></td></tr></table></figure>
<h4 id="COMMAND"><a href="#COMMAND" class="headerlink" title="COMMAND"></a><font size="5" color="#FF2400">COMMAND</font></h4><p><strong>链管理：</strong></p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div></pre></td><td class="code"><pre><div class="line">-N，--new-chain CHAIN                    新建一个自定义的规则链</div><div class="line">-X，--delete-chain CHAIN                 删除用户自定义的且引用计数为0的空链</div><div class="line">-F，--flush [CHAIN]                      清空指定的规则链上的规则</div><div class="line">-E，--rename-chain old-CHAIN new-CHAIN   重命名链</div><div class="line">-Z，--zero [CHAIN [rulenum]]             置零计数器</div><div class="line">-P，--policy CHAIN target                设置默认策略(ACCEPT/DROP/REJECT)</div></pre></td></tr></table></figure>
<p><strong>规则管理</strong></p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div></pre></td><td class="code"><pre><div class="line">-A, --append chain rule-specification               追加新规则于指定链的尾部； </div><div class="line">-I, --insert chain [rulenum] rule-specification     插入新规则于指定链的指定位置，默认为首部；</div><div class="line">-R, --replace chain rulenum rule-specification      替换指定的规则为新的规则；</div><div class="line">-D, --delete chain rulenum                          根据规则编号删除规则；</div><div class="line">-D, --delete chain rule-specification               根据规则本身删除规则；</div></pre></td></tr></table></figure>
<p><strong>规则显示</strong></p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div></pre></td><td class="code"><pre><div class="line">-L, --list [chain]：列出规则</div><div class="line">子命令：	</div><div class="line">	-v, --verbose      详细信息； </div><div class="line">		-vv        更详细信息；</div><div class="line">	-n, --numeric      数字格式显示主机地址和端口号；</div><div class="line">	-x, --exact        显示计数器的精确值，而非圆整后的数据；</div><div class="line">	--line-numbers     列出规则时，显示其在链上的相应的编号；</div><div class="line"></div><div class="line">查看单个链：</div><div class="line">$ iptables -vnL INPUT  </div><div class="line"></div><div class="line">-S, --list-rules [chain]：显示指定链的所有规则</div></pre></td></tr></table></figure>
<h4 id="PARAMETER-AND-MATCH-EXTENSIONS"><a href="#PARAMETER-AND-MATCH-EXTENSIONS" class="headerlink" title="PARAMETER AND MATCH EXTENSIONS"></a><font size="5" color="#9932CD">PARAMETER AND MATCH EXTENSIONS</font></h4><h5 id="通用匹配"><a href="#通用匹配" class="headerlink" title="通用匹配"></a><strong>通用匹配</strong></h5><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div></pre></td><td class="code"><pre><div class="line">[!] -s, --source address[/mask][,...]           检查报文的&apos;源IP地址&apos;是否符合此处指定的范围，或是否等于此处给定的地址；</div><div class="line">[!] -d, --destination address[/mask][,...]      检查报文的&apos;目标IP地址&apos;是否符合此处指定的范围，或是否等于此处给定的地址；</div><div class="line">[!] -p, --protocol protocol                     匹配报文中的协议，可用值tcp,udp,udplite,icmp,icmpv6,esp,ah,sctp,mh 或者 &quot;all&quot;, 亦可以数字格式指明协议； </div><div class="line">[!] -i, --in-interface name                     限定报文仅能够从指定的接口流入</div><div class="line">[!] -o, --out-interface name                    限定报文仅能够从指定的接口流出</div></pre></td></tr></table></figure>
<h5 id="扩展匹配"><a href="#扩展匹配" class="headerlink" title="扩展匹配"></a><strong>扩展匹配</strong></h5><p>可以出现多次，使用多个扩展模块</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">-m MODE [per-match-options]</div></pre></td></tr></table></figure>
<h5 id="隐式扩展"><a href="#隐式扩展" class="headerlink" title="隐式扩展"></a><strong>隐式扩展</strong></h5><p><code>-p tcp</code>：可直接使用tcp扩展模块的专用选项</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div></pre></td><td class="code"><pre><div class="line">[!] --source-port,--sport port[:port]               匹配报文源端口；可以给出多个端口，但只能是连续的端口范围 ；</div><div class="line">[!] --destination-port,--dport port[:port]          匹配报文目标端口；可以给出多个端口，但只能是连续的端口范围 ；</div><div class="line">[!] --tcp-flags mask comp                           匹配报文中的tcp协议的标志位；Flags are: SYN ACK FIN RST URG PSH ALL NONE；</div><div class="line">	mask：要检查的FLAGS list，以逗号分隔；</div><div class="line">	comp：在mask给定的诸多的FLAGS中，其值必须为1的FLAGS列表，余下的其值必须为0；</div><div class="line">[!] --syn                                           匹配第一次握手，等于--tcp-flags SYN,ACK,FIN,RST  SYN</div></pre></td></tr></table></figure>
<p><br><br><code>-p udp</code>：可直接使用udp协议扩展模块的专用选项</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line">[!] --source-port,--sport port[:port]</div><div class="line">[!] --destination-port,--dport port[:port]</div></pre></td></tr></table></figure>
<p><br><br><code>-p icmp</code>：可直接使用icmp协议扩展模块的专用选项</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line">[!] --icmp-type &#123;type[/code]|typename&#125;</div><div class="line">    0/0： echo reply（请求的回显）</div><div class="line">    8/0：echo request（发出去的请求）</div></pre></td></tr></table></figure>
<p><br></p>
<h5 id="显式扩展"><a href="#显式扩展" class="headerlink" title="显式扩展"></a><font size="4" color="#3299CC">显式扩展</font></h5><p>必须使用<code>-m</code>选项指明要调用的扩展模块的扩展机制</p>
<p><code>man iptables-extensions</code> 查看扩展帮助</p>
<font size="3" color="#5F9F9F">1、multiport</font>

<p>以离散或连续的 方式定义多端口匹配条件，最多15个；<br>支持tcp、udp、udplite、dccp、sctp</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div></pre></td><td class="code"><pre><div class="line">[!] --source-ports,--sports port[,port|,port:port]...</div><div class="line">[!] --destination-ports,--dports port[,port|,port:port]...</div><div class="line">	</div><div class="line">$ iptables -I INPUT  -d 172.16.0.7 -p tcp -m multiport --dports 22,80,139,445,3306 -j ACCEPT</div></pre></td></tr></table></figure>
<p><br></p>
<font size="3" color="#5F9F9F">2、iprange</font><br>    以连续地址块的方式来指明多IP地址匹配条件；<br><br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div></pre></td><td class="code"><pre><div class="line">[!] --src-range from[-to]</div><div class="line">[!] --dst-range from[-to]</div><div class="line">	</div><div class="line">$ iptables -I INPUT -d 172.16.0.7 -p tcp -m multiport --dports 22,80,139,445,3306 -m iprange --src-range 172.16.0.61-172.16.0.70 -j REJECT</div></pre></td></tr></table></figure><br><br><br><br><font size="3" color="#5F9F9F">3、time</font><br>This  matches  if the packet arrival time/date is within a given range.<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div></pre></td><td class="code"><pre><div class="line">--timestart hh:mm[:ss]</div><div class="line">--timestop hh:mm[:ss]</div><div class="line">	 </div><div class="line">[!] --weekdays day[,day...]</div><div class="line">[!] --monthdays day[,day...]</div><div class="line">	 </div><div class="line">--datestart YYYY[-MM[-DD[Thh[:mm[:ss]]]]]</div><div class="line">--datestop YYYY[-MM[-DD[Thh[:mm[:ss]]]]]</div><div class="line">	</div><div class="line">--kerneltz：使用内核配置的时区而非默认的UTC；CentOS6无需使用，默认就使用</div></pre></td></tr></table></figure><br><br><br><br><font size="3" color="#5F9F9F">4、string(可以检查7层协议) ‘只能对明文编码的协议有效’</font>

<p>This modules matches a given string by using some pattern matching strategy.<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div></pre></td><td class="code"><pre><div class="line">--algo &#123;bm|kmp&#125;：bm和kmp算法处理的速度其实无太大的差别</div><div class="line"></div><div class="line">[!] --string pattern</div><div class="line">[!] --hex-string pattern</div><div class="line">	</div><div class="line">--from offset：从哪个位置开始</div><div class="line">--to offset：从哪个位置结束</div><div class="line">	</div><div class="line">$ iptables -I OUTPUT -m string --algo bm --string &quot;gay&quot; -j REJECT</div></pre></td></tr></table></figure></p>
<p><br></p>
<font size="3" color="#5F9F9F">5、connlimit ：连接限制；单个客户端最多并发数量的限制</font>

<p>Allows  you  to  restrict  the  number  of parallel connections to a server per client IP address (or client address block).<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div></pre></td><td class="code"><pre><div class="line">--connlimit-upto n：上限，小于等于</div><div class="line">--connlimit-above n：大于</div><div class="line">	</div><div class="line">$ iptables -I INPUT -d 172.16.0.7 -p tcp --syn --dport 22 -m connlimit --connlimit-above 2 -j REJECT</div></pre></td></tr></table></figure></p>
<p><br></p>
<font size="3" color="#5F9F9F">6、limit ：速率限制</font><br>This  module  matches  at  a limited rate using a token bucket filter.<br><br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div></pre></td><td class="code"><pre><div class="line">--limit rate[/second|/minute|/hour|/day]：限制令牌发放的速率</div><div class="line">--limit-burst number：令牌桶最大收多少个令牌</div><div class="line">	</div><div class="line">$ iptables -I INPUT -d 172.16.1.70 -p icpmp --icmp-type 8 -m limit --limit-burst 5 --limit 4/minute -j ACCEPT</div><div class="line">$ iptables -I OUTPUT -s 172.16.1.70 -p icmp --icmp-type 0 -j ACCEPT</div></pre></td></tr></table></figure><br><br><br><br><font size="3" color="#5F9F9F">7、state：连接追踪(开启后，大大增强服务器安全性)</font><br>The “state” extension is a subset of the “conntrack” module.  “state” allows access to the connection tracking state for this packet.<br><br><strong>连接追踪机制：</strong><br><br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div></pre></td><td class="code"><pre><div class="line">连接过的，存在内存中的一个缓存表中。</div><div class="line">	但是内存空间是有限的，记录具有超时时间</div><div class="line">	对于访问量大的服务器：(不建议开启)</div><div class="line">解决办法：</div><div class="line">    (1)关闭连接追踪</div><div class="line">    (2)扩大内存空间</div></pre></td></tr></table></figure><br><br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div></pre></td><td class="code"><pre><div class="line">[!] --state STATE</div><div class="line">	INVALID, ESTABLISHED, NEW, RELATED or UNTRACKED.</div><div class="line">	</div><div class="line">STATE：</div><div class="line">	NEW: 新连接请求；</div><div class="line">	ESTABLISHED：已建立的连接；(一旦接受新请求之后，NEW --&gt; ESTABLISHED)</div><div class="line">	INVALID：无法识别的连接；不合法的连接</div><div class="line">	RELATED：相关联的连接；当前连接是一个新请求，但附属于某个已存在的连接；(与某个ESTABLISHED具有关系的)</div><div class="line">	UNTRACKED：未追踪的连接；</div></pre></td></tr></table></figure><br><br><font></font>


<h5 id="Target"><a href="#Target" class="headerlink" title="Target"></a><font size="5" color="#007FFF">Target</font></h5><p><code>-j targetname [per-target-options]</code></p>
<p><strong>简单target：</strong><br>    ACCEPT， DROP</p>
<p><strong>扩展target：</strong><br>    REJECT</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div></pre></td><td class="code"><pre><div class="line">--reject-with type：&apos;表示以什么理由去拒绝；</div><div class="line">拒绝理由：</div><div class="line">icmp-net-unreachable            网络不可达</div><div class="line">icmp-host-unreachable           主机不可达</div><div class="line">icmp-port-unreachable           端口不可达(默认拒绝理由)</div><div class="line">icmp-proto-unreach‐able         协议不可达</div><div class="line">icmp-net-prohibited             网络被禁止        </div><div class="line">icmp-host-prohibited            主机被禁止</div><div class="line">icmp-admin-prohibited           管理员被禁止</div></pre></td></tr></table></figure>
<p><strong>LOG：记录日志</strong></p>
<p>默认日志信息保存于：/var/log/message</p>
<font color="#FF0000"><em>注意：日志规则要放在REJECT和ACCEPT之前</em></font>


<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line">--log-level：日志级别</div><div class="line">--log-prefix：日志前缀(加一些自定义字符在记录日志之前，用于区别)</div></pre></td></tr></table></figure>
<p><br></p>
<h4 id="保存和载入规则"><a href="#保存和载入规则" class="headerlink" title="保存和载入规则"></a><font size="5" color="#8F8FBD">保存和载入规则</font></h4><p>保存：iptables-save &gt; /PATH/TO/SOME_RULE_FILE<br>重载：iptabls-restore &lt; /PATH/FROM/SOME_RULE_FILE<br>    -n, –noflush：不清除原有规则<br>    -t, –test：仅分析生成规则集，但不提交(测试规则是否正常，正常后再重载)</p>
<font color="#FF0000"><em>注意：重载时，不会自动装载 nf_conntrack_ftp模块；可以使用脚本实现</em></font>

<p><br><br><code>CentOS6使用方法：</code></p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div></pre></td><td class="code"><pre><div class="line">保存规则：</div><div class="line">$ service iptables save</div><div class="line">	保存规则于/etc/sysconfig/iptables文件，覆盖保存；</div><div class="line">重载规则：(直接重载)</div><div class="line">$ service iptables restart</div><div class="line">	默认重载/etc/sysconfig/iptables文件中的规则 </div><div class="line">	</div><div class="line">配置文件：/etc/sysconfig/iptables-config</div></pre></td></tr></table></figure>
<p><br><br><code>CentOS7使用方法：</code></p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line">(1) 自定义Unit File，进行iptables-restore；</div><div class="line">(2) firewalld服务；</div><div class="line">(3) 自定义脚本；</div></pre></td></tr></table></figure>
<p><br></p>
<h3 id="规则优化的思路"><a href="#规则优化的思路" class="headerlink" title="规则优化的思路"></a>规则优化的思路</h3><p>使用自定义链管理特定应用的相关规则，模块化管理规则；</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div></pre></td><td class="code"><pre><div class="line">(1) 优先放行双方向状态为ESTABLISHED的报文；</div><div class="line">(2) 服务于不同类别的功能的规则，匹配到报文可能性更大的放前面；</div><div class="line">(3) 服务于同一类别的功能的规则，匹配条件较严格的放在前面；</div><div class="line">(4) 设置默认策略：白名单机制</div><div class="line">	(a) iptables -P，不建议；</div><div class="line">	(b) 建议在规则的最后定义规则做为默认策略；</div></pre></td></tr></table></figure>
<hr>
<h2 id="Netfilter-packet-flow详解图-网络配图"><a href="#Netfilter-packet-flow详解图-网络配图" class="headerlink" title="Netfilter-packet-flow详解图(网络配图)"></a>Netfilter-packet-flow详解图(网络配图)</h2><p><img src="https://ws2.sinaimg.cn/large/006tNbRwly1fgfcasgobvj314a0d7n0j.jpg" alt=""></p>
<hr>
<p>到此为止，iptables的简介和用法已经介绍完毕，下一章，我们会介绍 <font color="#3299CC"><strong>iptables的进阶用法–NAT地址转换</strong></font></p>
<hr>
<iframe frameborder="no" border="0" marginwidth="0" marginheight="0" width="330" height="86" src="//music.163.com/outchain/player?type=2&id=1591910&auto=0&height=66"></iframe>

<p>本文出自<a href="http://maxiecloud.com">Maxie’s Notes</a>博客，转载请务必保留此出处。</p>
<p><img src="https://ww1.sinaimg.cn/large/006tNbRwly1fdzc80odsuj30gn0ilq5m.jpg" alt=""></p>
]]></content>
    
    <summary type="html">
    
      &lt;p&gt;&lt;img src=&quot;https://ws1.sinaimg.cn/large/006tKfTcly1fgf6igu3zwj30xc0go7wh.jpg&quot; alt=&quot;&quot;&gt;&lt;/p&gt;
&lt;blockquote class=&quot;blockquote-center&quot;&gt;iptables是一个配置 Linux内核 防火墙的命令行工具，是 netfilter 项目的一部分。&lt;br&gt;术语 iptables 也经常代指该内核级防火墙。&lt;br&gt;iptables可以直接配置，也可以通过 CentOS7中的新特性–firewalld 和图形界面配置。&lt;br&gt;iptables 适用于ipv4, ip6tables 适用于ipv6。&lt;br&gt;&lt;/blockquote&gt;

&lt;p&gt;在介绍如何在 Linux中使用与配置&lt;code&gt;iptables&lt;/code&gt;之前，让我们先对&lt;font color=&quot;#FF000&quot;&gt;防火墙&lt;/font&gt;有一个简单的理解：&lt;/p&gt;
&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;1&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;2&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;3&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;4&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;它是一种位于内部网络与外部网络之间的网络安全系统。&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;一项信息安全的防护系统，依照特定的规则，允许或是限制传输的数据通过。&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;内部网络和外部网络之间的所有网络数据流都必须经过防火墙，这是防火墙所处网络位置特性，同时也是一个前提。&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;因为只有当防火墙是内、外部网络之间通信的唯一通道，才可以全面、有效地保护企业网内部网络不受侵害，所以防火墙一般部署在内网的最外层。&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
    
    </summary>
    
      <category term="iptables" scheme="http://maxiecloud.com/categories/iptables/"/>
    
    
      <category term="linux" scheme="http://maxiecloud.com/tags/linux/"/>
    
      <category term="iptables" scheme="http://maxiecloud.com/tags/iptables/"/>
    
      <category term="firewall" scheme="http://maxiecloud.com/tags/firewall/"/>
    
      <category term="netfilter" scheme="http://maxiecloud.com/tags/netfilter/"/>
    
  </entry>
  
  <entry>
    <title>转载：iptables详解：图文并茂理解iptables</title>
    <link href="http://maxiecloud.com/2017/06/09/iptables-1/"/>
    <id>http://maxiecloud.com/2017/06/09/iptables-1/</id>
    <published>2017-06-09T02:42:51.000Z</published>
    <updated>2017-06-09T09:12:54.000Z</updated>
    
    <content type="html"><![CDATA[<p>（原文地址：<a href="http://www.zsythink.net/archives/1199" target="_blank" rel="external">http://www.zsythink.net/archives/1199</a> ）</p>
<p>以下是转载内容：</p>
<font size="4"> iptables详解：图文并茂理解iptables | 朱双印博客 </font><br><br><br><font size="3">朱双印</font>


<p>这篇文章会尽量以通俗易懂的方式描述iptables的相关概念，请耐心的读完它。</p>
<h2 id="防火墙相关概念"><a href="#防火墙相关概念" class="headerlink" title="防火墙相关概念"></a>防火墙相关概念</h2><p>此处先描述一些相关概念。</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div></pre></td><td class="code"><pre><div class="line">从逻辑上讲。防火墙可以大体分为主机防火墙和网络防火墙。</div><div class="line">主机防火墙：针对于单个主机进行防护。</div><div class="line">网络防火墙：往往处于网络入口或边缘，针对于网络入口进行防护，服务于防火墙背后的本地局域网。</div><div class="line">网络防火墙和主机防火墙并不冲突，可以理解为，网络防火墙主外（集体）， 主机防火墙主内（个人）。</div><div class="line"> </div><div class="line">从物理上讲，防火墙可以分为硬件防火墙和软件防火墙。</div><div class="line">硬件防火墙：在硬件级别实现部分防火墙功能，另一部分功能基于软件实现，性能高，成本高。</div><div class="line">软件防火墙：应用软件处理逻辑运行于通用硬件平台之上的防火墙，性能低，成本低。</div></pre></td></tr></table></figure>
<p><img src="https://ws1.sinaimg.cn/large/006tKfTcly1fgerbvmnt0j31ab0utq4r.jpg" alt=""></p>
<a id="more"></a>
<p>那么在此处，我们就来聊聊Linux的iptables</p>
<p>iptables其实不是真正的防火墙，我们可以把它理解成一个客户端代理，用户通过iptables这个代理，将用户的安全设定执行到对应的”安全框架”中，这个”安全框架”才是真正的防火墙，这个框架的名字叫netfilter</p>
<p>netfilter才是防火墙真正的安全框架（framework），netfilter位于内核空间。<br>iptables其实是一个命令行工具，位于用户空间，我们用这个工具操作真正的框架。</p>
<p>netfilter/iptables（下文中简称为iptables）组成Linux平台下的包过滤防火墙，与大多数的Linux软件一样，这个包过滤防火墙是免费的，它可以代替昂贵的商业防火墙解决方案，完成封包过滤、封包重定向和网络地址转换（NAT）等功能。</p>
<p>Netfilter是Linux操作系统核心层内部的一个数据包处理模块，它具有如下功能：<br>网络地址转换(Network Address Translate)<br>数据包内容修改<br>以及数据包过滤的防火墙功能</p>
<p>所以说，虽然我们使用service iptables start启动iptables”服务”，但是其实准确的来说，iptables并没有一个守护进程，所以并不能算是真正意义上的服务，而应该算是内核提供的功能。</p>
<hr>
<h2 id="iptables基础"><a href="#iptables基础" class="headerlink" title="iptables基础"></a>iptables基础</h2><p>我们知道iptables是按照规则来办事的，我们就来说说规则（rules），规则其实就是网络管理员预定义的条件，规则一般的定义为”如果数据包头符合这样的条件，就这样处理这个数据包”。规则存储在内核空间的信息包过滤表中，这些规则分别指定了源地址、目的地址、传输协议（如TCP、UDP、ICMP）和服务类型（如HTTP、FTP和SMTP）等。当数据包与规则匹配时，iptables就根据规则所定义的方法来处理这些数据包，如放行（accept）、拒绝（reject）和丢弃（drop）等。配置防火墙的主要工作就是添加、修改和删除这些规则。</p>
<p>这样说可能并不容易理解，我们来换个容易理解的角度，从头说起.</p>
<p>当客户端访问服务器的web服务时，客户端发送报文到网卡，而tcp/ip协议栈是属于内核的一部分，所以，客户端的信息会通过内核的TCP协议传输到用户空间中的web服务中，而此时，客户端报文的目标终点为web服务所监听的套接字（IP：Port）上，当web服务需要响应客户端请求时，web服务发出的响应报文的目标终点则为客户端，这个时候，web服务所监听的IP与端口反而变成了原点，我们说过，netfilter才是真正的防火墙，它是内核的一部分，所以，如果我们想要防火墙能够达到”防火”的目的，则需要在内核中设置关卡，所有进出的报文都要通过这些关卡，经过检查后，符合放行条件的才能放行，符合阻拦条件的则需要被阻止，于是，就出现了input关卡和output关卡，<font color="#FF0000">而这些关卡在iptables中不被称为”关卡”,而被称为”链”</font>。</p>
<p><img src="https://ws4.sinaimg.cn/large/006tKfTcly1fgerfb23uzj310011941g.jpg" alt=""></p>
<p>其实我们上面描述的场景并不完善，因为客户端发来的报文访问的目标地址可能并不是本机，而是其他服务器，当本机的内核支持IP_FORWARD时，我们可以将报文转发给其他服务器，所以，这个时候，我们就会提到iptables中的其他”关卡”，也就是其他”链”，他们就是  “路由前”、”转发”、”路由后”，他们的英文名是<br>PREROUTING、FORWARD、POSTROUTING</p>
<p>也就是说，当我们启用了防火墙功能时，报文需要经过如下关卡，也就是说，根据实际情况的不同，报文经过”链”可能不同。如果报文需要转发，那么报文则不会经过input链发往用户空间，而是直接在内核空间中经过forward链和postrouting链转发出去的。</p>
<p><img src="https://ws1.sinaimg.cn/large/006tKfTcly1fgerftzhqrj31kw107dnb.jpg" alt=""></p>
<p>所以，根据上图，我们能够想象出某些常用场景中，报文的流向：<br>到本机某进程的报文：PREROUTING –&gt; INPUT<br>由本机转发的报文：PREROUTING –&gt; FORWARD –&gt; POSTROUTING<br>由本机的某进程发出报文（通常为响应报文）：OUTPUT –&gt; POSTROUTING</p>
<hr>
<h2 id="链的概念"><a href="#链的概念" class="headerlink" title="链的概念"></a>链的概念</h2><p>现在，我们想象一下，这些”关卡”在iptables中为什么被称作”链”呢？我们知道，防火墙的作用就在于对经过的报文匹配”规则”，然后执行对应的”动作”,所以，当报文经过这些关卡的时候，则必须匹配这个关卡上的规则，但是，这个关卡上可能不止有一条规则，而是有很多条规则，当我们把这些规则串到一个链条上的时候，就形成了”链”,所以，我们把每一个”关卡”想象成如下图中的模样  ，这样来说，把他们称为”链”更为合适，每个经过这个”关卡”的报文，都要将这条”链”上的所有规则匹配一遍，如果有符合条件的规则，则执行规则对应的动作。</p>
<p><img src="https://ws3.sinaimg.cn/large/006tKfTcly1fgergsancjj31e01a00yz.jpg" alt=""></p>
<h2 id="表的概念"><a href="#表的概念" class="headerlink" title="表的概念"></a>表的概念</h2><p>我们再想想另外一个问题，我们对每个”链”上都放置了一串规则，但是这些规则有些很相似，比如，A类规则都是对IP和者端口的过滤，B类规则是修改报文，那么这个时候，我们是不是能把实现相同功能的规则放在一起呢，必须能的。</p>
<p>我们把具有相同功能的规则的集合叫做”表”，所以说，不同功能的规则，我们可以放置在不同的表中进行管理，而iptables已经为我们定义了4种表，每种表对应了不同的功能，而我们定义的规则也都逃脱不了这4种功能的范围，所以，学习iptables之前，我们必须先搞明白每种表 的作用。<br>iptables为我们提供了如下规则的分类，或者说，iptables为我们提供了如下”表”</p>
<p>filter表：负责过滤功能，防火墙；内核模块：iptables_filter<br>nat表：network address translation，网络地址转换功能；内核模块：iptable_nat<br>mangle表：拆解报文，做出修改，并重新封装 的功能；iptable_mangle<br>raw表：关闭nat表上启用的连接追踪机制；iptable_raw<br>也就是说，我们自定义的所有规则，都是这四种分类中的规则，或者说，所有规则都存在于这4张”表”中。</p>
<hr>
<h2 id="表链关系"><a href="#表链关系" class="headerlink" title="表链关系"></a>表链关系</h2><p>但是我们需要注意的是，某些”链”中注定不会包含”某类规则”，就像某些”关卡”天生就不具备某些功能一样，比如，A”关卡”只负责打击陆地敌人，没有防空能力，B”关卡”只负责打击空中敌人，没有防御步兵的能力，C”关卡”可能比较NB，既能防空，也能防御陆地敌人，D”关卡”最屌，海陆空都能防。<br>那让我们来看看，每个”关卡”都有哪些能力，或者说，让我们看看每个”链”上的规则都存在于哪些”表”中。<br>我们还是以图为例，先看看prerouting”链”上的规则都存在于哪些表中。</p>
<font color="#FF0000">注意：下图只用于说明prerouting链上的规则存在于哪些表中，并没有描述表的顺序。</font>

<p><img src="https://ws2.sinaimg.cn/large/006tKfTcly1fgerifz96ej30kl1e3414.jpg" alt=""></p>
<p>这幅图是什么意思呢，它的意思是说，prerouting”链”只拥有nat表、raw表和mangle表所对应的功能，所以，prerouting中的规则只能存放于nat表、raw表和mangle表中。</p>
<p>那么，根据上述思路，我们来总结一下，每个”关卡”都拥有什么功能，<br>或者说，每个”链”中的规则都存在于哪些”表”中。<br>PREROUTING      的规则可以存在于：raw表，mangle表，nat表。<br>INPUT          的规则可以存在于：mangle表，filter表，（centos7中还有nat表，centos6中没有）。<br>FORWARD         的规则可以存在于：mangle表，filter表。<br>OUTPUT         的规则可以存在于：raw表mangle表，nat表，filter表。<br>POSTROUTING      的规则可以存在于：mangle表，nat表。</p>
<p>但是，<font color="#FF0000">我们在实际的使用过程中，往往是通过”表”作为操作入口，对规则进行定义的</font>，之所以按照上述过程介绍iptables，是因为从”关卡”的角度更容易从入门的角度理解，但是为了以便在实际使用的时候，更加顺畅的理解它们，此处我们还要将各”表”与”链”的关系罗列出来，<br>表（功能）&lt;–&gt;   链（钩子）：<br>raw     表中的规则可以被哪些链使用：PREROUTING，OUTPUT<br>mangle  表中的规则可以被哪些链使用：PREROUTING，INPUT，FORWARD，OUTPUT，POSTROUTING<br>nat     表中的规则可以被哪些链使用：PREROUTING，OUTPUT，POSTROUTING（centos7中还有INPUT，centos6中没有）<br>filter  表中的规则可以被哪些链使用：INPUT，FORWARD，OUTPUT</p>
<p>其实我们还需要注意一点，因为数据包经过一个”链”的时候，会将当前链的所有规则都匹配一遍，但是匹配时总归要有顺序，我们应该一条一条的去匹配，而且我们说过，相同功能类型的规则会汇聚在一张”表”中，那么，哪些”表”中的规则会放在”链”的最前面执行呢，这时候就需要有一个优先级的问题，我们还拿prerouting”链”做图示。</p>
<p><img src="https://ws1.sinaimg.cn/large/006tKfTcly1fgerjh17dyj30mh1drad3.jpg" alt=""></p>
<p>rerouting链中的规则存放于三张表中，而这三张表中的规则执行的优先级如下：<br>raw –&gt; mangle –&gt; nat</p>
<p>但是我们知道，iptables为我们定义了4张”表”,当他们处于同一条”链”时，执行的优先级如下。<br>优先级次序（由高而低）：<br>raw –&gt; mangle –&gt; nat –&gt; filter<br>但是我们前面说过，某些链天生就不能使用某些表中的规则，所以，4张表中的规则处于同一条链的目前只有output链，它就是传说中海陆空都能防守的关卡。</p>
<p>为了更方便的管理，我们还可以在某个表里面创建自定义链，将针对某个应用程序所设置的规则放置在这个自定义链中，但是自定义链接不能直接使用，只能被某个默认的链当做动作去调用才能起作用，我们可以这样想象，自定义链就是一段比较”短”的链子，这条”短”链子上的规则都是针对某个应用程序制定的，但是这条短的链子并不能直接使用，而是需要”焊接”在iptables默认定义链子上，才能被IPtables使用，这就是为什么默认定义的”链”需要把”自定义链”当做”动作”去引用的原因。这是后话，后面再聊，在实际使用时我们即可更加的明白。</p>
<hr>
<h2 id="数据经过防火墙流程"><a href="#数据经过防火墙流程" class="headerlink" title="数据经过防火墙流程"></a>数据经过防火墙流程</h2><p>结合上述所有的描述，我们可以将数据包通过防火墙的流程总结为下图：</p>
<p><img src="https://ws3.sinaimg.cn/large/006tKfTcly1fgerkkbnonj31kw0u3dsi.jpg" alt=""></p>
<p>我们在写Iptables规则的时候，要时刻牢记这张路由次序图，灵活配置规则。</p>
<p>我们将经常用到的对应关系重新写在此处，方便对应图例查看。<br>链的规则存放于哪些表中（从链到表的对应关系）：<br>PREROUTING   的规则可以存在于：raw表，mangle表，nat表。<br>INPUT        的规则可以存在于：mangle表，filter表，（centos7中还有nat表，centos6中没有）。<br>FORWARD      的规则可以存在于：mangle表，filter表。<br>OUTPUT       的规则可以存在于：raw表mangle表，nat表，filter表。<br>POSTROUTING  的规则可以存在于：mangle表，nat表。</p>
<p>表中的规则可以被哪些链使用（从表到链的对应关系）：<br>raw     表中的规则可以被哪些链使用：PREROUTING，OUTPUT<br>mangle  表中的规则可以被哪些链使用：PREROUTING，INPUT，FORWARD，OUTPUT，POSTROUTING<br>nat     表中的规则可以被哪些链使用：PREROUTING，OUTPUT，POSTROUTING（centos7中还有INPUT，centos6中没有）<br>filter  表中的规则可以被哪些链使用：INPUT，FORWARD，OUTPUT</p>
<p>下图中nat表在centos7中的情况就不再标明。</p>
<p><img src="https://ws3.sinaimg.cn/large/006tKfTcly1fgerl3npzdj31e00nzgq3.jpg" alt=""></p>
<h2 id="规则的概念"><a href="#规则的概念" class="headerlink" title="规则的概念"></a>规则的概念</h2><p>说了一圈又说回来了，在上述描述中我们一直在提规则，可是没有细说，现在说说它。</p>
<p>先说说规则的概念，然后再通俗的解释它。<br>规则：根据指定的匹配条件来尝试匹配每个流经此处的报文，一旦匹配成功，则由规则后面指定的处理动作进行处理；</p>
<p>那么我们来通俗的解释一下什么是iptables的规则，之前打过一个比方，每条”链”都是一个”关卡”，每个通过这个”关卡”的报文都要匹配这个关卡上的规则，如果匹配，则对报文进行对应的处理，比如说，你我二人此刻就好像两个”报文”，你我二人此刻都要入关，可是城主有命，只有器宇轩昂的人才能入关，不符合此条件的人不能入关，于是守关将士按照城主制定的”规则”，开始打量你我二人，最终，你顺利入关了，而我已被拒之门外，因为你符合”器宇轩昂”的标准，所以把你”放行”了，而我不符合标准，所以没有被放行，其实，”器宇轩昂”就是一种”匹配条件”，”放行”就是一种”动作”，”匹配条件”与”动作”组成了规则。</p>
<p>了解了规则的概念，那我们来聊聊规则的组成部分,此处只是大概的将规则的结构列出，后面的文章中会单独对规则进行总结。<br>规则由匹配条件和处理动作组成。</p>
<h3 id="匹配条件"><a href="#匹配条件" class="headerlink" title="匹配条件"></a>匹配条件</h3><p>匹配条件分为基本匹配条件与扩展匹配条件</p>
<p><strong>基本匹配条件：</strong><br>源地址Source IP，目标地址 Destination IP<br>上述内容都可以作为基本匹配条件。</p>
<p><strong>扩展匹配条件：</strong><br>除了上述的条件可以用于匹配，还有很多其他的条件可以用于匹配，这些条件泛称为扩展条件，这些扩展条件其实也是netfilter中的一部分，只是以模块的形式存在，如果想要使用这些条件，则需要依赖对应的扩展模块。<br>源端口Source Port, 目标端口Destination Port<br>上述内容都可以作为扩展匹配条件</p>
<h3 id="处理动作"><a href="#处理动作" class="headerlink" title="处理动作"></a>处理动作</h3><p>处理动作在iptables中被称为target（这样说并不准确，我们暂且这样称呼），动作也可以分为基本动作和扩展动作。<br>此处列出一些常用的动作，之后的文章会对它们进行详细的示例与总结：</p>
<p><strong>ACCEPT：</strong>允许数据包通过。<br><strong>DROP：</strong>直接丢弃数据包，不给任何回应信息，这时候客户端会感觉自己的请求泥牛入海了，过了超时时间才会有反应。<br><strong>REJECT：</strong>拒绝数据包通过，必要时会给数据发送端一个响应的信息，客户端刚请求就会收到拒绝的信息。<br><strong>SNAT：</strong>源地址转换，解决内网用户用同一个公网地址上网的问题。<br><strong>MASQUERADE：</strong>是SNAT的一种特殊形式，适用于动态的、临时会变的ip上。<br><strong>DNAT：</strong>目标地址转换。<br><strong>REDIRECT：</strong>在本机做端口映射。<br><strong>LOG：</strong>在/var/log/messages文件中记录日志信息，然后将数据包传递给下一条规则，也就是说除了记录以外不对数据包做任何其他操作，仍然让下一条规则去匹配。</p>
<hr>
<h2 id="小结"><a href="#小结" class="headerlink" title="小结"></a>小结</h2><p>好了，iptables的概念暂时总结到这里，懂得概念之后，再结合实际的命令去练习，搞定iptables绝对妥妥的。<br>iptables的实际操作我们会另外总结为其他文章，iptables系列文章列表直达链接如下：</p>
<p><a href="http://www.zsythink.net/archives/tag/iptables/" target="_blank" rel="external">iptables零基础快速入门系列</a></p>
<p>最后说一句，客官您的评论、收藏、推荐是兄弟我写博客的最大动力，希望亲以后多捧场哦，么么哒~~~~</p>
<hr>
<iframe frameborder="no" border="0" marginwidth="0" marginheight="0" width="400" height="86" src="//music.163.com/outchain/player?type=2&id=417250673&auto=0&height=66"></iframe>

<p><img src="https://ww1.sinaimg.cn/large/006tNbRwly1fdzc80odsuj30gn0ilq5m.jpg" alt=""></p>
]]></content>
    
    <summary type="html">
    
      &lt;p&gt;（原文地址：&lt;a href=&quot;http://www.zsythink.net/archives/1199&quot;&gt;http://www.zsythink.net/archives/1199&lt;/a&gt; ）&lt;/p&gt;
&lt;p&gt;以下是转载内容：&lt;/p&gt;
&lt;font size=4&gt; iptables详解：图文并茂理解iptables | 朱双印博客 &lt;/font&gt;&lt;br&gt;&lt;br&gt;&lt;br&gt;&lt;font size=3&gt;朱双印&lt;/font&gt;


&lt;p&gt;这篇文章会尽量以通俗易懂的方式描述iptables的相关概念，请耐心的读完它。&lt;/p&gt;
&lt;h2 id=&quot;防火墙相关概念&quot;&gt;&lt;a href=&quot;#防火墙相关概念&quot; class=&quot;headerlink&quot; title=&quot;防火墙相关概念&quot;&gt;&lt;/a&gt;防火墙相关概念&lt;/h2&gt;&lt;p&gt;此处先描述一些相关概念。&lt;/p&gt;
&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;1&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;2&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;3&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;4&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;5&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;6&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;7&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;8&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;从逻辑上讲。防火墙可以大体分为主机防火墙和网络防火墙。&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;主机防火墙：针对于单个主机进行防护。&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;网络防火墙：往往处于网络入口或边缘，针对于网络入口进行防护，服务于防火墙背后的本地局域网。&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;网络防火墙和主机防火墙并不冲突，可以理解为，网络防火墙主外（集体）， 主机防火墙主内（个人）。&lt;/div&gt;&lt;div class=&quot;line&quot;&gt; &lt;/div&gt;&lt;div class=&quot;line&quot;&gt;从物理上讲，防火墙可以分为硬件防火墙和软件防火墙。&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;硬件防火墙：在硬件级别实现部分防火墙功能，另一部分功能基于软件实现，性能高，成本高。&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;软件防火墙：应用软件处理逻辑运行于通用硬件平台之上的防火墙，性能低，成本低。&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;&lt;img src=&quot;https://ws1.sinaimg.cn/large/006tKfTcly1fgerbvmnt0j31ab0utq4r.jpg&quot; alt=&quot;&quot;&gt;&lt;/p&gt;
    
    </summary>
    
      <category term="iptables" scheme="http://maxiecloud.com/categories/iptables/"/>
    
    
      <category term="linux" scheme="http://maxiecloud.com/tags/linux/"/>
    
      <category term="转载" scheme="http://maxiecloud.com/tags/%E8%BD%AC%E8%BD%BD/"/>
    
      <category term="iptables" scheme="http://maxiecloud.com/tags/iptables/"/>
    
  </entry>
  
  <entry>
    <title>NFS、Samba从入门到进阶</title>
    <link href="http://maxiecloud.com/2017/06/06/share-file-system/"/>
    <id>http://maxiecloud.com/2017/06/06/share-file-system/</id>
    <published>2017-06-06T13:18:32.000Z</published>
    <updated>2017-06-06T14:51:07.000Z</updated>
    
    <content type="html"><![CDATA[<p><img src="https://ws2.sinaimg.cn/large/006tNbRwly1fgbt54fxxuj30xc0go49h.jpg" alt=""></p>
<blockquote class="blockquote-center">在本章我们将介绍nfs与samba的进阶实验与配置<br>nfs: Network File System,是由著名的 Sun 公司在1984年发布，其功能旨在允许客户端主机可以像访问本地存储一样通过访问服务器端文件。<br>samba：samba是种用来让UNIX系列的操作系统与微软Windows操作系统的SMB/CIFS（Server Message Block/Common Internet File System）<br></blockquote>

<font size="4" color="#97694F"> NFS： </font> 

<ul>
<li>监听的端口：<code>2049/tcp</code></li>
<li>辅助类的服务：<code>rpc(远程过程调用)</code>,<code>portmapper</code></li>
<li>必备工具包：<code>nfs-utils</code></li>
<li>配置文件：<code>/etc/exports</code></li>
<li>其他命令程序：<code>showmount</code>,<code>exportfs</code></li>
</ul>
<hr>
<font size="4" color="#97694F"> Samba： </font> 

<ul>
<li>监听的端口：<code>137/udp</code>,<code>138/udp</code> ; <code>139/tcp</code>,<code>445/tcp</code></li>
<li>服务端程序包：<code>samba</code>,<code>samba-common</code>,<code>samba-libs</code></li>
<li>主程序：<code>nmbd</code>,<code>smbd</code></li>
<li>Unit File：<code>smb.service</code>,<code>nmb.service</code></li>
<li>主配置文件：<code>/etc/samba/smb.conf</code></li>
</ul>
<hr>
<a id="more"></a>
<font size="5" color="#FF6EC7"> 实验环境： </font>

<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line">虚拟机操作系统（OS）：CentOS Linux release 7.2.1511 (Core)</div><div class="line">内核版本（Kernel）：3.10.0-327.el7.x86_64</div><div class="line">虚拟机环境：VMware Fusion 专业版 8.5.3 (4696910)</div></pre></td></tr></table></figure>
<p><strong>客户端环境：</strong><br><img src="https://ws4.sinaimg.cn/large/006tNc79ly1fg5rfg0cjsj30ga0a8dj6.jpg" alt=""></p>
<hr>
<h3 id="NFS进阶实验："><a href="#NFS进阶实验：" class="headerlink" title="NFS进阶实验："></a>NFS进阶实验：</h3><font size="4" color="#38B0DE"> <strong>此次实验的目标如下：</strong> </font>


<p><strong>第一题：</strong></p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div></pre></td><td class="code"><pre><div class="line">(1) nfs server导出/data/mywp，在目录中提供wordpress; </div><div class="line">(2) nfs client挂载nfs server导出的文件系统至/nfs/wordpress；</div><div class="line">(3) 客户端（lamp）部署wordpress，并让其正常访问；要确保能正常发文章，上传图片；</div><div class="line">(4) 客户端2(lamp)，挂载nfs server导出的文件系统至/nfs/wordpress；验正其wordpress是否可被访问； 要确保能正常发文章，上传图片；</div></pre></td></tr></table></figure>
<p><strong>第二题：</strong></p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line">(1) nfs server导出/data/目录；</div><div class="line">(2) nfs client挂载/data/至本地的/mydata目录；本地的mysqld或mariadb服务的数据目录设置为/mydata, 要求服务能正常启动，且可正常 存储数据；</div></pre></td></tr></table></figure>
<hr>
<div class="note primary"><h3 id="NFS实验步骤"><a href="#NFS实验步骤" class="headerlink" title="NFS实验步骤"></a>NFS实验步骤</h3></div>
<p>LAMP Server 1：172.16.1.70   www.mywp1.com<br>LAMP Server 2：172.16.1.20   www.mywp2.com</p>
<p>NFS Server：172.16.1.100</p>
<font size="5" color="#70DBDB">第一题步骤：</font>



<h4 id="1、安装配置第一台LAMP服务器"><a href="#1、安装配置第一台LAMP服务器" class="headerlink" title="1、安装配置第一台LAMP服务器"></a>1、安装配置第一台LAMP服务器</h4><p><strong>安装httpd并配置虚拟主机</strong><br>（注意这里为了方便，不再测试httpd服务，直接配置）</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div></pre></td><td class="code"><pre><div class="line">$ yum install httpd php php-mysql php-mbstring</div><div class="line">$ vim /etc/httpd/conf.d/lamp.conf</div><div class="line">&lt;VirtualHost *:80&gt;</div><div class="line">        ServerName 172.16.1.70</div><div class="line">        DocumentRoot &quot;/nfs/wordpress/&quot;</div><div class="line">        &lt;Directory &quot;/nfs/wordpress/&quot;&gt;</div><div class="line">                Options None</div><div class="line">                AllowOverride None</div><div class="line">                Require all granted</div><div class="line">        &lt;/Directory&gt;</div><div class="line">        CustomLog &quot;/nfs/wordpress/log/access_log&quot; combined</div><div class="line">        ErrorLog &quot;/nfs/wordpress/log/error_log&quot;</div><div class="line">&lt;/VirtualHost&gt;</div><div class="line"></div><div class="line">$ mkdir -pv /nfs/wordpress/log</div></pre></td></tr></table></figure>
<h4 id="2、配置NFS-Server"><a href="#2、配置NFS-Server" class="headerlink" title="2、配置NFS Server"></a>2、配置NFS Server</h4><p><strong>安装nfs、nfs-utils、php、php-mysql、php-mbstring</strong></p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">$ yum install nfs nfs-utils php php-mysql php-mbstring</div></pre></td></tr></table></figure>
<p><strong>安装MariaDB以及修改配置文件</strong></p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div></pre></td><td class="code"><pre><div class="line">$ yum install mariadb-server</div><div class="line">$ vim /etc/my.cnf.d/server.conf</div><div class="line">[mysqld]</div><div class="line">skip_name_resolve=ON            #开启跳过名称解析功能</div><div class="line">innodb_file_per_table=ON        #将共享表空间改为独立表空间</div><div class="line">log_bin=mysql-bin               #开启二进制日志</div></pre></td></tr></table></figure>
<p><strong>启动数据库</strong></p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">$ systemctl start mariadb.service</div></pre></td></tr></table></figure>
<p><strong>编辑nfs配置文件</strong></p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div></pre></td><td class="code"><pre><div class="line">$ vim /etc/exports </div><div class="line">/data/mywp	172.16.1.70(rw,no_root_squash) 172.16.1.20(rw,no_root_squash)</div><div class="line"></div><div class="line">创建共享目录：</div><div class="line">$ mkdir -pv /data/mywp</div></pre></td></tr></table></figure>
<p><strong>启动NFS服务</strong></p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">$ systemctl start nfs.service</div></pre></td></tr></table></figure>
<h4 id="3、在LAMP1-上挂载NFS共享的目录"><a href="#3、在LAMP1-上挂载NFS共享的目录" class="headerlink" title="3、在LAMP1 上挂载NFS共享的目录"></a>3、在LAMP1 上挂载NFS共享的目录</h4><p><strong>查看并挂载</strong></p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div></pre></td><td class="code"><pre><div class="line">$ showmount -e 172.16.1.100</div><div class="line">Export list for 172.16.1.100:</div><div class="line">/data/mywp   172.16.1.20,172.16.1.70</div><div class="line"></div><div class="line">$ mount -t nfs 172.16.1.100:/data/mywp /nfs/wordpress</div></pre></td></tr></table></figure>
<p><strong>测试挂载点读写权限</strong></p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div></pre></td><td class="code"><pre><div class="line">$ cd /nfs/wordpress</div><div class="line">$ mkdir testdir</div><div class="line">$ touch 1.txt </div><div class="line">$ rm 1.txt</div><div class="line">$ rm -f testdir</div></pre></td></tr></table></figure>
<h4 id="4、在NFS服务器上的共享目录解压wordpress并配置，为其创建数据库，以及远程连接的权限"><a href="#4、在NFS服务器上的共享目录解压wordpress并配置，为其创建数据库，以及远程连接的权限" class="headerlink" title="4、在NFS服务器上的共享目录解压wordpress并配置，为其创建数据库，以及远程连接的权限"></a>4、在NFS服务器上的共享目录解压wordpress并配置，为其创建数据库，以及远程连接的权限</h4><p><strong>解压WordPress并修改其配置文件</strong></p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div></pre></td><td class="code"><pre><div class="line">$ scp wordpress-4.7.4-zh_CN.tar.gz root@172.16.1.100:/data/mywp         #这步操作在个人客户端操作</div><div class="line"></div><div class="line">$ cd /root </div><div class="line">$ tar xf wordpress-4.7.4-zh_CN.tar.gz</div><div class="line">$ mv wordpress /data/mywp/</div><div class="line">$ cd /data/mywp/wordpress</div><div class="line">$ mv config.sample.inc.php config.inc.php</div><div class="line">$ vim config.inc.php</div><div class="line">修改如下：</div><div class="line"></div><div class="line">// ** MySQL 设置 - 具体信息来自您正在使用的主机 ** //</div><div class="line">/** WordPress数据库的名称 */</div><div class="line">define(&apos;DB_NAME&apos;, &apos;wordpress&apos;);</div><div class="line"></div><div class="line">/** MySQL数据库用户名 */</div><div class="line">define(&apos;DB_USER&apos;, &apos;wordpress&apos;);</div><div class="line"></div><div class="line">/** MySQL数据库密码 */</div><div class="line">define(&apos;DB_PASSWORD&apos;, &apos;root@123&apos;);</div><div class="line"></div><div class="line">/** MySQL主机 */</div><div class="line">define(&apos;DB_HOST&apos;, &apos;172.16.1.100&apos;);</div><div class="line"></div><div class="line">/** 创建数据表时默认的文字编码 */</div><div class="line">define(&apos;DB_CHARSET&apos;, &apos;utf8&apos;);</div><div class="line"></div><div class="line">/** 数据库整理类型。如不确定请勿更改 */</div><div class="line">define(&apos;DB_COLLATE&apos;, &apos;&apos;);</div></pre></td></tr></table></figure>
<p><strong>创建WordPress数据库，并授权远程连接的权限</strong></p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div></pre></td><td class="code"><pre><div class="line">$ mysql </div><div class="line">mysql&gt; CREATE DATEBASE wordpress;</div><div class="line">mysql&gt; GRANT ALL PRIVILEGES ON wordpress.* TO &apos;wordpress&apos;@&apos;172.16.1.100&apos; IDENTIFIED BY &apos;root@123&apos;;</div><div class="line">mysql&gt; GRANT ALL PRIVILEGES ON wordpress.* TO &apos;wordpress&apos;@&apos;172.16.1.70&apos; IDENTIFIED BY &apos;root@123&apos;;</div><div class="line">mysql&gt; GRANT ALL PRIVILEGES ON wordpress.* TO &apos;wordpress&apos;@&apos;172.16.1.20&apos; IDENTIFIED BY &apos;root@123&apos;;</div><div class="line">mysql&gt; FLUSH PRIVILEGES;</div></pre></td></tr></table></figure>
<p><strong>重启数据库服务</strong></p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">$ systemctl restart mariadb.service</div></pre></td></tr></table></figure>
<p><strong>修改/data/mywp目录权限</strong></p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line">$ chmod a+w /data/mywp/wordpress/wp-contet</div><div class="line">$ chown -R apache.apache /data/mywp/wordpress</div></pre></td></tr></table></figure>
<h4 id="5、在LAMP1上执行如下操作"><a href="#5、在LAMP1上执行如下操作" class="headerlink" title="5、在LAMP1上执行如下操作"></a>5、在LAMP1上执行如下操作</h4><p><strong>重启httpd服务</strong></p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">$ systemctl restart httpd</div></pre></td></tr></table></figure>
<h4 id="6、创建另一台LAMP2："><a href="#6、创建另一台LAMP2：" class="headerlink" title="6、创建另一台LAMP2："></a>6、创建另一台LAMP2：</h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div></pre></td><td class="code"><pre><div class="line">$ yum install httpd php php-mysql php-mbstring</div><div class="line">$ vim /etc/httpd/conf.d/lamp.conf</div><div class="line">	&lt;VirtualHost *:80&gt;</div><div class="line">	        ServerName 172.16.1.20</div><div class="line">	        DocumentRoot &quot;/nfs/wordpress/&quot;</div><div class="line">	        &lt;Directory &quot;/nfs/wordpress/&quot;&gt;</div><div class="line">	                Options None</div><div class="line">	                AllowOverride None</div><div class="line">	                Require all granted</div><div class="line">	        &lt;/Directory&gt;</div><div class="line">	        CustomLog &quot;/nfs/wordpress/log/access_log&quot; combined</div><div class="line">	        ErrorLog &quot;/nfs/wordpress/log/error_log&quot;</div><div class="line">	&lt;/VirtualHost&gt;</div><div class="line"></div><div class="line">$ mkdir -pv /nfs/wordpress/log</div><div class="line"></div><div class="line">$ mount -t nfs 172.16.1.100:/data/mywp /nfs/wordpress</div><div class="line"></div><div class="line">$ systemctl start httpd</div></pre></td></tr></table></figure>
<h4 id="7、在客户端-Mac-打开浏览器验证"><a href="#7、在客户端-Mac-打开浏览器验证" class="headerlink" title="7、在客户端(Mac)打开浏览器验证"></a>7、在客户端(Mac)打开浏览器验证</h4><p><strong>添加解析：</strong></p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div></pre></td><td class="code"><pre><div class="line">$ sudo vim /etc/hosts</div><div class="line">Password:</div><div class="line">172.16.1.70 www.mywp1.com</div><div class="line">172.16.1.70 www.mywp2.com</div></pre></td></tr></table></figure>
<p><strong>浏览器验证：</strong></p>
<p>www.mywp1.com<br><img src="https://ws3.sinaimg.cn/large/006tNc79ly1fgbubw51l0g30qo0v61l9.gif" alt=""></p>
<p>www.mywp2.com<br><img src="https://ws4.sinaimg.cn/large/006tNc79ly1fgbue5lbvpg30qo0v67wt.gif" alt=""></p>
<hr>
<font size="5" color="#70DBDB">第二题步骤：</font>

<h4 id="1、NFS-Server步骤如下"><a href="#1、NFS-Server步骤如下" class="headerlink" title="1、NFS Server步骤如下"></a>1、NFS Server步骤如下</h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div></pre></td><td class="code"><pre><div class="line">$ ! rpm -q nfs-utils &gt;/dev/null  &amp;&amp; yum install -y nfs-utils  #安装nfs </div><div class="line"></div><div class="line">$ systemctl  start nfs.service</div><div class="line"></div><div class="line">$ mkdir /data/mydata                                          #创建共享目录</div><div class="line"></div><div class="line">$ vim /etc/exports</div><div class="line">/data/mydata    172.16.1.70(rw,anonuid=27,anongid=27,async)</div><div class="line"></div><div class="line">$ exportfs  -avr</div><div class="line"></div><div class="line">$ setfacl -m o:rwx  /data/mydata</div></pre></td></tr></table></figure>
<h4 id="2、NFS-Client步骤如下："><a href="#2、NFS-Client步骤如下：" class="headerlink" title="2、NFS Client步骤如下："></a>2、NFS Client步骤如下：</h4><p>这里我们就使用之前的LAMP1作为我们的NFS Client</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div></pre></td><td class="code"><pre><div class="line">1、 安装nfs工具包</div><div class="line">$ yum install -y  nfs-utils</div><div class="line"></div><div class="line">2、 安装数据库服务端</div><div class="line">$ yum install -y mariadb-server</div><div class="line"></div><div class="line">3、 创建挂载点</div><div class="line">$ mkdir /mydata</div><div class="line"></div><div class="line">4、 挂载nfs文件系统</div><div class="line">$ mount  -t nfs  172.18.9.119:/data   /mydata</div><div class="line"></div><div class="line">5、 编辑mariadb配置文件：</div><div class="line">$ vim  /etc/my.cnf</div><div class="line">datadir=/mydata</div><div class="line"></div><div class="line">6、 启动数据库服务</div><div class="line">$ systemctl start mariadb.service</div></pre></td></tr></table></figure>
<hr>
<h3 id="Samba进阶实验"><a href="#Samba进阶实验" class="headerlink" title="Samba进阶实验"></a>Samba进阶实验</h3><font size="4" color="#38B0DE"> <strong>此次实验的目标如下：</strong> </font>


<p><strong>第一题：</strong></p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div></pre></td><td class="code"><pre><div class="line">(1) samba server导出/data/application/web，在目录中提供wordpress; </div><div class="line">(2) samba  client挂载nfs server导出的文件系统至/var/www/html；</div><div class="line">(3) 客户端（lamp）部署wordpress，并让其正常访问；要确保能正常发文章，上传图片；</div><div class="line">(4) 客户端2(lamp)，挂载samba  server导出的文件系统至/var/www/html；验正其wordpress是否可被访问； 要确保能正常发文章，上传图片；</div></pre></td></tr></table></figure>
<p><strong>第二题：</strong></p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line">(1) samba  server导出/data/目录；</div><div class="line">(2) samba  client挂载/data/至本地的/mydata目录；本地的mysqld或mariadb服务的数据目录设置为/mydata, 要求服务能正常启动，且可正常 存储数据；</div></pre></td></tr></table></figure>
<hr>
<div class="note info"><h3 id="Samba实验步骤"><a href="#Samba实验步骤" class="headerlink" title="Samba实验步骤"></a>Samba实验步骤</h3></div>
<font size="5" color="#70DBDB">第一题步骤：</font>


<h4 id="1、在samba服务器上创建共享目录，安装samba并添加共享目录配置"><a href="#1、在samba服务器上创建共享目录，安装samba并添加共享目录配置" class="headerlink" title="1、在samba服务器上创建共享目录，安装samba并添加共享目录配置"></a>1、在samba服务器上创建共享目录，安装samba并添加共享目录配置</h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div></pre></td><td class="code"><pre><div class="line">$ mkdir -pv /samba/mywp </div><div class="line">$ yum install samba </div><div class="line">$ vim /etc/samba/smb.conf </div><div class="line">在文件尾部添加如下信息：</div><div class="line">[wordpress]</div><div class="line">comment = My samba share WordPress          #配置说明</div><div class="line">path = /samba/mywp                          #共享目录位置</div><div class="line">writable = yes                              #是否可写 </div><div class="line">write list = apache 			    #拥有写权限的用户列表</div><div class="line">guest ok = no 				    #来宾账号是否可读</div></pre></td></tr></table></figure>
<h4 id="2、检查配置文件语法"><a href="#2、检查配置文件语法" class="headerlink" title="2、检查配置文件语法"></a>2、检查配置文件语法</h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div></pre></td><td class="code"><pre><div class="line">$ testparm</div><div class="line">Load smb config files from /etc/samba/smb.conf</div><div class="line">rlimit_max: increasing rlimit_max (1024) to minimum Windows limit (16384)</div><div class="line">Processing section &quot;[homes]&quot;</div><div class="line">Processing section &quot;[printers]&quot;</div><div class="line"></div><div class="line"></div><div class="line">Processing section &quot;[wordpress]&quot;</div><div class="line">Loaded services file OK.</div><div class="line">Server role: ROLE_STANDALONE</div><div class="line"></div><div class="line">Press enter to see a dump of your service definitions</div><div class="line">...</div><div class="line">...</div><div class="line">...</div><div class="line">[wordpress]</div><div class="line">	comment = My samba share WordPress</div><div class="line">	path = /samba/mywp</div><div class="line">	write list = apache</div><div class="line">	read only = No</div></pre></td></tr></table></figure>
<h4 id="3、拷贝wordpress文件到共享目录，并设置apache用户对其拥有rwx权限"><a href="#3、拷贝wordpress文件到共享目录，并设置apache用户对其拥有rwx权限" class="headerlink" title="3、拷贝wordpress文件到共享目录，并设置apache用户对其拥有rwx权限"></a>3、拷贝wordpress文件到共享目录，并设置apache用户对其拥有rwx权限</h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div></pre></td><td class="code"><pre><div class="line">$ tar xf wordpress-4.7.4-zh_CN.tar.gz </div><div class="line">$ mv wordpress /samba/mywp/</div><div class="line">$ cp /samba/mywp/wp-config-sample.php  /samba/mywp/wp-config.php</div><div class="line">$ vim /samba/mywp/wp-config.php</div><div class="line">// ** MySQL 设置 - 具体信息来自您正在使用的主机 ** //</div><div class="line">/** WordPress数据库的名称 */</div><div class="line">define(&apos;DB_NAME&apos;, &apos;smb_wordpress&apos;);</div><div class="line"></div><div class="line">/** MySQL数据库用户名 */</div><div class="line">define(&apos;DB_USER&apos;, &apos;smb_wordpress&apos;);</div><div class="line"></div><div class="line">/** MySQL数据库密码 */</div><div class="line">define(&apos;DB_PASSWORD&apos;, &apos;root@123&apos;);</div><div class="line"></div><div class="line">/** MySQL主机 */</div><div class="line">define(&apos;DB_HOST&apos;, &apos;172.16.1.100&apos;);</div><div class="line"></div><div class="line">/** 创建数据表时默认的文字编码 */</div><div class="line">define(&apos;DB_CHARSET&apos;, &apos;utf8&apos;);</div><div class="line"></div><div class="line">/** 数据库整理类型。如不确定请勿更改 */</div><div class="line">define(&apos;DB_COLLATE&apos;, &apos;&apos;);</div><div class="line"></div><div class="line">$ chown -R apache.apache /samba/mywp/wordpress</div><div class="line">$ chmod 777 /samba/mywp/wordpress/wp-content</div></pre></td></tr></table></figure>
<h4 id="4、添加apache用户到smb，并重载smb-service"><a href="#4、添加apache用户到smb，并重载smb-service" class="headerlink" title="4、添加apache用户到smb，并重载smb.service"></a>4、添加apache用户到smb，并重载smb.service</h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line">$ smbpasswd -a apache </div><div class="line">$ systemctl reload smb.service</div></pre></td></tr></table></figure>
<h4 id="5、在LAMP服务器上挂载samba共享目录以及配置httpd虚拟主机："><a href="#5、在LAMP服务器上挂载samba共享目录以及配置httpd虚拟主机：" class="headerlink" title="5、在LAMP服务器上挂载samba共享目录以及配置httpd虚拟主机："></a>5、在LAMP服务器上挂载samba共享目录以及配置httpd虚拟主机：</h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div></pre></td><td class="code"><pre><div class="line">$ mkdir /samba/wordpress/ -pv</div><div class="line">$ mount.cifs //172.16.1.100/wordpress /samba/wordpress/ -o username=apache</div><div class="line">$ mount</div><div class="line">$ cd /samba/wordpress/</div><div class="line">$ ll </div><div class="line">$ cp /etc/httpd/conf.d/lamp.conf /etc/httpd/conf.d/wp2.conf</div><div class="line">$ vim /etc/httpd/conf.d/wp2.conf</div><div class="line">&lt;VirtualHost 172.16.1.70:80&gt;</div><div class="line">        ServerName www.mywp2.com</div><div class="line">        DocumentRoot &quot;/samba/wordpress/&quot;</div><div class="line">        &lt;Directory &quot;/samba/wordpress/&quot;&gt;</div><div class="line">                Options None</div><div class="line">                AllowOverride None</div><div class="line">                Require all granted</div><div class="line">        &lt;/Directory&gt;</div><div class="line">&lt;/VirtualHost&gt;</div><div class="line"></div><div class="line">$ vim /etc/httpd/conf.d/lamp.conf           #修改之前配置nfs的虚拟主机配置</div><div class="line">&lt;VirtualHost 172.16.1.70:80&gt;</div><div class="line">        ServerName www.mywp1.com</div><div class="line">        DocumentRoot &quot;/nfs/wordpress/&quot;</div><div class="line">        &lt;Directory &quot;/nfs/wordpress/&quot;&gt;</div><div class="line">                Options None</div><div class="line">                AllowOverride None</div><div class="line">                Require all granted</div><div class="line">        &lt;/Directory&gt;</div><div class="line">        CustomLog &quot;/nfs/wordpress/log/access_log&quot; combined</div><div class="line">        ErrorLog &quot;/nfs/wordpress/log/error_log&quot;</div><div class="line">&lt;/VirtualHost&gt;</div><div class="line"></div><div class="line">$ systemctl restart httpd                   #重启httpd服务</div></pre></td></tr></table></figure>
<h4 id="6、在客户端上的操作："><a href="#6、在客户端上的操作：" class="headerlink" title="6、在客户端上的操作："></a>6、在客户端上的操作：</h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line">$ vim /etc/hosts</div><div class="line">172.16.1.70 www.mywp1.com</div><div class="line">172.16.1.70 www.mywp2.com</div></pre></td></tr></table></figure>
<p>打开浏览器访问，并创建wordpress站点，创建文章，测试上传图片的功能</p>
<hr>
<font size="5" color="#70DBDB">第二题步骤：</font>

<h4 id="1、在Samba服务器上创建共享目录，修改配置文件，添加mysql用户对共享目录的rwx权限，把mysql添加到smb中，重载smb服务"><a href="#1、在Samba服务器上创建共享目录，修改配置文件，添加mysql用户对共享目录的rwx权限，把mysql添加到smb中，重载smb服务" class="headerlink" title="1、在Samba服务器上创建共享目录，修改配置文件，添加mysql用户对共享目录的rwx权限，把mysql添加到smb中，重载smb服务"></a>1、在Samba服务器上创建共享目录，修改配置文件，添加mysql用户对共享目录的rwx权限，把mysql添加到smb中，重载smb服务</h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div></pre></td><td class="code"><pre><div class="line">$ mkdir /samba/mysql </div><div class="line">$ chown mysql.mysql /samba/mysql/</div><div class="line">$ vim /etc/samba/smb.conf</div><div class="line">[mysqldata]</div><div class="line">comment = My samba share MySQL Data</div><div class="line">path = /samba/mysql</div><div class="line">writable = yes</div><div class="line">write list = mysql</div><div class="line">guest ok = no</div><div class="line"></div><div class="line">$ smbpasswd -a mysql</div><div class="line"></div><div class="line">$ systemctl reload smb.service</div></pre></td></tr></table></figure>
<h4 id="2、在LAMP2上的操作"><a href="#2、在LAMP2上的操作" class="headerlink" title="2、在LAMP2上的操作"></a>2、在LAMP2上的操作</h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div></pre></td><td class="code"><pre><div class="line">$ mkdir /samba/mydata -pv</div><div class="line">$ mount.cifs //172.16.1.100/mysqldata /samba/mydata/ -o username=mysql </div><div class="line">$ mount</div><div class="line">$ vim /etc/my.cnf.d/server.conf</div><div class="line">[mysqld]</div><div class="line">skip_name_resolve=ON</div><div class="line">innodb_file_per_table=ON</div><div class="line">log_bin=mysql-bin</div><div class="line"></div><div class="line">$ vim /etc/my.cnf</div><div class="line">[mysqld]</div><div class="line">datadir=/samba/mydata</div><div class="line"></div><div class="line">$ systemctl start mariadb.service</div><div class="line"></div><div class="line">登入数据库创建数据库，表，进行读写测试：</div><div class="line">$ mysql </div><div class="line">MariaDB [(none)]&gt; CREATE DATABASE test_db;</div><div class="line">MariaDB [(none)]&gt; user test_db;</div><div class="line">MariaDB [(none)]&gt; CREATE TABLE test_tb (id INT UNSIGNED AUTO_INCREMENT PRIMARY KEY,name VARCHAR(30),gender ENUM(&apos;M&apos;,&apos;F&apos;));</div><div class="line">MariaDB [(none)]&gt; DESC test_db.test_tb;</div><div class="line">+--------+------------------+------+-----+---------+----------------+</div><div class="line">| Field  | Type             | Null | Key | Default | Extra          |</div><div class="line">+--------+------------------+------+-----+---------+----------------+</div><div class="line">| id     | int(10) unsigned | NO   | PRI | NULL    | auto_increment |</div><div class="line">| name   | varchar(30)      | YES  |     | NULL    |                |</div><div class="line">| gender | enum(&apos;M&apos;,&apos;F&apos;)    | YES  |     | NULL    |                |</div><div class="line">+--------+------------------+------+-----+---------+----------------+</div><div class="line">3 rows in set (0.00 sec)</div></pre></td></tr></table></figure>
<hr>
<h3 id="实验步骤视频："><a href="#实验步骤视频：" class="headerlink" title="实验步骤视频："></a>实验步骤视频：</h3><h4 id="NFS-MariaDB-使用NFS存储数据库数据"><a href="#NFS-MariaDB-使用NFS存储数据库数据" class="headerlink" title="NFS+MariaDB(使用NFS存储数据库数据)"></a>NFS+MariaDB(使用NFS存储数据库数据)</h4><embed height="415" width="544" quality="high" allowfullscreen="true" type="application/x-shockwave-flash" src="//static.hdslb.com/miniloader.swf" flashvars="aid=11101728&page=1" pluginspage="//www.adobe.com/shockwave/download/download.cgi?P1_Prod_Version=ShockwaveFlash">

<h4 id="NFS-LAMP-WordPress"><a href="#NFS-LAMP-WordPress" class="headerlink" title="NFS+LAMP+WordPress"></a>NFS+LAMP+WordPress</h4><embed height="415" width="544" quality="high" allowfullscreen="true" type="application/x-shockwave-flash" src="//static.hdslb.com/miniloader.swf" flashvars="aid=11106147&page=1" pluginspage="//www.adobe.com/shockwave/download/download.cgi?P1_Prod_Version=ShockwaveFlash">

<h4 id="Samba-LAMP-WordPress-Samba-MariaDB"><a href="#Samba-LAMP-WordPress-Samba-MariaDB" class="headerlink" title="Samba+LAMP+WordPress/Samba+MariaDB"></a>Samba+LAMP+WordPress/Samba+MariaDB</h4><embed height="415" width="544" quality="high" allowfullscreen="true" type="application/x-shockwave-flash" src="//static.hdslb.com/miniloader.swf" flashvars="aid=11107261&page=1" pluginspage="//www.adobe.com/shockwave/download/download.cgi?P1_Prod_Version=ShockwaveFlash">


<hr>
<p>上述实验文档：<a href="https://www.dropbox.com/s/dhl5zfnfd0s6rxl/6.5%E8%AF%BE%E5%90%8E%E5%8D%9A%E5%AE%A2%E4%BD%9C%E4%B8%9A.txt?dl=0" target="_blank" rel="external">dropbox共享</a></p>
<p>需科学上网</p>
<hr>
<iframe frameborder="no" border="0" marginwidth="0" marginheight="0" width="400" height="86" src="//music.163.com/outchain/player?type=2&id=417250673&auto=0&height=66"></iframe>

<p><img src="https://ww1.sinaimg.cn/large/006tNbRwly1fdzc80odsuj30gn0ilq5m.jpg" alt=""></p>
]]></content>
    
    <summary type="html">
    
      &lt;p&gt;&lt;img src=&quot;https://ws2.sinaimg.cn/large/006tNbRwly1fgbt54fxxuj30xc0go49h.jpg&quot; alt=&quot;&quot;&gt;&lt;/p&gt;
&lt;blockquote class=&quot;blockquote-center&quot;&gt;在本章我们将介绍nfs与samba的进阶实验与配置&lt;br&gt;nfs: Network File System,是由著名的 Sun 公司在1984年发布，其功能旨在允许客户端主机可以像访问本地存储一样通过访问服务器端文件。&lt;br&gt;samba：samba是种用来让UNIX系列的操作系统与微软Windows操作系统的SMB/CIFS（Server Message Block/Common Internet File System）&lt;br&gt;&lt;/blockquote&gt;

&lt;font size=4 color=&quot;#97694F&quot;&gt; NFS： &lt;/font&gt; 

&lt;ul&gt;
&lt;li&gt;监听的端口：&lt;code&gt;2049/tcp&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;辅助类的服务：&lt;code&gt;rpc(远程过程调用)&lt;/code&gt;,&lt;code&gt;portmapper&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;必备工具包：&lt;code&gt;nfs-utils&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;配置文件：&lt;code&gt;/etc/exports&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;其他命令程序：&lt;code&gt;showmount&lt;/code&gt;,&lt;code&gt;exportfs&lt;/code&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;hr&gt;
&lt;font size=4 color=&quot;#97694F&quot;&gt; Samba： &lt;/font&gt; 

&lt;ul&gt;
&lt;li&gt;监听的端口：&lt;code&gt;137/udp&lt;/code&gt;,&lt;code&gt;138/udp&lt;/code&gt; ; &lt;code&gt;139/tcp&lt;/code&gt;,&lt;code&gt;445/tcp&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;服务端程序包：&lt;code&gt;samba&lt;/code&gt;,&lt;code&gt;samba-common&lt;/code&gt;,&lt;code&gt;samba-libs&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;主程序：&lt;code&gt;nmbd&lt;/code&gt;,&lt;code&gt;smbd&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;Unit File：&lt;code&gt;smb.service&lt;/code&gt;,&lt;code&gt;nmb.service&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;主配置文件：&lt;code&gt;/etc/samba/smb.conf&lt;/code&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;hr&gt;
    
    </summary>
    
      <category term="linux进阶" scheme="http://maxiecloud.com/categories/linux%E8%BF%9B%E9%98%B6/"/>
    
    
      <category term="linux" scheme="http://maxiecloud.com/tags/linux/"/>
    
      <category term="nfs" scheme="http://maxiecloud.com/tags/nfs/"/>
    
      <category term="samba" scheme="http://maxiecloud.com/tags/samba/"/>
    
      <category term="filesystem" scheme="http://maxiecloud.com/tags/filesystem/"/>
    
      <category term="share" scheme="http://maxiecloud.com/tags/share/"/>
    
  </entry>
  
  <entry>
    <title>小秘密</title>
    <link href="http://maxiecloud.com/2017/06/04/AV/"/>
    <id>http://maxiecloud.com/2017/06/04/AV/</id>
    <published>2017-06-04T11:20:11.000Z</published>
    <updated>2017-06-29T12:33:25.000Z</updated>
    
    <content type="html"><![CDATA[<blockquote class="blockquote-center"><br><font size="5" color="#FF6EC7"> My Little Secret </font><br></blockquote>


<a id="more"></a>
<p><img src="https://ws2.sinaimg.cn/large/006tNc79ly1fh2cca5wb1j30ra0znadl.jpg" alt=""><br><img src="https://ws1.sinaimg.cn/large/006tNc79ly1fh2cc9tzuvj30ra0zn77q.jpg" alt=""><br><img src="https://ws3.sinaimg.cn/large/006tNc79ly1fh2cc9k8btj30l80jm75q.jpg" alt=""></p>
]]></content>
    
    <summary type="html">
    
      &lt;blockquote class=&quot;blockquote-center&quot;&gt;&lt;br&gt;&lt;font size=5 color=&quot;#FF6EC7&quot; &gt; My Little Secret &lt;/font&gt;&lt;br&gt;&lt;/blockquote&gt;
    
    </summary>
    
    
      <category term="pic" scheme="http://maxiecloud.com/tags/pic/"/>
    
  </entry>
  
</feed>
